//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.6407
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetCustomDocumentUrinalysis {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCustomDocumentUrinalysis")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCustomDocumentUrinalysis : global::System.Data.DataSet {
        
        private CustomDocumentUrinalysisDataTable tableCustomDocumentUrinalysis;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetCustomDocumentUrinalysis() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetCustomDocumentUrinalysis(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentUrinalysis"] != null)) {
                    base.Tables.Add(new CustomDocumentUrinalysisDataTable(ds.Tables["CustomDocumentUrinalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentUrinalysisDataTable CustomDocumentUrinalysis {
            get {
                return this.tableCustomDocumentUrinalysis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetCustomDocumentUrinalysis cln = ((DataSetCustomDocumentUrinalysis)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentUrinalysis"] != null)) {
                    base.Tables.Add(new CustomDocumentUrinalysisDataTable(ds.Tables["CustomDocumentUrinalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentUrinalysis = ((CustomDocumentUrinalysisDataTable)(base.Tables["CustomDocumentUrinalysis"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentUrinalysis != null)) {
                    this.tableCustomDocumentUrinalysis.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetCustomDocumentUrinalysis";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCustomDocumentUrinalysis.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentUrinalysis = new CustomDocumentUrinalysisDataTable();
            base.Tables.Add(this.tableCustomDocumentUrinalysis);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentUrinalysis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCustomDocumentUrinalysis ds = new DataSetCustomDocumentUrinalysis();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentUrinalysisRowChangeEventHandler(object sender, CustomDocumentUrinalysisRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentUrinalysisDataTable : global::System.Data.TypedTableBase<CustomDocumentUrinalysisRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnIssuesPresentedToday;
            
            private global::System.Data.DataColumn columnMoodAffectComment;
            
            private global::System.Data.DataColumn columnRiskNone;
            
            private global::System.Data.DataColumn columnRiskIdeation;
            
            private global::System.Data.DataColumn columnRiskSelf;
            
            private global::System.Data.DataColumn columnRiskPlan;
            
            private global::System.Data.DataColumn columnRiskOthers;
            
            private global::System.Data.DataColumn columnRiskIntent;
            
            private global::System.Data.DataColumn columnRiskProperty;
            
            private global::System.Data.DataColumn columnRiskAttempt;
            
            private global::System.Data.DataColumn columnRiskOther;
            
            private global::System.Data.DataColumn columnRiskOtherComment;
            
            private global::System.Data.DataColumn columnInterventionADUL;
            
            private global::System.Data.DataColumn columnInterventionMDMA;
            
            private global::System.Data.DataColumn columnInterventionAMP;
            
            private global::System.Data.DataColumn columnInterventionMTD;
            
            private global::System.Data.DataColumn columnInterventionBZO;
            
            private global::System.Data.DataColumn columnInterventionOPI;
            
            private global::System.Data.DataColumn columnInterventionCOC;
            
            private global::System.Data.DataColumn columnInterventionBUP;
            
            private global::System.Data.DataColumn columnInterventionMET;
            
            private global::System.Data.DataColumn columnInterventionPCP;
            
            private global::System.Data.DataColumn columnInterventionMOP;
            
            private global::System.Data.DataColumn columnInterventionPPX;
            
            private global::System.Data.DataColumn columnInterventionTHC;
            
            private global::System.Data.DataColumn columnInterventionK2;
            
            private global::System.Data.DataColumn columnInterventionOXY;
            
            private global::System.Data.DataColumn columnInterventionOther;
            
            private global::System.Data.DataColumn columnInterventionOtherComment;
            
            private global::System.Data.DataColumn columnSampleSendToLab;
            
            private global::System.Data.DataColumn columnUrinalysisTemperature;
            
            private global::System.Data.DataColumn columnUrinalysisShareWithClient;
            
            private global::System.Data.DataColumn columnUrinalysisConsistentWithClientReport;
            
            private global::System.Data.DataColumn columnUrineNoteStaffRating;
            
            private global::System.Data.DataColumn columnUrinalysisComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentUrinalysisDataTable() {
                this.TableName = "CustomDocumentUrinalysis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentUrinalysisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentUrinalysisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssuesPresentedTodayColumn {
                get {
                    return this.columnIssuesPresentedToday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoodAffectCommentColumn {
                get {
                    return this.columnMoodAffectComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskNoneColumn {
                get {
                    return this.columnRiskNone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskIdeationColumn {
                get {
                    return this.columnRiskIdeation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskSelfColumn {
                get {
                    return this.columnRiskSelf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskPlanColumn {
                get {
                    return this.columnRiskPlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskOthersColumn {
                get {
                    return this.columnRiskOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskIntentColumn {
                get {
                    return this.columnRiskIntent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskPropertyColumn {
                get {
                    return this.columnRiskProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskAttemptColumn {
                get {
                    return this.columnRiskAttempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskOtherColumn {
                get {
                    return this.columnRiskOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskOtherCommentColumn {
                get {
                    return this.columnRiskOtherComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionADULColumn {
                get {
                    return this.columnInterventionADUL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionMDMAColumn {
                get {
                    return this.columnInterventionMDMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionAMPColumn {
                get {
                    return this.columnInterventionAMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionMTDColumn {
                get {
                    return this.columnInterventionMTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionBZOColumn {
                get {
                    return this.columnInterventionBZO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionOPIColumn {
                get {
                    return this.columnInterventionOPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionCOCColumn {
                get {
                    return this.columnInterventionCOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionBUPColumn {
                get {
                    return this.columnInterventionBUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionMETColumn {
                get {
                    return this.columnInterventionMET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionPCPColumn {
                get {
                    return this.columnInterventionPCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionMOPColumn {
                get {
                    return this.columnInterventionMOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionPPXColumn {
                get {
                    return this.columnInterventionPPX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionTHCColumn {
                get {
                    return this.columnInterventionTHC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionK2Column {
                get {
                    return this.columnInterventionK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionOXYColumn {
                get {
                    return this.columnInterventionOXY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionOtherColumn {
                get {
                    return this.columnInterventionOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionOtherCommentColumn {
                get {
                    return this.columnInterventionOtherComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SampleSendToLabColumn {
                get {
                    return this.columnSampleSendToLab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrinalysisTemperatureColumn {
                get {
                    return this.columnUrinalysisTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrinalysisShareWithClientColumn {
                get {
                    return this.columnUrinalysisShareWithClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrinalysisConsistentWithClientReportColumn {
                get {
                    return this.columnUrinalysisConsistentWithClientReport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrineNoteStaffRatingColumn {
                get {
                    return this.columnUrineNoteStaffRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrinalysisCommentColumn {
                get {
                    return this.columnUrinalysisComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentUrinalysisRow this[int index] {
                get {
                    return ((CustomDocumentUrinalysisRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentUrinalysisRowChangeEventHandler CustomDocumentUrinalysisRowChanging;
            
            public event CustomDocumentUrinalysisRowChangeEventHandler CustomDocumentUrinalysisRowChanged;
            
            public event CustomDocumentUrinalysisRowChangeEventHandler CustomDocumentUrinalysisRowDeleting;
            
            public event CustomDocumentUrinalysisRowChangeEventHandler CustomDocumentUrinalysisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentUrinalysisRow(CustomDocumentUrinalysisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentUrinalysisRow AddCustomDocumentUrinalysisRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        string IssuesPresentedToday, 
                        string MoodAffectComment, 
                        string RiskNone, 
                        string RiskIdeation, 
                        string RiskSelf, 
                        string RiskPlan, 
                        string RiskOthers, 
                        string RiskIntent, 
                        string RiskProperty, 
                        string RiskAttempt, 
                        string RiskOther, 
                        string RiskOtherComment, 
                        string InterventionADUL, 
                        string InterventionMDMA, 
                        string InterventionAMP, 
                        string InterventionMTD, 
                        string InterventionBZO, 
                        string InterventionOPI, 
                        string InterventionCOC, 
                        string InterventionBUP, 
                        string InterventionMET, 
                        string InterventionPCP, 
                        string InterventionMOP, 
                        string InterventionPPX, 
                        string InterventionTHC, 
                        string InterventionK2, 
                        string InterventionOXY, 
                        string InterventionOther, 
                        string InterventionOtherComment, 
                        string SampleSendToLab, 
                        string UrinalysisTemperature, 
                        string UrinalysisShareWithClient, 
                        string UrinalysisConsistentWithClientReport, 
                        int UrineNoteStaffRating, 
                        string UrinalysisComment) {
                CustomDocumentUrinalysisRow rowCustomDocumentUrinalysisRow = ((CustomDocumentUrinalysisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        IssuesPresentedToday,
                        MoodAffectComment,
                        RiskNone,
                        RiskIdeation,
                        RiskSelf,
                        RiskPlan,
                        RiskOthers,
                        RiskIntent,
                        RiskProperty,
                        RiskAttempt,
                        RiskOther,
                        RiskOtherComment,
                        InterventionADUL,
                        InterventionMDMA,
                        InterventionAMP,
                        InterventionMTD,
                        InterventionBZO,
                        InterventionOPI,
                        InterventionCOC,
                        InterventionBUP,
                        InterventionMET,
                        InterventionPCP,
                        InterventionMOP,
                        InterventionPPX,
                        InterventionTHC,
                        InterventionK2,
                        InterventionOXY,
                        InterventionOther,
                        InterventionOtherComment,
                        SampleSendToLab,
                        UrinalysisTemperature,
                        UrinalysisShareWithClient,
                        UrinalysisConsistentWithClientReport,
                        UrineNoteStaffRating,
                        UrinalysisComment};
                rowCustomDocumentUrinalysisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentUrinalysisRow);
                return rowCustomDocumentUrinalysisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentUrinalysisRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentUrinalysisRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentUrinalysisDataTable cln = ((CustomDocumentUrinalysisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentUrinalysisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnIssuesPresentedToday = base.Columns["IssuesPresentedToday"];
                this.columnMoodAffectComment = base.Columns["MoodAffectComment"];
                this.columnRiskNone = base.Columns["RiskNone"];
                this.columnRiskIdeation = base.Columns["RiskIdeation"];
                this.columnRiskSelf = base.Columns["RiskSelf"];
                this.columnRiskPlan = base.Columns["RiskPlan"];
                this.columnRiskOthers = base.Columns["RiskOthers"];
                this.columnRiskIntent = base.Columns["RiskIntent"];
                this.columnRiskProperty = base.Columns["RiskProperty"];
                this.columnRiskAttempt = base.Columns["RiskAttempt"];
                this.columnRiskOther = base.Columns["RiskOther"];
                this.columnRiskOtherComment = base.Columns["RiskOtherComment"];
                this.columnInterventionADUL = base.Columns["InterventionADUL"];
                this.columnInterventionMDMA = base.Columns["InterventionMDMA"];
                this.columnInterventionAMP = base.Columns["InterventionAMP"];
                this.columnInterventionMTD = base.Columns["InterventionMTD"];
                this.columnInterventionBZO = base.Columns["InterventionBZO"];
                this.columnInterventionOPI = base.Columns["InterventionOPI"];
                this.columnInterventionCOC = base.Columns["InterventionCOC"];
                this.columnInterventionBUP = base.Columns["InterventionBUP"];
                this.columnInterventionMET = base.Columns["InterventionMET"];
                this.columnInterventionPCP = base.Columns["InterventionPCP"];
                this.columnInterventionMOP = base.Columns["InterventionMOP"];
                this.columnInterventionPPX = base.Columns["InterventionPPX"];
                this.columnInterventionTHC = base.Columns["InterventionTHC"];
                this.columnInterventionK2 = base.Columns["InterventionK2"];
                this.columnInterventionOXY = base.Columns["InterventionOXY"];
                this.columnInterventionOther = base.Columns["InterventionOther"];
                this.columnInterventionOtherComment = base.Columns["InterventionOtherComment"];
                this.columnSampleSendToLab = base.Columns["SampleSendToLab"];
                this.columnUrinalysisTemperature = base.Columns["UrinalysisTemperature"];
                this.columnUrinalysisShareWithClient = base.Columns["UrinalysisShareWithClient"];
                this.columnUrinalysisConsistentWithClientReport = base.Columns["UrinalysisConsistentWithClientReport"];
                this.columnUrineNoteStaffRating = base.Columns["UrineNoteStaffRating"];
                this.columnUrinalysisComment = base.Columns["UrinalysisComment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnIssuesPresentedToday = new global::System.Data.DataColumn("IssuesPresentedToday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuesPresentedToday);
                this.columnMoodAffectComment = new global::System.Data.DataColumn("MoodAffectComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoodAffectComment);
                this.columnRiskNone = new global::System.Data.DataColumn("RiskNone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskNone);
                this.columnRiskIdeation = new global::System.Data.DataColumn("RiskIdeation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskIdeation);
                this.columnRiskSelf = new global::System.Data.DataColumn("RiskSelf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskSelf);
                this.columnRiskPlan = new global::System.Data.DataColumn("RiskPlan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskPlan);
                this.columnRiskOthers = new global::System.Data.DataColumn("RiskOthers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskOthers);
                this.columnRiskIntent = new global::System.Data.DataColumn("RiskIntent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskIntent);
                this.columnRiskProperty = new global::System.Data.DataColumn("RiskProperty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskProperty);
                this.columnRiskAttempt = new global::System.Data.DataColumn("RiskAttempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskAttempt);
                this.columnRiskOther = new global::System.Data.DataColumn("RiskOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskOther);
                this.columnRiskOtherComment = new global::System.Data.DataColumn("RiskOtherComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskOtherComment);
                this.columnInterventionADUL = new global::System.Data.DataColumn("InterventionADUL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionADUL);
                this.columnInterventionMDMA = new global::System.Data.DataColumn("InterventionMDMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionMDMA);
                this.columnInterventionAMP = new global::System.Data.DataColumn("InterventionAMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionAMP);
                this.columnInterventionMTD = new global::System.Data.DataColumn("InterventionMTD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionMTD);
                this.columnInterventionBZO = new global::System.Data.DataColumn("InterventionBZO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionBZO);
                this.columnInterventionOPI = new global::System.Data.DataColumn("InterventionOPI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionOPI);
                this.columnInterventionCOC = new global::System.Data.DataColumn("InterventionCOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionCOC);
                this.columnInterventionBUP = new global::System.Data.DataColumn("InterventionBUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionBUP);
                this.columnInterventionMET = new global::System.Data.DataColumn("InterventionMET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionMET);
                this.columnInterventionPCP = new global::System.Data.DataColumn("InterventionPCP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionPCP);
                this.columnInterventionMOP = new global::System.Data.DataColumn("InterventionMOP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionMOP);
                this.columnInterventionPPX = new global::System.Data.DataColumn("InterventionPPX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionPPX);
                this.columnInterventionTHC = new global::System.Data.DataColumn("InterventionTHC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionTHC);
                this.columnInterventionK2 = new global::System.Data.DataColumn("InterventionK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionK2);
                this.columnInterventionOXY = new global::System.Data.DataColumn("InterventionOXY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionOXY);
                this.columnInterventionOther = new global::System.Data.DataColumn("InterventionOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionOther);
                this.columnInterventionOtherComment = new global::System.Data.DataColumn("InterventionOtherComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionOtherComment);
                this.columnSampleSendToLab = new global::System.Data.DataColumn("SampleSendToLab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleSendToLab);
                this.columnUrinalysisTemperature = new global::System.Data.DataColumn("UrinalysisTemperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrinalysisTemperature);
                this.columnUrinalysisShareWithClient = new global::System.Data.DataColumn("UrinalysisShareWithClient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrinalysisShareWithClient);
                this.columnUrinalysisConsistentWithClientReport = new global::System.Data.DataColumn("UrinalysisConsistentWithClientReport", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrinalysisConsistentWithClientReport);
                this.columnUrineNoteStaffRating = new global::System.Data.DataColumn("UrineNoteStaffRating", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrineNoteStaffRating);
                this.columnUrinalysisComment = new global::System.Data.DataColumn("UrinalysisComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrinalysisComment);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnIssuesPresentedToday.MaxLength = 1;
                this.columnMoodAffectComment.MaxLength = 2147483647;
                this.columnRiskNone.MaxLength = 1;
                this.columnRiskIdeation.MaxLength = 1;
                this.columnRiskSelf.MaxLength = 1;
                this.columnRiskPlan.MaxLength = 1;
                this.columnRiskOthers.MaxLength = 1;
                this.columnRiskIntent.MaxLength = 1;
                this.columnRiskProperty.MaxLength = 1;
                this.columnRiskAttempt.MaxLength = 1;
                this.columnRiskOther.MaxLength = 1;
                this.columnRiskOtherComment.MaxLength = 2147483647;
                this.columnInterventionADUL.MaxLength = 1;
                this.columnInterventionMDMA.MaxLength = 1;
                this.columnInterventionAMP.MaxLength = 1;
                this.columnInterventionMTD.MaxLength = 1;
                this.columnInterventionBZO.MaxLength = 1;
                this.columnInterventionOPI.MaxLength = 1;
                this.columnInterventionCOC.MaxLength = 1;
                this.columnInterventionBUP.MaxLength = 1;
                this.columnInterventionMET.MaxLength = 1;
                this.columnInterventionPCP.MaxLength = 1;
                this.columnInterventionMOP.MaxLength = 1;
                this.columnInterventionPPX.MaxLength = 1;
                this.columnInterventionTHC.MaxLength = 1;
                this.columnInterventionK2.MaxLength = 1;
                this.columnInterventionOXY.MaxLength = 1;
                this.columnInterventionOther.MaxLength = 1;
                this.columnInterventionOtherComment.MaxLength = 2147483647;
                this.columnSampleSendToLab.MaxLength = 1;
                this.columnUrinalysisTemperature.MaxLength = 1;
                this.columnUrinalysisShareWithClient.MaxLength = 1;
                this.columnUrinalysisConsistentWithClientReport.MaxLength = 1;
                this.columnUrinalysisComment.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentUrinalysisRow NewCustomDocumentUrinalysisRow() {
                return ((CustomDocumentUrinalysisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentUrinalysisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentUrinalysisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentUrinalysisRowChanged != null)) {
                    this.CustomDocumentUrinalysisRowChanged(this, new CustomDocumentUrinalysisRowChangeEvent(((CustomDocumentUrinalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentUrinalysisRowChanging != null)) {
                    this.CustomDocumentUrinalysisRowChanging(this, new CustomDocumentUrinalysisRowChangeEvent(((CustomDocumentUrinalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentUrinalysisRowDeleted != null)) {
                    this.CustomDocumentUrinalysisRowDeleted(this, new CustomDocumentUrinalysisRowChangeEvent(((CustomDocumentUrinalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentUrinalysisRowDeleting != null)) {
                    this.CustomDocumentUrinalysisRowDeleting(this, new CustomDocumentUrinalysisRowChangeEvent(((CustomDocumentUrinalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentUrinalysisRow(CustomDocumentUrinalysisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomDocumentUrinalysis ds = new DataSetCustomDocumentUrinalysis();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentUrinalysisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentUrinalysisRow : global::System.Data.DataRow {
            
            private CustomDocumentUrinalysisDataTable tableCustomDocumentUrinalysis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentUrinalysisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentUrinalysis = ((CustomDocumentUrinalysisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentUrinalysis.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentUrinalysis.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentUrinalysis.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentUrinalysis.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentUrinalysis.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentUrinalysis\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentUrinalysis.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentUrinalysis\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssuesPresentedToday {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.IssuesPresentedTodayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuesPresentedToday\' in table \'CustomDocumentUrinalysis\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.IssuesPresentedTodayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoodAffectComment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.MoodAffectCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoodAffectComment\' in table \'CustomDocumentUrinalysis\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.MoodAffectCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskNone {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskNoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskNone\' in table \'CustomDocumentUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskNoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskIdeation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskIdeationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskIdeation\' in table \'CustomDocumentUrinalysis\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskIdeationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskSelf {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskSelfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskSelf\' in table \'CustomDocumentUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskSelfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskPlan {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskPlanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskPlan\' in table \'CustomDocumentUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskPlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskOthers {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskOthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskOthers\' in table \'CustomDocumentUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskIntent {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskIntentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskIntent\' in table \'CustomDocumentUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskIntentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskProperty {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskProperty\' in table \'CustomDocumentUrinalysis\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskAttempt {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskAttemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskAttempt\' in table \'CustomDocumentUrinalysis\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskAttemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskOther\' in table \'CustomDocumentUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RiskOtherComment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.RiskOtherCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskOtherComment\' in table \'CustomDocumentUrinalysis\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.RiskOtherCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionADUL {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionADULColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionADUL\' in table \'CustomDocumentUrinalysis\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionADULColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionMDMA {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionMDMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionMDMA\' in table \'CustomDocumentUrinalysis\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionMDMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionAMP {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionAMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionAMP\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionAMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionMTD {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionMTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionMTD\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionMTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionBZO {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionBZOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionBZO\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionBZOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionOPI {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionOPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionOPI\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionOPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionCOC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionCOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionCOC\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionCOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionBUP {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionBUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionBUP\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionBUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionMET {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionMETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionMET\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionMETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionPCP {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionPCPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionPCP\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionPCPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionMOP {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionMOPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionMOP\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionMOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionPPX {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionPPXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionPPX\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionPPXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionTHC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionTHCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionTHC\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionTHCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionK2 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionK2\' in table \'CustomDocumentUrinalysis\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionOXY {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionOXYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionOXY\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionOXYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionOther\' in table \'CustomDocumentUrinalysis\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionOtherComment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.InterventionOtherCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionOtherComment\' in table \'CustomDocumentUrinalysi" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.InterventionOtherCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SampleSendToLab {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.SampleSendToLabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleSendToLab\' in table \'CustomDocumentUrinalysis\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.SampleSendToLabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UrinalysisTemperature {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.UrinalysisTemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UrinalysisTemperature\' in table \'CustomDocumentUrinalysis\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.UrinalysisTemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UrinalysisShareWithClient {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.UrinalysisShareWithClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UrinalysisShareWithClient\' in table \'CustomDocumentUrinalys" +
                                "is\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.UrinalysisShareWithClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UrinalysisConsistentWithClientReport {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.UrinalysisConsistentWithClientReportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UrinalysisConsistentWithClientReport\' in table \'CustomDocum" +
                                "entUrinalysis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.UrinalysisConsistentWithClientReportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UrineNoteStaffRating {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentUrinalysis.UrineNoteStaffRatingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UrineNoteStaffRating\' in table \'CustomDocumentUrinalysis\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.UrineNoteStaffRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UrinalysisComment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentUrinalysis.UrinalysisCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UrinalysisComment\' in table \'CustomDocumentUrinalysis\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentUrinalysis.UrinalysisCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentUrinalysis.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentUrinalysis.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentUrinalysis.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssuesPresentedTodayNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.IssuesPresentedTodayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssuesPresentedTodayNull() {
                this[this.tableCustomDocumentUrinalysis.IssuesPresentedTodayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoodAffectCommentNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.MoodAffectCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoodAffectCommentNull() {
                this[this.tableCustomDocumentUrinalysis.MoodAffectCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskNoneNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskNoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskNoneNull() {
                this[this.tableCustomDocumentUrinalysis.RiskNoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskIdeationNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskIdeationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskIdeationNull() {
                this[this.tableCustomDocumentUrinalysis.RiskIdeationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskSelfNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskSelfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskSelfNull() {
                this[this.tableCustomDocumentUrinalysis.RiskSelfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskPlanNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskPlanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskPlanNull() {
                this[this.tableCustomDocumentUrinalysis.RiskPlanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskOthersNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskOthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskOthersNull() {
                this[this.tableCustomDocumentUrinalysis.RiskOthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskIntentNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskIntentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskIntentNull() {
                this[this.tableCustomDocumentUrinalysis.RiskIntentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskPropertyNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskPropertyNull() {
                this[this.tableCustomDocumentUrinalysis.RiskPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskAttemptNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskAttemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskAttemptNull() {
                this[this.tableCustomDocumentUrinalysis.RiskAttemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskOtherNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskOtherNull() {
                this[this.tableCustomDocumentUrinalysis.RiskOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskOtherCommentNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.RiskOtherCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskOtherCommentNull() {
                this[this.tableCustomDocumentUrinalysis.RiskOtherCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionADULNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionADULColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionADULNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionADULColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionMDMANull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionMDMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionMDMANull() {
                this[this.tableCustomDocumentUrinalysis.InterventionMDMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionAMPNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionAMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionAMPNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionAMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionMTDNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionMTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionMTDNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionMTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionBZONull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionBZOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionBZONull() {
                this[this.tableCustomDocumentUrinalysis.InterventionBZOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionOPINull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionOPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionOPINull() {
                this[this.tableCustomDocumentUrinalysis.InterventionOPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionCOCNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionCOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionCOCNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionCOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionBUPNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionBUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionBUPNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionBUPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionMETNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionMETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionMETNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionMETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionPCPNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionPCPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionPCPNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionPCPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionMOPNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionMOPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionMOPNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionMOPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionPPXNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionPPXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionPPXNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionPPXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionTHCNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionTHCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionTHCNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionTHCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionK2Null() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionK2Null() {
                this[this.tableCustomDocumentUrinalysis.InterventionK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionOXYNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionOXYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionOXYNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionOXYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionOtherNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionOtherNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionOtherCommentNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.InterventionOtherCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionOtherCommentNull() {
                this[this.tableCustomDocumentUrinalysis.InterventionOtherCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSampleSendToLabNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.SampleSendToLabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSampleSendToLabNull() {
                this[this.tableCustomDocumentUrinalysis.SampleSendToLabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrinalysisTemperatureNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.UrinalysisTemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrinalysisTemperatureNull() {
                this[this.tableCustomDocumentUrinalysis.UrinalysisTemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrinalysisShareWithClientNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.UrinalysisShareWithClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrinalysisShareWithClientNull() {
                this[this.tableCustomDocumentUrinalysis.UrinalysisShareWithClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrinalysisConsistentWithClientReportNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.UrinalysisConsistentWithClientReportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrinalysisConsistentWithClientReportNull() {
                this[this.tableCustomDocumentUrinalysis.UrinalysisConsistentWithClientReportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrineNoteStaffRatingNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.UrineNoteStaffRatingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrineNoteStaffRatingNull() {
                this[this.tableCustomDocumentUrinalysis.UrineNoteStaffRatingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrinalysisCommentNull() {
                return this.IsNull(this.tableCustomDocumentUrinalysis.UrinalysisCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrinalysisCommentNull() {
                this[this.tableCustomDocumentUrinalysis.UrinalysisCommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentUrinalysisRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentUrinalysisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentUrinalysisRowChangeEvent(CustomDocumentUrinalysisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentUrinalysisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591