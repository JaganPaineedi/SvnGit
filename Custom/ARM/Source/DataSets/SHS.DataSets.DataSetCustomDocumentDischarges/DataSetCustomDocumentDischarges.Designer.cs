//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.6400
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetCustomDocumentDischarges {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCustomDocumentDischarges")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCustomDocumentDischarges : global::System.Data.DataSet {
        
        private CustomDocumentDischargesDataTable tableCustomDocumentDischarges;
        
        private CustomDocumentDischargeGoalsDataTable tableCustomDocumentDischargeGoals;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetCustomDocumentDischarges() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetCustomDocumentDischarges(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentDischarges"] != null)) {
                    base.Tables.Add(new CustomDocumentDischargesDataTable(ds.Tables["CustomDocumentDischarges"]));
                }
                if ((ds.Tables["CustomDocumentDischargeGoals"] != null)) {
                    base.Tables.Add(new CustomDocumentDischargeGoalsDataTable(ds.Tables["CustomDocumentDischargeGoals"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentDischargesDataTable CustomDocumentDischarges {
            get {
                return this.tableCustomDocumentDischarges;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentDischargeGoalsDataTable CustomDocumentDischargeGoals {
            get {
                return this.tableCustomDocumentDischargeGoals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetCustomDocumentDischarges cln = ((DataSetCustomDocumentDischarges)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentDischarges"] != null)) {
                    base.Tables.Add(new CustomDocumentDischargesDataTable(ds.Tables["CustomDocumentDischarges"]));
                }
                if ((ds.Tables["CustomDocumentDischargeGoals"] != null)) {
                    base.Tables.Add(new CustomDocumentDischargeGoalsDataTable(ds.Tables["CustomDocumentDischargeGoals"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentDischarges = ((CustomDocumentDischargesDataTable)(base.Tables["CustomDocumentDischarges"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentDischarges != null)) {
                    this.tableCustomDocumentDischarges.InitVars();
                }
            }
            this.tableCustomDocumentDischargeGoals = ((CustomDocumentDischargeGoalsDataTable)(base.Tables["CustomDocumentDischargeGoals"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentDischargeGoals != null)) {
                    this.tableCustomDocumentDischargeGoals.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetCustomDocumentDischarges";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCustomDocumentDischarges.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentDischarges = new CustomDocumentDischargesDataTable();
            base.Tables.Add(this.tableCustomDocumentDischarges);
            this.tableCustomDocumentDischargeGoals = new CustomDocumentDischargeGoalsDataTable();
            base.Tables.Add(this.tableCustomDocumentDischargeGoals);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentDischarges() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentDischargeGoals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCustomDocumentDischarges ds = new DataSetCustomDocumentDischarges();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentDischargesRowChangeEventHandler(object sender, CustomDocumentDischargesRowChangeEvent e);
        
        public delegate void CustomDocumentDischargeGoalsRowChangeEventHandler(object sender, CustomDocumentDischargeGoalsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentDischargesDataTable : global::System.Data.TypedTableBase<CustomDocumentDischargesRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnClientAddress;
            
            private global::System.Data.DataColumn columnHomePhone;
            
            private global::System.Data.DataColumn columnParentGuardianName;
            
            private global::System.Data.DataColumn columnAdmissionDate;
            
            private global::System.Data.DataColumn columnLastServiceDate;
            
            private global::System.Data.DataColumn columnDischargeDate;
            
            private global::System.Data.DataColumn columnDischargeTransitionCriteria;
            
            private global::System.Data.DataColumn columnServicesParticpated;
            
            private global::System.Data.DataColumn columnMedicationsPrescribed;
            
            private global::System.Data.DataColumn columnPresentingProblem;
            
            private global::System.Data.DataColumn columnReasonForDischarge;
            
            private global::System.Data.DataColumn columnClientParticpation;
            
            private global::System.Data.DataColumn columnClientStatusLastContact;
            
            private global::System.Data.DataColumn columnClientStatusComment;
            
            private global::System.Data.DataColumn columnReferralPreference1;
            
            private global::System.Data.DataColumn columnReferralPreference2;
            
            private global::System.Data.DataColumn columnReferralPreference3;
            
            private global::System.Data.DataColumn columnReferralPreferenceOther;
            
            private global::System.Data.DataColumn columnReferralPreferenceComment;
            
            private global::System.Data.DataColumn columnInvoluntaryTermination;
            
            private global::System.Data.DataColumn columnClientInformedRightAppeal;
            
            private global::System.Data.DataColumn columnStaffMemberContact72Hours;
            
            private global::System.Data.DataColumn columnReasonForDischargeCode;
            
            private global::System.Data.DataColumn columnDASTScore;
            
            private global::System.Data.DataColumn columnMASTScore;
            
            private global::System.Data.DataColumn columnInitialLevelofCare;
            
            private global::System.Data.DataColumn columnDischargeLevelofCare;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesDataTable() {
                this.TableName = "CustomDocumentDischarges";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDischargesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentDischargesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientAddressColumn {
                get {
                    return this.columnClientAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HomePhoneColumn {
                get {
                    return this.columnHomePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentGuardianNameColumn {
                get {
                    return this.columnParentGuardianName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdmissionDateColumn {
                get {
                    return this.columnAdmissionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastServiceDateColumn {
                get {
                    return this.columnLastServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeDateColumn {
                get {
                    return this.columnDischargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeTransitionCriteriaColumn {
                get {
                    return this.columnDischargeTransitionCriteria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServicesParticpatedColumn {
                get {
                    return this.columnServicesParticpated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicationsPrescribedColumn {
                get {
                    return this.columnMedicationsPrescribed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PresentingProblemColumn {
                get {
                    return this.columnPresentingProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonForDischargeColumn {
                get {
                    return this.columnReasonForDischarge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientParticpationColumn {
                get {
                    return this.columnClientParticpation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientStatusLastContactColumn {
                get {
                    return this.columnClientStatusLastContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientStatusCommentColumn {
                get {
                    return this.columnClientStatusComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralPreference1Column {
                get {
                    return this.columnReferralPreference1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralPreference2Column {
                get {
                    return this.columnReferralPreference2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralPreference3Column {
                get {
                    return this.columnReferralPreference3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralPreferenceOtherColumn {
                get {
                    return this.columnReferralPreferenceOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralPreferenceCommentColumn {
                get {
                    return this.columnReferralPreferenceComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoluntaryTerminationColumn {
                get {
                    return this.columnInvoluntaryTermination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientInformedRightAppealColumn {
                get {
                    return this.columnClientInformedRightAppeal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaffMemberContact72HoursColumn {
                get {
                    return this.columnStaffMemberContact72Hours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonForDischargeCodeColumn {
                get {
                    return this.columnReasonForDischargeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DASTScoreColumn {
                get {
                    return this.columnDASTScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTScoreColumn {
                get {
                    return this.columnMASTScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InitialLevelofCareColumn {
                get {
                    return this.columnInitialLevelofCare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeLevelofCareColumn {
                get {
                    return this.columnDischargeLevelofCare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow this[int index] {
                get {
                    return ((CustomDocumentDischargesRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowChanging;
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowChanged;
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowDeleting;
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentDischargesRow(CustomDocumentDischargesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow AddCustomDocumentDischargesRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        string ClientAddress, 
                        string HomePhone, 
                        string ParentGuardianName, 
                        System.DateTime AdmissionDate, 
                        System.DateTime LastServiceDate, 
                        System.DateTime DischargeDate, 
                        string DischargeTransitionCriteria, 
                        string ServicesParticpated, 
                        string MedicationsPrescribed, 
                        string PresentingProblem, 
                        string ReasonForDischarge, 
                        int ClientParticpation, 
                        int ClientStatusLastContact, 
                        string ClientStatusComment, 
                        int ReferralPreference1, 
                        int ReferralPreference2, 
                        int ReferralPreference3, 
                        string ReferralPreferenceOther, 
                        string ReferralPreferenceComment, 
                        string InvoluntaryTermination, 
                        string ClientInformedRightAppeal, 
                        string StaffMemberContact72Hours, 
                        int ReasonForDischargeCode, 
                        string DASTScore, 
                        string MASTScore, 
                        string InitialLevelofCare, 
                        string DischargeLevelofCare) {
                CustomDocumentDischargesRow rowCustomDocumentDischargesRow = ((CustomDocumentDischargesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        ClientAddress,
                        HomePhone,
                        ParentGuardianName,
                        AdmissionDate,
                        LastServiceDate,
                        DischargeDate,
                        DischargeTransitionCriteria,
                        ServicesParticpated,
                        MedicationsPrescribed,
                        PresentingProblem,
                        ReasonForDischarge,
                        ClientParticpation,
                        ClientStatusLastContact,
                        ClientStatusComment,
                        ReferralPreference1,
                        ReferralPreference2,
                        ReferralPreference3,
                        ReferralPreferenceOther,
                        ReferralPreferenceComment,
                        InvoluntaryTermination,
                        ClientInformedRightAppeal,
                        StaffMemberContact72Hours,
                        ReasonForDischargeCode,
                        DASTScore,
                        MASTScore,
                        InitialLevelofCare,
                        DischargeLevelofCare};
                rowCustomDocumentDischargesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentDischargesRow);
                return rowCustomDocumentDischargesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentDischargesRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentDischargesDataTable cln = ((CustomDocumentDischargesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentDischargesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnClientAddress = base.Columns["ClientAddress"];
                this.columnHomePhone = base.Columns["HomePhone"];
                this.columnParentGuardianName = base.Columns["ParentGuardianName"];
                this.columnAdmissionDate = base.Columns["AdmissionDate"];
                this.columnLastServiceDate = base.Columns["LastServiceDate"];
                this.columnDischargeDate = base.Columns["DischargeDate"];
                this.columnDischargeTransitionCriteria = base.Columns["DischargeTransitionCriteria"];
                this.columnServicesParticpated = base.Columns["ServicesParticpated"];
                this.columnMedicationsPrescribed = base.Columns["MedicationsPrescribed"];
                this.columnPresentingProblem = base.Columns["PresentingProblem"];
                this.columnReasonForDischarge = base.Columns["ReasonForDischarge"];
                this.columnClientParticpation = base.Columns["ClientParticpation"];
                this.columnClientStatusLastContact = base.Columns["ClientStatusLastContact"];
                this.columnClientStatusComment = base.Columns["ClientStatusComment"];
                this.columnReferralPreference1 = base.Columns["ReferralPreference1"];
                this.columnReferralPreference2 = base.Columns["ReferralPreference2"];
                this.columnReferralPreference3 = base.Columns["ReferralPreference3"];
                this.columnReferralPreferenceOther = base.Columns["ReferralPreferenceOther"];
                this.columnReferralPreferenceComment = base.Columns["ReferralPreferenceComment"];
                this.columnInvoluntaryTermination = base.Columns["InvoluntaryTermination"];
                this.columnClientInformedRightAppeal = base.Columns["ClientInformedRightAppeal"];
                this.columnStaffMemberContact72Hours = base.Columns["StaffMemberContact72Hours"];
                this.columnReasonForDischargeCode = base.Columns["ReasonForDischargeCode"];
                this.columnDASTScore = base.Columns["DASTScore"];
                this.columnMASTScore = base.Columns["MASTScore"];
                this.columnInitialLevelofCare = base.Columns["InitialLevelofCare"];
                this.columnDischargeLevelofCare = base.Columns["DischargeLevelofCare"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnClientAddress = new global::System.Data.DataColumn("ClientAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAddress);
                this.columnHomePhone = new global::System.Data.DataColumn("HomePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomePhone);
                this.columnParentGuardianName = new global::System.Data.DataColumn("ParentGuardianName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentGuardianName);
                this.columnAdmissionDate = new global::System.Data.DataColumn("AdmissionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionDate);
                this.columnLastServiceDate = new global::System.Data.DataColumn("LastServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastServiceDate);
                this.columnDischargeDate = new global::System.Data.DataColumn("DischargeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDate);
                this.columnDischargeTransitionCriteria = new global::System.Data.DataColumn("DischargeTransitionCriteria", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeTransitionCriteria);
                this.columnServicesParticpated = new global::System.Data.DataColumn("ServicesParticpated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicesParticpated);
                this.columnMedicationsPrescribed = new global::System.Data.DataColumn("MedicationsPrescribed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicationsPrescribed);
                this.columnPresentingProblem = new global::System.Data.DataColumn("PresentingProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentingProblem);
                this.columnReasonForDischarge = new global::System.Data.DataColumn("ReasonForDischarge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonForDischarge);
                this.columnClientParticpation = new global::System.Data.DataColumn("ClientParticpation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientParticpation);
                this.columnClientStatusLastContact = new global::System.Data.DataColumn("ClientStatusLastContact", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientStatusLastContact);
                this.columnClientStatusComment = new global::System.Data.DataColumn("ClientStatusComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientStatusComment);
                this.columnReferralPreference1 = new global::System.Data.DataColumn("ReferralPreference1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralPreference1);
                this.columnReferralPreference2 = new global::System.Data.DataColumn("ReferralPreference2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralPreference2);
                this.columnReferralPreference3 = new global::System.Data.DataColumn("ReferralPreference3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralPreference3);
                this.columnReferralPreferenceOther = new global::System.Data.DataColumn("ReferralPreferenceOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralPreferenceOther);
                this.columnReferralPreferenceComment = new global::System.Data.DataColumn("ReferralPreferenceComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralPreferenceComment);
                this.columnInvoluntaryTermination = new global::System.Data.DataColumn("InvoluntaryTermination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoluntaryTermination);
                this.columnClientInformedRightAppeal = new global::System.Data.DataColumn("ClientInformedRightAppeal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientInformedRightAppeal);
                this.columnStaffMemberContact72Hours = new global::System.Data.DataColumn("StaffMemberContact72Hours", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffMemberContact72Hours);
                this.columnReasonForDischargeCode = new global::System.Data.DataColumn("ReasonForDischargeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonForDischargeCode);
                this.columnDASTScore = new global::System.Data.DataColumn("DASTScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDASTScore);
                this.columnMASTScore = new global::System.Data.DataColumn("MASTScore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTScore);
                this.columnInitialLevelofCare = new global::System.Data.DataColumn("InitialLevelofCare", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialLevelofCare);
                this.columnDischargeLevelofCare = new global::System.Data.DataColumn("DischargeLevelofCare", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeLevelofCare);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnClientAddress.MaxLength = 2147483647;
                this.columnHomePhone.MaxLength = 50;
                this.columnParentGuardianName.MaxLength = 250;
                this.columnDischargeTransitionCriteria.MaxLength = 2147483647;
                this.columnServicesParticpated.MaxLength = 2147483647;
                this.columnMedicationsPrescribed.MaxLength = 2147483647;
                this.columnPresentingProblem.MaxLength = 2147483647;
                this.columnReasonForDischarge.MaxLength = 2147483647;
                this.columnClientStatusComment.MaxLength = 2147483647;
                this.columnReferralPreferenceOther.MaxLength = 1;
                this.columnReferralPreferenceComment.MaxLength = 2147483647;
                this.columnInvoluntaryTermination.MaxLength = 1;
                this.columnClientInformedRightAppeal.MaxLength = 1;
                this.columnStaffMemberContact72Hours.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow NewCustomDocumentDischargesRow() {
                return ((CustomDocumentDischargesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentDischargesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentDischargesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentDischargesRowChanged != null)) {
                    this.CustomDocumentDischargesRowChanged(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentDischargesRowChanging != null)) {
                    this.CustomDocumentDischargesRowChanging(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentDischargesRowDeleted != null)) {
                    this.CustomDocumentDischargesRowDeleted(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentDischargesRowDeleting != null)) {
                    this.CustomDocumentDischargesRowDeleting(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentDischargesRow(CustomDocumentDischargesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomDocumentDischarges ds = new DataSetCustomDocumentDischarges();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentDischargesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentDischargeGoalsDataTable : global::System.Data.TypedTableBase<CustomDocumentDischargeGoalsRow> {
            
            private global::System.Data.DataColumn columnDischargeGoalId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnGoalNumber;
            
            private global::System.Data.DataColumn columnGoalText;
            
            private global::System.Data.DataColumn columnGoalRatingProgress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargeGoalsDataTable() {
                this.TableName = "CustomDocumentDischargeGoals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDischargeGoalsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentDischargeGoalsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeGoalIdColumn {
                get {
                    return this.columnDischargeGoalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalNumberColumn {
                get {
                    return this.columnGoalNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalTextColumn {
                get {
                    return this.columnGoalText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalRatingProgressColumn {
                get {
                    return this.columnGoalRatingProgress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargeGoalsRow this[int index] {
                get {
                    return ((CustomDocumentDischargeGoalsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentDischargeGoalsRowChangeEventHandler CustomDocumentDischargeGoalsRowChanging;
            
            public event CustomDocumentDischargeGoalsRowChangeEventHandler CustomDocumentDischargeGoalsRowChanged;
            
            public event CustomDocumentDischargeGoalsRowChangeEventHandler CustomDocumentDischargeGoalsRowDeleting;
            
            public event CustomDocumentDischargeGoalsRowChangeEventHandler CustomDocumentDischargeGoalsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentDischargeGoalsRow(CustomDocumentDischargeGoalsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargeGoalsRow AddCustomDocumentDischargeGoalsRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int GoalNumber, string GoalText, string GoalRatingProgress) {
                CustomDocumentDischargeGoalsRow rowCustomDocumentDischargeGoalsRow = ((CustomDocumentDischargeGoalsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        GoalNumber,
                        GoalText,
                        GoalRatingProgress};
                rowCustomDocumentDischargeGoalsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentDischargeGoalsRow);
                return rowCustomDocumentDischargeGoalsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargeGoalsRow FindByDischargeGoalId(int DischargeGoalId) {
                return ((CustomDocumentDischargeGoalsRow)(this.Rows.Find(new object[] {
                            DischargeGoalId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentDischargeGoalsDataTable cln = ((CustomDocumentDischargeGoalsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentDischargeGoalsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDischargeGoalId = base.Columns["DischargeGoalId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnGoalNumber = base.Columns["GoalNumber"];
                this.columnGoalText = base.Columns["GoalText"];
                this.columnGoalRatingProgress = base.Columns["GoalRatingProgress"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDischargeGoalId = new global::System.Data.DataColumn("DischargeGoalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeGoalId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnGoalNumber = new global::System.Data.DataColumn("GoalNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalNumber);
                this.columnGoalText = new global::System.Data.DataColumn("GoalText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalText);
                this.columnGoalRatingProgress = new global::System.Data.DataColumn("GoalRatingProgress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalRatingProgress);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDischargeGoalId}, true));
                this.columnDischargeGoalId.AutoIncrement = true;
                this.columnDischargeGoalId.AutoIncrementSeed = -1;
                this.columnDischargeGoalId.AutoIncrementStep = -1;
                this.columnDischargeGoalId.AllowDBNull = false;
                this.columnDischargeGoalId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnGoalText.MaxLength = 2147483647;
                this.columnGoalRatingProgress.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargeGoalsRow NewCustomDocumentDischargeGoalsRow() {
                return ((CustomDocumentDischargeGoalsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentDischargeGoalsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentDischargeGoalsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentDischargeGoalsRowChanged != null)) {
                    this.CustomDocumentDischargeGoalsRowChanged(this, new CustomDocumentDischargeGoalsRowChangeEvent(((CustomDocumentDischargeGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentDischargeGoalsRowChanging != null)) {
                    this.CustomDocumentDischargeGoalsRowChanging(this, new CustomDocumentDischargeGoalsRowChangeEvent(((CustomDocumentDischargeGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentDischargeGoalsRowDeleted != null)) {
                    this.CustomDocumentDischargeGoalsRowDeleted(this, new CustomDocumentDischargeGoalsRowChangeEvent(((CustomDocumentDischargeGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentDischargeGoalsRowDeleting != null)) {
                    this.CustomDocumentDischargeGoalsRowDeleting(this, new CustomDocumentDischargeGoalsRowChangeEvent(((CustomDocumentDischargeGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentDischargeGoalsRow(CustomDocumentDischargeGoalsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomDocumentDischarges ds = new DataSetCustomDocumentDischarges();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentDischargeGoalsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentDischargesRow : global::System.Data.DataRow {
            
            private CustomDocumentDischargesDataTable tableCustomDocumentDischarges;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDischargesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentDischarges = ((CustomDocumentDischargesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentDischarges.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDischarges.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDischarges.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentDischarges\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientAddress {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ClientAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientAddress\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ClientAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HomePhone {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.HomePhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomePhone\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.HomePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ParentGuardianName {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ParentGuardianNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentGuardianName\' in table \'CustomDocumentDischarges\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ParentGuardianNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AdmissionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.AdmissionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionDate\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.AdmissionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.LastServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastServiceDate\' in table \'CustomDocumentDischarges\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.LastServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DischargeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.DischargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDate\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DischargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DischargeTransitionCriteria {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DischargeTransitionCriteriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeTransitionCriteria\' in table \'CustomDocumentDischa" +
                                "rges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DischargeTransitionCriteriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServicesParticpated {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ServicesParticpatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServicesParticpated\' in table \'CustomDocumentDischarges\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ServicesParticpatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicationsPrescribed {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.MedicationsPrescribedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicationsPrescribed\' in table \'CustomDocumentDischarges\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.MedicationsPrescribedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PresentingProblem {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.PresentingProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PresentingProblem\' in table \'CustomDocumentDischarges\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.PresentingProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReasonForDischarge {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ReasonForDischargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonForDischarge\' in table \'CustomDocumentDischarges\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReasonForDischargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientParticpation {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ClientParticpationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientParticpation\' in table \'CustomDocumentDischarges\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ClientParticpationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientStatusLastContact {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ClientStatusLastContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientStatusLastContact\' in table \'CustomDocumentDischarges" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ClientStatusLastContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientStatusComment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ClientStatusCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientStatusComment\' in table \'CustomDocumentDischarges\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ClientStatusCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReferralPreference1 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ReferralPreference1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralPreference1\' in table \'CustomDocumentDischarges\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReferralPreference1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReferralPreference2 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ReferralPreference2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralPreference2\' in table \'CustomDocumentDischarges\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReferralPreference2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReferralPreference3 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ReferralPreference3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralPreference3\' in table \'CustomDocumentDischarges\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReferralPreference3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferralPreferenceOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ReferralPreferenceOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralPreferenceOther\' in table \'CustomDocumentDischarges" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReferralPreferenceOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferralPreferenceComment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ReferralPreferenceCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralPreferenceComment\' in table \'CustomDocumentDischarg" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReferralPreferenceCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoluntaryTermination {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.InvoluntaryTerminationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoluntaryTermination\' in table \'CustomDocumentDischarges\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.InvoluntaryTerminationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientInformedRightAppeal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ClientInformedRightAppealColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientInformedRightAppeal\' in table \'CustomDocumentDischarg" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ClientInformedRightAppealColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaffMemberContact72Hours {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.StaffMemberContact72HoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffMemberContact72Hours\' in table \'CustomDocumentDischarg" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.StaffMemberContact72HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReasonForDischargeCode {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ReasonForDischargeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonForDischargeCode\' in table \'CustomDocumentDischarges\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReasonForDischargeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DASTScore {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DASTScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DASTScore\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DASTScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MASTScore {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.MASTScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MASTScore\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.MASTScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InitialLevelofCare {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.InitialLevelofCareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitialLevelofCare\' in table \'CustomDocumentDischarges\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.InitialLevelofCareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DischargeLevelofCare {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DischargeLevelofCareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeLevelofCare\' in table \'CustomDocumentDischarges\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DischargeLevelofCareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentDischarges.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentDischarges.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentDischarges.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientAddressNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ClientAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientAddressNull() {
                this[this.tableCustomDocumentDischarges.ClientAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomePhoneNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.HomePhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomePhoneNull() {
                this[this.tableCustomDocumentDischarges.HomePhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParentGuardianNameNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ParentGuardianNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParentGuardianNameNull() {
                this[this.tableCustomDocumentDischarges.ParentGuardianNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmissionDateNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.AdmissionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmissionDateNull() {
                this[this.tableCustomDocumentDischarges.AdmissionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastServiceDateNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.LastServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastServiceDateNull() {
                this[this.tableCustomDocumentDischarges.LastServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDischargeDateNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DischargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDischargeDateNull() {
                this[this.tableCustomDocumentDischarges.DischargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDischargeTransitionCriteriaNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DischargeTransitionCriteriaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDischargeTransitionCriteriaNull() {
                this[this.tableCustomDocumentDischarges.DischargeTransitionCriteriaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicesParticpatedNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ServicesParticpatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicesParticpatedNull() {
                this[this.tableCustomDocumentDischarges.ServicesParticpatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicationsPrescribedNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.MedicationsPrescribedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicationsPrescribedNull() {
                this[this.tableCustomDocumentDischarges.MedicationsPrescribedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPresentingProblemNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.PresentingProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPresentingProblemNull() {
                this[this.tableCustomDocumentDischarges.PresentingProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonForDischargeNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReasonForDischargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonForDischargeNull() {
                this[this.tableCustomDocumentDischarges.ReasonForDischargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientParticpationNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ClientParticpationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientParticpationNull() {
                this[this.tableCustomDocumentDischarges.ClientParticpationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientStatusLastContactNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ClientStatusLastContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientStatusLastContactNull() {
                this[this.tableCustomDocumentDischarges.ClientStatusLastContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientStatusCommentNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ClientStatusCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientStatusCommentNull() {
                this[this.tableCustomDocumentDischarges.ClientStatusCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralPreference1Null() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReferralPreference1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralPreference1Null() {
                this[this.tableCustomDocumentDischarges.ReferralPreference1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralPreference2Null() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReferralPreference2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralPreference2Null() {
                this[this.tableCustomDocumentDischarges.ReferralPreference2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralPreference3Null() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReferralPreference3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralPreference3Null() {
                this[this.tableCustomDocumentDischarges.ReferralPreference3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralPreferenceOtherNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReferralPreferenceOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralPreferenceOtherNull() {
                this[this.tableCustomDocumentDischarges.ReferralPreferenceOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralPreferenceCommentNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReferralPreferenceCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralPreferenceCommentNull() {
                this[this.tableCustomDocumentDischarges.ReferralPreferenceCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoluntaryTerminationNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.InvoluntaryTerminationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoluntaryTerminationNull() {
                this[this.tableCustomDocumentDischarges.InvoluntaryTerminationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientInformedRightAppealNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ClientInformedRightAppealColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientInformedRightAppealNull() {
                this[this.tableCustomDocumentDischarges.ClientInformedRightAppealColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaffMemberContact72HoursNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.StaffMemberContact72HoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaffMemberContact72HoursNull() {
                this[this.tableCustomDocumentDischarges.StaffMemberContact72HoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonForDischargeCodeNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReasonForDischargeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonForDischargeCodeNull() {
                this[this.tableCustomDocumentDischarges.ReasonForDischargeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDASTScoreNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DASTScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDASTScoreNull() {
                this[this.tableCustomDocumentDischarges.DASTScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMASTScoreNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.MASTScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMASTScoreNull() {
                this[this.tableCustomDocumentDischarges.MASTScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInitialLevelofCareNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.InitialLevelofCareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInitialLevelofCareNull() {
                this[this.tableCustomDocumentDischarges.InitialLevelofCareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDischargeLevelofCareNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DischargeLevelofCareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDischargeLevelofCareNull() {
                this[this.tableCustomDocumentDischarges.DischargeLevelofCareColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentDischargeGoalsRow : global::System.Data.DataRow {
            
            private CustomDocumentDischargeGoalsDataTable tableCustomDocumentDischargeGoals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDischargeGoalsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentDischargeGoals = ((CustomDocumentDischargeGoalsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DischargeGoalId {
                get {
                    return ((int)(this[this.tableCustomDocumentDischargeGoals.DischargeGoalIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.DischargeGoalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDischargeGoals.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDischargeGoals.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDischargeGoals.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDischargeGoals.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischargeGoals.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentDischargeGoals\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischargeGoals.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentDischargeGoals\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentDischargeGoals.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentDischargeGoals\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentDischargeGoals.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoalNumber {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischargeGoals.GoalNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalNumber\' in table \'CustomDocumentDischargeGoals\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.GoalNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoalText {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischargeGoals.GoalTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalText\' in table \'CustomDocumentDischargeGoals\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.GoalTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoalRatingProgress {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischargeGoals.GoalRatingProgressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalRatingProgress\' in table \'CustomDocumentDischargeGoals\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischargeGoals.GoalRatingProgressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentDischargeGoals.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentDischargeGoals.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentDischargeGoals.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentDischargeGoals.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentDischargeGoals.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentDischargeGoals.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalNumberNull() {
                return this.IsNull(this.tableCustomDocumentDischargeGoals.GoalNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalNumberNull() {
                this[this.tableCustomDocumentDischargeGoals.GoalNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalTextNull() {
                return this.IsNull(this.tableCustomDocumentDischargeGoals.GoalTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalTextNull() {
                this[this.tableCustomDocumentDischargeGoals.GoalTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalRatingProgressNull() {
                return this.IsNull(this.tableCustomDocumentDischargeGoals.GoalRatingProgressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalRatingProgressNull() {
                this[this.tableCustomDocumentDischargeGoals.GoalRatingProgressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentDischargesRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentDischargesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRowChangeEvent(CustomDocumentDischargesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentDischargeGoalsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentDischargeGoalsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargeGoalsRowChangeEvent(CustomDocumentDischargeGoalsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargeGoalsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591