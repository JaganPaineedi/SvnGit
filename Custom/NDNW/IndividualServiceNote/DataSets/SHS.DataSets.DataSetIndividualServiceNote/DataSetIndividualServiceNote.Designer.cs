//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetIndividualServiceNote {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetIndividualServiceNote")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetIndividualServiceNote : global::System.Data.DataSet {
        
        private CustomDocumentIndividualServiceNoteGeneralsDataTable tableCustomDocumentIndividualServiceNoteGenerals;
        
        private CustomDocumentDBTsDataTable tableCustomDocumentDBTs;
        
        private CustomIndividualServiceNoteGoalsDataTable tableCustomIndividualServiceNoteGoals;
        
        private CustomIndividualServiceNoteObjectivesDataTable tableCustomIndividualServiceNoteObjectives;
        
        private CustomIndividualServiceNoteDiagnosesDataTable tableCustomIndividualServiceNoteDiagnoses;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetIndividualServiceNote() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetIndividualServiceNote(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentIndividualServiceNoteGenerals"] != null)) {
                    base.Tables.Add(new CustomDocumentIndividualServiceNoteGeneralsDataTable(ds.Tables["CustomDocumentIndividualServiceNoteGenerals"]));
                }
                if ((ds.Tables["CustomDocumentDBTs"] != null)) {
                    base.Tables.Add(new CustomDocumentDBTsDataTable(ds.Tables["CustomDocumentDBTs"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteGoals"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteGoalsDataTable(ds.Tables["CustomIndividualServiceNoteGoals"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteObjectives"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteObjectivesDataTable(ds.Tables["CustomIndividualServiceNoteObjectives"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteDiagnoses"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteDiagnosesDataTable(ds.Tables["CustomIndividualServiceNoteDiagnoses"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentIndividualServiceNoteGeneralsDataTable CustomDocumentIndividualServiceNoteGenerals {
            get {
                return this.tableCustomDocumentIndividualServiceNoteGenerals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentDBTsDataTable CustomDocumentDBTs {
            get {
                return this.tableCustomDocumentDBTs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomIndividualServiceNoteGoalsDataTable CustomIndividualServiceNoteGoals {
            get {
                return this.tableCustomIndividualServiceNoteGoals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomIndividualServiceNoteObjectivesDataTable CustomIndividualServiceNoteObjectives {
            get {
                return this.tableCustomIndividualServiceNoteObjectives;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomIndividualServiceNoteDiagnosesDataTable CustomIndividualServiceNoteDiagnoses {
            get {
                return this.tableCustomIndividualServiceNoteDiagnoses;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetIndividualServiceNote cln = ((DataSetIndividualServiceNote)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentIndividualServiceNoteGenerals"] != null)) {
                    base.Tables.Add(new CustomDocumentIndividualServiceNoteGeneralsDataTable(ds.Tables["CustomDocumentIndividualServiceNoteGenerals"]));
                }
                if ((ds.Tables["CustomDocumentDBTs"] != null)) {
                    base.Tables.Add(new CustomDocumentDBTsDataTable(ds.Tables["CustomDocumentDBTs"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteGoals"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteGoalsDataTable(ds.Tables["CustomIndividualServiceNoteGoals"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteObjectives"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteObjectivesDataTable(ds.Tables["CustomIndividualServiceNoteObjectives"]));
                }
                if ((ds.Tables["CustomIndividualServiceNoteDiagnoses"] != null)) {
                    base.Tables.Add(new CustomIndividualServiceNoteDiagnosesDataTable(ds.Tables["CustomIndividualServiceNoteDiagnoses"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentIndividualServiceNoteGenerals = ((CustomDocumentIndividualServiceNoteGeneralsDataTable)(base.Tables["CustomDocumentIndividualServiceNoteGenerals"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentIndividualServiceNoteGenerals != null)) {
                    this.tableCustomDocumentIndividualServiceNoteGenerals.InitVars();
                }
            }
            this.tableCustomDocumentDBTs = ((CustomDocumentDBTsDataTable)(base.Tables["CustomDocumentDBTs"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentDBTs != null)) {
                    this.tableCustomDocumentDBTs.InitVars();
                }
            }
            this.tableCustomIndividualServiceNoteGoals = ((CustomIndividualServiceNoteGoalsDataTable)(base.Tables["CustomIndividualServiceNoteGoals"]));
            if ((initTable == true)) {
                if ((this.tableCustomIndividualServiceNoteGoals != null)) {
                    this.tableCustomIndividualServiceNoteGoals.InitVars();
                }
            }
            this.tableCustomIndividualServiceNoteObjectives = ((CustomIndividualServiceNoteObjectivesDataTable)(base.Tables["CustomIndividualServiceNoteObjectives"]));
            if ((initTable == true)) {
                if ((this.tableCustomIndividualServiceNoteObjectives != null)) {
                    this.tableCustomIndividualServiceNoteObjectives.InitVars();
                }
            }
            this.tableCustomIndividualServiceNoteDiagnoses = ((CustomIndividualServiceNoteDiagnosesDataTable)(base.Tables["CustomIndividualServiceNoteDiagnoses"]));
            if ((initTable == true)) {
                if ((this.tableCustomIndividualServiceNoteDiagnoses != null)) {
                    this.tableCustomIndividualServiceNoteDiagnoses.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetIndividualServiceNote";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetIndividualServiceNote.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentIndividualServiceNoteGenerals = new CustomDocumentIndividualServiceNoteGeneralsDataTable();
            base.Tables.Add(this.tableCustomDocumentIndividualServiceNoteGenerals);
            this.tableCustomDocumentDBTs = new CustomDocumentDBTsDataTable();
            base.Tables.Add(this.tableCustomDocumentDBTs);
            this.tableCustomIndividualServiceNoteGoals = new CustomIndividualServiceNoteGoalsDataTable();
            base.Tables.Add(this.tableCustomIndividualServiceNoteGoals);
            this.tableCustomIndividualServiceNoteObjectives = new CustomIndividualServiceNoteObjectivesDataTable();
            base.Tables.Add(this.tableCustomIndividualServiceNoteObjectives);
            this.tableCustomIndividualServiceNoteDiagnoses = new CustomIndividualServiceNoteDiagnosesDataTable();
            base.Tables.Add(this.tableCustomIndividualServiceNoteDiagnoses);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentIndividualServiceNoteGenerals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentDBTs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomIndividualServiceNoteGoals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomIndividualServiceNoteObjectives() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomIndividualServiceNoteDiagnoses() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetIndividualServiceNote ds = new DataSetIndividualServiceNote();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentIndividualServiceNoteGeneralsRowChangeEventHandler(object sender, CustomDocumentIndividualServiceNoteGeneralsRowChangeEvent e);
        
        public delegate void CustomDocumentDBTsRowChangeEventHandler(object sender, CustomDocumentDBTsRowChangeEvent e);
        
        public delegate void CustomIndividualServiceNoteGoalsRowChangeEventHandler(object sender, CustomIndividualServiceNoteGoalsRowChangeEvent e);
        
        public delegate void CustomIndividualServiceNoteObjectivesRowChangeEventHandler(object sender, CustomIndividualServiceNoteObjectivesRowChangeEvent e);
        
        public delegate void CustomIndividualServiceNoteDiagnosesRowChangeEventHandler(object sender, CustomIndividualServiceNoteDiagnosesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentIndividualServiceNoteGeneralsDataTable : global::System.Data.TypedTableBase<CustomDocumentIndividualServiceNoteGeneralsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDBT;
            
            private global::System.Data.DataColumn columnOQYOQ;
            
            private global::System.Data.DataColumn columnMotivationalInterviewing;
            
            private global::System.Data.DataColumn columnEMDR;
            
            private global::System.Data.DataColumn columnDV;
            
            private global::System.Data.DataColumn columnTFCBT;
            
            private global::System.Data.DataColumn columnMoodAffect;
            
            private global::System.Data.DataColumn columnMoodAffectComments;
            
            private global::System.Data.DataColumn columnThoughtProcess;
            
            private global::System.Data.DataColumn columnThoughtProcessComments;
            
            private global::System.Data.DataColumn columnBehavior;
            
            private global::System.Data.DataColumn columnBehaviorComments;
            
            private global::System.Data.DataColumn columnMedicalCondition;
            
            private global::System.Data.DataColumn columnMedicalConditionComments;
            
            private global::System.Data.DataColumn columnSubstanceAbuse;
            
            private global::System.Data.DataColumn columnSubstanceAbuseComments;
            
            private global::System.Data.DataColumn columnSelfHarm;
            
            private global::System.Data.DataColumn columnSelfHarmIdeation;
            
            private global::System.Data.DataColumn columnSelfHarmIntent;
            
            private global::System.Data.DataColumn columnSelfHarmAttempt;
            
            private global::System.Data.DataColumn columnSelfHarmMeans;
            
            private global::System.Data.DataColumn columnSelfHarmPlan;
            
            private global::System.Data.DataColumn columnselfHarmOther;
            
            private global::System.Data.DataColumn columnSelfHarmOtherComments;
            
            private global::System.Data.DataColumn columnSelfHarmInformed;
            
            private global::System.Data.DataColumn columnSelfHarmInformedComments;
            
            private global::System.Data.DataColumn columnSelfharmComments;
            
            private global::System.Data.DataColumn columnHarmToOthers;
            
            private global::System.Data.DataColumn columnHarmToOthersIdeation;
            
            private global::System.Data.DataColumn columnHarmToOthersIntent;
            
            private global::System.Data.DataColumn columnHarmToOthersAttempt;
            
            private global::System.Data.DataColumn columnHarmToOthersMeans;
            
            private global::System.Data.DataColumn columnHarmToOthersPlan;
            
            private global::System.Data.DataColumn columnHarmToOthersOther;
            
            private global::System.Data.DataColumn columnHarmToOthersOtherComments;
            
            private global::System.Data.DataColumn columnHarmToOthersInformed;
            
            private global::System.Data.DataColumn columnHarmToOthersInformedComments;
            
            private global::System.Data.DataColumn columnHarmToOthersComments;
            
            private global::System.Data.DataColumn columnHarmToProperty;
            
            private global::System.Data.DataColumn columnHarmToPropertyIdeation;
            
            private global::System.Data.DataColumn columnHarmToPropertyIntent;
            
            private global::System.Data.DataColumn columnHarmToPropertyAttempt;
            
            private global::System.Data.DataColumn columnHarmToPropertyMeans;
            
            private global::System.Data.DataColumn columnHarmToPropertyPlan;
            
            private global::System.Data.DataColumn columnHarmToPropertyOther;
            
            private global::System.Data.DataColumn columnHarmToPropertyOtherComments;
            
            private global::System.Data.DataColumn columnHarmToPropertyInformed;
            
            private global::System.Data.DataColumn columnHarmToPropertyInformedComments;
            
            private global::System.Data.DataColumn columnHarmToPropertyComments;
            
            private global::System.Data.DataColumn columnSafetyPlanwasReviewed;
            
            private global::System.Data.DataColumn columnWithOrWithOutClient;
            
            private global::System.Data.DataColumn columnNextSteps;
            
            private global::System.Data.DataColumn columnFocusOfTheSession;
            
            private global::System.Data.DataColumn columnInterventionsProvided;
            
            private global::System.Data.DataColumn columnProgressMade;
            
            private global::System.Data.DataColumn columnOvercome;
            
            private global::System.Data.DataColumn columnPlanLastService;
            
            private global::System.Data.DataColumn columnShowSelectedItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNoteGeneralsDataTable() {
                this.TableName = "CustomDocumentIndividualServiceNoteGenerals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentIndividualServiceNoteGeneralsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentIndividualServiceNoteGeneralsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DBTColumn {
                get {
                    return this.columnDBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OQYOQColumn {
                get {
                    return this.columnOQYOQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MotivationalInterviewingColumn {
                get {
                    return this.columnMotivationalInterviewing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMDRColumn {
                get {
                    return this.columnEMDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DVColumn {
                get {
                    return this.columnDV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TFCBTColumn {
                get {
                    return this.columnTFCBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoodAffectColumn {
                get {
                    return this.columnMoodAffect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoodAffectCommentsColumn {
                get {
                    return this.columnMoodAffectComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoughtProcessColumn {
                get {
                    return this.columnThoughtProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoughtProcessCommentsColumn {
                get {
                    return this.columnThoughtProcessComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BehaviorColumn {
                get {
                    return this.columnBehavior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BehaviorCommentsColumn {
                get {
                    return this.columnBehaviorComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalConditionColumn {
                get {
                    return this.columnMedicalCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalConditionCommentsColumn {
                get {
                    return this.columnMedicalConditionComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstanceAbuseColumn {
                get {
                    return this.columnSubstanceAbuse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstanceAbuseCommentsColumn {
                get {
                    return this.columnSubstanceAbuseComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmColumn {
                get {
                    return this.columnSelfHarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmIdeationColumn {
                get {
                    return this.columnSelfHarmIdeation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmIntentColumn {
                get {
                    return this.columnSelfHarmIntent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmAttemptColumn {
                get {
                    return this.columnSelfHarmAttempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmMeansColumn {
                get {
                    return this.columnSelfHarmMeans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmPlanColumn {
                get {
                    return this.columnSelfHarmPlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selfHarmOtherColumn {
                get {
                    return this.columnselfHarmOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmOtherCommentsColumn {
                get {
                    return this.columnSelfHarmOtherComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmInformedColumn {
                get {
                    return this.columnSelfHarmInformed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfHarmInformedCommentsColumn {
                get {
                    return this.columnSelfHarmInformedComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfharmCommentsColumn {
                get {
                    return this.columnSelfharmComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersColumn {
                get {
                    return this.columnHarmToOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersIdeationColumn {
                get {
                    return this.columnHarmToOthersIdeation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersIntentColumn {
                get {
                    return this.columnHarmToOthersIntent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersAttemptColumn {
                get {
                    return this.columnHarmToOthersAttempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersMeansColumn {
                get {
                    return this.columnHarmToOthersMeans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersPlanColumn {
                get {
                    return this.columnHarmToOthersPlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersOtherColumn {
                get {
                    return this.columnHarmToOthersOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersOtherCommentsColumn {
                get {
                    return this.columnHarmToOthersOtherComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersInformedColumn {
                get {
                    return this.columnHarmToOthersInformed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersInformedCommentsColumn {
                get {
                    return this.columnHarmToOthersInformedComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToOthersCommentsColumn {
                get {
                    return this.columnHarmToOthersComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyColumn {
                get {
                    return this.columnHarmToProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyIdeationColumn {
                get {
                    return this.columnHarmToPropertyIdeation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyIntentColumn {
                get {
                    return this.columnHarmToPropertyIntent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyAttemptColumn {
                get {
                    return this.columnHarmToPropertyAttempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyMeansColumn {
                get {
                    return this.columnHarmToPropertyMeans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyPlanColumn {
                get {
                    return this.columnHarmToPropertyPlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyOtherColumn {
                get {
                    return this.columnHarmToPropertyOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyOtherCommentsColumn {
                get {
                    return this.columnHarmToPropertyOtherComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyInformedColumn {
                get {
                    return this.columnHarmToPropertyInformed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyInformedCommentsColumn {
                get {
                    return this.columnHarmToPropertyInformedComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HarmToPropertyCommentsColumn {
                get {
                    return this.columnHarmToPropertyComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyPlanwasReviewedColumn {
                get {
                    return this.columnSafetyPlanwasReviewed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WithOrWithOutClientColumn {
                get {
                    return this.columnWithOrWithOutClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextStepsColumn {
                get {
                    return this.columnNextSteps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FocusOfTheSessionColumn {
                get {
                    return this.columnFocusOfTheSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterventionsProvidedColumn {
                get {
                    return this.columnInterventionsProvided;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgressMadeColumn {
                get {
                    return this.columnProgressMade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OvercomeColumn {
                get {
                    return this.columnOvercome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlanLastServiceColumn {
                get {
                    return this.columnPlanLastService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowSelectedItemColumn {
                get {
                    return this.columnShowSelectedItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNoteGeneralsRow this[int index] {
                get {
                    return ((CustomDocumentIndividualServiceNoteGeneralsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentIndividualServiceNoteGeneralsRowChangeEventHandler CustomDocumentIndividualServiceNoteGeneralsRowChanging;
            
            public event CustomDocumentIndividualServiceNoteGeneralsRowChangeEventHandler CustomDocumentIndividualServiceNoteGeneralsRowChanged;
            
            public event CustomDocumentIndividualServiceNoteGeneralsRowChangeEventHandler CustomDocumentIndividualServiceNoteGeneralsRowDeleting;
            
            public event CustomDocumentIndividualServiceNoteGeneralsRowChangeEventHandler CustomDocumentIndividualServiceNoteGeneralsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentIndividualServiceNoteGeneralsRow(CustomDocumentIndividualServiceNoteGeneralsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNoteGeneralsRow AddCustomDocumentIndividualServiceNoteGeneralsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        string DBT, 
                        string OQYOQ, 
                        string MotivationalInterviewing, 
                        string EMDR, 
                        string DV, 
                        string TFCBT, 
                        string MoodAffect, 
                        string MoodAffectComments, 
                        string ThoughtProcess, 
                        string ThoughtProcessComments, 
                        string Behavior, 
                        string BehaviorComments, 
                        string MedicalCondition, 
                        string MedicalConditionComments, 
                        string SubstanceAbuse, 
                        string SubstanceAbuseComments, 
                        string SelfHarm, 
                        string SelfHarmIdeation, 
                        string SelfHarmIntent, 
                        string SelfHarmAttempt, 
                        string SelfHarmMeans, 
                        string SelfHarmPlan, 
                        string selfHarmOther, 
                        string SelfHarmOtherComments, 
                        string SelfHarmInformed, 
                        string SelfHarmInformedComments, 
                        string SelfharmComments, 
                        string HarmToOthers, 
                        string HarmToOthersIdeation, 
                        string HarmToOthersIntent, 
                        string HarmToOthersAttempt, 
                        string HarmToOthersMeans, 
                        string HarmToOthersPlan, 
                        string HarmToOthersOther, 
                        string HarmToOthersOtherComments, 
                        string HarmToOthersInformed, 
                        string HarmToOthersInformedComments, 
                        string HarmToOthersComments, 
                        string HarmToProperty, 
                        string HarmToPropertyIdeation, 
                        string HarmToPropertyIntent, 
                        string HarmToPropertyAttempt, 
                        string HarmToPropertyMeans, 
                        string HarmToPropertyPlan, 
                        string HarmToPropertyOther, 
                        string HarmToPropertyOtherComments, 
                        string HarmToPropertyInformed, 
                        string HarmToPropertyInformedComments, 
                        string HarmToPropertyComments, 
                        string SafetyPlanwasReviewed, 
                        string WithOrWithOutClient, 
                        string NextSteps, 
                        string FocusOfTheSession, 
                        string InterventionsProvided, 
                        string ProgressMade, 
                        string Overcome, 
                        string PlanLastService, 
                        string ShowSelectedItem) {
                CustomDocumentIndividualServiceNoteGeneralsRow rowCustomDocumentIndividualServiceNoteGeneralsRow = ((CustomDocumentIndividualServiceNoteGeneralsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DBT,
                        OQYOQ,
                        MotivationalInterviewing,
                        EMDR,
                        DV,
                        TFCBT,
                        MoodAffect,
                        MoodAffectComments,
                        ThoughtProcess,
                        ThoughtProcessComments,
                        Behavior,
                        BehaviorComments,
                        MedicalCondition,
                        MedicalConditionComments,
                        SubstanceAbuse,
                        SubstanceAbuseComments,
                        SelfHarm,
                        SelfHarmIdeation,
                        SelfHarmIntent,
                        SelfHarmAttempt,
                        SelfHarmMeans,
                        SelfHarmPlan,
                        selfHarmOther,
                        SelfHarmOtherComments,
                        SelfHarmInformed,
                        SelfHarmInformedComments,
                        SelfharmComments,
                        HarmToOthers,
                        HarmToOthersIdeation,
                        HarmToOthersIntent,
                        HarmToOthersAttempt,
                        HarmToOthersMeans,
                        HarmToOthersPlan,
                        HarmToOthersOther,
                        HarmToOthersOtherComments,
                        HarmToOthersInformed,
                        HarmToOthersInformedComments,
                        HarmToOthersComments,
                        HarmToProperty,
                        HarmToPropertyIdeation,
                        HarmToPropertyIntent,
                        HarmToPropertyAttempt,
                        HarmToPropertyMeans,
                        HarmToPropertyPlan,
                        HarmToPropertyOther,
                        HarmToPropertyOtherComments,
                        HarmToPropertyInformed,
                        HarmToPropertyInformedComments,
                        HarmToPropertyComments,
                        SafetyPlanwasReviewed,
                        WithOrWithOutClient,
                        NextSteps,
                        FocusOfTheSession,
                        InterventionsProvided,
                        ProgressMade,
                        Overcome,
                        PlanLastService,
                        ShowSelectedItem};
                rowCustomDocumentIndividualServiceNoteGeneralsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentIndividualServiceNoteGeneralsRow);
                return rowCustomDocumentIndividualServiceNoteGeneralsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNoteGeneralsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentIndividualServiceNoteGeneralsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentIndividualServiceNoteGeneralsDataTable cln = ((CustomDocumentIndividualServiceNoteGeneralsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentIndividualServiceNoteGeneralsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDBT = base.Columns["DBT"];
                this.columnOQYOQ = base.Columns["OQYOQ"];
                this.columnMotivationalInterviewing = base.Columns["MotivationalInterviewing"];
                this.columnEMDR = base.Columns["EMDR"];
                this.columnDV = base.Columns["DV"];
                this.columnTFCBT = base.Columns["TFCBT"];
                this.columnMoodAffect = base.Columns["MoodAffect"];
                this.columnMoodAffectComments = base.Columns["MoodAffectComments"];
                this.columnThoughtProcess = base.Columns["ThoughtProcess"];
                this.columnThoughtProcessComments = base.Columns["ThoughtProcessComments"];
                this.columnBehavior = base.Columns["Behavior"];
                this.columnBehaviorComments = base.Columns["BehaviorComments"];
                this.columnMedicalCondition = base.Columns["MedicalCondition"];
                this.columnMedicalConditionComments = base.Columns["MedicalConditionComments"];
                this.columnSubstanceAbuse = base.Columns["SubstanceAbuse"];
                this.columnSubstanceAbuseComments = base.Columns["SubstanceAbuseComments"];
                this.columnSelfHarm = base.Columns["SelfHarm"];
                this.columnSelfHarmIdeation = base.Columns["SelfHarmIdeation"];
                this.columnSelfHarmIntent = base.Columns["SelfHarmIntent"];
                this.columnSelfHarmAttempt = base.Columns["SelfHarmAttempt"];
                this.columnSelfHarmMeans = base.Columns["SelfHarmMeans"];
                this.columnSelfHarmPlan = base.Columns["SelfHarmPlan"];
                this.columnselfHarmOther = base.Columns["selfHarmOther"];
                this.columnSelfHarmOtherComments = base.Columns["SelfHarmOtherComments"];
                this.columnSelfHarmInformed = base.Columns["SelfHarmInformed"];
                this.columnSelfHarmInformedComments = base.Columns["SelfHarmInformedComments"];
                this.columnSelfharmComments = base.Columns["SelfharmComments"];
                this.columnHarmToOthers = base.Columns["HarmToOthers"];
                this.columnHarmToOthersIdeation = base.Columns["HarmToOthersIdeation"];
                this.columnHarmToOthersIntent = base.Columns["HarmToOthersIntent"];
                this.columnHarmToOthersAttempt = base.Columns["HarmToOthersAttempt"];
                this.columnHarmToOthersMeans = base.Columns["HarmToOthersMeans"];
                this.columnHarmToOthersPlan = base.Columns["HarmToOthersPlan"];
                this.columnHarmToOthersOther = base.Columns["HarmToOthersOther"];
                this.columnHarmToOthersOtherComments = base.Columns["HarmToOthersOtherComments"];
                this.columnHarmToOthersInformed = base.Columns["HarmToOthersInformed"];
                this.columnHarmToOthersInformedComments = base.Columns["HarmToOthersInformedComments"];
                this.columnHarmToOthersComments = base.Columns["HarmToOthersComments"];
                this.columnHarmToProperty = base.Columns["HarmToProperty"];
                this.columnHarmToPropertyIdeation = base.Columns["HarmToPropertyIdeation"];
                this.columnHarmToPropertyIntent = base.Columns["HarmToPropertyIntent"];
                this.columnHarmToPropertyAttempt = base.Columns["HarmToPropertyAttempt"];
                this.columnHarmToPropertyMeans = base.Columns["HarmToPropertyMeans"];
                this.columnHarmToPropertyPlan = base.Columns["HarmToPropertyPlan"];
                this.columnHarmToPropertyOther = base.Columns["HarmToPropertyOther"];
                this.columnHarmToPropertyOtherComments = base.Columns["HarmToPropertyOtherComments"];
                this.columnHarmToPropertyInformed = base.Columns["HarmToPropertyInformed"];
                this.columnHarmToPropertyInformedComments = base.Columns["HarmToPropertyInformedComments"];
                this.columnHarmToPropertyComments = base.Columns["HarmToPropertyComments"];
                this.columnSafetyPlanwasReviewed = base.Columns["SafetyPlanwasReviewed"];
                this.columnWithOrWithOutClient = base.Columns["WithOrWithOutClient"];
                this.columnNextSteps = base.Columns["NextSteps"];
                this.columnFocusOfTheSession = base.Columns["FocusOfTheSession"];
                this.columnInterventionsProvided = base.Columns["InterventionsProvided"];
                this.columnProgressMade = base.Columns["ProgressMade"];
                this.columnOvercome = base.Columns["Overcome"];
                this.columnPlanLastService = base.Columns["PlanLastService"];
                this.columnShowSelectedItem = base.Columns["ShowSelectedItem"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDBT = new global::System.Data.DataColumn("DBT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBT);
                this.columnOQYOQ = new global::System.Data.DataColumn("OQYOQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOQYOQ);
                this.columnMotivationalInterviewing = new global::System.Data.DataColumn("MotivationalInterviewing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotivationalInterviewing);
                this.columnEMDR = new global::System.Data.DataColumn("EMDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMDR);
                this.columnDV = new global::System.Data.DataColumn("DV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDV);
                this.columnTFCBT = new global::System.Data.DataColumn("TFCBT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTFCBT);
                this.columnMoodAffect = new global::System.Data.DataColumn("MoodAffect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoodAffect);
                this.columnMoodAffectComments = new global::System.Data.DataColumn("MoodAffectComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoodAffectComments);
                this.columnThoughtProcess = new global::System.Data.DataColumn("ThoughtProcess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoughtProcess);
                this.columnThoughtProcessComments = new global::System.Data.DataColumn("ThoughtProcessComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoughtProcessComments);
                this.columnBehavior = new global::System.Data.DataColumn("Behavior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBehavior);
                this.columnBehaviorComments = new global::System.Data.DataColumn("BehaviorComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBehaviorComments);
                this.columnMedicalCondition = new global::System.Data.DataColumn("MedicalCondition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalCondition);
                this.columnMedicalConditionComments = new global::System.Data.DataColumn("MedicalConditionComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalConditionComments);
                this.columnSubstanceAbuse = new global::System.Data.DataColumn("SubstanceAbuse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstanceAbuse);
                this.columnSubstanceAbuseComments = new global::System.Data.DataColumn("SubstanceAbuseComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstanceAbuseComments);
                this.columnSelfHarm = new global::System.Data.DataColumn("SelfHarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarm);
                this.columnSelfHarmIdeation = new global::System.Data.DataColumn("SelfHarmIdeation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmIdeation);
                this.columnSelfHarmIntent = new global::System.Data.DataColumn("SelfHarmIntent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmIntent);
                this.columnSelfHarmAttempt = new global::System.Data.DataColumn("SelfHarmAttempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmAttempt);
                this.columnSelfHarmMeans = new global::System.Data.DataColumn("SelfHarmMeans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmMeans);
                this.columnSelfHarmPlan = new global::System.Data.DataColumn("SelfHarmPlan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmPlan);
                this.columnselfHarmOther = new global::System.Data.DataColumn("selfHarmOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselfHarmOther);
                this.columnSelfHarmOtherComments = new global::System.Data.DataColumn("SelfHarmOtherComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmOtherComments);
                this.columnSelfHarmInformed = new global::System.Data.DataColumn("SelfHarmInformed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmInformed);
                this.columnSelfHarmInformedComments = new global::System.Data.DataColumn("SelfHarmInformedComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfHarmInformedComments);
                this.columnSelfharmComments = new global::System.Data.DataColumn("SelfharmComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfharmComments);
                this.columnHarmToOthers = new global::System.Data.DataColumn("HarmToOthers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthers);
                this.columnHarmToOthersIdeation = new global::System.Data.DataColumn("HarmToOthersIdeation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersIdeation);
                this.columnHarmToOthersIntent = new global::System.Data.DataColumn("HarmToOthersIntent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersIntent);
                this.columnHarmToOthersAttempt = new global::System.Data.DataColumn("HarmToOthersAttempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersAttempt);
                this.columnHarmToOthersMeans = new global::System.Data.DataColumn("HarmToOthersMeans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersMeans);
                this.columnHarmToOthersPlan = new global::System.Data.DataColumn("HarmToOthersPlan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersPlan);
                this.columnHarmToOthersOther = new global::System.Data.DataColumn("HarmToOthersOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersOther);
                this.columnHarmToOthersOtherComments = new global::System.Data.DataColumn("HarmToOthersOtherComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersOtherComments);
                this.columnHarmToOthersInformed = new global::System.Data.DataColumn("HarmToOthersInformed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersInformed);
                this.columnHarmToOthersInformedComments = new global::System.Data.DataColumn("HarmToOthersInformedComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersInformedComments);
                this.columnHarmToOthersComments = new global::System.Data.DataColumn("HarmToOthersComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToOthersComments);
                this.columnHarmToProperty = new global::System.Data.DataColumn("HarmToProperty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToProperty);
                this.columnHarmToPropertyIdeation = new global::System.Data.DataColumn("HarmToPropertyIdeation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyIdeation);
                this.columnHarmToPropertyIntent = new global::System.Data.DataColumn("HarmToPropertyIntent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyIntent);
                this.columnHarmToPropertyAttempt = new global::System.Data.DataColumn("HarmToPropertyAttempt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyAttempt);
                this.columnHarmToPropertyMeans = new global::System.Data.DataColumn("HarmToPropertyMeans", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyMeans);
                this.columnHarmToPropertyPlan = new global::System.Data.DataColumn("HarmToPropertyPlan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyPlan);
                this.columnHarmToPropertyOther = new global::System.Data.DataColumn("HarmToPropertyOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyOther);
                this.columnHarmToPropertyOtherComments = new global::System.Data.DataColumn("HarmToPropertyOtherComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyOtherComments);
                this.columnHarmToPropertyInformed = new global::System.Data.DataColumn("HarmToPropertyInformed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyInformed);
                this.columnHarmToPropertyInformedComments = new global::System.Data.DataColumn("HarmToPropertyInformedComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyInformedComments);
                this.columnHarmToPropertyComments = new global::System.Data.DataColumn("HarmToPropertyComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarmToPropertyComments);
                this.columnSafetyPlanwasReviewed = new global::System.Data.DataColumn("SafetyPlanwasReviewed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyPlanwasReviewed);
                this.columnWithOrWithOutClient = new global::System.Data.DataColumn("WithOrWithOutClient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithOrWithOutClient);
                this.columnNextSteps = new global::System.Data.DataColumn("NextSteps", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextSteps);
                this.columnFocusOfTheSession = new global::System.Data.DataColumn("FocusOfTheSession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFocusOfTheSession);
                this.columnInterventionsProvided = new global::System.Data.DataColumn("InterventionsProvided", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterventionsProvided);
                this.columnProgressMade = new global::System.Data.DataColumn("ProgressMade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgressMade);
                this.columnOvercome = new global::System.Data.DataColumn("Overcome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOvercome);
                this.columnPlanLastService = new global::System.Data.DataColumn("PlanLastService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanLastService);
                this.columnShowSelectedItem = new global::System.Data.DataColumn("ShowSelectedItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowSelectedItem);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnDBT.MaxLength = 1;
                this.columnOQYOQ.MaxLength = 1;
                this.columnMotivationalInterviewing.MaxLength = 1;
                this.columnEMDR.MaxLength = 1;
                this.columnDV.MaxLength = 1;
                this.columnTFCBT.MaxLength = 1;
                this.columnMoodAffect.MaxLength = 1;
                this.columnMoodAffectComments.MaxLength = 2147483647;
                this.columnThoughtProcess.MaxLength = 1;
                this.columnThoughtProcessComments.MaxLength = 2147483647;
                this.columnBehavior.MaxLength = 1;
                this.columnBehaviorComments.MaxLength = 2147483647;
                this.columnMedicalCondition.MaxLength = 1;
                this.columnMedicalConditionComments.MaxLength = 2147483647;
                this.columnSubstanceAbuse.MaxLength = 1;
                this.columnSubstanceAbuseComments.MaxLength = 2147483647;
                this.columnSelfHarm.MaxLength = 1;
                this.columnSelfHarmIdeation.MaxLength = 1;
                this.columnSelfHarmIntent.MaxLength = 1;
                this.columnSelfHarmAttempt.MaxLength = 1;
                this.columnSelfHarmMeans.MaxLength = 1;
                this.columnSelfHarmPlan.MaxLength = 1;
                this.columnselfHarmOther.MaxLength = 1;
                this.columnSelfHarmOtherComments.MaxLength = 2147483647;
                this.columnSelfHarmInformed.MaxLength = 1;
                this.columnSelfHarmInformedComments.MaxLength = 2147483647;
                this.columnSelfharmComments.MaxLength = 2147483647;
                this.columnHarmToOthers.MaxLength = 1;
                this.columnHarmToOthersIdeation.MaxLength = 1;
                this.columnHarmToOthersIntent.MaxLength = 1;
                this.columnHarmToOthersAttempt.MaxLength = 1;
                this.columnHarmToOthersMeans.MaxLength = 1;
                this.columnHarmToOthersPlan.MaxLength = 1;
                this.columnHarmToOthersOther.MaxLength = 1;
                this.columnHarmToOthersOtherComments.MaxLength = 2147483647;
                this.columnHarmToOthersInformed.MaxLength = 1;
                this.columnHarmToOthersInformedComments.MaxLength = 2147483647;
                this.columnHarmToOthersComments.MaxLength = 2147483647;
                this.columnHarmToProperty.MaxLength = 1;
                this.columnHarmToPropertyIdeation.MaxLength = 1;
                this.columnHarmToPropertyIntent.MaxLength = 1;
                this.columnHarmToPropertyAttempt.MaxLength = 1;
                this.columnHarmToPropertyMeans.MaxLength = 1;
                this.columnHarmToPropertyPlan.MaxLength = 1;
                this.columnHarmToPropertyOther.MaxLength = 1;
                this.columnHarmToPropertyOtherComments.MaxLength = 2147483647;
                this.columnHarmToPropertyInformed.MaxLength = 1;
                this.columnHarmToPropertyInformedComments.MaxLength = 2147483647;
                this.columnHarmToPropertyComments.MaxLength = 2147483647;
                this.columnSafetyPlanwasReviewed.MaxLength = 1;
                this.columnWithOrWithOutClient.MaxLength = 1;
                this.columnNextSteps.MaxLength = 2147483647;
                this.columnFocusOfTheSession.MaxLength = 2147483647;
                this.columnInterventionsProvided.MaxLength = 2147483647;
                this.columnProgressMade.MaxLength = 2147483647;
                this.columnOvercome.MaxLength = 2147483647;
                this.columnPlanLastService.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNoteGeneralsRow NewCustomDocumentIndividualServiceNoteGeneralsRow() {
                return ((CustomDocumentIndividualServiceNoteGeneralsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentIndividualServiceNoteGeneralsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentIndividualServiceNoteGeneralsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentIndividualServiceNoteGeneralsRowChanged != null)) {
                    this.CustomDocumentIndividualServiceNoteGeneralsRowChanged(this, new CustomDocumentIndividualServiceNoteGeneralsRowChangeEvent(((CustomDocumentIndividualServiceNoteGeneralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentIndividualServiceNoteGeneralsRowChanging != null)) {
                    this.CustomDocumentIndividualServiceNoteGeneralsRowChanging(this, new CustomDocumentIndividualServiceNoteGeneralsRowChangeEvent(((CustomDocumentIndividualServiceNoteGeneralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentIndividualServiceNoteGeneralsRowDeleted != null)) {
                    this.CustomDocumentIndividualServiceNoteGeneralsRowDeleted(this, new CustomDocumentIndividualServiceNoteGeneralsRowChangeEvent(((CustomDocumentIndividualServiceNoteGeneralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentIndividualServiceNoteGeneralsRowDeleting != null)) {
                    this.CustomDocumentIndividualServiceNoteGeneralsRowDeleting(this, new CustomDocumentIndividualServiceNoteGeneralsRowChangeEvent(((CustomDocumentIndividualServiceNoteGeneralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentIndividualServiceNoteGeneralsRow(CustomDocumentIndividualServiceNoteGeneralsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetIndividualServiceNote ds = new DataSetIndividualServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentIndividualServiceNoteGeneralsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentDBTsDataTable : global::System.Data.TypedTableBase<CustomDocumentDBTsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnSignificantInvolvement;
            
            private global::System.Data.DataColumn columnOtherInvolvementDetail;
            
            private global::System.Data.DataColumn columnWiseMind;
            
            private global::System.Data.DataColumn columnNonJudgmentalStance;
            
            private global::System.Data.DataColumn columnObserveNotice;
            
            private global::System.Data.DataColumn columnMindfulSkill;
            
            private global::System.Data.DataColumn columnDescribeWords;
            
            private global::System.Data.DataColumn columnEffectiveness;
            
            private global::System.Data.DataColumn columnParticipate;
            
            private global::System.Data.DataColumn columnDearMan;
            
            private global::System.Data.DataColumn columnFastInterpersonalSkill;
            
            private global::System.Data.DataColumn columnGiveInterpersonalSkill;
            
            private global::System.Data.DataColumn columnPleaseEmotionalRegulationSkill;
            
            private global::System.Data.DataColumn columnPostiveExperience;
            
            private global::System.Data.DataColumn columnMastery;
            
            private global::System.Data.DataColumn columnActOpposite;
            
            private global::System.Data.DataColumn columnDistractSkill;
            
            private global::System.Data.DataColumn columnProsConsSkill;
            
            private global::System.Data.DataColumn columnSelfSootheSkill;
            
            private global::System.Data.DataColumn columnRadicalAcceptance;
            
            private global::System.Data.DataColumn columnModeling;
            
            private global::System.Data.DataColumn columnImproveMoment;
            
            private global::System.Data.DataColumn columnAssessingAbilities;
            
            private global::System.Data.DataColumn columnInstructions;
            
            private global::System.Data.DataColumn columnBehavioralRehearsal;
            
            private global::System.Data.DataColumn columnFeedbackCoaching;
            
            private global::System.Data.DataColumn columnResponseReinforcement;
            
            private global::System.Data.DataColumn columnHomeworkAssignment;
            
            private global::System.Data.DataColumn columnDiscussionSimilarities;
            
            private global::System.Data.DataColumn columnReviewDiaryCard;
            
            private global::System.Data.DataColumn columnBehavioralChainAnalysis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDBTsDataTable() {
                this.TableName = "CustomDocumentDBTs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDBTsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentDBTsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignificantInvolvementColumn {
                get {
                    return this.columnSignificantInvolvement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherInvolvementDetailColumn {
                get {
                    return this.columnOtherInvolvementDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WiseMindColumn {
                get {
                    return this.columnWiseMind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonJudgmentalStanceColumn {
                get {
                    return this.columnNonJudgmentalStance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObserveNoticeColumn {
                get {
                    return this.columnObserveNotice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MindfulSkillColumn {
                get {
                    return this.columnMindfulSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescribeWordsColumn {
                get {
                    return this.columnDescribeWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectivenessColumn {
                get {
                    return this.columnEffectiveness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParticipateColumn {
                get {
                    return this.columnParticipate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DearManColumn {
                get {
                    return this.columnDearMan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FastInterpersonalSkillColumn {
                get {
                    return this.columnFastInterpersonalSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GiveInterpersonalSkillColumn {
                get {
                    return this.columnGiveInterpersonalSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PleaseEmotionalRegulationSkillColumn {
                get {
                    return this.columnPleaseEmotionalRegulationSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostiveExperienceColumn {
                get {
                    return this.columnPostiveExperience;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasteryColumn {
                get {
                    return this.columnMastery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActOppositeColumn {
                get {
                    return this.columnActOpposite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistractSkillColumn {
                get {
                    return this.columnDistractSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProsConsSkillColumn {
                get {
                    return this.columnProsConsSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelfSootheSkillColumn {
                get {
                    return this.columnSelfSootheSkill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RadicalAcceptanceColumn {
                get {
                    return this.columnRadicalAcceptance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelingColumn {
                get {
                    return this.columnModeling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImproveMomentColumn {
                get {
                    return this.columnImproveMoment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessingAbilitiesColumn {
                get {
                    return this.columnAssessingAbilities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstructionsColumn {
                get {
                    return this.columnInstructions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BehavioralRehearsalColumn {
                get {
                    return this.columnBehavioralRehearsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeedbackCoachingColumn {
                get {
                    return this.columnFeedbackCoaching;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResponseReinforcementColumn {
                get {
                    return this.columnResponseReinforcement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HomeworkAssignmentColumn {
                get {
                    return this.columnHomeworkAssignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscussionSimilaritiesColumn {
                get {
                    return this.columnDiscussionSimilarities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewDiaryCardColumn {
                get {
                    return this.columnReviewDiaryCard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BehavioralChainAnalysisColumn {
                get {
                    return this.columnBehavioralChainAnalysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDBTsRow this[int index] {
                get {
                    return ((CustomDocumentDBTsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentDBTsRowChangeEventHandler CustomDocumentDBTsRowChanging;
            
            public event CustomDocumentDBTsRowChangeEventHandler CustomDocumentDBTsRowChanged;
            
            public event CustomDocumentDBTsRowChangeEventHandler CustomDocumentDBTsRowDeleting;
            
            public event CustomDocumentDBTsRowChangeEventHandler CustomDocumentDBTsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentDBTsRow(CustomDocumentDBTsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDBTsRow AddCustomDocumentDBTsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        string SignificantInvolvement, 
                        string OtherInvolvementDetail, 
                        string WiseMind, 
                        string NonJudgmentalStance, 
                        string ObserveNotice, 
                        string MindfulSkill, 
                        string DescribeWords, 
                        string Effectiveness, 
                        string Participate, 
                        string DearMan, 
                        string FastInterpersonalSkill, 
                        string GiveInterpersonalSkill, 
                        string PleaseEmotionalRegulationSkill, 
                        string PostiveExperience, 
                        string Mastery, 
                        string ActOpposite, 
                        string DistractSkill, 
                        string ProsConsSkill, 
                        string SelfSootheSkill, 
                        string RadicalAcceptance, 
                        string Modeling, 
                        string ImproveMoment, 
                        string AssessingAbilities, 
                        string Instructions, 
                        string BehavioralRehearsal, 
                        string FeedbackCoaching, 
                        string ResponseReinforcement, 
                        string HomeworkAssignment, 
                        string DiscussionSimilarities, 
                        string ReviewDiaryCard, 
                        string BehavioralChainAnalysis) {
                CustomDocumentDBTsRow rowCustomDocumentDBTsRow = ((CustomDocumentDBTsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        SignificantInvolvement,
                        OtherInvolvementDetail,
                        WiseMind,
                        NonJudgmentalStance,
                        ObserveNotice,
                        MindfulSkill,
                        DescribeWords,
                        Effectiveness,
                        Participate,
                        DearMan,
                        FastInterpersonalSkill,
                        GiveInterpersonalSkill,
                        PleaseEmotionalRegulationSkill,
                        PostiveExperience,
                        Mastery,
                        ActOpposite,
                        DistractSkill,
                        ProsConsSkill,
                        SelfSootheSkill,
                        RadicalAcceptance,
                        Modeling,
                        ImproveMoment,
                        AssessingAbilities,
                        Instructions,
                        BehavioralRehearsal,
                        FeedbackCoaching,
                        ResponseReinforcement,
                        HomeworkAssignment,
                        DiscussionSimilarities,
                        ReviewDiaryCard,
                        BehavioralChainAnalysis};
                rowCustomDocumentDBTsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentDBTsRow);
                return rowCustomDocumentDBTsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDBTsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentDBTsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentDBTsDataTable cln = ((CustomDocumentDBTsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentDBTsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnSignificantInvolvement = base.Columns["SignificantInvolvement"];
                this.columnOtherInvolvementDetail = base.Columns["OtherInvolvementDetail"];
                this.columnWiseMind = base.Columns["WiseMind"];
                this.columnNonJudgmentalStance = base.Columns["NonJudgmentalStance"];
                this.columnObserveNotice = base.Columns["ObserveNotice"];
                this.columnMindfulSkill = base.Columns["MindfulSkill"];
                this.columnDescribeWords = base.Columns["DescribeWords"];
                this.columnEffectiveness = base.Columns["Effectiveness"];
                this.columnParticipate = base.Columns["Participate"];
                this.columnDearMan = base.Columns["DearMan"];
                this.columnFastInterpersonalSkill = base.Columns["FastInterpersonalSkill"];
                this.columnGiveInterpersonalSkill = base.Columns["GiveInterpersonalSkill"];
                this.columnPleaseEmotionalRegulationSkill = base.Columns["PleaseEmotionalRegulationSkill"];
                this.columnPostiveExperience = base.Columns["PostiveExperience"];
                this.columnMastery = base.Columns["Mastery"];
                this.columnActOpposite = base.Columns["ActOpposite"];
                this.columnDistractSkill = base.Columns["DistractSkill"];
                this.columnProsConsSkill = base.Columns["ProsConsSkill"];
                this.columnSelfSootheSkill = base.Columns["SelfSootheSkill"];
                this.columnRadicalAcceptance = base.Columns["RadicalAcceptance"];
                this.columnModeling = base.Columns["Modeling"];
                this.columnImproveMoment = base.Columns["ImproveMoment"];
                this.columnAssessingAbilities = base.Columns["AssessingAbilities"];
                this.columnInstructions = base.Columns["Instructions"];
                this.columnBehavioralRehearsal = base.Columns["BehavioralRehearsal"];
                this.columnFeedbackCoaching = base.Columns["FeedbackCoaching"];
                this.columnResponseReinforcement = base.Columns["ResponseReinforcement"];
                this.columnHomeworkAssignment = base.Columns["HomeworkAssignment"];
                this.columnDiscussionSimilarities = base.Columns["DiscussionSimilarities"];
                this.columnReviewDiaryCard = base.Columns["ReviewDiaryCard"];
                this.columnBehavioralChainAnalysis = base.Columns["BehavioralChainAnalysis"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnSignificantInvolvement = new global::System.Data.DataColumn("SignificantInvolvement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignificantInvolvement);
                this.columnOtherInvolvementDetail = new global::System.Data.DataColumn("OtherInvolvementDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherInvolvementDetail);
                this.columnWiseMind = new global::System.Data.DataColumn("WiseMind", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWiseMind);
                this.columnNonJudgmentalStance = new global::System.Data.DataColumn("NonJudgmentalStance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonJudgmentalStance);
                this.columnObserveNotice = new global::System.Data.DataColumn("ObserveNotice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObserveNotice);
                this.columnMindfulSkill = new global::System.Data.DataColumn("MindfulSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMindfulSkill);
                this.columnDescribeWords = new global::System.Data.DataColumn("DescribeWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescribeWords);
                this.columnEffectiveness = new global::System.Data.DataColumn("Effectiveness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveness);
                this.columnParticipate = new global::System.Data.DataColumn("Participate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParticipate);
                this.columnDearMan = new global::System.Data.DataColumn("DearMan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDearMan);
                this.columnFastInterpersonalSkill = new global::System.Data.DataColumn("FastInterpersonalSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFastInterpersonalSkill);
                this.columnGiveInterpersonalSkill = new global::System.Data.DataColumn("GiveInterpersonalSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGiveInterpersonalSkill);
                this.columnPleaseEmotionalRegulationSkill = new global::System.Data.DataColumn("PleaseEmotionalRegulationSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPleaseEmotionalRegulationSkill);
                this.columnPostiveExperience = new global::System.Data.DataColumn("PostiveExperience", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostiveExperience);
                this.columnMastery = new global::System.Data.DataColumn("Mastery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMastery);
                this.columnActOpposite = new global::System.Data.DataColumn("ActOpposite", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActOpposite);
                this.columnDistractSkill = new global::System.Data.DataColumn("DistractSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistractSkill);
                this.columnProsConsSkill = new global::System.Data.DataColumn("ProsConsSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProsConsSkill);
                this.columnSelfSootheSkill = new global::System.Data.DataColumn("SelfSootheSkill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelfSootheSkill);
                this.columnRadicalAcceptance = new global::System.Data.DataColumn("RadicalAcceptance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRadicalAcceptance);
                this.columnModeling = new global::System.Data.DataColumn("Modeling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeling);
                this.columnImproveMoment = new global::System.Data.DataColumn("ImproveMoment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImproveMoment);
                this.columnAssessingAbilities = new global::System.Data.DataColumn("AssessingAbilities", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessingAbilities);
                this.columnInstructions = new global::System.Data.DataColumn("Instructions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstructions);
                this.columnBehavioralRehearsal = new global::System.Data.DataColumn("BehavioralRehearsal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBehavioralRehearsal);
                this.columnFeedbackCoaching = new global::System.Data.DataColumn("FeedbackCoaching", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeedbackCoaching);
                this.columnResponseReinforcement = new global::System.Data.DataColumn("ResponseReinforcement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseReinforcement);
                this.columnHomeworkAssignment = new global::System.Data.DataColumn("HomeworkAssignment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomeworkAssignment);
                this.columnDiscussionSimilarities = new global::System.Data.DataColumn("DiscussionSimilarities", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscussionSimilarities);
                this.columnReviewDiaryCard = new global::System.Data.DataColumn("ReviewDiaryCard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewDiaryCard);
                this.columnBehavioralChainAnalysis = new global::System.Data.DataColumn("BehavioralChainAnalysis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBehavioralChainAnalysis);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnSignificantInvolvement.MaxLength = 2147483647;
                this.columnOtherInvolvementDetail.MaxLength = 2147483647;
                this.columnWiseMind.MaxLength = 1;
                this.columnNonJudgmentalStance.MaxLength = 1;
                this.columnObserveNotice.MaxLength = 1;
                this.columnMindfulSkill.MaxLength = 1;
                this.columnDescribeWords.MaxLength = 1;
                this.columnEffectiveness.MaxLength = 1;
                this.columnParticipate.MaxLength = 1;
                this.columnDearMan.MaxLength = 1;
                this.columnFastInterpersonalSkill.MaxLength = 1;
                this.columnGiveInterpersonalSkill.MaxLength = 1;
                this.columnPleaseEmotionalRegulationSkill.MaxLength = 1;
                this.columnPostiveExperience.MaxLength = 1;
                this.columnMastery.MaxLength = 1;
                this.columnActOpposite.MaxLength = 1;
                this.columnDistractSkill.MaxLength = 1;
                this.columnProsConsSkill.MaxLength = 1;
                this.columnSelfSootheSkill.MaxLength = 1;
                this.columnRadicalAcceptance.MaxLength = 1;
                this.columnModeling.MaxLength = 1;
                this.columnImproveMoment.MaxLength = 1;
                this.columnAssessingAbilities.MaxLength = 1;
                this.columnInstructions.MaxLength = 1;
                this.columnBehavioralRehearsal.MaxLength = 1;
                this.columnFeedbackCoaching.MaxLength = 1;
                this.columnResponseReinforcement.MaxLength = 1;
                this.columnHomeworkAssignment.MaxLength = 1;
                this.columnDiscussionSimilarities.MaxLength = 1;
                this.columnReviewDiaryCard.MaxLength = 1;
                this.columnBehavioralChainAnalysis.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDBTsRow NewCustomDocumentDBTsRow() {
                return ((CustomDocumentDBTsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentDBTsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentDBTsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentDBTsRowChanged != null)) {
                    this.CustomDocumentDBTsRowChanged(this, new CustomDocumentDBTsRowChangeEvent(((CustomDocumentDBTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentDBTsRowChanging != null)) {
                    this.CustomDocumentDBTsRowChanging(this, new CustomDocumentDBTsRowChangeEvent(((CustomDocumentDBTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentDBTsRowDeleted != null)) {
                    this.CustomDocumentDBTsRowDeleted(this, new CustomDocumentDBTsRowChangeEvent(((CustomDocumentDBTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentDBTsRowDeleting != null)) {
                    this.CustomDocumentDBTsRowDeleting(this, new CustomDocumentDBTsRowChangeEvent(((CustomDocumentDBTsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentDBTsRow(CustomDocumentDBTsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetIndividualServiceNote ds = new DataSetIndividualServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentDBTsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomIndividualServiceNoteGoalsDataTable : global::System.Data.TypedTableBase<CustomIndividualServiceNoteGoalsRow> {
            
            private global::System.Data.DataColumn columnIndividualServiceNoteGoalId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnGoalId;
            
            private global::System.Data.DataColumn columnGoalNumber;
            
            private global::System.Data.DataColumn columnGoalText;
            
            private global::System.Data.DataColumn columnCustomGoalActive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsDataTable() {
                this.TableName = "CustomIndividualServiceNoteGoals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteGoalsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomIndividualServiceNoteGoalsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualServiceNoteGoalIdColumn {
                get {
                    return this.columnIndividualServiceNoteGoalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalIdColumn {
                get {
                    return this.columnGoalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalNumberColumn {
                get {
                    return this.columnGoalNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalTextColumn {
                get {
                    return this.columnGoalText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomGoalActiveColumn {
                get {
                    return this.columnCustomGoalActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow this[int index] {
                get {
                    return ((CustomIndividualServiceNoteGoalsRow)(this.Rows[index]));
                }
            }
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowChanging;
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowChanged;
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowDeleting;
            
            public event CustomIndividualServiceNoteGoalsRowChangeEventHandler CustomIndividualServiceNoteGoalsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomIndividualServiceNoteGoalsRow(CustomIndividualServiceNoteGoalsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow AddCustomIndividualServiceNoteGoalsRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int GoalId, decimal GoalNumber, string GoalText, string CustomGoalActive) {
                CustomIndividualServiceNoteGoalsRow rowCustomIndividualServiceNoteGoalsRow = ((CustomIndividualServiceNoteGoalsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        GoalId,
                        GoalNumber,
                        GoalText,
                        CustomGoalActive};
                rowCustomIndividualServiceNoteGoalsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomIndividualServiceNoteGoalsRow);
                return rowCustomIndividualServiceNoteGoalsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow FindByIndividualServiceNoteGoalId(int IndividualServiceNoteGoalId) {
                return ((CustomIndividualServiceNoteGoalsRow)(this.Rows.Find(new object[] {
                            IndividualServiceNoteGoalId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomIndividualServiceNoteGoalsDataTable cln = ((CustomIndividualServiceNoteGoalsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomIndividualServiceNoteGoalsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndividualServiceNoteGoalId = base.Columns["IndividualServiceNoteGoalId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnGoalId = base.Columns["GoalId"];
                this.columnGoalNumber = base.Columns["GoalNumber"];
                this.columnGoalText = base.Columns["GoalText"];
                this.columnCustomGoalActive = base.Columns["CustomGoalActive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndividualServiceNoteGoalId = new global::System.Data.DataColumn("IndividualServiceNoteGoalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualServiceNoteGoalId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnGoalId = new global::System.Data.DataColumn("GoalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalId);
                this.columnGoalNumber = new global::System.Data.DataColumn("GoalNumber", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalNumber);
                this.columnGoalText = new global::System.Data.DataColumn("GoalText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalText);
                this.columnCustomGoalActive = new global::System.Data.DataColumn("CustomGoalActive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomGoalActive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndividualServiceNoteGoalId}, true));
                this.columnIndividualServiceNoteGoalId.AutoIncrement = true;
                this.columnIndividualServiceNoteGoalId.AutoIncrementSeed = -1;
                this.columnIndividualServiceNoteGoalId.AutoIncrementStep = -1;
                this.columnIndividualServiceNoteGoalId.AllowDBNull = false;
                this.columnIndividualServiceNoteGoalId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnGoalText.MaxLength = 2147483647;
                this.columnCustomGoalActive.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow NewCustomIndividualServiceNoteGoalsRow() {
                return ((CustomIndividualServiceNoteGoalsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomIndividualServiceNoteGoalsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomIndividualServiceNoteGoalsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomIndividualServiceNoteGoalsRowChanged != null)) {
                    this.CustomIndividualServiceNoteGoalsRowChanged(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomIndividualServiceNoteGoalsRowChanging != null)) {
                    this.CustomIndividualServiceNoteGoalsRowChanging(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomIndividualServiceNoteGoalsRowDeleted != null)) {
                    this.CustomIndividualServiceNoteGoalsRowDeleted(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomIndividualServiceNoteGoalsRowDeleting != null)) {
                    this.CustomIndividualServiceNoteGoalsRowDeleting(this, new CustomIndividualServiceNoteGoalsRowChangeEvent(((CustomIndividualServiceNoteGoalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomIndividualServiceNoteGoalsRow(CustomIndividualServiceNoteGoalsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetIndividualServiceNote ds = new DataSetIndividualServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomIndividualServiceNoteGoalsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomIndividualServiceNoteObjectivesDataTable : global::System.Data.TypedTableBase<CustomIndividualServiceNoteObjectivesRow> {
            
            private global::System.Data.DataColumn columnIndividualServiceNoteObjectiveId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnGoalId;
            
            private global::System.Data.DataColumn columnObjectiveNumber;
            
            private global::System.Data.DataColumn columnObjectiveText;
            
            private global::System.Data.DataColumn columnCustomObjectiveActive;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesDataTable() {
                this.TableName = "CustomIndividualServiceNoteObjectives";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteObjectivesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomIndividualServiceNoteObjectivesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualServiceNoteObjectiveIdColumn {
                get {
                    return this.columnIndividualServiceNoteObjectiveId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoalIdColumn {
                get {
                    return this.columnGoalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectiveNumberColumn {
                get {
                    return this.columnObjectiveNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObjectiveTextColumn {
                get {
                    return this.columnObjectiveText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomObjectiveActiveColumn {
                get {
                    return this.columnCustomObjectiveActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow this[int index] {
                get {
                    return ((CustomIndividualServiceNoteObjectivesRow)(this.Rows[index]));
                }
            }
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowChanging;
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowChanged;
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowDeleting;
            
            public event CustomIndividualServiceNoteObjectivesRowChangeEventHandler CustomIndividualServiceNoteObjectivesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomIndividualServiceNoteObjectivesRow(CustomIndividualServiceNoteObjectivesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow AddCustomIndividualServiceNoteObjectivesRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int GoalId, decimal ObjectiveNumber, string ObjectiveText, string CustomObjectiveActive, int Status) {
                CustomIndividualServiceNoteObjectivesRow rowCustomIndividualServiceNoteObjectivesRow = ((CustomIndividualServiceNoteObjectivesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        GoalId,
                        ObjectiveNumber,
                        ObjectiveText,
                        CustomObjectiveActive,
                        Status};
                rowCustomIndividualServiceNoteObjectivesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomIndividualServiceNoteObjectivesRow);
                return rowCustomIndividualServiceNoteObjectivesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow FindByIndividualServiceNoteObjectiveId(int IndividualServiceNoteObjectiveId) {
                return ((CustomIndividualServiceNoteObjectivesRow)(this.Rows.Find(new object[] {
                            IndividualServiceNoteObjectiveId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomIndividualServiceNoteObjectivesDataTable cln = ((CustomIndividualServiceNoteObjectivesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomIndividualServiceNoteObjectivesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndividualServiceNoteObjectiveId = base.Columns["IndividualServiceNoteObjectiveId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnGoalId = base.Columns["GoalId"];
                this.columnObjectiveNumber = base.Columns["ObjectiveNumber"];
                this.columnObjectiveText = base.Columns["ObjectiveText"];
                this.columnCustomObjectiveActive = base.Columns["CustomObjectiveActive"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndividualServiceNoteObjectiveId = new global::System.Data.DataColumn("IndividualServiceNoteObjectiveId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualServiceNoteObjectiveId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnGoalId = new global::System.Data.DataColumn("GoalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoalId);
                this.columnObjectiveNumber = new global::System.Data.DataColumn("ObjectiveNumber", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectiveNumber);
                this.columnObjectiveText = new global::System.Data.DataColumn("ObjectiveText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectiveText);
                this.columnCustomObjectiveActive = new global::System.Data.DataColumn("CustomObjectiveActive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomObjectiveActive);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndividualServiceNoteObjectiveId}, true));
                this.columnIndividualServiceNoteObjectiveId.AutoIncrement = true;
                this.columnIndividualServiceNoteObjectiveId.AutoIncrementSeed = -1;
                this.columnIndividualServiceNoteObjectiveId.AutoIncrementStep = -1;
                this.columnIndividualServiceNoteObjectiveId.AllowDBNull = false;
                this.columnIndividualServiceNoteObjectiveId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnObjectiveText.MaxLength = 2147483647;
                this.columnCustomObjectiveActive.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow NewCustomIndividualServiceNoteObjectivesRow() {
                return ((CustomIndividualServiceNoteObjectivesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomIndividualServiceNoteObjectivesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomIndividualServiceNoteObjectivesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowChanged != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowChanged(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowChanging != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowChanging(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowDeleted != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowDeleted(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomIndividualServiceNoteObjectivesRowDeleting != null)) {
                    this.CustomIndividualServiceNoteObjectivesRowDeleting(this, new CustomIndividualServiceNoteObjectivesRowChangeEvent(((CustomIndividualServiceNoteObjectivesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomIndividualServiceNoteObjectivesRow(CustomIndividualServiceNoteObjectivesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetIndividualServiceNote ds = new DataSetIndividualServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomIndividualServiceNoteObjectivesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomIndividualServiceNoteDiagnosesDataTable : global::System.Data.TypedTableBase<CustomIndividualServiceNoteDiagnosesRow> {
            
            private global::System.Data.DataColumn columnIndividualServiceNoteDiagnosisId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnDSMCode;
            
            private global::System.Data.DataColumn columnDSMNumber;
            
            private global::System.Data.DataColumn columnDSMVCodeId;
            
            private global::System.Data.DataColumn columnICD10Code;
            
            private global::System.Data.DataColumn columnICD9Code;
            
            private global::System.Data.DataColumn columnOrder;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteDiagnosesDataTable() {
                this.TableName = "CustomIndividualServiceNoteDiagnoses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteDiagnosesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomIndividualServiceNoteDiagnosesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualServiceNoteDiagnosisIdColumn {
                get {
                    return this.columnIndividualServiceNoteDiagnosisId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMCodeColumn {
                get {
                    return this.columnDSMCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMNumberColumn {
                get {
                    return this.columnDSMNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMVCodeIdColumn {
                get {
                    return this.columnDSMVCodeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ICD10CodeColumn {
                get {
                    return this.columnICD10Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ICD9CodeColumn {
                get {
                    return this.columnICD9Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderColumn {
                get {
                    return this.columnOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteDiagnosesRow this[int index] {
                get {
                    return ((CustomIndividualServiceNoteDiagnosesRow)(this.Rows[index]));
                }
            }
            
            public event CustomIndividualServiceNoteDiagnosesRowChangeEventHandler CustomIndividualServiceNoteDiagnosesRowChanging;
            
            public event CustomIndividualServiceNoteDiagnosesRowChangeEventHandler CustomIndividualServiceNoteDiagnosesRowChanged;
            
            public event CustomIndividualServiceNoteDiagnosesRowChangeEventHandler CustomIndividualServiceNoteDiagnosesRowDeleting;
            
            public event CustomIndividualServiceNoteDiagnosesRowChangeEventHandler CustomIndividualServiceNoteDiagnosesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomIndividualServiceNoteDiagnosesRow(CustomIndividualServiceNoteDiagnosesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteDiagnosesRow AddCustomIndividualServiceNoteDiagnosesRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, string DSMCode, int DSMNumber, string DSMVCodeId, string ICD10Code, string ICD9Code, int Order, string Description) {
                CustomIndividualServiceNoteDiagnosesRow rowCustomIndividualServiceNoteDiagnosesRow = ((CustomIndividualServiceNoteDiagnosesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        DSMCode,
                        DSMNumber,
                        DSMVCodeId,
                        ICD10Code,
                        ICD9Code,
                        Order,
                        Description};
                rowCustomIndividualServiceNoteDiagnosesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomIndividualServiceNoteDiagnosesRow);
                return rowCustomIndividualServiceNoteDiagnosesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteDiagnosesRow FindByIndividualServiceNoteDiagnosisId(int IndividualServiceNoteDiagnosisId) {
                return ((CustomIndividualServiceNoteDiagnosesRow)(this.Rows.Find(new object[] {
                            IndividualServiceNoteDiagnosisId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomIndividualServiceNoteDiagnosesDataTable cln = ((CustomIndividualServiceNoteDiagnosesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomIndividualServiceNoteDiagnosesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndividualServiceNoteDiagnosisId = base.Columns["IndividualServiceNoteDiagnosisId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnDSMCode = base.Columns["DSMCode"];
                this.columnDSMNumber = base.Columns["DSMNumber"];
                this.columnDSMVCodeId = base.Columns["DSMVCodeId"];
                this.columnICD10Code = base.Columns["ICD10Code"];
                this.columnICD9Code = base.Columns["ICD9Code"];
                this.columnOrder = base.Columns["Order"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndividualServiceNoteDiagnosisId = new global::System.Data.DataColumn("IndividualServiceNoteDiagnosisId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividualServiceNoteDiagnosisId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnDSMCode = new global::System.Data.DataColumn("DSMCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMCode);
                this.columnDSMNumber = new global::System.Data.DataColumn("DSMNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMNumber);
                this.columnDSMVCodeId = new global::System.Data.DataColumn("DSMVCodeId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMVCodeId);
                this.columnICD10Code = new global::System.Data.DataColumn("ICD10Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD10Code);
                this.columnICD9Code = new global::System.Data.DataColumn("ICD9Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD9Code);
                this.columnOrder = new global::System.Data.DataColumn("Order", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndividualServiceNoteDiagnosisId}, true));
                this.columnIndividualServiceNoteDiagnosisId.AutoIncrement = true;
                this.columnIndividualServiceNoteDiagnosisId.AutoIncrementSeed = -1;
                this.columnIndividualServiceNoteDiagnosisId.AutoIncrementStep = -1;
                this.columnIndividualServiceNoteDiagnosisId.AllowDBNull = false;
                this.columnIndividualServiceNoteDiagnosisId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnDSMCode.MaxLength = 20;
                this.columnDSMVCodeId.MaxLength = 20;
                this.columnICD10Code.MaxLength = 20;
                this.columnICD9Code.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteDiagnosesRow NewCustomIndividualServiceNoteDiagnosesRow() {
                return ((CustomIndividualServiceNoteDiagnosesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomIndividualServiceNoteDiagnosesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomIndividualServiceNoteDiagnosesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomIndividualServiceNoteDiagnosesRowChanged != null)) {
                    this.CustomIndividualServiceNoteDiagnosesRowChanged(this, new CustomIndividualServiceNoteDiagnosesRowChangeEvent(((CustomIndividualServiceNoteDiagnosesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomIndividualServiceNoteDiagnosesRowChanging != null)) {
                    this.CustomIndividualServiceNoteDiagnosesRowChanging(this, new CustomIndividualServiceNoteDiagnosesRowChangeEvent(((CustomIndividualServiceNoteDiagnosesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomIndividualServiceNoteDiagnosesRowDeleted != null)) {
                    this.CustomIndividualServiceNoteDiagnosesRowDeleted(this, new CustomIndividualServiceNoteDiagnosesRowChangeEvent(((CustomIndividualServiceNoteDiagnosesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomIndividualServiceNoteDiagnosesRowDeleting != null)) {
                    this.CustomIndividualServiceNoteDiagnosesRowDeleting(this, new CustomIndividualServiceNoteDiagnosesRowChangeEvent(((CustomIndividualServiceNoteDiagnosesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomIndividualServiceNoteDiagnosesRow(CustomIndividualServiceNoteDiagnosesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetIndividualServiceNote ds = new DataSetIndividualServiceNote();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomIndividualServiceNoteDiagnosesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentIndividualServiceNoteGeneralsRow : global::System.Data.DataRow {
            
            private CustomDocumentIndividualServiceNoteGeneralsDataTable tableCustomDocumentIndividualServiceNoteGenerals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentIndividualServiceNoteGeneralsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentIndividualServiceNoteGenerals = ((CustomDocumentIndividualServiceNoteGeneralsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentIndividualServiceNot" +
                                "eGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentIndividualServiceNoteGen" +
                                "erals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentIndividualServiceNoteG" +
                                "enerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DBT {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.DBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DBT\' in table \'CustomDocumentIndividualServiceNoteGenerals\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.DBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OQYOQ {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.OQYOQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OQYOQ\' in table \'CustomDocumentIndividualServiceNoteGeneral" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.OQYOQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MotivationalInterviewing {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.MotivationalInterviewingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotivationalInterviewing\' in table \'CustomDocumentIndividua" +
                                "lServiceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.MotivationalInterviewingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMDR {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.EMDRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMDR\' in table \'CustomDocumentIndividualServiceNoteGenerals" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.EMDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DV {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.DVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DV\' in table \'CustomDocumentIndividualServiceNoteGenerals\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.DVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TFCBT {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.TFCBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TFCBT\' in table \'CustomDocumentIndividualServiceNoteGeneral" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.TFCBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoodAffect {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoodAffect\' in table \'CustomDocumentIndividualServiceNoteGe" +
                                "nerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoodAffectComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoodAffectComments\' in table \'CustomDocumentIndividualServi" +
                                "ceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThoughtProcess {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoughtProcess\' in table \'CustomDocumentIndividualServiceNo" +
                                "teGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThoughtProcessComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoughtProcessComments\' in table \'CustomDocumentIndividualS" +
                                "erviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Behavior {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Behavior\' in table \'CustomDocumentIndividualServiceNoteGene" +
                                "rals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BehaviorComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BehaviorComments\' in table \'CustomDocumentIndividualService" +
                                "NoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicalCondition {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalCondition\' in table \'CustomDocumentIndividualService" +
                                "NoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicalConditionComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalConditionComments\' in table \'CustomDocumentIndividua" +
                                "lServiceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstanceAbuse {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubstanceAbuse\' in table \'CustomDocumentIndividualServiceNo" +
                                "teGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstanceAbuseComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubstanceAbuseComments\' in table \'CustomDocumentIndividualS" +
                                "erviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarm {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarm\' in table \'CustomDocumentIndividualServiceNoteGene" +
                                "rals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmIdeation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIdeationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmIdeation\' in table \'CustomDocumentIndividualService" +
                                "NoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIdeationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmIntent {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIntentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmIntent\' in table \'CustomDocumentIndividualServiceNo" +
                                "teGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIntentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmAttempt {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmAttemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmAttempt\' in table \'CustomDocumentIndividualServiceN" +
                                "oteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmAttemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmMeans {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmMeansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmMeans\' in table \'CustomDocumentIndividualServiceNot" +
                                "eGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmMeansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmPlan {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmPlanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmPlan\' in table \'CustomDocumentIndividualServiceNote" +
                                "Generals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmPlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string selfHarmOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.selfHarmOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'selfHarmOther\' in table \'CustomDocumentIndividualServiceNot" +
                                "eGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.selfHarmOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmOtherComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmOtherCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmOtherComments\' in table \'CustomDocumentIndividualSe" +
                                "rviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmOtherCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmInformed {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmInformed\' in table \'CustomDocumentIndividualService" +
                                "NoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfHarmInformedComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfHarmInformedComments\' in table \'CustomDocumentIndividua" +
                                "lServiceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfharmComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfharmCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfharmComments\' in table \'CustomDocumentIndividualService" +
                                "NoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfharmCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthers {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthers\' in table \'CustomDocumentIndividualServiceNote" +
                                "Generals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersIdeation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIdeationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersIdeation\' in table \'CustomDocumentIndividualSer" +
                                "viceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIdeationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersIntent {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIntentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersIntent\' in table \'CustomDocumentIndividualServi" +
                                "ceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIntentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersAttempt {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersAttemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersAttempt\' in table \'CustomDocumentIndividualServ" +
                                "iceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersAttemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersMeans {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersMeansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersMeans\' in table \'CustomDocumentIndividualServic" +
                                "eNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersMeansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersPlan {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersPlanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersPlan\' in table \'CustomDocumentIndividualService" +
                                "NoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersPlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersOther\' in table \'CustomDocumentIndividualServic" +
                                "eNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersOtherComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersOtherComments\' in table \'CustomDocumentIndividu" +
                                "alServiceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersInformed {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersInformed\' in table \'CustomDocumentIndividualSer" +
                                "viceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersInformedComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersInformedComments\' in table \'CustomDocumentIndiv" +
                                "idualServiceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToOthersComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToOthersComments\' in table \'CustomDocumentIndividualSer" +
                                "viceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToProperty {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToProperty\' in table \'CustomDocumentIndividualServiceNo" +
                                "teGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyIdeation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIdeationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyIdeation\' in table \'CustomDocumentIndividualS" +
                                "erviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIdeationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyIntent {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIntentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyIntent\' in table \'CustomDocumentIndividualSer" +
                                "viceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIntentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyAttempt {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyAttemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyAttempt\' in table \'CustomDocumentIndividualSe" +
                                "rviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyAttemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyMeans {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyMeansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyMeans\' in table \'CustomDocumentIndividualServ" +
                                "iceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyMeansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyPlan {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyPlanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyPlan\' in table \'CustomDocumentIndividualServi" +
                                "ceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyPlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyOther\' in table \'CustomDocumentIndividualServ" +
                                "iceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyOtherComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyOtherComments\' in table \'CustomDocumentIndivi" +
                                "dualServiceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyInformed {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyInformed\' in table \'CustomDocumentIndividualS" +
                                "erviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyInformedComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyInformedComments\' in table \'CustomDocumentInd" +
                                "ividualServiceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HarmToPropertyComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HarmToPropertyComments\' in table \'CustomDocumentIndividualS" +
                                "erviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SafetyPlanwasReviewed {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.SafetyPlanwasReviewedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyPlanwasReviewed\' in table \'CustomDocumentIndividualSe" +
                                "rviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.SafetyPlanwasReviewedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WithOrWithOutClient {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.WithOrWithOutClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WithOrWithOutClient\' in table \'CustomDocumentIndividualServ" +
                                "iceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.WithOrWithOutClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextSteps {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.NextStepsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextSteps\' in table \'CustomDocumentIndividualServiceNoteGen" +
                                "erals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.NextStepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FocusOfTheSession {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.FocusOfTheSessionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FocusOfTheSession\' in table \'CustomDocumentIndividualServic" +
                                "eNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.FocusOfTheSessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterventionsProvided {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.InterventionsProvidedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterventionsProvided\' in table \'CustomDocumentIndividualSe" +
                                "rviceNoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.InterventionsProvidedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProgressMade {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.ProgressMadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgressMade\' in table \'CustomDocumentIndividualServiceNote" +
                                "Generals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.ProgressMadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Overcome {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.OvercomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Overcome\' in table \'CustomDocumentIndividualServiceNoteGene" +
                                "rals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.OvercomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlanLastService {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.PlanLastServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlanLastService\' in table \'CustomDocumentIndividualServiceN" +
                                "oteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.PlanLastServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowSelectedItem {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentIndividualServiceNoteGenerals.ShowSelectedItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowSelectedItem\' in table \'CustomDocumentIndividualService" +
                                "NoteGenerals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentIndividualServiceNoteGenerals.ShowSelectedItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDBTNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.DBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDBTNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.DBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOQYOQNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.OQYOQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOQYOQNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.OQYOQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMotivationalInterviewingNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.MotivationalInterviewingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMotivationalInterviewingNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.MotivationalInterviewingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMDRNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.EMDRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMDRNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.EMDRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDVNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.DVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDVNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.DVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTFCBTNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.TFCBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTFCBTNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.TFCBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoodAffectNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoodAffectNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoodAffectCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoodAffectCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.MoodAffectCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoughtProcessNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoughtProcessNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoughtProcessCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoughtProcessCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.ThoughtProcessCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBehaviorNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBehaviorNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBehaviorCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBehaviorCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.BehaviorCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalConditionNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicalConditionNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalConditionCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicalConditionCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.MedicalConditionCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstanceAbuseNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstanceAbuseNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstanceAbuseCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstanceAbuseCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SubstanceAbuseCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmIdeationNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIdeationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmIdeationNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIdeationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmIntentNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIntentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmIntentNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmIntentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmAttemptNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmAttemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmAttemptNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmAttemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmMeansNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmMeansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmMeansNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmMeansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmPlanNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmPlanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmPlanNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmPlanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselfHarmOtherNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.selfHarmOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselfHarmOtherNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.selfHarmOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmOtherCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmOtherCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmOtherCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmOtherCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmInformedNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmInformedNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfHarmInformedCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfHarmInformedCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfHarmInformedCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfharmCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SelfharmCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfharmCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SelfharmCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersIdeationNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIdeationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersIdeationNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIdeationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersIntentNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIntentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersIntentNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersIntentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersAttemptNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersAttemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersAttemptNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersAttemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersMeansNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersMeansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersMeansNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersMeansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersPlanNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersPlanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersPlanNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersPlanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersOtherNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersOtherNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersOtherCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersOtherCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersOtherCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersInformedNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersInformedNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersInformedCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersInformedCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersInformedCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToOthersCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToOthersCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToOthersCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyIdeationNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIdeationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyIdeationNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIdeationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyIntentNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIntentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyIntentNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyIntentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyAttemptNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyAttemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyAttemptNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyAttemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyMeansNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyMeansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyMeansNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyMeansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyPlanNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyPlanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyPlanNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyPlanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyOtherNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyOtherNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyOtherCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyOtherCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyOtherCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyInformedNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyInformedNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyInformedCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyInformedCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyInformedCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHarmToPropertyCommentsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHarmToPropertyCommentsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.HarmToPropertyCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyPlanwasReviewedNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.SafetyPlanwasReviewedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyPlanwasReviewedNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.SafetyPlanwasReviewedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWithOrWithOutClientNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.WithOrWithOutClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWithOrWithOutClientNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.WithOrWithOutClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextStepsNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.NextStepsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextStepsNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.NextStepsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFocusOfTheSessionNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.FocusOfTheSessionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFocusOfTheSessionNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.FocusOfTheSessionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterventionsProvidedNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.InterventionsProvidedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterventionsProvidedNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.InterventionsProvidedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgressMadeNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.ProgressMadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgressMadeNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.ProgressMadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOvercomeNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.OvercomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOvercomeNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.OvercomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlanLastServiceNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.PlanLastServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlanLastServiceNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.PlanLastServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowSelectedItemNull() {
                return this.IsNull(this.tableCustomDocumentIndividualServiceNoteGenerals.ShowSelectedItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowSelectedItemNull() {
                this[this.tableCustomDocumentIndividualServiceNoteGenerals.ShowSelectedItemColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentDBTsRow : global::System.Data.DataRow {
            
            private CustomDocumentDBTsDataTable tableCustomDocumentDBTs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDBTsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentDBTs = ((CustomDocumentDBTsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentDBTs.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentDBTs.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDBTs.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDBTs.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDBTs.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDBTs.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDBTs.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDBTs.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDBTs.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDBTs.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentDBTs.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SignificantInvolvement {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.SignificantInvolvementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SignificantInvolvement\' in table \'CustomDocumentDBTs\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.SignificantInvolvementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherInvolvementDetail {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.OtherInvolvementDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherInvolvementDetail\' in table \'CustomDocumentDBTs\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.OtherInvolvementDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WiseMind {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.WiseMindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WiseMind\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.WiseMindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NonJudgmentalStance {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.NonJudgmentalStanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonJudgmentalStance\' in table \'CustomDocumentDBTs\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.NonJudgmentalStanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ObserveNotice {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ObserveNoticeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObserveNotice\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ObserveNoticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MindfulSkill {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.MindfulSkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MindfulSkill\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.MindfulSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DescribeWords {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.DescribeWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescribeWords\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.DescribeWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Effectiveness {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.EffectivenessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Effectiveness\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.EffectivenessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Participate {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ParticipateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Participate\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ParticipateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DearMan {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.DearManColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DearMan\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.DearManColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FastInterpersonalSkill {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.FastInterpersonalSkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FastInterpersonalSkill\' in table \'CustomDocumentDBTs\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.FastInterpersonalSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GiveInterpersonalSkill {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.GiveInterpersonalSkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GiveInterpersonalSkill\' in table \'CustomDocumentDBTs\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.GiveInterpersonalSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PleaseEmotionalRegulationSkill {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.PleaseEmotionalRegulationSkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PleaseEmotionalRegulationSkill\' in table \'CustomDocumentDBT" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.PleaseEmotionalRegulationSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostiveExperience {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.PostiveExperienceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostiveExperience\' in table \'CustomDocumentDBTs\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.PostiveExperienceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mastery {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.MasteryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mastery\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.MasteryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ActOpposite {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ActOppositeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActOpposite\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ActOppositeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistractSkill {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.DistractSkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistractSkill\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.DistractSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProsConsSkill {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ProsConsSkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProsConsSkill\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ProsConsSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SelfSootheSkill {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.SelfSootheSkillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SelfSootheSkill\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.SelfSootheSkillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RadicalAcceptance {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.RadicalAcceptanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RadicalAcceptance\' in table \'CustomDocumentDBTs\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.RadicalAcceptanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Modeling {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ModelingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modeling\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ModelingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImproveMoment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ImproveMomentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImproveMoment\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ImproveMomentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssessingAbilities {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.AssessingAbilitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessingAbilities\' in table \'CustomDocumentDBTs\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.AssessingAbilitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Instructions {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.InstructionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instructions\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.InstructionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BehavioralRehearsal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.BehavioralRehearsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BehavioralRehearsal\' in table \'CustomDocumentDBTs\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.BehavioralRehearsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FeedbackCoaching {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.FeedbackCoachingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeedbackCoaching\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.FeedbackCoachingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResponseReinforcement {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ResponseReinforcementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResponseReinforcement\' in table \'CustomDocumentDBTs\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ResponseReinforcementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HomeworkAssignment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.HomeworkAssignmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HomeworkAssignment\' in table \'CustomDocumentDBTs\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.HomeworkAssignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiscussionSimilarities {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.DiscussionSimilaritiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscussionSimilarities\' in table \'CustomDocumentDBTs\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.DiscussionSimilaritiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewDiaryCard {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.ReviewDiaryCardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewDiaryCard\' in table \'CustomDocumentDBTs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.ReviewDiaryCardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BehavioralChainAnalysis {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDBTs.BehavioralChainAnalysisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BehavioralChainAnalysis\' in table \'CustomDocumentDBTs\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDBTs.BehavioralChainAnalysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentDBTs.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentDBTs.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentDBTs.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignificantInvolvementNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.SignificantInvolvementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignificantInvolvementNull() {
                this[this.tableCustomDocumentDBTs.SignificantInvolvementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherInvolvementDetailNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.OtherInvolvementDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherInvolvementDetailNull() {
                this[this.tableCustomDocumentDBTs.OtherInvolvementDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWiseMindNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.WiseMindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWiseMindNull() {
                this[this.tableCustomDocumentDBTs.WiseMindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonJudgmentalStanceNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.NonJudgmentalStanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonJudgmentalStanceNull() {
                this[this.tableCustomDocumentDBTs.NonJudgmentalStanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObserveNoticeNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ObserveNoticeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObserveNoticeNull() {
                this[this.tableCustomDocumentDBTs.ObserveNoticeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMindfulSkillNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.MindfulSkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMindfulSkillNull() {
                this[this.tableCustomDocumentDBTs.MindfulSkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescribeWordsNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.DescribeWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescribeWordsNull() {
                this[this.tableCustomDocumentDBTs.DescribeWordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectivenessNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.EffectivenessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectivenessNull() {
                this[this.tableCustomDocumentDBTs.EffectivenessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParticipateNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ParticipateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetParticipateNull() {
                this[this.tableCustomDocumentDBTs.ParticipateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDearManNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.DearManColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDearManNull() {
                this[this.tableCustomDocumentDBTs.DearManColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFastInterpersonalSkillNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.FastInterpersonalSkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFastInterpersonalSkillNull() {
                this[this.tableCustomDocumentDBTs.FastInterpersonalSkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGiveInterpersonalSkillNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.GiveInterpersonalSkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGiveInterpersonalSkillNull() {
                this[this.tableCustomDocumentDBTs.GiveInterpersonalSkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPleaseEmotionalRegulationSkillNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.PleaseEmotionalRegulationSkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPleaseEmotionalRegulationSkillNull() {
                this[this.tableCustomDocumentDBTs.PleaseEmotionalRegulationSkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostiveExperienceNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.PostiveExperienceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostiveExperienceNull() {
                this[this.tableCustomDocumentDBTs.PostiveExperienceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasteryNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.MasteryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasteryNull() {
                this[this.tableCustomDocumentDBTs.MasteryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActOppositeNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ActOppositeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActOppositeNull() {
                this[this.tableCustomDocumentDBTs.ActOppositeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistractSkillNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.DistractSkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistractSkillNull() {
                this[this.tableCustomDocumentDBTs.DistractSkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProsConsSkillNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ProsConsSkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProsConsSkillNull() {
                this[this.tableCustomDocumentDBTs.ProsConsSkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelfSootheSkillNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.SelfSootheSkillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelfSootheSkillNull() {
                this[this.tableCustomDocumentDBTs.SelfSootheSkillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRadicalAcceptanceNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.RadicalAcceptanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRadicalAcceptanceNull() {
                this[this.tableCustomDocumentDBTs.RadicalAcceptanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelingNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ModelingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelingNull() {
                this[this.tableCustomDocumentDBTs.ModelingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImproveMomentNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ImproveMomentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImproveMomentNull() {
                this[this.tableCustomDocumentDBTs.ImproveMomentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessingAbilitiesNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.AssessingAbilitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessingAbilitiesNull() {
                this[this.tableCustomDocumentDBTs.AssessingAbilitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstructionsNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.InstructionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstructionsNull() {
                this[this.tableCustomDocumentDBTs.InstructionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBehavioralRehearsalNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.BehavioralRehearsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBehavioralRehearsalNull() {
                this[this.tableCustomDocumentDBTs.BehavioralRehearsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeedbackCoachingNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.FeedbackCoachingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeedbackCoachingNull() {
                this[this.tableCustomDocumentDBTs.FeedbackCoachingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResponseReinforcementNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ResponseReinforcementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResponseReinforcementNull() {
                this[this.tableCustomDocumentDBTs.ResponseReinforcementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomeworkAssignmentNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.HomeworkAssignmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomeworkAssignmentNull() {
                this[this.tableCustomDocumentDBTs.HomeworkAssignmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscussionSimilaritiesNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.DiscussionSimilaritiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscussionSimilaritiesNull() {
                this[this.tableCustomDocumentDBTs.DiscussionSimilaritiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewDiaryCardNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.ReviewDiaryCardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewDiaryCardNull() {
                this[this.tableCustomDocumentDBTs.ReviewDiaryCardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBehavioralChainAnalysisNull() {
                return this.IsNull(this.tableCustomDocumentDBTs.BehavioralChainAnalysisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBehavioralChainAnalysisNull() {
                this[this.tableCustomDocumentDBTs.BehavioralChainAnalysisColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomIndividualServiceNoteGoalsRow : global::System.Data.DataRow {
            
            private CustomIndividualServiceNoteGoalsDataTable tableCustomIndividualServiceNoteGoals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteGoalsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomIndividualServiceNoteGoals = ((CustomIndividualServiceNoteGoalsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndividualServiceNoteGoalId {
                get {
                    return ((int)(this[this.tableCustomIndividualServiceNoteGoals.IndividualServiceNoteGoalIdColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.IndividualServiceNoteGoalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteGoals.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteGoals.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteGoals.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteGoals.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomIndividualServiceNoteGoals\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomIndividualServiceNoteGoals\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomIndividualServiceNoteGoals\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomIndividualServiceNoteGoa" +
                                "ls\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoalId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteGoals.GoalIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalId\' in table \'CustomIndividualServiceNoteGoals\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.GoalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GoalNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalNumber\' in table \'CustomIndividualServiceNoteGoals\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoalText {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.GoalTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalText\' in table \'CustomIndividualServiceNoteGoals\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.GoalTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomGoalActive {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomGoalActive\' in table \'CustomIndividualServiceNoteGoal" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomIndividualServiceNoteGoals.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomIndividualServiceNoteGoals.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomIndividualServiceNoteGoals.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomIndividualServiceNoteGoals.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.GoalIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalIdNull() {
                this[this.tableCustomIndividualServiceNoteGoals.GoalIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalNumberNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalNumberNull() {
                this[this.tableCustomIndividualServiceNoteGoals.GoalNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalTextNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.GoalTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalTextNull() {
                this[this.tableCustomIndividualServiceNoteGoals.GoalTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomGoalActiveNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomGoalActiveNull() {
                this[this.tableCustomIndividualServiceNoteGoals.CustomGoalActiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomIndividualServiceNoteObjectivesRow : global::System.Data.DataRow {
            
            private CustomIndividualServiceNoteObjectivesDataTable tableCustomIndividualServiceNoteObjectives;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteObjectivesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomIndividualServiceNoteObjectives = ((CustomIndividualServiceNoteObjectivesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndividualServiceNoteObjectiveId {
                get {
                    return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.IndividualServiceNoteObjectiveIdColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.IndividualServiceNoteObjectiveIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteObjectives.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteObjectives.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomIndividualServiceNoteObjecti" +
                                "ves\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomIndividualServiceNoteObjectives\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomIndividualServiceNoteObjective" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomIndividualServiceNoteObj" +
                                "ectives\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoalId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoalId\' in table \'CustomIndividualServiceNoteObjectives\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ObjectiveNumber {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectiveNumber\' in table \'CustomIndividualServiceNoteObjec" +
                                "tives\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ObjectiveText {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectiveText\' in table \'CustomIndividualServiceNoteObjecti" +
                                "ves\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomObjectiveActive {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomObjectiveActive\' in table \'CustomIndividualServiceNot" +
                                "eObjectives\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteObjectives.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'CustomIndividualServiceNoteObjectives\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteObjectives.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoalIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoalIdNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.GoalIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectiveNumberNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectiveNumberNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObjectiveTextNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObjectiveTextNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.ObjectiveTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomObjectiveActiveNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomObjectiveActiveNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.CustomObjectiveActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteObjectives.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableCustomIndividualServiceNoteObjectives.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomIndividualServiceNoteDiagnosesRow : global::System.Data.DataRow {
            
            private CustomIndividualServiceNoteDiagnosesDataTable tableCustomIndividualServiceNoteDiagnoses;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomIndividualServiceNoteDiagnosesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomIndividualServiceNoteDiagnoses = ((CustomIndividualServiceNoteDiagnosesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IndividualServiceNoteDiagnosisId {
                get {
                    return ((int)(this[this.tableCustomIndividualServiceNoteDiagnoses.IndividualServiceNoteDiagnosisIdColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.IndividualServiceNoteDiagnosisIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteDiagnoses.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteDiagnoses.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomIndividualServiceNoteDiagnos" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomIndividualServiceNoteDiagnoses\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomIndividualServiceNoteDiagnoses.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomIndividualServiceNoteDiagnoses" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteDiagnoses.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomIndividualServiceNoteDia" +
                                "gnoses\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.DSMCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMCode\' in table \'CustomIndividualServiceNoteDiagnoses\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.DSMCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DSMNumber {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteDiagnoses.DSMNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMNumber\' in table \'CustomIndividualServiceNoteDiagnoses\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.DSMNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMVCodeId {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.DSMVCodeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMVCodeId\' in table \'CustomIndividualServiceNoteDiagnoses\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.DSMVCodeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ICD10Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.ICD10CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD10Code\' in table \'CustomIndividualServiceNoteDiagnoses\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.ICD10CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ICD9Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.ICD9CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD9Code\' in table \'CustomIndividualServiceNoteDiagnoses\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.ICD9CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Order {
                get {
                    try {
                        return ((int)(this[this.tableCustomIndividualServiceNoteDiagnoses.OrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Order\' in table \'CustomIndividualServiceNoteDiagnoses\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.OrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCustomIndividualServiceNoteDiagnoses.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'CustomIndividualServiceNoteDiagnoses" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomIndividualServiceNoteDiagnoses.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMCodeNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.DSMCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMCodeNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.DSMCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMNumberNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.DSMNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMNumberNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.DSMNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMVCodeIdNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.DSMVCodeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMVCodeIdNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.DSMVCodeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsICD10CodeNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.ICD10CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetICD10CodeNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.ICD10CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsICD9CodeNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.ICD9CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetICD9CodeNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.ICD9CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.OrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.OrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCustomIndividualServiceNoteDiagnoses.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableCustomIndividualServiceNoteDiagnoses.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentIndividualServiceNoteGeneralsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentIndividualServiceNoteGeneralsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNoteGeneralsRowChangeEvent(CustomDocumentIndividualServiceNoteGeneralsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentIndividualServiceNoteGeneralsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentDBTsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentDBTsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDBTsRowChangeEvent(CustomDocumentDBTsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDBTsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomIndividualServiceNoteGoalsRowChangeEvent : global::System.EventArgs {
            
            private CustomIndividualServiceNoteGoalsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRowChangeEvent(CustomIndividualServiceNoteGoalsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteGoalsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomIndividualServiceNoteObjectivesRowChangeEvent : global::System.EventArgs {
            
            private CustomIndividualServiceNoteObjectivesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRowChangeEvent(CustomIndividualServiceNoteObjectivesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteObjectivesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomIndividualServiceNoteDiagnosesRowChangeEvent : global::System.EventArgs {
            
            private CustomIndividualServiceNoteDiagnosesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteDiagnosesRowChangeEvent(CustomIndividualServiceNoteDiagnosesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomIndividualServiceNoteDiagnosesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591