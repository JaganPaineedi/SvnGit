//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DatasetSPMIs {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DatasetSPMIs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DatasetSPMIs : global::System.Data.DataSet {
        
        private CustomDocumentSPMIsDataTable tableCustomDocumentSPMIs;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DatasetSPMIs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DatasetSPMIs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentSPMIs"] != null)) {
                    base.Tables.Add(new CustomDocumentSPMIsDataTable(ds.Tables["CustomDocumentSPMIs"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentSPMIsDataTable CustomDocumentSPMIs {
            get {
                return this.tableCustomDocumentSPMIs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DatasetSPMIs cln = ((DatasetSPMIs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentSPMIs"] != null)) {
                    base.Tables.Add(new CustomDocumentSPMIsDataTable(ds.Tables["CustomDocumentSPMIs"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentSPMIs = ((CustomDocumentSPMIsDataTable)(base.Tables["CustomDocumentSPMIs"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentSPMIs != null)) {
                    this.tableCustomDocumentSPMIs.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DatasetSPMIs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DatasetSPMIs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentSPMIs = new CustomDocumentSPMIsDataTable();
            base.Tables.Add(this.tableCustomDocumentSPMIs);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentSPMIs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DatasetSPMIs ds = new DatasetSPMIs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentSPMIsRowChangeEventHandler(object sender, CustomDocumentSPMIsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentSPMIsDataTable : global::System.Data.TypedTableBase<CustomDocumentSPMIsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnSchizophrenia;
            
            private global::System.Data.DataColumn columnMajorDepression;
            
            private global::System.Data.DataColumn columnAnxiety;
            
            private global::System.Data.DataColumn columnPersonality;
            
            private global::System.Data.DataColumn columnIndividual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSPMIsDataTable() {
                this.TableName = "CustomDocumentSPMIs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentSPMIsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentSPMIsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchizophreniaColumn {
                get {
                    return this.columnSchizophrenia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MajorDepressionColumn {
                get {
                    return this.columnMajorDepression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnxietyColumn {
                get {
                    return this.columnAnxiety;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PersonalityColumn {
                get {
                    return this.columnPersonality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndividualColumn {
                get {
                    return this.columnIndividual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSPMIsRow this[int index] {
                get {
                    return ((CustomDocumentSPMIsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentSPMIsRowChangeEventHandler CustomDocumentSPMIsRowChanging;
            
            public event CustomDocumentSPMIsRowChangeEventHandler CustomDocumentSPMIsRowChanged;
            
            public event CustomDocumentSPMIsRowChangeEventHandler CustomDocumentSPMIsRowDeleting;
            
            public event CustomDocumentSPMIsRowChangeEventHandler CustomDocumentSPMIsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentSPMIsRow(CustomDocumentSPMIsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSPMIsRow AddCustomDocumentSPMIsRow(int DocumentVersionId, string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, string Schizophrenia, string MajorDepression, string Anxiety, string Personality, string Individual) {
                CustomDocumentSPMIsRow rowCustomDocumentSPMIsRow = ((CustomDocumentSPMIsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        Schizophrenia,
                        MajorDepression,
                        Anxiety,
                        Personality,
                        Individual};
                rowCustomDocumentSPMIsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentSPMIsRow);
                return rowCustomDocumentSPMIsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSPMIsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentSPMIsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentSPMIsDataTable cln = ((CustomDocumentSPMIsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentSPMIsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnSchizophrenia = base.Columns["Schizophrenia"];
                this.columnMajorDepression = base.Columns["MajorDepression"];
                this.columnAnxiety = base.Columns["Anxiety"];
                this.columnPersonality = base.Columns["Personality"];
                this.columnIndividual = base.Columns["Individual"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnSchizophrenia = new global::System.Data.DataColumn("Schizophrenia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchizophrenia);
                this.columnMajorDepression = new global::System.Data.DataColumn("MajorDepression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMajorDepression);
                this.columnAnxiety = new global::System.Data.DataColumn("Anxiety", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnxiety);
                this.columnPersonality = new global::System.Data.DataColumn("Personality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersonality);
                this.columnIndividual = new global::System.Data.DataColumn("Individual", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndividual);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnSchizophrenia.MaxLength = 1;
                this.columnMajorDepression.MaxLength = 1;
                this.columnAnxiety.MaxLength = 1;
                this.columnPersonality.MaxLength = 1;
                this.columnIndividual.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSPMIsRow NewCustomDocumentSPMIsRow() {
                return ((CustomDocumentSPMIsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentSPMIsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentSPMIsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentSPMIsRowChanged != null)) {
                    this.CustomDocumentSPMIsRowChanged(this, new CustomDocumentSPMIsRowChangeEvent(((CustomDocumentSPMIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentSPMIsRowChanging != null)) {
                    this.CustomDocumentSPMIsRowChanging(this, new CustomDocumentSPMIsRowChangeEvent(((CustomDocumentSPMIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentSPMIsRowDeleted != null)) {
                    this.CustomDocumentSPMIsRowDeleted(this, new CustomDocumentSPMIsRowChangeEvent(((CustomDocumentSPMIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentSPMIsRowDeleting != null)) {
                    this.CustomDocumentSPMIsRowDeleting(this, new CustomDocumentSPMIsRowChangeEvent(((CustomDocumentSPMIsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentSPMIsRow(CustomDocumentSPMIsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatasetSPMIs ds = new DatasetSPMIs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentSPMIsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentSPMIsRow : global::System.Data.DataRow {
            
            private CustomDocumentSPMIsDataTable tableCustomDocumentSPMIs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentSPMIsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentSPMIs = ((CustomDocumentSPMIsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentSPMIs.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentSPMIs.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentSPMIs.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentSPMIs.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentSPMIs.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentSPMIs.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentSPMIs.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentSPMIs.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentSPMIs.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentSPMIs.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSPMIs.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSPMIs.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentSPMIs.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Schizophrenia {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSPMIs.SchizophreniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Schizophrenia\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.SchizophreniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MajorDepression {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSPMIs.MajorDepressionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MajorDepression\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.MajorDepressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Anxiety {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSPMIs.AnxietyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Anxiety\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.AnxietyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Personality {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSPMIs.PersonalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Personality\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.PersonalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Individual {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSPMIs.IndividualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Individual\' in table \'CustomDocumentSPMIs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSPMIs.IndividualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentSPMIs.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentSPMIs.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentSPMIs.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchizophreniaNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.SchizophreniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchizophreniaNull() {
                this[this.tableCustomDocumentSPMIs.SchizophreniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMajorDepressionNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.MajorDepressionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMajorDepressionNull() {
                this[this.tableCustomDocumentSPMIs.MajorDepressionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnxietyNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.AnxietyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnxietyNull() {
                this[this.tableCustomDocumentSPMIs.AnxietyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPersonalityNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.PersonalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPersonalityNull() {
                this[this.tableCustomDocumentSPMIs.PersonalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndividualNull() {
                return this.IsNull(this.tableCustomDocumentSPMIs.IndividualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndividualNull() {
                this[this.tableCustomDocumentSPMIs.IndividualColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentSPMIsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentSPMIsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSPMIsRowChangeEvent(CustomDocumentSPMIsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSPMIsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591