//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DatasetSUAdmissions {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DatasetSUAdmissions")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DatasetSUAdmissions : global::System.Data.DataSet {
        
        private CustomDocumentSUAdmissionsDataTable tableCustomDocumentSUAdmissions;
        
        private CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable tableCustomDocumentInfectiousDiseaseRiskAssessments;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DatasetSUAdmissions() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DatasetSUAdmissions(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentSUAdmissions"] != null)) {
                    base.Tables.Add(new CustomDocumentSUAdmissionsDataTable(ds.Tables["CustomDocumentSUAdmissions"]));
                }
                if ((ds.Tables["CustomDocumentInfectiousDiseaseRiskAssessments"] != null)) {
                    base.Tables.Add(new CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable(ds.Tables["CustomDocumentInfectiousDiseaseRiskAssessments"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentSUAdmissionsDataTable CustomDocumentSUAdmissions {
            get {
                return this.tableCustomDocumentSUAdmissions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable CustomDocumentInfectiousDiseaseRiskAssessments {
            get {
                return this.tableCustomDocumentInfectiousDiseaseRiskAssessments;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DatasetSUAdmissions cln = ((DatasetSUAdmissions)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentSUAdmissions"] != null)) {
                    base.Tables.Add(new CustomDocumentSUAdmissionsDataTable(ds.Tables["CustomDocumentSUAdmissions"]));
                }
                if ((ds.Tables["CustomDocumentInfectiousDiseaseRiskAssessments"] != null)) {
                    base.Tables.Add(new CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable(ds.Tables["CustomDocumentInfectiousDiseaseRiskAssessments"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentSUAdmissions = ((CustomDocumentSUAdmissionsDataTable)(base.Tables["CustomDocumentSUAdmissions"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentSUAdmissions != null)) {
                    this.tableCustomDocumentSUAdmissions.InitVars();
                }
            }
            this.tableCustomDocumentInfectiousDiseaseRiskAssessments = ((CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable)(base.Tables["CustomDocumentInfectiousDiseaseRiskAssessments"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentInfectiousDiseaseRiskAssessments != null)) {
                    this.tableCustomDocumentInfectiousDiseaseRiskAssessments.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DatasetSUAdmissions";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DatasetSUAdmissions.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentSUAdmissions = new CustomDocumentSUAdmissionsDataTable();
            base.Tables.Add(this.tableCustomDocumentSUAdmissions);
            this.tableCustomDocumentInfectiousDiseaseRiskAssessments = new CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable();
            base.Tables.Add(this.tableCustomDocumentInfectiousDiseaseRiskAssessments);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentSUAdmissions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentInfectiousDiseaseRiskAssessments() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DatasetSUAdmissions ds = new DatasetSUAdmissions();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentSUAdmissionsRowChangeEventHandler(object sender, CustomDocumentSUAdmissionsRowChangeEvent e);
        
        public delegate void CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEventHandler(object sender, CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentSUAdmissionsDataTable : global::System.Data.TypedTableBase<CustomDocumentSUAdmissionsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnProgramId;
            
            private global::System.Data.DataColumn columnAdmissionEntryDate;
            
            private global::System.Data.DataColumn columnAssessmentDate;
            
            private global::System.Data.DataColumn columnAdmissionType;
            
            private global::System.Data.DataColumn columnAdmissionProgramType;
            
            private global::System.Data.DataColumn columnReferralSource;
            
            private global::System.Data.DataColumn columnSourceOfPayment;
            
            private global::System.Data.DataColumn columnPregnantAdmission;
            
            private global::System.Data.DataColumn columnPriorEpisode;
            
            private global::System.Data.DataColumn columnSocialSupports;
            
            private global::System.Data.DataColumn columnVeteransStatus;
            
            private global::System.Data.DataColumn columnAdmittedPopulation;
            
            private global::System.Data.DataColumn columnAdmittedASAM;
            
            private global::System.Data.DataColumn columnReferredASAM;
            
            private global::System.Data.DataColumn columnStateCode;
            
            private global::System.Data.DataColumn columnNumberOfArrests;
            
            private global::System.Data.DataColumn columnDrugCourtParticipation;
            
            private global::System.Data.DataColumn columnCurrentlyOnProbation;
            
            private global::System.Data.DataColumn columnJurisdiction;
            
            private global::System.Data.DataColumn columnCurrentlyOnParole;
            
            private global::System.Data.DataColumn columnLivingArrangement;
            
            private global::System.Data.DataColumn columnHousehold;
            
            private global::System.Data.DataColumn columnChildren;
            
            private global::System.Data.DataColumn columnHouseholdIncome;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnEmploymentStatus;
            
            private global::System.Data.DataColumn columnPrimarySourceOfIncome;
            
            private global::System.Data.DataColumn columnEnrolledEducation;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnRace;
            
            private global::System.Data.DataColumn columnEthnicity;
            
            private global::System.Data.DataColumn columnCoDependent;
            
            private global::System.Data.DataColumn columnTobaccoUse;
            
            private global::System.Data.DataColumn columnAgeOfFirstTobaccoText;
            
            private global::System.Data.DataColumn columnAgeOfFirstTobacco;
            
            private global::System.Data.DataColumn columnPreferredUsage1;
            
            private global::System.Data.DataColumn columnDrugName1;
            
            private global::System.Data.DataColumn columnFrequency1;
            
            private global::System.Data.DataColumn columnRoute1;
            
            private global::System.Data.DataColumn columnAgeOfFirstUseText1;
            
            private global::System.Data.DataColumn columnAgeOfFirstUse1;
            
            private global::System.Data.DataColumn columnPreferredUsage2;
            
            private global::System.Data.DataColumn columnDrugName2;
            
            private global::System.Data.DataColumn columnFrequency2;
            
            private global::System.Data.DataColumn columnRoute2;
            
            private global::System.Data.DataColumn columnAgeOfFirstUseText2;
            
            private global::System.Data.DataColumn columnAgeOfFirstUse2;
            
            private global::System.Data.DataColumn columnPreferredUsage3;
            
            private global::System.Data.DataColumn columnDrugName3;
            
            private global::System.Data.DataColumn columnFrequency3;
            
            private global::System.Data.DataColumn columnRoute3;
            
            private global::System.Data.DataColumn columnAgeOfFirstUseText3;
            
            private global::System.Data.DataColumn columnAgeOfFirstUse3;
            
            private global::System.Data.DataColumn columnSSN;
            
            private global::System.Data.DataColumn columnTitleXXNo;
            
            private global::System.Data.DataColumn columnSamhisId;
            
            private global::System.Data.DataColumn columnNumberOfArrestsLast12Months;
            
            private global::System.Data.DataColumn columnEducationCompleted;
            
            private global::System.Data.DataColumn columnCoOccurringMentalHealth;
            
            private global::System.Data.DataColumn columnPharmocotherapyPlanned;
            
            private global::System.Data.DataColumn columnSeverity1;
            
            private global::System.Data.DataColumn columnSeverity2;
            
            private global::System.Data.DataColumn columnSeverity3;
            
            private global::System.Data.DataColumn columnGenderOther;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSUAdmissionsDataTable() {
                this.TableName = "CustomDocumentSUAdmissions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentSUAdmissionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentSUAdmissionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramIdColumn {
                get {
                    return this.columnProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdmissionEntryDateColumn {
                get {
                    return this.columnAdmissionEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessmentDateColumn {
                get {
                    return this.columnAssessmentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdmissionTypeColumn {
                get {
                    return this.columnAdmissionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdmissionProgramTypeColumn {
                get {
                    return this.columnAdmissionProgramType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralSourceColumn {
                get {
                    return this.columnReferralSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceOfPaymentColumn {
                get {
                    return this.columnSourceOfPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PregnantAdmissionColumn {
                get {
                    return this.columnPregnantAdmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorEpisodeColumn {
                get {
                    return this.columnPriorEpisode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocialSupportsColumn {
                get {
                    return this.columnSocialSupports;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VeteransStatusColumn {
                get {
                    return this.columnVeteransStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdmittedPopulationColumn {
                get {
                    return this.columnAdmittedPopulation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdmittedASAMColumn {
                get {
                    return this.columnAdmittedASAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferredASAMColumn {
                get {
                    return this.columnReferredASAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateCodeColumn {
                get {
                    return this.columnStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfArrestsColumn {
                get {
                    return this.columnNumberOfArrests;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugCourtParticipationColumn {
                get {
                    return this.columnDrugCourtParticipation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentlyOnProbationColumn {
                get {
                    return this.columnCurrentlyOnProbation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JurisdictionColumn {
                get {
                    return this.columnJurisdiction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentlyOnParoleColumn {
                get {
                    return this.columnCurrentlyOnParole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LivingArrangementColumn {
                get {
                    return this.columnLivingArrangement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseholdColumn {
                get {
                    return this.columnHousehold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChildrenColumn {
                get {
                    return this.columnChildren;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HouseholdIncomeColumn {
                get {
                    return this.columnHouseholdIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmploymentStatusColumn {
                get {
                    return this.columnEmploymentStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimarySourceOfIncomeColumn {
                get {
                    return this.columnPrimarySourceOfIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnrolledEducationColumn {
                get {
                    return this.columnEnrolledEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RaceColumn {
                get {
                    return this.columnRace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EthnicityColumn {
                get {
                    return this.columnEthnicity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoDependentColumn {
                get {
                    return this.columnCoDependent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TobaccoUseColumn {
                get {
                    return this.columnTobaccoUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstTobaccoTextColumn {
                get {
                    return this.columnAgeOfFirstTobaccoText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstTobaccoColumn {
                get {
                    return this.columnAgeOfFirstTobacco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreferredUsage1Column {
                get {
                    return this.columnPreferredUsage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugName1Column {
                get {
                    return this.columnDrugName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Frequency1Column {
                get {
                    return this.columnFrequency1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Route1Column {
                get {
                    return this.columnRoute1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstUseText1Column {
                get {
                    return this.columnAgeOfFirstUseText1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstUse1Column {
                get {
                    return this.columnAgeOfFirstUse1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreferredUsage2Column {
                get {
                    return this.columnPreferredUsage2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugName2Column {
                get {
                    return this.columnDrugName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Frequency2Column {
                get {
                    return this.columnFrequency2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Route2Column {
                get {
                    return this.columnRoute2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstUseText2Column {
                get {
                    return this.columnAgeOfFirstUseText2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstUse2Column {
                get {
                    return this.columnAgeOfFirstUse2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreferredUsage3Column {
                get {
                    return this.columnPreferredUsage3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrugName3Column {
                get {
                    return this.columnDrugName3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Frequency3Column {
                get {
                    return this.columnFrequency3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Route3Column {
                get {
                    return this.columnRoute3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstUseText3Column {
                get {
                    return this.columnAgeOfFirstUseText3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstUse3Column {
                get {
                    return this.columnAgeOfFirstUse3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SSNColumn {
                get {
                    return this.columnSSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleXXNoColumn {
                get {
                    return this.columnTitleXXNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SamhisIdColumn {
                get {
                    return this.columnSamhisId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfArrestsLast12MonthsColumn {
                get {
                    return this.columnNumberOfArrestsLast12Months;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducationCompletedColumn {
                get {
                    return this.columnEducationCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoOccurringMentalHealthColumn {
                get {
                    return this.columnCoOccurringMentalHealth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PharmocotherapyPlannedColumn {
                get {
                    return this.columnPharmocotherapyPlanned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Severity1Column {
                get {
                    return this.columnSeverity1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Severity2Column {
                get {
                    return this.columnSeverity2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Severity3Column {
                get {
                    return this.columnSeverity3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenderOtherColumn {
                get {
                    return this.columnGenderOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSUAdmissionsRow this[int index] {
                get {
                    return ((CustomDocumentSUAdmissionsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentSUAdmissionsRowChangeEventHandler CustomDocumentSUAdmissionsRowChanging;
            
            public event CustomDocumentSUAdmissionsRowChangeEventHandler CustomDocumentSUAdmissionsRowChanged;
            
            public event CustomDocumentSUAdmissionsRowChangeEventHandler CustomDocumentSUAdmissionsRowDeleting;
            
            public event CustomDocumentSUAdmissionsRowChangeEventHandler CustomDocumentSUAdmissionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentSUAdmissionsRow(CustomDocumentSUAdmissionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSUAdmissionsRow AddCustomDocumentSUAdmissionsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int ProgramId, 
                        System.DateTime AdmissionEntryDate, 
                        System.DateTime AssessmentDate, 
                        int AdmissionType, 
                        int AdmissionProgramType, 
                        int ReferralSource, 
                        int SourceOfPayment, 
                        string PregnantAdmission, 
                        int PriorEpisode, 
                        int SocialSupports, 
                        int VeteransStatus, 
                        int AdmittedPopulation, 
                        int AdmittedASAM, 
                        int ReferredASAM, 
                        int StateCode, 
                        int NumberOfArrests, 
                        int DrugCourtParticipation, 
                        string CurrentlyOnProbation, 
                        string Jurisdiction, 
                        string CurrentlyOnParole, 
                        int LivingArrangement, 
                        string Household, 
                        string Children, 
                        decimal HouseholdIncome, 
                        int MaritalStatus, 
                        int EmploymentStatus, 
                        int PrimarySourceOfIncome, 
                        int EnrolledEducation, 
                        int Gender, 
                        int Race, 
                        int Ethnicity, 
                        string CoDependent, 
                        int TobaccoUse, 
                        string AgeOfFirstTobaccoText, 
                        string AgeOfFirstTobacco, 
                        int PreferredUsage1, 
                        int DrugName1, 
                        int Frequency1, 
                        int Route1, 
                        string AgeOfFirstUseText1, 
                        string AgeOfFirstUse1, 
                        int PreferredUsage2, 
                        int DrugName2, 
                        int Frequency2, 
                        int Route2, 
                        string AgeOfFirstUseText2, 
                        string AgeOfFirstUse2, 
                        int PreferredUsage3, 
                        int DrugName3, 
                        int Frequency3, 
                        int Route3, 
                        string AgeOfFirstUseText3, 
                        string AgeOfFirstUse3, 
                        string SSN, 
                        string TitleXXNo, 
                        string SamhisId, 
                        string NumberOfArrestsLast12Months, 
                        string EducationCompleted, 
                        string CoOccurringMentalHealth, 
                        string PharmocotherapyPlanned, 
                        int Severity1, 
                        int Severity2, 
                        int Severity3, 
                        string GenderOther) {
                CustomDocumentSUAdmissionsRow rowCustomDocumentSUAdmissionsRow = ((CustomDocumentSUAdmissionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        ProgramId,
                        AdmissionEntryDate,
                        AssessmentDate,
                        AdmissionType,
                        AdmissionProgramType,
                        ReferralSource,
                        SourceOfPayment,
                        PregnantAdmission,
                        PriorEpisode,
                        SocialSupports,
                        VeteransStatus,
                        AdmittedPopulation,
                        AdmittedASAM,
                        ReferredASAM,
                        StateCode,
                        NumberOfArrests,
                        DrugCourtParticipation,
                        CurrentlyOnProbation,
                        Jurisdiction,
                        CurrentlyOnParole,
                        LivingArrangement,
                        Household,
                        Children,
                        HouseholdIncome,
                        MaritalStatus,
                        EmploymentStatus,
                        PrimarySourceOfIncome,
                        EnrolledEducation,
                        Gender,
                        Race,
                        Ethnicity,
                        CoDependent,
                        TobaccoUse,
                        AgeOfFirstTobaccoText,
                        AgeOfFirstTobacco,
                        PreferredUsage1,
                        DrugName1,
                        Frequency1,
                        Route1,
                        AgeOfFirstUseText1,
                        AgeOfFirstUse1,
                        PreferredUsage2,
                        DrugName2,
                        Frequency2,
                        Route2,
                        AgeOfFirstUseText2,
                        AgeOfFirstUse2,
                        PreferredUsage3,
                        DrugName3,
                        Frequency3,
                        Route3,
                        AgeOfFirstUseText3,
                        AgeOfFirstUse3,
                        SSN,
                        TitleXXNo,
                        SamhisId,
                        NumberOfArrestsLast12Months,
                        EducationCompleted,
                        CoOccurringMentalHealth,
                        PharmocotherapyPlanned,
                        Severity1,
                        Severity2,
                        Severity3,
                        GenderOther};
                rowCustomDocumentSUAdmissionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentSUAdmissionsRow);
                return rowCustomDocumentSUAdmissionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSUAdmissionsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentSUAdmissionsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentSUAdmissionsDataTable cln = ((CustomDocumentSUAdmissionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentSUAdmissionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnProgramId = base.Columns["ProgramId"];
                this.columnAdmissionEntryDate = base.Columns["AdmissionEntryDate"];
                this.columnAssessmentDate = base.Columns["AssessmentDate"];
                this.columnAdmissionType = base.Columns["AdmissionType"];
                this.columnAdmissionProgramType = base.Columns["AdmissionProgramType"];
                this.columnReferralSource = base.Columns["ReferralSource"];
                this.columnSourceOfPayment = base.Columns["SourceOfPayment"];
                this.columnPregnantAdmission = base.Columns["PregnantAdmission"];
                this.columnPriorEpisode = base.Columns["PriorEpisode"];
                this.columnSocialSupports = base.Columns["SocialSupports"];
                this.columnVeteransStatus = base.Columns["VeteransStatus"];
                this.columnAdmittedPopulation = base.Columns["AdmittedPopulation"];
                this.columnAdmittedASAM = base.Columns["AdmittedASAM"];
                this.columnReferredASAM = base.Columns["ReferredASAM"];
                this.columnStateCode = base.Columns["StateCode"];
                this.columnNumberOfArrests = base.Columns["NumberOfArrests"];
                this.columnDrugCourtParticipation = base.Columns["DrugCourtParticipation"];
                this.columnCurrentlyOnProbation = base.Columns["CurrentlyOnProbation"];
                this.columnJurisdiction = base.Columns["Jurisdiction"];
                this.columnCurrentlyOnParole = base.Columns["CurrentlyOnParole"];
                this.columnLivingArrangement = base.Columns["LivingArrangement"];
                this.columnHousehold = base.Columns["Household"];
                this.columnChildren = base.Columns["Children"];
                this.columnHouseholdIncome = base.Columns["HouseholdIncome"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnEmploymentStatus = base.Columns["EmploymentStatus"];
                this.columnPrimarySourceOfIncome = base.Columns["PrimarySourceOfIncome"];
                this.columnEnrolledEducation = base.Columns["EnrolledEducation"];
                this.columnGender = base.Columns["Gender"];
                this.columnRace = base.Columns["Race"];
                this.columnEthnicity = base.Columns["Ethnicity"];
                this.columnCoDependent = base.Columns["CoDependent"];
                this.columnTobaccoUse = base.Columns["TobaccoUse"];
                this.columnAgeOfFirstTobaccoText = base.Columns["AgeOfFirstTobaccoText"];
                this.columnAgeOfFirstTobacco = base.Columns["AgeOfFirstTobacco"];
                this.columnPreferredUsage1 = base.Columns["PreferredUsage1"];
                this.columnDrugName1 = base.Columns["DrugName1"];
                this.columnFrequency1 = base.Columns["Frequency1"];
                this.columnRoute1 = base.Columns["Route1"];
                this.columnAgeOfFirstUseText1 = base.Columns["AgeOfFirstUseText1"];
                this.columnAgeOfFirstUse1 = base.Columns["AgeOfFirstUse1"];
                this.columnPreferredUsage2 = base.Columns["PreferredUsage2"];
                this.columnDrugName2 = base.Columns["DrugName2"];
                this.columnFrequency2 = base.Columns["Frequency2"];
                this.columnRoute2 = base.Columns["Route2"];
                this.columnAgeOfFirstUseText2 = base.Columns["AgeOfFirstUseText2"];
                this.columnAgeOfFirstUse2 = base.Columns["AgeOfFirstUse2"];
                this.columnPreferredUsage3 = base.Columns["PreferredUsage3"];
                this.columnDrugName3 = base.Columns["DrugName3"];
                this.columnFrequency3 = base.Columns["Frequency3"];
                this.columnRoute3 = base.Columns["Route3"];
                this.columnAgeOfFirstUseText3 = base.Columns["AgeOfFirstUseText3"];
                this.columnAgeOfFirstUse3 = base.Columns["AgeOfFirstUse3"];
                this.columnSSN = base.Columns["SSN"];
                this.columnTitleXXNo = base.Columns["TitleXXNo"];
                this.columnSamhisId = base.Columns["SamhisId"];
                this.columnNumberOfArrestsLast12Months = base.Columns["NumberOfArrestsLast12Months"];
                this.columnEducationCompleted = base.Columns["EducationCompleted"];
                this.columnCoOccurringMentalHealth = base.Columns["CoOccurringMentalHealth"];
                this.columnPharmocotherapyPlanned = base.Columns["PharmocotherapyPlanned"];
                this.columnSeverity1 = base.Columns["Severity1"];
                this.columnSeverity2 = base.Columns["Severity2"];
                this.columnSeverity3 = base.Columns["Severity3"];
                this.columnGenderOther = base.Columns["GenderOther"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnProgramId = new global::System.Data.DataColumn("ProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramId);
                this.columnAdmissionEntryDate = new global::System.Data.DataColumn("AdmissionEntryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionEntryDate);
                this.columnAssessmentDate = new global::System.Data.DataColumn("AssessmentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessmentDate);
                this.columnAdmissionType = new global::System.Data.DataColumn("AdmissionType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionType);
                this.columnAdmissionProgramType = new global::System.Data.DataColumn("AdmissionProgramType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionProgramType);
                this.columnReferralSource = new global::System.Data.DataColumn("ReferralSource", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralSource);
                this.columnSourceOfPayment = new global::System.Data.DataColumn("SourceOfPayment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceOfPayment);
                this.columnPregnantAdmission = new global::System.Data.DataColumn("PregnantAdmission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPregnantAdmission);
                this.columnPriorEpisode = new global::System.Data.DataColumn("PriorEpisode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorEpisode);
                this.columnSocialSupports = new global::System.Data.DataColumn("SocialSupports", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocialSupports);
                this.columnVeteransStatus = new global::System.Data.DataColumn("VeteransStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVeteransStatus);
                this.columnAdmittedPopulation = new global::System.Data.DataColumn("AdmittedPopulation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmittedPopulation);
                this.columnAdmittedASAM = new global::System.Data.DataColumn("AdmittedASAM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmittedASAM);
                this.columnReferredASAM = new global::System.Data.DataColumn("ReferredASAM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferredASAM);
                this.columnStateCode = new global::System.Data.DataColumn("StateCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateCode);
                this.columnNumberOfArrests = new global::System.Data.DataColumn("NumberOfArrests", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfArrests);
                this.columnDrugCourtParticipation = new global::System.Data.DataColumn("DrugCourtParticipation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugCourtParticipation);
                this.columnCurrentlyOnProbation = new global::System.Data.DataColumn("CurrentlyOnProbation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentlyOnProbation);
                this.columnJurisdiction = new global::System.Data.DataColumn("Jurisdiction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJurisdiction);
                this.columnCurrentlyOnParole = new global::System.Data.DataColumn("CurrentlyOnParole", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentlyOnParole);
                this.columnLivingArrangement = new global::System.Data.DataColumn("LivingArrangement", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLivingArrangement);
                this.columnHousehold = new global::System.Data.DataColumn("Household", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHousehold);
                this.columnChildren = new global::System.Data.DataColumn("Children", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildren);
                this.columnHouseholdIncome = new global::System.Data.DataColumn("HouseholdIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouseholdIncome);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnEmploymentStatus = new global::System.Data.DataColumn("EmploymentStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmploymentStatus);
                this.columnPrimarySourceOfIncome = new global::System.Data.DataColumn("PrimarySourceOfIncome", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimarySourceOfIncome);
                this.columnEnrolledEducation = new global::System.Data.DataColumn("EnrolledEducation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnrolledEducation);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnRace = new global::System.Data.DataColumn("Race", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRace);
                this.columnEthnicity = new global::System.Data.DataColumn("Ethnicity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthnicity);
                this.columnCoDependent = new global::System.Data.DataColumn("CoDependent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoDependent);
                this.columnTobaccoUse = new global::System.Data.DataColumn("TobaccoUse", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTobaccoUse);
                this.columnAgeOfFirstTobaccoText = new global::System.Data.DataColumn("AgeOfFirstTobaccoText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstTobaccoText);
                this.columnAgeOfFirstTobacco = new global::System.Data.DataColumn("AgeOfFirstTobacco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstTobacco);
                this.columnPreferredUsage1 = new global::System.Data.DataColumn("PreferredUsage1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferredUsage1);
                this.columnDrugName1 = new global::System.Data.DataColumn("DrugName1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName1);
                this.columnFrequency1 = new global::System.Data.DataColumn("Frequency1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequency1);
                this.columnRoute1 = new global::System.Data.DataColumn("Route1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoute1);
                this.columnAgeOfFirstUseText1 = new global::System.Data.DataColumn("AgeOfFirstUseText1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstUseText1);
                this.columnAgeOfFirstUse1 = new global::System.Data.DataColumn("AgeOfFirstUse1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstUse1);
                this.columnPreferredUsage2 = new global::System.Data.DataColumn("PreferredUsage2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferredUsage2);
                this.columnDrugName2 = new global::System.Data.DataColumn("DrugName2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName2);
                this.columnFrequency2 = new global::System.Data.DataColumn("Frequency2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequency2);
                this.columnRoute2 = new global::System.Data.DataColumn("Route2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoute2);
                this.columnAgeOfFirstUseText2 = new global::System.Data.DataColumn("AgeOfFirstUseText2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstUseText2);
                this.columnAgeOfFirstUse2 = new global::System.Data.DataColumn("AgeOfFirstUse2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstUse2);
                this.columnPreferredUsage3 = new global::System.Data.DataColumn("PreferredUsage3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreferredUsage3);
                this.columnDrugName3 = new global::System.Data.DataColumn("DrugName3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName3);
                this.columnFrequency3 = new global::System.Data.DataColumn("Frequency3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrequency3);
                this.columnRoute3 = new global::System.Data.DataColumn("Route3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoute3);
                this.columnAgeOfFirstUseText3 = new global::System.Data.DataColumn("AgeOfFirstUseText3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstUseText3);
                this.columnAgeOfFirstUse3 = new global::System.Data.DataColumn("AgeOfFirstUse3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstUse3);
                this.columnSSN = new global::System.Data.DataColumn("SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSN);
                this.columnTitleXXNo = new global::System.Data.DataColumn("TitleXXNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleXXNo);
                this.columnSamhisId = new global::System.Data.DataColumn("SamhisId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSamhisId);
                this.columnNumberOfArrestsLast12Months = new global::System.Data.DataColumn("NumberOfArrestsLast12Months", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfArrestsLast12Months);
                this.columnEducationCompleted = new global::System.Data.DataColumn("EducationCompleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducationCompleted);
                this.columnCoOccurringMentalHealth = new global::System.Data.DataColumn("CoOccurringMentalHealth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoOccurringMentalHealth);
                this.columnPharmocotherapyPlanned = new global::System.Data.DataColumn("PharmocotherapyPlanned", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPharmocotherapyPlanned);
                this.columnSeverity1 = new global::System.Data.DataColumn("Severity1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverity1);
                this.columnSeverity2 = new global::System.Data.DataColumn("Severity2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverity2);
                this.columnSeverity3 = new global::System.Data.DataColumn("Severity3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverity3);
                this.columnGenderOther = new global::System.Data.DataColumn("GenderOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenderOther);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnPregnantAdmission.MaxLength = 1;
                this.columnCurrentlyOnProbation.MaxLength = 1;
                this.columnJurisdiction.MaxLength = 1;
                this.columnCurrentlyOnParole.MaxLength = 1;
                this.columnHousehold.MaxLength = 100;
                this.columnChildren.MaxLength = 100;
                this.columnCoDependent.MaxLength = 1;
                this.columnAgeOfFirstTobaccoText.MaxLength = 25;
                this.columnAgeOfFirstTobacco.MaxLength = 1;
                this.columnAgeOfFirstUseText1.MaxLength = 25;
                this.columnAgeOfFirstUse1.MaxLength = 1;
                this.columnAgeOfFirstUseText2.MaxLength = 25;
                this.columnAgeOfFirstUse2.MaxLength = 1;
                this.columnAgeOfFirstUseText3.MaxLength = 25;
                this.columnAgeOfFirstUse3.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSUAdmissionsRow NewCustomDocumentSUAdmissionsRow() {
                return ((CustomDocumentSUAdmissionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentSUAdmissionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentSUAdmissionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentSUAdmissionsRowChanged != null)) {
                    this.CustomDocumentSUAdmissionsRowChanged(this, new CustomDocumentSUAdmissionsRowChangeEvent(((CustomDocumentSUAdmissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentSUAdmissionsRowChanging != null)) {
                    this.CustomDocumentSUAdmissionsRowChanging(this, new CustomDocumentSUAdmissionsRowChangeEvent(((CustomDocumentSUAdmissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentSUAdmissionsRowDeleted != null)) {
                    this.CustomDocumentSUAdmissionsRowDeleted(this, new CustomDocumentSUAdmissionsRowChangeEvent(((CustomDocumentSUAdmissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentSUAdmissionsRowDeleting != null)) {
                    this.CustomDocumentSUAdmissionsRowDeleting(this, new CustomDocumentSUAdmissionsRowChangeEvent(((CustomDocumentSUAdmissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentSUAdmissionsRow(CustomDocumentSUAdmissionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatasetSUAdmissions ds = new DatasetSUAdmissions();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentSUAdmissionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable : global::System.Data.TypedTableBase<CustomDocumentInfectiousDiseaseRiskAssessmentsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnAnyHealthCareProvider;
            
            private global::System.Data.DataColumn columnLivedStreetOrShelter;
            
            private global::System.Data.DataColumn columnEverBeenJailPrisonJuvenile;
            
            private global::System.Data.DataColumn columnWhereBorn;
            
            private global::System.Data.DataColumn columnTraveledOrLivedOutsideUS;
            
            private global::System.Data.DataColumn columnHowLongBeenInUS;
            
            private global::System.Data.DataColumn columnCombatVeteran;
            
            private global::System.Data.DataColumn columnHadTatooEarPiercingAcupunture;
            
            private global::System.Data.DataColumn columnNausea;
            
            private global::System.Data.DataColumn columnFever;
            
            private global::System.Data.DataColumn columnDrenchingNightSweats;
            
            private global::System.Data.DataColumn columnProductiveCough;
            
            private global::System.Data.DataColumn columnCoughingUpBlood;
            
            private global::System.Data.DataColumn columnShortnessOfBreath;
            
            private global::System.Data.DataColumn columnLumpsSwollenGlands;
            
            private global::System.Data.DataColumn columnDiarrheaLastingMoreThanWeek;
            
            private global::System.Data.DataColumn columnLosingWeightWithoutMeaning;
            
            private global::System.Data.DataColumn columnBrownTingedUrine;
            
            private global::System.Data.DataColumn columnExtremeFatigue;
            
            private global::System.Data.DataColumn columnJaundice;
            
            private global::System.Data.DataColumn columnNoSymptoms;
            
            private global::System.Data.DataColumn columnMissedLastTwoPeriods;
            
            private global::System.Data.DataColumn columnWomanMissedLast2Periods;
            
            private global::System.Data.DataColumn columnEverBeenToldYouHaveTB;
            
            private global::System.Data.DataColumn columnEverBeenHadPositiveSkinTestTB;
            
            private global::System.Data.DataColumn columnEverBeenTreatedForTB;
            
            private global::System.Data.DataColumn columnEverBeenToldYouHaveHepatitisA;
            
            private global::System.Data.DataColumn columnEverBeenToldYouHaveHepatitisB;
            
            private global::System.Data.DataColumn columnEverBeenToldYouHaveHepatitisC;
            
            private global::System.Data.DataColumn columnEverUsedNeedlesToShootDrugs;
            
            private global::System.Data.DataColumn columnEverSharedNeedlesSyringesToInjectDrugs;
            
            private global::System.Data.DataColumn columnEverHadNeedleStickInjuriesOrBloodContact;
            
            private global::System.Data.DataColumn columnUseStimulants;
            
            private global::System.Data.DataColumn columnPastTwelveMonthsHadSexWithAnyWithHepatitis;
            
            private global::System.Data.DataColumn columnReceiveBloodTransfusionBefore1992;
            
            private global::System.Data.DataColumn columnReceivedBloodProductsBefore1987;
            
            private global::System.Data.DataColumn columnBirthMotherInfectedWithHepatitisC;
            
            private global::System.Data.DataColumn columnEverBeenLongTermKidneyDialysis;
            
            private global::System.Data.DataColumn columnUnprotectedSexWithHemophiliaPatient;
            
            private global::System.Data.DataColumn columnUnprotectedSexWithManWithOtherMen;
            
            private global::System.Data.DataColumn columnHadSexExchangeMoneyOrDrugs;
            
            private global::System.Data.DataColumn columnHadSexMoreThanOnePersonPastSixMonths;
            
            private global::System.Data.DataColumn columnHadSexWithAIDSPersonOrHepatitisC;
            
            private global::System.Data.DataColumn columnEverInjectedDrugsEvenOnce;
            
            private global::System.Data.DataColumn columnEvenBeenPrickedByNeedle;
            
            private global::System.Data.DataColumn columnEverHadDrinkingProblemCounselling;
            
            private global::System.Data.DataColumn columnEverBeenToldDrinkingProblem;
            
            private global::System.Data.DataColumn columnEverHadBloodTestForHIVAntibody;
            
            private global::System.Data.DataColumn columnBeenTestedWithinLastSixMonthsHIV;
            
            private global::System.Data.DataColumn columnWouldYouLikeBloodTestHIV;
            
            private global::System.Data.DataColumn columnEverHadBloodTestForHepatitisC;
            
            private global::System.Data.DataColumn columnBeenTestedWithinLastSixMonthsHepatitisC;
            
            private global::System.Data.DataColumn columnWouldYouLikeBloodTestHepatitisC;
            
            private global::System.Data.DataColumn columnJudgeOwnRiskInfectedWithHIV;
            
            private global::System.Data.DataColumn columnJudgeOwnRiskInfectedWithHepatitisC;
            
            private global::System.Data.DataColumn columnClientAssessed;
            
            private global::System.Data.DataColumn columnClientReferredHealthOrAgency;
            
            private global::System.Data.DataColumn columnClientReferredWhere;
            
            private global::System.Data.DataColumn columnEverBeenCareFacility;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable() {
                this.TableName = "CustomDocumentInfectiousDiseaseRiskAssessments";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnyHealthCareProviderColumn {
                get {
                    return this.columnAnyHealthCareProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LivedStreetOrShelterColumn {
                get {
                    return this.columnLivedStreetOrShelter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenJailPrisonJuvenileColumn {
                get {
                    return this.columnEverBeenJailPrisonJuvenile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhereBornColumn {
                get {
                    return this.columnWhereBorn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TraveledOrLivedOutsideUSColumn {
                get {
                    return this.columnTraveledOrLivedOutsideUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HowLongBeenInUSColumn {
                get {
                    return this.columnHowLongBeenInUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CombatVeteranColumn {
                get {
                    return this.columnCombatVeteran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HadTatooEarPiercingAcupuntureColumn {
                get {
                    return this.columnHadTatooEarPiercingAcupunture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NauseaColumn {
                get {
                    return this.columnNausea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeverColumn {
                get {
                    return this.columnFever;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DrenchingNightSweatsColumn {
                get {
                    return this.columnDrenchingNightSweats;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductiveCoughColumn {
                get {
                    return this.columnProductiveCough;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoughingUpBloodColumn {
                get {
                    return this.columnCoughingUpBlood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShortnessOfBreathColumn {
                get {
                    return this.columnShortnessOfBreath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LumpsSwollenGlandsColumn {
                get {
                    return this.columnLumpsSwollenGlands;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiarrheaLastingMoreThanWeekColumn {
                get {
                    return this.columnDiarrheaLastingMoreThanWeek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LosingWeightWithoutMeaningColumn {
                get {
                    return this.columnLosingWeightWithoutMeaning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrownTingedUrineColumn {
                get {
                    return this.columnBrownTingedUrine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtremeFatigueColumn {
                get {
                    return this.columnExtremeFatigue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JaundiceColumn {
                get {
                    return this.columnJaundice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoSymptomsColumn {
                get {
                    return this.columnNoSymptoms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MissedLastTwoPeriodsColumn {
                get {
                    return this.columnMissedLastTwoPeriods;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WomanMissedLast2PeriodsColumn {
                get {
                    return this.columnWomanMissedLast2Periods;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenToldYouHaveTBColumn {
                get {
                    return this.columnEverBeenToldYouHaveTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenHadPositiveSkinTestTBColumn {
                get {
                    return this.columnEverBeenHadPositiveSkinTestTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenTreatedForTBColumn {
                get {
                    return this.columnEverBeenTreatedForTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenToldYouHaveHepatitisAColumn {
                get {
                    return this.columnEverBeenToldYouHaveHepatitisA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenToldYouHaveHepatitisBColumn {
                get {
                    return this.columnEverBeenToldYouHaveHepatitisB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenToldYouHaveHepatitisCColumn {
                get {
                    return this.columnEverBeenToldYouHaveHepatitisC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverUsedNeedlesToShootDrugsColumn {
                get {
                    return this.columnEverUsedNeedlesToShootDrugs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverSharedNeedlesSyringesToInjectDrugsColumn {
                get {
                    return this.columnEverSharedNeedlesSyringesToInjectDrugs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverHadNeedleStickInjuriesOrBloodContactColumn {
                get {
                    return this.columnEverHadNeedleStickInjuriesOrBloodContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseStimulantsColumn {
                get {
                    return this.columnUseStimulants;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PastTwelveMonthsHadSexWithAnyWithHepatitisColumn {
                get {
                    return this.columnPastTwelveMonthsHadSexWithAnyWithHepatitis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiveBloodTransfusionBefore1992Column {
                get {
                    return this.columnReceiveBloodTransfusionBefore1992;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedBloodProductsBefore1987Column {
                get {
                    return this.columnReceivedBloodProductsBefore1987;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthMotherInfectedWithHepatitisCColumn {
                get {
                    return this.columnBirthMotherInfectedWithHepatitisC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenLongTermKidneyDialysisColumn {
                get {
                    return this.columnEverBeenLongTermKidneyDialysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnprotectedSexWithHemophiliaPatientColumn {
                get {
                    return this.columnUnprotectedSexWithHemophiliaPatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnprotectedSexWithManWithOtherMenColumn {
                get {
                    return this.columnUnprotectedSexWithManWithOtherMen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HadSexExchangeMoneyOrDrugsColumn {
                get {
                    return this.columnHadSexExchangeMoneyOrDrugs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HadSexMoreThanOnePersonPastSixMonthsColumn {
                get {
                    return this.columnHadSexMoreThanOnePersonPastSixMonths;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HadSexWithAIDSPersonOrHepatitisCColumn {
                get {
                    return this.columnHadSexWithAIDSPersonOrHepatitisC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverInjectedDrugsEvenOnceColumn {
                get {
                    return this.columnEverInjectedDrugsEvenOnce;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EvenBeenPrickedByNeedleColumn {
                get {
                    return this.columnEvenBeenPrickedByNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverHadDrinkingProblemCounsellingColumn {
                get {
                    return this.columnEverHadDrinkingProblemCounselling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenToldDrinkingProblemColumn {
                get {
                    return this.columnEverBeenToldDrinkingProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverHadBloodTestForHIVAntibodyColumn {
                get {
                    return this.columnEverHadBloodTestForHIVAntibody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeenTestedWithinLastSixMonthsHIVColumn {
                get {
                    return this.columnBeenTestedWithinLastSixMonthsHIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WouldYouLikeBloodTestHIVColumn {
                get {
                    return this.columnWouldYouLikeBloodTestHIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverHadBloodTestForHepatitisCColumn {
                get {
                    return this.columnEverHadBloodTestForHepatitisC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BeenTestedWithinLastSixMonthsHepatitisCColumn {
                get {
                    return this.columnBeenTestedWithinLastSixMonthsHepatitisC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WouldYouLikeBloodTestHepatitisCColumn {
                get {
                    return this.columnWouldYouLikeBloodTestHepatitisC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JudgeOwnRiskInfectedWithHIVColumn {
                get {
                    return this.columnJudgeOwnRiskInfectedWithHIV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JudgeOwnRiskInfectedWithHepatitisCColumn {
                get {
                    return this.columnJudgeOwnRiskInfectedWithHepatitisC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientAssessedColumn {
                get {
                    return this.columnClientAssessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientReferredHealthOrAgencyColumn {
                get {
                    return this.columnClientReferredHealthOrAgency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientReferredWhereColumn {
                get {
                    return this.columnClientReferredWhere;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EverBeenCareFacilityColumn {
                get {
                    return this.columnEverBeenCareFacility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentInfectiousDiseaseRiskAssessmentsRow this[int index] {
                get {
                    return ((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEventHandler CustomDocumentInfectiousDiseaseRiskAssessmentsRowChanging;
            
            public event CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEventHandler CustomDocumentInfectiousDiseaseRiskAssessmentsRowChanged;
            
            public event CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEventHandler CustomDocumentInfectiousDiseaseRiskAssessmentsRowDeleting;
            
            public event CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEventHandler CustomDocumentInfectiousDiseaseRiskAssessmentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentInfectiousDiseaseRiskAssessmentsRow(CustomDocumentInfectiousDiseaseRiskAssessmentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentInfectiousDiseaseRiskAssessmentsRow AddCustomDocumentInfectiousDiseaseRiskAssessmentsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        string AnyHealthCareProvider, 
                        string LivedStreetOrShelter, 
                        string EverBeenJailPrisonJuvenile, 
                        string WhereBorn, 
                        string TraveledOrLivedOutsideUS, 
                        string HowLongBeenInUS, 
                        string CombatVeteran, 
                        string HadTatooEarPiercingAcupunture, 
                        string Nausea, 
                        string Fever, 
                        string DrenchingNightSweats, 
                        string ProductiveCough, 
                        string CoughingUpBlood, 
                        string ShortnessOfBreath, 
                        string LumpsSwollenGlands, 
                        string DiarrheaLastingMoreThanWeek, 
                        string LosingWeightWithoutMeaning, 
                        string BrownTingedUrine, 
                        string ExtremeFatigue, 
                        string Jaundice, 
                        string NoSymptoms, 
                        string MissedLastTwoPeriods, 
                        string WomanMissedLast2Periods, 
                        string EverBeenToldYouHaveTB, 
                        string EverBeenHadPositiveSkinTestTB, 
                        string EverBeenTreatedForTB, 
                        string EverBeenToldYouHaveHepatitisA, 
                        string EverBeenToldYouHaveHepatitisB, 
                        string EverBeenToldYouHaveHepatitisC, 
                        string EverUsedNeedlesToShootDrugs, 
                        string EverSharedNeedlesSyringesToInjectDrugs, 
                        string EverHadNeedleStickInjuriesOrBloodContact, 
                        string UseStimulants, 
                        string PastTwelveMonthsHadSexWithAnyWithHepatitis, 
                        string ReceiveBloodTransfusionBefore1992, 
                        string ReceivedBloodProductsBefore1987, 
                        string BirthMotherInfectedWithHepatitisC, 
                        string EverBeenLongTermKidneyDialysis, 
                        string UnprotectedSexWithHemophiliaPatient, 
                        string UnprotectedSexWithManWithOtherMen, 
                        string HadSexExchangeMoneyOrDrugs, 
                        string HadSexMoreThanOnePersonPastSixMonths, 
                        string HadSexWithAIDSPersonOrHepatitisC, 
                        string EverInjectedDrugsEvenOnce, 
                        string EvenBeenPrickedByNeedle, 
                        string EverHadDrinkingProblemCounselling, 
                        string EverBeenToldDrinkingProblem, 
                        string EverHadBloodTestForHIVAntibody, 
                        string BeenTestedWithinLastSixMonthsHIV, 
                        string WouldYouLikeBloodTestHIV, 
                        string EverHadBloodTestForHepatitisC, 
                        string BeenTestedWithinLastSixMonthsHepatitisC, 
                        string WouldYouLikeBloodTestHepatitisC, 
                        string JudgeOwnRiskInfectedWithHIV, 
                        string JudgeOwnRiskInfectedWithHepatitisC, 
                        string ClientAssessed, 
                        string ClientReferredHealthOrAgency, 
                        string ClientReferredWhere, 
                        string EverBeenCareFacility) {
                CustomDocumentInfectiousDiseaseRiskAssessmentsRow rowCustomDocumentInfectiousDiseaseRiskAssessmentsRow = ((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        AnyHealthCareProvider,
                        LivedStreetOrShelter,
                        EverBeenJailPrisonJuvenile,
                        WhereBorn,
                        TraveledOrLivedOutsideUS,
                        HowLongBeenInUS,
                        CombatVeteran,
                        HadTatooEarPiercingAcupunture,
                        Nausea,
                        Fever,
                        DrenchingNightSweats,
                        ProductiveCough,
                        CoughingUpBlood,
                        ShortnessOfBreath,
                        LumpsSwollenGlands,
                        DiarrheaLastingMoreThanWeek,
                        LosingWeightWithoutMeaning,
                        BrownTingedUrine,
                        ExtremeFatigue,
                        Jaundice,
                        NoSymptoms,
                        MissedLastTwoPeriods,
                        WomanMissedLast2Periods,
                        EverBeenToldYouHaveTB,
                        EverBeenHadPositiveSkinTestTB,
                        EverBeenTreatedForTB,
                        EverBeenToldYouHaveHepatitisA,
                        EverBeenToldYouHaveHepatitisB,
                        EverBeenToldYouHaveHepatitisC,
                        EverUsedNeedlesToShootDrugs,
                        EverSharedNeedlesSyringesToInjectDrugs,
                        EverHadNeedleStickInjuriesOrBloodContact,
                        UseStimulants,
                        PastTwelveMonthsHadSexWithAnyWithHepatitis,
                        ReceiveBloodTransfusionBefore1992,
                        ReceivedBloodProductsBefore1987,
                        BirthMotherInfectedWithHepatitisC,
                        EverBeenLongTermKidneyDialysis,
                        UnprotectedSexWithHemophiliaPatient,
                        UnprotectedSexWithManWithOtherMen,
                        HadSexExchangeMoneyOrDrugs,
                        HadSexMoreThanOnePersonPastSixMonths,
                        HadSexWithAIDSPersonOrHepatitisC,
                        EverInjectedDrugsEvenOnce,
                        EvenBeenPrickedByNeedle,
                        EverHadDrinkingProblemCounselling,
                        EverBeenToldDrinkingProblem,
                        EverHadBloodTestForHIVAntibody,
                        BeenTestedWithinLastSixMonthsHIV,
                        WouldYouLikeBloodTestHIV,
                        EverHadBloodTestForHepatitisC,
                        BeenTestedWithinLastSixMonthsHepatitisC,
                        WouldYouLikeBloodTestHepatitisC,
                        JudgeOwnRiskInfectedWithHIV,
                        JudgeOwnRiskInfectedWithHepatitisC,
                        ClientAssessed,
                        ClientReferredHealthOrAgency,
                        ClientReferredWhere,
                        EverBeenCareFacility};
                rowCustomDocumentInfectiousDiseaseRiskAssessmentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentInfectiousDiseaseRiskAssessmentsRow);
                return rowCustomDocumentInfectiousDiseaseRiskAssessmentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentInfectiousDiseaseRiskAssessmentsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable cln = ((CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnAnyHealthCareProvider = base.Columns["AnyHealthCareProvider"];
                this.columnLivedStreetOrShelter = base.Columns["LivedStreetOrShelter"];
                this.columnEverBeenJailPrisonJuvenile = base.Columns["EverBeenJailPrisonJuvenile"];
                this.columnWhereBorn = base.Columns["WhereBorn"];
                this.columnTraveledOrLivedOutsideUS = base.Columns["TraveledOrLivedOutsideUS"];
                this.columnHowLongBeenInUS = base.Columns["HowLongBeenInUS"];
                this.columnCombatVeteran = base.Columns["CombatVeteran"];
                this.columnHadTatooEarPiercingAcupunture = base.Columns["HadTatooEarPiercingAcupunture"];
                this.columnNausea = base.Columns["Nausea"];
                this.columnFever = base.Columns["Fever"];
                this.columnDrenchingNightSweats = base.Columns["DrenchingNightSweats"];
                this.columnProductiveCough = base.Columns["ProductiveCough"];
                this.columnCoughingUpBlood = base.Columns["CoughingUpBlood"];
                this.columnShortnessOfBreath = base.Columns["ShortnessOfBreath"];
                this.columnLumpsSwollenGlands = base.Columns["LumpsSwollenGlands"];
                this.columnDiarrheaLastingMoreThanWeek = base.Columns["DiarrheaLastingMoreThanWeek"];
                this.columnLosingWeightWithoutMeaning = base.Columns["LosingWeightWithoutMeaning"];
                this.columnBrownTingedUrine = base.Columns["BrownTingedUrine"];
                this.columnExtremeFatigue = base.Columns["ExtremeFatigue"];
                this.columnJaundice = base.Columns["Jaundice"];
                this.columnNoSymptoms = base.Columns["NoSymptoms"];
                this.columnMissedLastTwoPeriods = base.Columns["MissedLastTwoPeriods"];
                this.columnWomanMissedLast2Periods = base.Columns["WomanMissedLast2Periods"];
                this.columnEverBeenToldYouHaveTB = base.Columns["EverBeenToldYouHaveTB"];
                this.columnEverBeenHadPositiveSkinTestTB = base.Columns["EverBeenHadPositiveSkinTestTB"];
                this.columnEverBeenTreatedForTB = base.Columns["EverBeenTreatedForTB"];
                this.columnEverBeenToldYouHaveHepatitisA = base.Columns["EverBeenToldYouHaveHepatitisA"];
                this.columnEverBeenToldYouHaveHepatitisB = base.Columns["EverBeenToldYouHaveHepatitisB"];
                this.columnEverBeenToldYouHaveHepatitisC = base.Columns["EverBeenToldYouHaveHepatitisC"];
                this.columnEverUsedNeedlesToShootDrugs = base.Columns["EverUsedNeedlesToShootDrugs"];
                this.columnEverSharedNeedlesSyringesToInjectDrugs = base.Columns["EverSharedNeedlesSyringesToInjectDrugs"];
                this.columnEverHadNeedleStickInjuriesOrBloodContact = base.Columns["EverHadNeedleStickInjuriesOrBloodContact"];
                this.columnUseStimulants = base.Columns["UseStimulants"];
                this.columnPastTwelveMonthsHadSexWithAnyWithHepatitis = base.Columns["PastTwelveMonthsHadSexWithAnyWithHepatitis"];
                this.columnReceiveBloodTransfusionBefore1992 = base.Columns["ReceiveBloodTransfusionBefore1992"];
                this.columnReceivedBloodProductsBefore1987 = base.Columns["ReceivedBloodProductsBefore1987"];
                this.columnBirthMotherInfectedWithHepatitisC = base.Columns["BirthMotherInfectedWithHepatitisC"];
                this.columnEverBeenLongTermKidneyDialysis = base.Columns["EverBeenLongTermKidneyDialysis"];
                this.columnUnprotectedSexWithHemophiliaPatient = base.Columns["UnprotectedSexWithHemophiliaPatient"];
                this.columnUnprotectedSexWithManWithOtherMen = base.Columns["UnprotectedSexWithManWithOtherMen"];
                this.columnHadSexExchangeMoneyOrDrugs = base.Columns["HadSexExchangeMoneyOrDrugs"];
                this.columnHadSexMoreThanOnePersonPastSixMonths = base.Columns["HadSexMoreThanOnePersonPastSixMonths"];
                this.columnHadSexWithAIDSPersonOrHepatitisC = base.Columns["HadSexWithAIDSPersonOrHepatitisC"];
                this.columnEverInjectedDrugsEvenOnce = base.Columns["EverInjectedDrugsEvenOnce"];
                this.columnEvenBeenPrickedByNeedle = base.Columns["EvenBeenPrickedByNeedle"];
                this.columnEverHadDrinkingProblemCounselling = base.Columns["EverHadDrinkingProblemCounselling"];
                this.columnEverBeenToldDrinkingProblem = base.Columns["EverBeenToldDrinkingProblem"];
                this.columnEverHadBloodTestForHIVAntibody = base.Columns["EverHadBloodTestForHIVAntibody"];
                this.columnBeenTestedWithinLastSixMonthsHIV = base.Columns["BeenTestedWithinLastSixMonthsHIV"];
                this.columnWouldYouLikeBloodTestHIV = base.Columns["WouldYouLikeBloodTestHIV"];
                this.columnEverHadBloodTestForHepatitisC = base.Columns["EverHadBloodTestForHepatitisC"];
                this.columnBeenTestedWithinLastSixMonthsHepatitisC = base.Columns["BeenTestedWithinLastSixMonthsHepatitisC"];
                this.columnWouldYouLikeBloodTestHepatitisC = base.Columns["WouldYouLikeBloodTestHepatitisC"];
                this.columnJudgeOwnRiskInfectedWithHIV = base.Columns["JudgeOwnRiskInfectedWithHIV"];
                this.columnJudgeOwnRiskInfectedWithHepatitisC = base.Columns["JudgeOwnRiskInfectedWithHepatitisC"];
                this.columnClientAssessed = base.Columns["ClientAssessed"];
                this.columnClientReferredHealthOrAgency = base.Columns["ClientReferredHealthOrAgency"];
                this.columnClientReferredWhere = base.Columns["ClientReferredWhere"];
                this.columnEverBeenCareFacility = base.Columns["EverBeenCareFacility"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnAnyHealthCareProvider = new global::System.Data.DataColumn("AnyHealthCareProvider", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnyHealthCareProvider);
                this.columnLivedStreetOrShelter = new global::System.Data.DataColumn("LivedStreetOrShelter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLivedStreetOrShelter);
                this.columnEverBeenJailPrisonJuvenile = new global::System.Data.DataColumn("EverBeenJailPrisonJuvenile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenJailPrisonJuvenile);
                this.columnWhereBorn = new global::System.Data.DataColumn("WhereBorn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhereBorn);
                this.columnTraveledOrLivedOutsideUS = new global::System.Data.DataColumn("TraveledOrLivedOutsideUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTraveledOrLivedOutsideUS);
                this.columnHowLongBeenInUS = new global::System.Data.DataColumn("HowLongBeenInUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHowLongBeenInUS);
                this.columnCombatVeteran = new global::System.Data.DataColumn("CombatVeteran", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCombatVeteran);
                this.columnHadTatooEarPiercingAcupunture = new global::System.Data.DataColumn("HadTatooEarPiercingAcupunture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHadTatooEarPiercingAcupunture);
                this.columnNausea = new global::System.Data.DataColumn("Nausea", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNausea);
                this.columnFever = new global::System.Data.DataColumn("Fever", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFever);
                this.columnDrenchingNightSweats = new global::System.Data.DataColumn("DrenchingNightSweats", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrenchingNightSweats);
                this.columnProductiveCough = new global::System.Data.DataColumn("ProductiveCough", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductiveCough);
                this.columnCoughingUpBlood = new global::System.Data.DataColumn("CoughingUpBlood", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoughingUpBlood);
                this.columnShortnessOfBreath = new global::System.Data.DataColumn("ShortnessOfBreath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortnessOfBreath);
                this.columnLumpsSwollenGlands = new global::System.Data.DataColumn("LumpsSwollenGlands", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLumpsSwollenGlands);
                this.columnDiarrheaLastingMoreThanWeek = new global::System.Data.DataColumn("DiarrheaLastingMoreThanWeek", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiarrheaLastingMoreThanWeek);
                this.columnLosingWeightWithoutMeaning = new global::System.Data.DataColumn("LosingWeightWithoutMeaning", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLosingWeightWithoutMeaning);
                this.columnBrownTingedUrine = new global::System.Data.DataColumn("BrownTingedUrine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrownTingedUrine);
                this.columnExtremeFatigue = new global::System.Data.DataColumn("ExtremeFatigue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtremeFatigue);
                this.columnJaundice = new global::System.Data.DataColumn("Jaundice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJaundice);
                this.columnNoSymptoms = new global::System.Data.DataColumn("NoSymptoms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoSymptoms);
                this.columnMissedLastTwoPeriods = new global::System.Data.DataColumn("MissedLastTwoPeriods", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMissedLastTwoPeriods);
                this.columnWomanMissedLast2Periods = new global::System.Data.DataColumn("WomanMissedLast2Periods", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWomanMissedLast2Periods);
                this.columnEverBeenToldYouHaveTB = new global::System.Data.DataColumn("EverBeenToldYouHaveTB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenToldYouHaveTB);
                this.columnEverBeenHadPositiveSkinTestTB = new global::System.Data.DataColumn("EverBeenHadPositiveSkinTestTB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenHadPositiveSkinTestTB);
                this.columnEverBeenTreatedForTB = new global::System.Data.DataColumn("EverBeenTreatedForTB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenTreatedForTB);
                this.columnEverBeenToldYouHaveHepatitisA = new global::System.Data.DataColumn("EverBeenToldYouHaveHepatitisA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenToldYouHaveHepatitisA);
                this.columnEverBeenToldYouHaveHepatitisB = new global::System.Data.DataColumn("EverBeenToldYouHaveHepatitisB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenToldYouHaveHepatitisB);
                this.columnEverBeenToldYouHaveHepatitisC = new global::System.Data.DataColumn("EverBeenToldYouHaveHepatitisC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenToldYouHaveHepatitisC);
                this.columnEverUsedNeedlesToShootDrugs = new global::System.Data.DataColumn("EverUsedNeedlesToShootDrugs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverUsedNeedlesToShootDrugs);
                this.columnEverSharedNeedlesSyringesToInjectDrugs = new global::System.Data.DataColumn("EverSharedNeedlesSyringesToInjectDrugs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverSharedNeedlesSyringesToInjectDrugs);
                this.columnEverHadNeedleStickInjuriesOrBloodContact = new global::System.Data.DataColumn("EverHadNeedleStickInjuriesOrBloodContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverHadNeedleStickInjuriesOrBloodContact);
                this.columnUseStimulants = new global::System.Data.DataColumn("UseStimulants", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseStimulants);
                this.columnPastTwelveMonthsHadSexWithAnyWithHepatitis = new global::System.Data.DataColumn("PastTwelveMonthsHadSexWithAnyWithHepatitis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPastTwelveMonthsHadSexWithAnyWithHepatitis);
                this.columnReceiveBloodTransfusionBefore1992 = new global::System.Data.DataColumn("ReceiveBloodTransfusionBefore1992", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveBloodTransfusionBefore1992);
                this.columnReceivedBloodProductsBefore1987 = new global::System.Data.DataColumn("ReceivedBloodProductsBefore1987", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedBloodProductsBefore1987);
                this.columnBirthMotherInfectedWithHepatitisC = new global::System.Data.DataColumn("BirthMotherInfectedWithHepatitisC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthMotherInfectedWithHepatitisC);
                this.columnEverBeenLongTermKidneyDialysis = new global::System.Data.DataColumn("EverBeenLongTermKidneyDialysis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenLongTermKidneyDialysis);
                this.columnUnprotectedSexWithHemophiliaPatient = new global::System.Data.DataColumn("UnprotectedSexWithHemophiliaPatient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnprotectedSexWithHemophiliaPatient);
                this.columnUnprotectedSexWithManWithOtherMen = new global::System.Data.DataColumn("UnprotectedSexWithManWithOtherMen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnprotectedSexWithManWithOtherMen);
                this.columnHadSexExchangeMoneyOrDrugs = new global::System.Data.DataColumn("HadSexExchangeMoneyOrDrugs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHadSexExchangeMoneyOrDrugs);
                this.columnHadSexMoreThanOnePersonPastSixMonths = new global::System.Data.DataColumn("HadSexMoreThanOnePersonPastSixMonths", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHadSexMoreThanOnePersonPastSixMonths);
                this.columnHadSexWithAIDSPersonOrHepatitisC = new global::System.Data.DataColumn("HadSexWithAIDSPersonOrHepatitisC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHadSexWithAIDSPersonOrHepatitisC);
                this.columnEverInjectedDrugsEvenOnce = new global::System.Data.DataColumn("EverInjectedDrugsEvenOnce", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverInjectedDrugsEvenOnce);
                this.columnEvenBeenPrickedByNeedle = new global::System.Data.DataColumn("EvenBeenPrickedByNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvenBeenPrickedByNeedle);
                this.columnEverHadDrinkingProblemCounselling = new global::System.Data.DataColumn("EverHadDrinkingProblemCounselling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverHadDrinkingProblemCounselling);
                this.columnEverBeenToldDrinkingProblem = new global::System.Data.DataColumn("EverBeenToldDrinkingProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenToldDrinkingProblem);
                this.columnEverHadBloodTestForHIVAntibody = new global::System.Data.DataColumn("EverHadBloodTestForHIVAntibody", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverHadBloodTestForHIVAntibody);
                this.columnBeenTestedWithinLastSixMonthsHIV = new global::System.Data.DataColumn("BeenTestedWithinLastSixMonthsHIV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeenTestedWithinLastSixMonthsHIV);
                this.columnWouldYouLikeBloodTestHIV = new global::System.Data.DataColumn("WouldYouLikeBloodTestHIV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWouldYouLikeBloodTestHIV);
                this.columnEverHadBloodTestForHepatitisC = new global::System.Data.DataColumn("EverHadBloodTestForHepatitisC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverHadBloodTestForHepatitisC);
                this.columnBeenTestedWithinLastSixMonthsHepatitisC = new global::System.Data.DataColumn("BeenTestedWithinLastSixMonthsHepatitisC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeenTestedWithinLastSixMonthsHepatitisC);
                this.columnWouldYouLikeBloodTestHepatitisC = new global::System.Data.DataColumn("WouldYouLikeBloodTestHepatitisC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWouldYouLikeBloodTestHepatitisC);
                this.columnJudgeOwnRiskInfectedWithHIV = new global::System.Data.DataColumn("JudgeOwnRiskInfectedWithHIV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJudgeOwnRiskInfectedWithHIV);
                this.columnJudgeOwnRiskInfectedWithHepatitisC = new global::System.Data.DataColumn("JudgeOwnRiskInfectedWithHepatitisC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJudgeOwnRiskInfectedWithHepatitisC);
                this.columnClientAssessed = new global::System.Data.DataColumn("ClientAssessed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientAssessed);
                this.columnClientReferredHealthOrAgency = new global::System.Data.DataColumn("ClientReferredHealthOrAgency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientReferredHealthOrAgency);
                this.columnClientReferredWhere = new global::System.Data.DataColumn("ClientReferredWhere", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientReferredWhere);
                this.columnEverBeenCareFacility = new global::System.Data.DataColumn("EverBeenCareFacility", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverBeenCareFacility);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentInfectiousDiseaseRiskAssessmentsRow NewCustomDocumentInfectiousDiseaseRiskAssessmentsRow() {
                return ((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentInfectiousDiseaseRiskAssessmentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentInfectiousDiseaseRiskAssessmentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowChanged != null)) {
                    this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowChanged(this, new CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEvent(((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowChanging != null)) {
                    this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowChanging(this, new CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEvent(((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowDeleted != null)) {
                    this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowDeleted(this, new CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEvent(((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowDeleting != null)) {
                    this.CustomDocumentInfectiousDiseaseRiskAssessmentsRowDeleting(this, new CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEvent(((CustomDocumentInfectiousDiseaseRiskAssessmentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentInfectiousDiseaseRiskAssessmentsRow(CustomDocumentInfectiousDiseaseRiskAssessmentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatasetSUAdmissions ds = new DatasetSUAdmissions();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentSUAdmissionsRow : global::System.Data.DataRow {
            
            private CustomDocumentSUAdmissionsDataTable tableCustomDocumentSUAdmissions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentSUAdmissionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentSUAdmissions = ((CustomDocumentSUAdmissionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentSUAdmissions.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentSUAdmissions.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentSUAdmissions.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentSUAdmissions.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentSUAdmissions.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentSUAdmissions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentSUAdmissions.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentSUAdmissions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProgramId {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.ProgramIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramId\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.ProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AdmissionEntryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentSUAdmissions.AdmissionEntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionEntryDate\' in table \'CustomDocumentSUAdmissions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AdmissionEntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AssessmentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentSUAdmissions.AssessmentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessmentDate\' in table \'CustomDocumentSUAdmissions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AssessmentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdmissionType {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.AdmissionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionType\' in table \'CustomDocumentSUAdmissions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AdmissionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdmissionProgramType {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.AdmissionProgramTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionProgramType\' in table \'CustomDocumentSUAdmissions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AdmissionProgramTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReferralSource {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.ReferralSourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralSource\' in table \'CustomDocumentSUAdmissions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.ReferralSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SourceOfPayment {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.SourceOfPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceOfPayment\' in table \'CustomDocumentSUAdmissions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.SourceOfPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PregnantAdmission {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.PregnantAdmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PregnantAdmission\' in table \'CustomDocumentSUAdmissions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.PregnantAdmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriorEpisode {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.PriorEpisodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorEpisode\' in table \'CustomDocumentSUAdmissions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.PriorEpisodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SocialSupports {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.SocialSupportsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SocialSupports\' in table \'CustomDocumentSUAdmissions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.SocialSupportsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VeteransStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.VeteransStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VeteransStatus\' in table \'CustomDocumentSUAdmissions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.VeteransStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdmittedPopulation {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.AdmittedPopulationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmittedPopulation\' in table \'CustomDocumentSUAdmissions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AdmittedPopulationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdmittedASAM {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.AdmittedASAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmittedASAM\' in table \'CustomDocumentSUAdmissions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AdmittedASAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReferredASAM {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.ReferredASAMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferredASAM\' in table \'CustomDocumentSUAdmissions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.ReferredASAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StateCode {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.StateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateCode\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.StateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfArrests {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.NumberOfArrestsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfArrests\' in table \'CustomDocumentSUAdmissions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.NumberOfArrestsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrugCourtParticipation {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.DrugCourtParticipationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugCourtParticipation\' in table \'CustomDocumentSUAdmission" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.DrugCourtParticipationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentlyOnProbation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.CurrentlyOnProbationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentlyOnProbation\' in table \'CustomDocumentSUAdmissions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.CurrentlyOnProbationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jurisdiction {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.JurisdictionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jurisdiction\' in table \'CustomDocumentSUAdmissions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.JurisdictionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrentlyOnParole {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.CurrentlyOnParoleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentlyOnParole\' in table \'CustomDocumentSUAdmissions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.CurrentlyOnParoleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LivingArrangement {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.LivingArrangementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LivingArrangement\' in table \'CustomDocumentSUAdmissions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.LivingArrangementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Household {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.HouseholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Household\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.HouseholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Children {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.ChildrenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Children\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.ChildrenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HouseholdIncome {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomDocumentSUAdmissions.HouseholdIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HouseholdIncome\' in table \'CustomDocumentSUAdmissions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.HouseholdIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritalStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'CustomDocumentSUAdmissions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmploymentStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.EmploymentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmploymentStatus\' in table \'CustomDocumentSUAdmissions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.EmploymentStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrimarySourceOfIncome {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.PrimarySourceOfIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimarySourceOfIncome\' in table \'CustomDocumentSUAdmissions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.PrimarySourceOfIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnrolledEducation {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.EnrolledEducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnrolledEducation\' in table \'CustomDocumentSUAdmissions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.EnrolledEducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Gender {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Race {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.RaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Race\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.RaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ethnicity {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.EthnicityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethnicity\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.EthnicityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CoDependent {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.CoDependentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoDependent\' in table \'CustomDocumentSUAdmissions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.CoDependentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TobaccoUse {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.TobaccoUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TobaccoUse\' in table \'CustomDocumentSUAdmissions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.TobaccoUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstTobaccoText {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstTobaccoText\' in table \'CustomDocumentSUAdmissions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstTobacco {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstTobacco\' in table \'CustomDocumentSUAdmissions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PreferredUsage1 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.PreferredUsage1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreferredUsage1\' in table \'CustomDocumentSUAdmissions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.PreferredUsage1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrugName1 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.DrugName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugName1\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.DrugName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Frequency1 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Frequency1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Frequency1\' in table \'CustomDocumentSUAdmissions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Frequency1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Route1 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Route1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Route1\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Route1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstUseText1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstUseText1\' in table \'CustomDocumentSUAdmissions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstUse1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstUse1\' in table \'CustomDocumentSUAdmissions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PreferredUsage2 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.PreferredUsage2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreferredUsage2\' in table \'CustomDocumentSUAdmissions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.PreferredUsage2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrugName2 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.DrugName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugName2\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.DrugName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Frequency2 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Frequency2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Frequency2\' in table \'CustomDocumentSUAdmissions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Frequency2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Route2 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Route2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Route2\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Route2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstUseText2 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstUseText2\' in table \'CustomDocumentSUAdmissions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstUse2 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstUse2\' in table \'CustomDocumentSUAdmissions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PreferredUsage3 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.PreferredUsage3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreferredUsage3\' in table \'CustomDocumentSUAdmissions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.PreferredUsage3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DrugName3 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.DrugName3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugName3\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.DrugName3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Frequency3 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Frequency3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Frequency3\' in table \'CustomDocumentSUAdmissions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Frequency3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Route3 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Route3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Route3\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Route3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstUseText3 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstUseText3\' in table \'CustomDocumentSUAdmissions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstUse3 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstUse3\' in table \'CustomDocumentSUAdmissions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SSN {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.SSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SSN\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TitleXXNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.TitleXXNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TitleXXNo\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.TitleXXNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SamhisId {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.SamhisIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SamhisId\' in table \'CustomDocumentSUAdmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.SamhisIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumberOfArrestsLast12Months {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.NumberOfArrestsLast12MonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfArrestsLast12Months\' in table \'CustomDocumentSUAdmi" +
                                "ssions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.NumberOfArrestsLast12MonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EducationCompleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.EducationCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EducationCompleted\' in table \'CustomDocumentSUAdmissions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.EducationCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CoOccurringMentalHealth {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.CoOccurringMentalHealthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoOccurringMentalHealth\' in table \'CustomDocumentSUAdmissio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.CoOccurringMentalHealthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PharmocotherapyPlanned {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.PharmocotherapyPlannedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PharmocotherapyPlanned\' in table \'CustomDocumentSUAdmission" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.PharmocotherapyPlannedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Severity1 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Severity1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Severity1\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Severity1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Severity2 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Severity2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Severity2\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Severity2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Severity3 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSUAdmissions.Severity3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Severity3\' in table \'CustomDocumentSUAdmissions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.Severity3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GenderOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSUAdmissions.GenderOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenderOther\' in table \'CustomDocumentSUAdmissions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSUAdmissions.GenderOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentSUAdmissions.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentSUAdmissions.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentSUAdmissions.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramIdNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.ProgramIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramIdNull() {
                this[this.tableCustomDocumentSUAdmissions.ProgramIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmissionEntryDateNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AdmissionEntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmissionEntryDateNull() {
                this[this.tableCustomDocumentSUAdmissions.AdmissionEntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessmentDateNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AssessmentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessmentDateNull() {
                this[this.tableCustomDocumentSUAdmissions.AssessmentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmissionTypeNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AdmissionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmissionTypeNull() {
                this[this.tableCustomDocumentSUAdmissions.AdmissionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmissionProgramTypeNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AdmissionProgramTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmissionProgramTypeNull() {
                this[this.tableCustomDocumentSUAdmissions.AdmissionProgramTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralSourceNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.ReferralSourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralSourceNull() {
                this[this.tableCustomDocumentSUAdmissions.ReferralSourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceOfPaymentNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.SourceOfPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceOfPaymentNull() {
                this[this.tableCustomDocumentSUAdmissions.SourceOfPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPregnantAdmissionNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.PregnantAdmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPregnantAdmissionNull() {
                this[this.tableCustomDocumentSUAdmissions.PregnantAdmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorEpisodeNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.PriorEpisodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorEpisodeNull() {
                this[this.tableCustomDocumentSUAdmissions.PriorEpisodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocialSupportsNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.SocialSupportsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocialSupportsNull() {
                this[this.tableCustomDocumentSUAdmissions.SocialSupportsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVeteransStatusNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.VeteransStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVeteransStatusNull() {
                this[this.tableCustomDocumentSUAdmissions.VeteransStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmittedPopulationNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AdmittedPopulationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmittedPopulationNull() {
                this[this.tableCustomDocumentSUAdmissions.AdmittedPopulationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmittedASAMNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AdmittedASAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmittedASAMNull() {
                this[this.tableCustomDocumentSUAdmissions.AdmittedASAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferredASAMNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.ReferredASAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferredASAMNull() {
                this[this.tableCustomDocumentSUAdmissions.ReferredASAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateCodeNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.StateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateCodeNull() {
                this[this.tableCustomDocumentSUAdmissions.StateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfArrestsNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.NumberOfArrestsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfArrestsNull() {
                this[this.tableCustomDocumentSUAdmissions.NumberOfArrestsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugCourtParticipationNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.DrugCourtParticipationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugCourtParticipationNull() {
                this[this.tableCustomDocumentSUAdmissions.DrugCourtParticipationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentlyOnProbationNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.CurrentlyOnProbationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentlyOnProbationNull() {
                this[this.tableCustomDocumentSUAdmissions.CurrentlyOnProbationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJurisdictionNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.JurisdictionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJurisdictionNull() {
                this[this.tableCustomDocumentSUAdmissions.JurisdictionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentlyOnParoleNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.CurrentlyOnParoleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentlyOnParoleNull() {
                this[this.tableCustomDocumentSUAdmissions.CurrentlyOnParoleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLivingArrangementNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.LivingArrangementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLivingArrangementNull() {
                this[this.tableCustomDocumentSUAdmissions.LivingArrangementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouseholdNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.HouseholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouseholdNull() {
                this[this.tableCustomDocumentSUAdmissions.HouseholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChildrenNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.ChildrenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChildrenNull() {
                this[this.tableCustomDocumentSUAdmissions.ChildrenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHouseholdIncomeNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.HouseholdIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHouseholdIncomeNull() {
                this[this.tableCustomDocumentSUAdmissions.HouseholdIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableCustomDocumentSUAdmissions.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmploymentStatusNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.EmploymentStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmploymentStatusNull() {
                this[this.tableCustomDocumentSUAdmissions.EmploymentStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimarySourceOfIncomeNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.PrimarySourceOfIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimarySourceOfIncomeNull() {
                this[this.tableCustomDocumentSUAdmissions.PrimarySourceOfIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnrolledEducationNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.EnrolledEducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnrolledEducationNull() {
                this[this.tableCustomDocumentSUAdmissions.EnrolledEducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderNull() {
                this[this.tableCustomDocumentSUAdmissions.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRaceNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.RaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRaceNull() {
                this[this.tableCustomDocumentSUAdmissions.RaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEthnicityNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.EthnicityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEthnicityNull() {
                this[this.tableCustomDocumentSUAdmissions.EthnicityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoDependentNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.CoDependentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoDependentNull() {
                this[this.tableCustomDocumentSUAdmissions.CoDependentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTobaccoUseNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.TobaccoUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTobaccoUseNull() {
                this[this.tableCustomDocumentSUAdmissions.TobaccoUseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstTobaccoTextNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstTobaccoTextNull() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstTobaccoNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstTobaccoNull() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstTobaccoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreferredUsage1Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.PreferredUsage1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreferredUsage1Null() {
                this[this.tableCustomDocumentSUAdmissions.PreferredUsage1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugName1Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.DrugName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugName1Null() {
                this[this.tableCustomDocumentSUAdmissions.DrugName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrequency1Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Frequency1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrequency1Null() {
                this[this.tableCustomDocumentSUAdmissions.Frequency1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoute1Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Route1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoute1Null() {
                this[this.tableCustomDocumentSUAdmissions.Route1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstUseText1Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstUseText1Null() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstUse1Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstUse1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstUse1Null() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreferredUsage2Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.PreferredUsage2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreferredUsage2Null() {
                this[this.tableCustomDocumentSUAdmissions.PreferredUsage2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugName2Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.DrugName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugName2Null() {
                this[this.tableCustomDocumentSUAdmissions.DrugName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrequency2Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Frequency2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrequency2Null() {
                this[this.tableCustomDocumentSUAdmissions.Frequency2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoute2Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Route2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoute2Null() {
                this[this.tableCustomDocumentSUAdmissions.Route2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstUseText2Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstUseText2Null() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstUse2Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstUse2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstUse2Null() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreferredUsage3Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.PreferredUsage3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreferredUsage3Null() {
                this[this.tableCustomDocumentSUAdmissions.PreferredUsage3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrugName3Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.DrugName3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrugName3Null() {
                this[this.tableCustomDocumentSUAdmissions.DrugName3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrequency3Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Frequency3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrequency3Null() {
                this[this.tableCustomDocumentSUAdmissions.Frequency3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoute3Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Route3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoute3Null() {
                this[this.tableCustomDocumentSUAdmissions.Route3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstUseText3Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstUseText3Null() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUseText3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstUse3Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.AgeOfFirstUse3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstUse3Null() {
                this[this.tableCustomDocumentSUAdmissions.AgeOfFirstUse3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSNNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.SSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSNNull() {
                this[this.tableCustomDocumentSUAdmissions.SSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleXXNoNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.TitleXXNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleXXNoNull() {
                this[this.tableCustomDocumentSUAdmissions.TitleXXNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSamhisIdNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.SamhisIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSamhisIdNull() {
                this[this.tableCustomDocumentSUAdmissions.SamhisIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfArrestsLast12MonthsNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.NumberOfArrestsLast12MonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfArrestsLast12MonthsNull() {
                this[this.tableCustomDocumentSUAdmissions.NumberOfArrestsLast12MonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEducationCompletedNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.EducationCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEducationCompletedNull() {
                this[this.tableCustomDocumentSUAdmissions.EducationCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoOccurringMentalHealthNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.CoOccurringMentalHealthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoOccurringMentalHealthNull() {
                this[this.tableCustomDocumentSUAdmissions.CoOccurringMentalHealthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPharmocotherapyPlannedNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.PharmocotherapyPlannedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPharmocotherapyPlannedNull() {
                this[this.tableCustomDocumentSUAdmissions.PharmocotherapyPlannedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeverity1Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Severity1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeverity1Null() {
                this[this.tableCustomDocumentSUAdmissions.Severity1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeverity2Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Severity2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeverity2Null() {
                this[this.tableCustomDocumentSUAdmissions.Severity2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeverity3Null() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.Severity3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeverity3Null() {
                this[this.tableCustomDocumentSUAdmissions.Severity3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenderOtherNull() {
                return this.IsNull(this.tableCustomDocumentSUAdmissions.GenderOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenderOtherNull() {
                this[this.tableCustomDocumentSUAdmissions.GenderOtherColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentInfectiousDiseaseRiskAssessmentsRow : global::System.Data.DataRow {
            
            private CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable tableCustomDocumentInfectiousDiseaseRiskAssessments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentInfectiousDiseaseRiskAssessmentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentInfectiousDiseaseRiskAssessments = ((CustomDocumentInfectiousDiseaseRiskAssessmentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentInfectiousDiseaseRis" +
                                "kAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentInfectiousDiseaseRiskAss" +
                                "essments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentInfectiousDiseaseRiskA" +
                                "ssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnyHealthCareProvider {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.AnyHealthCareProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnyHealthCareProvider\' in table \'CustomDocumentInfectiousDi" +
                                "seaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.AnyHealthCareProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LivedStreetOrShelter {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LivedStreetOrShelterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LivedStreetOrShelter\' in table \'CustomDocumentInfectiousDis" +
                                "easeRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LivedStreetOrShelterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenJailPrisonJuvenile {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenJailPrisonJuvenileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenJailPrisonJuvenile\' in table \'CustomDocumentInfecti" +
                                "ousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenJailPrisonJuvenileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhereBorn {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WhereBornColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WhereBorn\' in table \'CustomDocumentInfectiousDiseaseRiskAss" +
                                "essments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WhereBornColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TraveledOrLivedOutsideUS {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.TraveledOrLivedOutsideUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TraveledOrLivedOutsideUS\' in table \'CustomDocumentInfectiou" +
                                "sDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.TraveledOrLivedOutsideUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HowLongBeenInUS {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HowLongBeenInUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HowLongBeenInUS\' in table \'CustomDocumentInfectiousDiseaseR" +
                                "iskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HowLongBeenInUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CombatVeteran {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CombatVeteranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CombatVeteran\' in table \'CustomDocumentInfectiousDiseaseRis" +
                                "kAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CombatVeteranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HadTatooEarPiercingAcupunture {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadTatooEarPiercingAcupuntureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HadTatooEarPiercingAcupunture\' in table \'CustomDocumentInfe" +
                                "ctiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadTatooEarPiercingAcupuntureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nausea {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NauseaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nausea\' in table \'CustomDocumentInfectiousDiseaseRiskAssess" +
                                "ments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NauseaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fever {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.FeverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fever\' in table \'CustomDocumentInfectiousDiseaseRiskAssessm" +
                                "ents\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.FeverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DrenchingNightSweats {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DrenchingNightSweatsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrenchingNightSweats\' in table \'CustomDocumentInfectiousDis" +
                                "easeRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DrenchingNightSweatsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductiveCough {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ProductiveCoughColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductiveCough\' in table \'CustomDocumentInfectiousDiseaseR" +
                                "iskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ProductiveCoughColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CoughingUpBlood {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CoughingUpBloodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoughingUpBlood\' in table \'CustomDocumentInfectiousDiseaseR" +
                                "iskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CoughingUpBloodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShortnessOfBreath {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ShortnessOfBreathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortnessOfBreath\' in table \'CustomDocumentInfectiousDiseas" +
                                "eRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ShortnessOfBreathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LumpsSwollenGlands {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LumpsSwollenGlandsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LumpsSwollenGlands\' in table \'CustomDocumentInfectiousDisea" +
                                "seRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LumpsSwollenGlandsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiarrheaLastingMoreThanWeek {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DiarrheaLastingMoreThanWeekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiarrheaLastingMoreThanWeek\' in table \'CustomDocumentInfect" +
                                "iousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DiarrheaLastingMoreThanWeekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LosingWeightWithoutMeaning {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LosingWeightWithoutMeaningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LosingWeightWithoutMeaning\' in table \'CustomDocumentInfecti" +
                                "ousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LosingWeightWithoutMeaningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrownTingedUrine {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BrownTingedUrineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrownTingedUrine\' in table \'CustomDocumentInfectiousDisease" +
                                "RiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BrownTingedUrineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtremeFatigue {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ExtremeFatigueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtremeFatigue\' in table \'CustomDocumentInfectiousDiseaseRi" +
                                "skAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ExtremeFatigueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jaundice {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JaundiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jaundice\' in table \'CustomDocumentInfectiousDiseaseRiskAsse" +
                                "ssments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JaundiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoSymptoms {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NoSymptomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoSymptoms\' in table \'CustomDocumentInfectiousDiseaseRiskAs" +
                                "sessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NoSymptomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MissedLastTwoPeriods {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.MissedLastTwoPeriodsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MissedLastTwoPeriods\' in table \'CustomDocumentInfectiousDis" +
                                "easeRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.MissedLastTwoPeriodsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WomanMissedLast2Periods {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WomanMissedLast2PeriodsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WomanMissedLast2Periods\' in table \'CustomDocumentInfectious" +
                                "DiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WomanMissedLast2PeriodsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenToldYouHaveTB {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveTBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenToldYouHaveTB\' in table \'CustomDocumentInfectiousDi" +
                                "seaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenHadPositiveSkinTestTB {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenHadPositiveSkinTestTBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenHadPositiveSkinTestTB\' in table \'CustomDocumentInfe" +
                                "ctiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenHadPositiveSkinTestTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenTreatedForTB {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenTreatedForTBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenTreatedForTB\' in table \'CustomDocumentInfectiousDis" +
                                "easeRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenTreatedForTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenToldYouHaveHepatitisA {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenToldYouHaveHepatitisA\' in table \'CustomDocumentInfe" +
                                "ctiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenToldYouHaveHepatitisB {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenToldYouHaveHepatitisB\' in table \'CustomDocumentInfe" +
                                "ctiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenToldYouHaveHepatitisC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenToldYouHaveHepatitisC\' in table \'CustomDocumentInfe" +
                                "ctiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverUsedNeedlesToShootDrugs {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverUsedNeedlesToShootDrugsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverUsedNeedlesToShootDrugs\' in table \'CustomDocumentInfect" +
                                "iousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverUsedNeedlesToShootDrugsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverSharedNeedlesSyringesToInjectDrugs {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverSharedNeedlesSyringesToInjectDrugsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverSharedNeedlesSyringesToInjectDrugs\' in table \'CustomDoc" +
                                "umentInfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverSharedNeedlesSyringesToInjectDrugsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverHadNeedleStickInjuriesOrBloodContact {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadNeedleStickInjuriesOrBloodContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverHadNeedleStickInjuriesOrBloodContact\' in table \'CustomD" +
                                "ocumentInfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadNeedleStickInjuriesOrBloodContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UseStimulants {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UseStimulantsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseStimulants\' in table \'CustomDocumentInfectiousDiseaseRis" +
                                "kAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UseStimulantsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PastTwelveMonthsHadSexWithAnyWithHepatitis {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.PastTwelveMonthsHadSexWithAnyWithHepatitisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PastTwelveMonthsHadSexWithAnyWithHepatitis\' in table \'Custo" +
                                "mDocumentInfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.PastTwelveMonthsHadSexWithAnyWithHepatitisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiveBloodTransfusionBefore1992 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceiveBloodTransfusionBefore1992Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiveBloodTransfusionBefore1992\' in table \'CustomDocument" +
                                "InfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceiveBloodTransfusionBefore1992Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedBloodProductsBefore1987 {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceivedBloodProductsBefore1987Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedBloodProductsBefore1987\' in table \'CustomDocumentIn" +
                                "fectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceivedBloodProductsBefore1987Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BirthMotherInfectedWithHepatitisC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BirthMotherInfectedWithHepatitisCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthMotherInfectedWithHepatitisC\' in table \'CustomDocument" +
                                "InfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BirthMotherInfectedWithHepatitisCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenLongTermKidneyDialysis {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenLongTermKidneyDialysisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenLongTermKidneyDialysis\' in table \'CustomDocumentInf" +
                                "ectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenLongTermKidneyDialysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnprotectedSexWithHemophiliaPatient {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithHemophiliaPatientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnprotectedSexWithHemophiliaPatient\' in table \'CustomDocume" +
                                "ntInfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithHemophiliaPatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnprotectedSexWithManWithOtherMen {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithManWithOtherMenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnprotectedSexWithManWithOtherMen\' in table \'CustomDocument" +
                                "InfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithManWithOtherMenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HadSexExchangeMoneyOrDrugs {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexExchangeMoneyOrDrugsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HadSexExchangeMoneyOrDrugs\' in table \'CustomDocumentInfecti" +
                                "ousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexExchangeMoneyOrDrugsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HadSexMoreThanOnePersonPastSixMonths {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexMoreThanOnePersonPastSixMonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HadSexMoreThanOnePersonPastSixMonths\' in table \'CustomDocum" +
                                "entInfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexMoreThanOnePersonPastSixMonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HadSexWithAIDSPersonOrHepatitisC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexWithAIDSPersonOrHepatitisCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HadSexWithAIDSPersonOrHepatitisC\' in table \'CustomDocumentI" +
                                "nfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexWithAIDSPersonOrHepatitisCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverInjectedDrugsEvenOnce {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverInjectedDrugsEvenOnceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverInjectedDrugsEvenOnce\' in table \'CustomDocumentInfectio" +
                                "usDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverInjectedDrugsEvenOnceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EvenBeenPrickedByNeedle {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EvenBeenPrickedByNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvenBeenPrickedByNeedle\' in table \'CustomDocumentInfectious" +
                                "DiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EvenBeenPrickedByNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverHadDrinkingProblemCounselling {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadDrinkingProblemCounsellingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverHadDrinkingProblemCounselling\' in table \'CustomDocument" +
                                "InfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadDrinkingProblemCounsellingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenToldDrinkingProblem {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldDrinkingProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenToldDrinkingProblem\' in table \'CustomDocumentInfect" +
                                "iousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldDrinkingProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverHadBloodTestForHIVAntibody {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHIVAntibodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverHadBloodTestForHIVAntibody\' in table \'CustomDocumentInf" +
                                "ectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHIVAntibodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BeenTestedWithinLastSixMonthsHIV {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeenTestedWithinLastSixMonthsHIV\' in table \'CustomDocumentI" +
                                "nfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WouldYouLikeBloodTestHIV {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WouldYouLikeBloodTestHIV\' in table \'CustomDocumentInfectiou" +
                                "sDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverHadBloodTestForHepatitisC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHepatitisCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverHadBloodTestForHepatitisC\' in table \'CustomDocumentInfe" +
                                "ctiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHepatitisCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BeenTestedWithinLastSixMonthsHepatitisC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHepatitisCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeenTestedWithinLastSixMonthsHepatitisC\' in table \'CustomDo" +
                                "cumentInfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHepatitisCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WouldYouLikeBloodTestHepatitisC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHepatitisCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WouldYouLikeBloodTestHepatitisC\' in table \'CustomDocumentIn" +
                                "fectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHepatitisCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JudgeOwnRiskInfectedWithHIV {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHIVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JudgeOwnRiskInfectedWithHIV\' in table \'CustomDocumentInfect" +
                                "iousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHIVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JudgeOwnRiskInfectedWithHepatitisC {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHepatitisCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JudgeOwnRiskInfectedWithHepatitisC\' in table \'CustomDocumen" +
                                "tInfectiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHepatitisCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientAssessed {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientAssessedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientAssessed\' in table \'CustomDocumentInfectiousDiseaseRi" +
                                "skAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientAssessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientReferredHealthOrAgency {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredHealthOrAgencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientReferredHealthOrAgency\' in table \'CustomDocumentInfec" +
                                "tiousDiseaseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredHealthOrAgencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientReferredWhere {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredWhereColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientReferredWhere\' in table \'CustomDocumentInfectiousDise" +
                                "aseRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredWhereColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EverBeenCareFacility {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenCareFacilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EverBeenCareFacility\' in table \'CustomDocumentInfectiousDis" +
                                "easeRiskAssessments\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenCareFacilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnyHealthCareProviderNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.AnyHealthCareProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnyHealthCareProviderNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.AnyHealthCareProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLivedStreetOrShelterNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LivedStreetOrShelterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLivedStreetOrShelterNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LivedStreetOrShelterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenJailPrisonJuvenileNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenJailPrisonJuvenileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenJailPrisonJuvenileNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenJailPrisonJuvenileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhereBornNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WhereBornColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhereBornNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WhereBornColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTraveledOrLivedOutsideUSNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.TraveledOrLivedOutsideUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTraveledOrLivedOutsideUSNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.TraveledOrLivedOutsideUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHowLongBeenInUSNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HowLongBeenInUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHowLongBeenInUSNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HowLongBeenInUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCombatVeteranNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CombatVeteranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCombatVeteranNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CombatVeteranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHadTatooEarPiercingAcupuntureNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadTatooEarPiercingAcupuntureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHadTatooEarPiercingAcupuntureNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadTatooEarPiercingAcupuntureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNauseaNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NauseaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNauseaNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NauseaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeverNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.FeverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeverNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.FeverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDrenchingNightSweatsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DrenchingNightSweatsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDrenchingNightSweatsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DrenchingNightSweatsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductiveCoughNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ProductiveCoughColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductiveCoughNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ProductiveCoughColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoughingUpBloodNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CoughingUpBloodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoughingUpBloodNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.CoughingUpBloodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShortnessOfBreathNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ShortnessOfBreathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShortnessOfBreathNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ShortnessOfBreathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLumpsSwollenGlandsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LumpsSwollenGlandsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLumpsSwollenGlandsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LumpsSwollenGlandsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiarrheaLastingMoreThanWeekNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DiarrheaLastingMoreThanWeekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiarrheaLastingMoreThanWeekNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.DiarrheaLastingMoreThanWeekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLosingWeightWithoutMeaningNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LosingWeightWithoutMeaningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLosingWeightWithoutMeaningNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.LosingWeightWithoutMeaningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrownTingedUrineNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BrownTingedUrineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrownTingedUrineNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BrownTingedUrineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtremeFatigueNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ExtremeFatigueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtremeFatigueNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ExtremeFatigueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJaundiceNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JaundiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJaundiceNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JaundiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoSymptomsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NoSymptomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoSymptomsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.NoSymptomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMissedLastTwoPeriodsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.MissedLastTwoPeriodsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMissedLastTwoPeriodsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.MissedLastTwoPeriodsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWomanMissedLast2PeriodsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WomanMissedLast2PeriodsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWomanMissedLast2PeriodsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WomanMissedLast2PeriodsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenToldYouHaveTBNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveTBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenToldYouHaveTBNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveTBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenHadPositiveSkinTestTBNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenHadPositiveSkinTestTBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenHadPositiveSkinTestTBNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenHadPositiveSkinTestTBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenTreatedForTBNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenTreatedForTBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenTreatedForTBNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenTreatedForTBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenToldYouHaveHepatitisANull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenToldYouHaveHepatitisANull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenToldYouHaveHepatitisBNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenToldYouHaveHepatitisBNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenToldYouHaveHepatitisCNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenToldYouHaveHepatitisCNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldYouHaveHepatitisCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverUsedNeedlesToShootDrugsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverUsedNeedlesToShootDrugsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverUsedNeedlesToShootDrugsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverUsedNeedlesToShootDrugsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverSharedNeedlesSyringesToInjectDrugsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverSharedNeedlesSyringesToInjectDrugsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverSharedNeedlesSyringesToInjectDrugsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverSharedNeedlesSyringesToInjectDrugsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverHadNeedleStickInjuriesOrBloodContactNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadNeedleStickInjuriesOrBloodContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverHadNeedleStickInjuriesOrBloodContactNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadNeedleStickInjuriesOrBloodContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseStimulantsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UseStimulantsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseStimulantsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UseStimulantsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPastTwelveMonthsHadSexWithAnyWithHepatitisNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.PastTwelveMonthsHadSexWithAnyWithHepatitisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPastTwelveMonthsHadSexWithAnyWithHepatitisNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.PastTwelveMonthsHadSexWithAnyWithHepatitisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveBloodTransfusionBefore1992Null() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceiveBloodTransfusionBefore1992Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveBloodTransfusionBefore1992Null() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceiveBloodTransfusionBefore1992Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedBloodProductsBefore1987Null() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceivedBloodProductsBefore1987Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedBloodProductsBefore1987Null() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ReceivedBloodProductsBefore1987Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthMotherInfectedWithHepatitisCNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BirthMotherInfectedWithHepatitisCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthMotherInfectedWithHepatitisCNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BirthMotherInfectedWithHepatitisCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenLongTermKidneyDialysisNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenLongTermKidneyDialysisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenLongTermKidneyDialysisNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenLongTermKidneyDialysisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnprotectedSexWithHemophiliaPatientNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithHemophiliaPatientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnprotectedSexWithHemophiliaPatientNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithHemophiliaPatientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnprotectedSexWithManWithOtherMenNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithManWithOtherMenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnprotectedSexWithManWithOtherMenNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.UnprotectedSexWithManWithOtherMenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHadSexExchangeMoneyOrDrugsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexExchangeMoneyOrDrugsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHadSexExchangeMoneyOrDrugsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexExchangeMoneyOrDrugsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHadSexMoreThanOnePersonPastSixMonthsNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexMoreThanOnePersonPastSixMonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHadSexMoreThanOnePersonPastSixMonthsNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexMoreThanOnePersonPastSixMonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHadSexWithAIDSPersonOrHepatitisCNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexWithAIDSPersonOrHepatitisCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHadSexWithAIDSPersonOrHepatitisCNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.HadSexWithAIDSPersonOrHepatitisCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverInjectedDrugsEvenOnceNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverInjectedDrugsEvenOnceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverInjectedDrugsEvenOnceNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverInjectedDrugsEvenOnceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEvenBeenPrickedByNeedleNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EvenBeenPrickedByNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEvenBeenPrickedByNeedleNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EvenBeenPrickedByNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverHadDrinkingProblemCounsellingNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadDrinkingProblemCounsellingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverHadDrinkingProblemCounsellingNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadDrinkingProblemCounsellingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenToldDrinkingProblemNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldDrinkingProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenToldDrinkingProblemNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenToldDrinkingProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverHadBloodTestForHIVAntibodyNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHIVAntibodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverHadBloodTestForHIVAntibodyNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHIVAntibodyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeenTestedWithinLastSixMonthsHIVNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeenTestedWithinLastSixMonthsHIVNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWouldYouLikeBloodTestHIVNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWouldYouLikeBloodTestHIVNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverHadBloodTestForHepatitisCNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHepatitisCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverHadBloodTestForHepatitisCNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverHadBloodTestForHepatitisCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBeenTestedWithinLastSixMonthsHepatitisCNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHepatitisCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBeenTestedWithinLastSixMonthsHepatitisCNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.BeenTestedWithinLastSixMonthsHepatitisCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWouldYouLikeBloodTestHepatitisCNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHepatitisCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWouldYouLikeBloodTestHepatitisCNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.WouldYouLikeBloodTestHepatitisCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJudgeOwnRiskInfectedWithHIVNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHIVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJudgeOwnRiskInfectedWithHIVNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHIVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJudgeOwnRiskInfectedWithHepatitisCNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHepatitisCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJudgeOwnRiskInfectedWithHepatitisCNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.JudgeOwnRiskInfectedWithHepatitisCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientAssessedNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientAssessedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientAssessedNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientAssessedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientReferredHealthOrAgencyNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredHealthOrAgencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientReferredHealthOrAgencyNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredHealthOrAgencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientReferredWhereNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredWhereColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientReferredWhereNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.ClientReferredWhereColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEverBeenCareFacilityNull() {
                return this.IsNull(this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenCareFacilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEverBeenCareFacilityNull() {
                this[this.tableCustomDocumentInfectiousDiseaseRiskAssessments.EverBeenCareFacilityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentSUAdmissionsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentSUAdmissionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSUAdmissionsRowChangeEvent(CustomDocumentSUAdmissionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSUAdmissionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentInfectiousDiseaseRiskAssessmentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentInfectiousDiseaseRiskAssessmentsRowChangeEvent(CustomDocumentInfectiousDiseaseRiskAssessmentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentInfectiousDiseaseRiskAssessmentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591