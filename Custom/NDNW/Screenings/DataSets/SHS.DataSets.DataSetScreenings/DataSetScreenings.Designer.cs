//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetScreenings {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetScreenings")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetScreenings : global::System.Data.DataSet {
        
        private CustomDocumentSubstanceAbuseScreeningsDataTable tableCustomDocumentSubstanceAbuseScreenings;
        
        private CustomDocumentMentalHealthScreeningsDataTable tableCustomDocumentMentalHealthScreenings;
        
        private CustomDocumentTraumaticBrainInjuryScreeningsDataTable tableCustomDocumentTraumaticBrainInjuryScreenings;
        
        private CustomDocumentOutComesScreeningsDataTable tableCustomDocumentOutComesScreenings;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetScreenings() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetScreenings(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentSubstanceAbuseScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentSubstanceAbuseScreeningsDataTable(ds.Tables["CustomDocumentSubstanceAbuseScreenings"]));
                }
                if ((ds.Tables["CustomDocumentMentalHealthScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentMentalHealthScreeningsDataTable(ds.Tables["CustomDocumentMentalHealthScreenings"]));
                }
                if ((ds.Tables["CustomDocumentTraumaticBrainInjuryScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentTraumaticBrainInjuryScreeningsDataTable(ds.Tables["CustomDocumentTraumaticBrainInjuryScreenings"]));
                }
                if ((ds.Tables["CustomDocumentOutComesScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentOutComesScreeningsDataTable(ds.Tables["CustomDocumentOutComesScreenings"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentSubstanceAbuseScreeningsDataTable CustomDocumentSubstanceAbuseScreenings {
            get {
                return this.tableCustomDocumentSubstanceAbuseScreenings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentMentalHealthScreeningsDataTable CustomDocumentMentalHealthScreenings {
            get {
                return this.tableCustomDocumentMentalHealthScreenings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentTraumaticBrainInjuryScreeningsDataTable CustomDocumentTraumaticBrainInjuryScreenings {
            get {
                return this.tableCustomDocumentTraumaticBrainInjuryScreenings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentOutComesScreeningsDataTable CustomDocumentOutComesScreenings {
            get {
                return this.tableCustomDocumentOutComesScreenings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetScreenings cln = ((DataSetScreenings)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentSubstanceAbuseScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentSubstanceAbuseScreeningsDataTable(ds.Tables["CustomDocumentSubstanceAbuseScreenings"]));
                }
                if ((ds.Tables["CustomDocumentMentalHealthScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentMentalHealthScreeningsDataTable(ds.Tables["CustomDocumentMentalHealthScreenings"]));
                }
                if ((ds.Tables["CustomDocumentTraumaticBrainInjuryScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentTraumaticBrainInjuryScreeningsDataTable(ds.Tables["CustomDocumentTraumaticBrainInjuryScreenings"]));
                }
                if ((ds.Tables["CustomDocumentOutComesScreenings"] != null)) {
                    base.Tables.Add(new CustomDocumentOutComesScreeningsDataTable(ds.Tables["CustomDocumentOutComesScreenings"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentSubstanceAbuseScreenings = ((CustomDocumentSubstanceAbuseScreeningsDataTable)(base.Tables["CustomDocumentSubstanceAbuseScreenings"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentSubstanceAbuseScreenings != null)) {
                    this.tableCustomDocumentSubstanceAbuseScreenings.InitVars();
                }
            }
            this.tableCustomDocumentMentalHealthScreenings = ((CustomDocumentMentalHealthScreeningsDataTable)(base.Tables["CustomDocumentMentalHealthScreenings"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentMentalHealthScreenings != null)) {
                    this.tableCustomDocumentMentalHealthScreenings.InitVars();
                }
            }
            this.tableCustomDocumentTraumaticBrainInjuryScreenings = ((CustomDocumentTraumaticBrainInjuryScreeningsDataTable)(base.Tables["CustomDocumentTraumaticBrainInjuryScreenings"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentTraumaticBrainInjuryScreenings != null)) {
                    this.tableCustomDocumentTraumaticBrainInjuryScreenings.InitVars();
                }
            }
            this.tableCustomDocumentOutComesScreenings = ((CustomDocumentOutComesScreeningsDataTable)(base.Tables["CustomDocumentOutComesScreenings"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentOutComesScreenings != null)) {
                    this.tableCustomDocumentOutComesScreenings.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetScreenings";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetScreenings.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentSubstanceAbuseScreenings = new CustomDocumentSubstanceAbuseScreeningsDataTable();
            base.Tables.Add(this.tableCustomDocumentSubstanceAbuseScreenings);
            this.tableCustomDocumentMentalHealthScreenings = new CustomDocumentMentalHealthScreeningsDataTable();
            base.Tables.Add(this.tableCustomDocumentMentalHealthScreenings);
            this.tableCustomDocumentTraumaticBrainInjuryScreenings = new CustomDocumentTraumaticBrainInjuryScreeningsDataTable();
            base.Tables.Add(this.tableCustomDocumentTraumaticBrainInjuryScreenings);
            this.tableCustomDocumentOutComesScreenings = new CustomDocumentOutComesScreeningsDataTable();
            base.Tables.Add(this.tableCustomDocumentOutComesScreenings);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentSubstanceAbuseScreenings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentMentalHealthScreenings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentTraumaticBrainInjuryScreenings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentOutComesScreenings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetScreenings ds = new DataSetScreenings();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentSubstanceAbuseScreeningsRowChangeEventHandler(object sender, CustomDocumentSubstanceAbuseScreeningsRowChangeEvent e);
        
        public delegate void CustomDocumentMentalHealthScreeningsRowChangeEventHandler(object sender, CustomDocumentMentalHealthScreeningsRowChangeEvent e);
        
        public delegate void CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEventHandler(object sender, CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEvent e);
        
        public delegate void CustomDocumentOutComesScreeningsRowChangeEventHandler(object sender, CustomDocumentOutComesScreeningsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentSubstanceAbuseScreeningsDataTable : global::System.Data.TypedTableBase<CustomDocumentSubstanceAbuseScreeningsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnInhalants;
            
            private global::System.Data.DataColumn columnMissedSchool;
            
            private global::System.Data.DataColumn columnPastYearDrunk;
            
            private global::System.Data.DataColumn columnRiskyWhenHigh;
            
            private global::System.Data.DataColumn columnProblemWithDrinking;
            
            private global::System.Data.DataColumn columnThingsWithoutThinking;
            
            private global::System.Data.DataColumn columnMissFamilyActivities;
            
            private global::System.Data.DataColumn columnWorryAboutUsingAlcohol;
            
            private global::System.Data.DataColumn columnHurtLovedOne;
            
            private global::System.Data.DataColumn columnToFeelNormal;
            
            private global::System.Data.DataColumn columnMakeYouMad;
            
            private global::System.Data.DataColumn columnGuiltyAboutAlcohol;
            
            private global::System.Data.DataColumn columnWorryAboutGamblingActivities;
            
            private global::System.Data.DataColumn columnHasMotherConsumedAlcohol;
            
            private global::System.Data.DataColumn columnDidMotherDrinkInPregnancy;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSubstanceAbuseScreeningsDataTable() {
                this.TableName = "CustomDocumentSubstanceAbuseScreenings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentSubstanceAbuseScreeningsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentSubstanceAbuseScreeningsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InhalantsColumn {
                get {
                    return this.columnInhalants;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MissedSchoolColumn {
                get {
                    return this.columnMissedSchool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PastYearDrunkColumn {
                get {
                    return this.columnPastYearDrunk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RiskyWhenHighColumn {
                get {
                    return this.columnRiskyWhenHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemWithDrinkingColumn {
                get {
                    return this.columnProblemWithDrinking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThingsWithoutThinkingColumn {
                get {
                    return this.columnThingsWithoutThinking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MissFamilyActivitiesColumn {
                get {
                    return this.columnMissFamilyActivities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorryAboutUsingAlcoholColumn {
                get {
                    return this.columnWorryAboutUsingAlcohol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HurtLovedOneColumn {
                get {
                    return this.columnHurtLovedOne;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ToFeelNormalColumn {
                get {
                    return this.columnToFeelNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakeYouMadColumn {
                get {
                    return this.columnMakeYouMad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GuiltyAboutAlcoholColumn {
                get {
                    return this.columnGuiltyAboutAlcohol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorryAboutGamblingActivitiesColumn {
                get {
                    return this.columnWorryAboutGamblingActivities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasMotherConsumedAlcoholColumn {
                get {
                    return this.columnHasMotherConsumedAlcohol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DidMotherDrinkInPregnancyColumn {
                get {
                    return this.columnDidMotherDrinkInPregnancy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSubstanceAbuseScreeningsRow this[int index] {
                get {
                    return ((CustomDocumentSubstanceAbuseScreeningsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentSubstanceAbuseScreeningsRowChangeEventHandler CustomDocumentSubstanceAbuseScreeningsRowChanging;
            
            public event CustomDocumentSubstanceAbuseScreeningsRowChangeEventHandler CustomDocumentSubstanceAbuseScreeningsRowChanged;
            
            public event CustomDocumentSubstanceAbuseScreeningsRowChangeEventHandler CustomDocumentSubstanceAbuseScreeningsRowDeleting;
            
            public event CustomDocumentSubstanceAbuseScreeningsRowChangeEventHandler CustomDocumentSubstanceAbuseScreeningsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentSubstanceAbuseScreeningsRow(CustomDocumentSubstanceAbuseScreeningsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSubstanceAbuseScreeningsRow AddCustomDocumentSubstanceAbuseScreeningsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int Inhalants, 
                        int MissedSchool, 
                        int PastYearDrunk, 
                        int RiskyWhenHigh, 
                        int ProblemWithDrinking, 
                        int ThingsWithoutThinking, 
                        int MissFamilyActivities, 
                        int WorryAboutUsingAlcohol, 
                        int HurtLovedOne, 
                        int ToFeelNormal, 
                        int MakeYouMad, 
                        int GuiltyAboutAlcohol, 
                        int WorryAboutGamblingActivities, 
                        int HasMotherConsumedAlcohol, 
                        int DidMotherDrinkInPregnancy, 
                        string Comments) {
                CustomDocumentSubstanceAbuseScreeningsRow rowCustomDocumentSubstanceAbuseScreeningsRow = ((CustomDocumentSubstanceAbuseScreeningsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        Inhalants,
                        MissedSchool,
                        PastYearDrunk,
                        RiskyWhenHigh,
                        ProblemWithDrinking,
                        ThingsWithoutThinking,
                        MissFamilyActivities,
                        WorryAboutUsingAlcohol,
                        HurtLovedOne,
                        ToFeelNormal,
                        MakeYouMad,
                        GuiltyAboutAlcohol,
                        WorryAboutGamblingActivities,
                        HasMotherConsumedAlcohol,
                        DidMotherDrinkInPregnancy,
                        Comments};
                rowCustomDocumentSubstanceAbuseScreeningsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentSubstanceAbuseScreeningsRow);
                return rowCustomDocumentSubstanceAbuseScreeningsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSubstanceAbuseScreeningsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentSubstanceAbuseScreeningsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentSubstanceAbuseScreeningsDataTable cln = ((CustomDocumentSubstanceAbuseScreeningsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentSubstanceAbuseScreeningsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnInhalants = base.Columns["Inhalants"];
                this.columnMissedSchool = base.Columns["MissedSchool"];
                this.columnPastYearDrunk = base.Columns["PastYearDrunk"];
                this.columnRiskyWhenHigh = base.Columns["RiskyWhenHigh"];
                this.columnProblemWithDrinking = base.Columns["ProblemWithDrinking"];
                this.columnThingsWithoutThinking = base.Columns["ThingsWithoutThinking"];
                this.columnMissFamilyActivities = base.Columns["MissFamilyActivities"];
                this.columnWorryAboutUsingAlcohol = base.Columns["WorryAboutUsingAlcohol"];
                this.columnHurtLovedOne = base.Columns["HurtLovedOne"];
                this.columnToFeelNormal = base.Columns["ToFeelNormal"];
                this.columnMakeYouMad = base.Columns["MakeYouMad"];
                this.columnGuiltyAboutAlcohol = base.Columns["GuiltyAboutAlcohol"];
                this.columnWorryAboutGamblingActivities = base.Columns["WorryAboutGamblingActivities"];
                this.columnHasMotherConsumedAlcohol = base.Columns["HasMotherConsumedAlcohol"];
                this.columnDidMotherDrinkInPregnancy = base.Columns["DidMotherDrinkInPregnancy"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnInhalants = new global::System.Data.DataColumn("Inhalants", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInhalants);
                this.columnMissedSchool = new global::System.Data.DataColumn("MissedSchool", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMissedSchool);
                this.columnPastYearDrunk = new global::System.Data.DataColumn("PastYearDrunk", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPastYearDrunk);
                this.columnRiskyWhenHigh = new global::System.Data.DataColumn("RiskyWhenHigh", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiskyWhenHigh);
                this.columnProblemWithDrinking = new global::System.Data.DataColumn("ProblemWithDrinking", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblemWithDrinking);
                this.columnThingsWithoutThinking = new global::System.Data.DataColumn("ThingsWithoutThinking", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThingsWithoutThinking);
                this.columnMissFamilyActivities = new global::System.Data.DataColumn("MissFamilyActivities", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMissFamilyActivities);
                this.columnWorryAboutUsingAlcohol = new global::System.Data.DataColumn("WorryAboutUsingAlcohol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorryAboutUsingAlcohol);
                this.columnHurtLovedOne = new global::System.Data.DataColumn("HurtLovedOne", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHurtLovedOne);
                this.columnToFeelNormal = new global::System.Data.DataColumn("ToFeelNormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToFeelNormal);
                this.columnMakeYouMad = new global::System.Data.DataColumn("MakeYouMad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeYouMad);
                this.columnGuiltyAboutAlcohol = new global::System.Data.DataColumn("GuiltyAboutAlcohol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuiltyAboutAlcohol);
                this.columnWorryAboutGamblingActivities = new global::System.Data.DataColumn("WorryAboutGamblingActivities", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorryAboutGamblingActivities);
                this.columnHasMotherConsumedAlcohol = new global::System.Data.DataColumn("HasMotherConsumedAlcohol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasMotherConsumedAlcohol);
                this.columnDidMotherDrinkInPregnancy = new global::System.Data.DataColumn("DidMotherDrinkInPregnancy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDidMotherDrinkInPregnancy);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnComments.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSubstanceAbuseScreeningsRow NewCustomDocumentSubstanceAbuseScreeningsRow() {
                return ((CustomDocumentSubstanceAbuseScreeningsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentSubstanceAbuseScreeningsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentSubstanceAbuseScreeningsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentSubstanceAbuseScreeningsRowChanged != null)) {
                    this.CustomDocumentSubstanceAbuseScreeningsRowChanged(this, new CustomDocumentSubstanceAbuseScreeningsRowChangeEvent(((CustomDocumentSubstanceAbuseScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentSubstanceAbuseScreeningsRowChanging != null)) {
                    this.CustomDocumentSubstanceAbuseScreeningsRowChanging(this, new CustomDocumentSubstanceAbuseScreeningsRowChangeEvent(((CustomDocumentSubstanceAbuseScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentSubstanceAbuseScreeningsRowDeleted != null)) {
                    this.CustomDocumentSubstanceAbuseScreeningsRowDeleted(this, new CustomDocumentSubstanceAbuseScreeningsRowChangeEvent(((CustomDocumentSubstanceAbuseScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentSubstanceAbuseScreeningsRowDeleting != null)) {
                    this.CustomDocumentSubstanceAbuseScreeningsRowDeleting(this, new CustomDocumentSubstanceAbuseScreeningsRowChangeEvent(((CustomDocumentSubstanceAbuseScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentSubstanceAbuseScreeningsRow(CustomDocumentSubstanceAbuseScreeningsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetScreenings ds = new DataSetScreenings();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentSubstanceAbuseScreeningsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentMentalHealthScreeningsDataTable : global::System.Data.TypedTableBase<CustomDocumentMentalHealthScreeningsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnPayingAttentionAtSchool;
            
            private global::System.Data.DataColumn columnCanNotGetRidOfThought;
            
            private global::System.Data.DataColumn columnHearVoices;
            
            private global::System.Data.DataColumn columnSpendTimeKilling;
            
            private global::System.Data.DataColumn columnTriedToCommitSuicide;
            
            private global::System.Data.DataColumn columnWatchYourStep;
            
            private global::System.Data.DataColumn columnFeelAnxious;
            
            private global::System.Data.DataColumn columnThoughtsComeQuickly;
            
            private global::System.Data.DataColumn columnDestroyedProperty;
            
            private global::System.Data.DataColumn columnFeelTrapped;
            
            private global::System.Data.DataColumn columnDissatifiedWithLife;
            
            private global::System.Data.DataColumn columnUnPleasantThoughts;
            
            private global::System.Data.DataColumn columnDifficultyInSleeping;
            
            private global::System.Data.DataColumn columnPhysicallyHarmed;
            
            private global::System.Data.DataColumn columnLostInterest;
            
            private global::System.Data.DataColumn columnFeelAngry;
            
            private global::System.Data.DataColumn columnGetIntoTrouble;
            
            private global::System.Data.DataColumn columnFeelAfraid;
            
            private global::System.Data.DataColumn columnFeelDepressed;
            
            private global::System.Data.DataColumn columnSpendTimeOnThinkingAboutWeight;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentMentalHealthScreeningsDataTable() {
                this.TableName = "CustomDocumentMentalHealthScreenings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentMentalHealthScreeningsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentMentalHealthScreeningsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayingAttentionAtSchoolColumn {
                get {
                    return this.columnPayingAttentionAtSchool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CanNotGetRidOfThoughtColumn {
                get {
                    return this.columnCanNotGetRidOfThought;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HearVoicesColumn {
                get {
                    return this.columnHearVoices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpendTimeKillingColumn {
                get {
                    return this.columnSpendTimeKilling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TriedToCommitSuicideColumn {
                get {
                    return this.columnTriedToCommitSuicide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WatchYourStepColumn {
                get {
                    return this.columnWatchYourStep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeelAnxiousColumn {
                get {
                    return this.columnFeelAnxious;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoughtsComeQuicklyColumn {
                get {
                    return this.columnThoughtsComeQuickly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestroyedPropertyColumn {
                get {
                    return this.columnDestroyedProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeelTrappedColumn {
                get {
                    return this.columnFeelTrapped;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DissatifiedWithLifeColumn {
                get {
                    return this.columnDissatifiedWithLife;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnPleasantThoughtsColumn {
                get {
                    return this.columnUnPleasantThoughts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DifficultyInSleepingColumn {
                get {
                    return this.columnDifficultyInSleeping;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhysicallyHarmedColumn {
                get {
                    return this.columnPhysicallyHarmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LostInterestColumn {
                get {
                    return this.columnLostInterest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeelAngryColumn {
                get {
                    return this.columnFeelAngry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GetIntoTroubleColumn {
                get {
                    return this.columnGetIntoTrouble;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeelAfraidColumn {
                get {
                    return this.columnFeelAfraid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FeelDepressedColumn {
                get {
                    return this.columnFeelDepressed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpendTimeOnThinkingAboutWeightColumn {
                get {
                    return this.columnSpendTimeOnThinkingAboutWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentMentalHealthScreeningsRow this[int index] {
                get {
                    return ((CustomDocumentMentalHealthScreeningsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentMentalHealthScreeningsRowChangeEventHandler CustomDocumentMentalHealthScreeningsRowChanging;
            
            public event CustomDocumentMentalHealthScreeningsRowChangeEventHandler CustomDocumentMentalHealthScreeningsRowChanged;
            
            public event CustomDocumentMentalHealthScreeningsRowChangeEventHandler CustomDocumentMentalHealthScreeningsRowDeleting;
            
            public event CustomDocumentMentalHealthScreeningsRowChangeEventHandler CustomDocumentMentalHealthScreeningsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentMentalHealthScreeningsRow(CustomDocumentMentalHealthScreeningsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentMentalHealthScreeningsRow AddCustomDocumentMentalHealthScreeningsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int PayingAttentionAtSchool, 
                        int CanNotGetRidOfThought, 
                        int HearVoices, 
                        int SpendTimeKilling, 
                        int TriedToCommitSuicide, 
                        int WatchYourStep, 
                        int FeelAnxious, 
                        int ThoughtsComeQuickly, 
                        int DestroyedProperty, 
                        int FeelTrapped, 
                        int DissatifiedWithLife, 
                        int UnPleasantThoughts, 
                        int DifficultyInSleeping, 
                        int PhysicallyHarmed, 
                        int LostInterest, 
                        int FeelAngry, 
                        int GetIntoTrouble, 
                        int FeelAfraid, 
                        int FeelDepressed, 
                        int SpendTimeOnThinkingAboutWeight, 
                        string Comments) {
                CustomDocumentMentalHealthScreeningsRow rowCustomDocumentMentalHealthScreeningsRow = ((CustomDocumentMentalHealthScreeningsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        PayingAttentionAtSchool,
                        CanNotGetRidOfThought,
                        HearVoices,
                        SpendTimeKilling,
                        TriedToCommitSuicide,
                        WatchYourStep,
                        FeelAnxious,
                        ThoughtsComeQuickly,
                        DestroyedProperty,
                        FeelTrapped,
                        DissatifiedWithLife,
                        UnPleasantThoughts,
                        DifficultyInSleeping,
                        PhysicallyHarmed,
                        LostInterest,
                        FeelAngry,
                        GetIntoTrouble,
                        FeelAfraid,
                        FeelDepressed,
                        SpendTimeOnThinkingAboutWeight,
                        Comments};
                rowCustomDocumentMentalHealthScreeningsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentMentalHealthScreeningsRow);
                return rowCustomDocumentMentalHealthScreeningsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentMentalHealthScreeningsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentMentalHealthScreeningsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentMentalHealthScreeningsDataTable cln = ((CustomDocumentMentalHealthScreeningsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentMentalHealthScreeningsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnPayingAttentionAtSchool = base.Columns["PayingAttentionAtSchool"];
                this.columnCanNotGetRidOfThought = base.Columns["CanNotGetRidOfThought"];
                this.columnHearVoices = base.Columns["HearVoices"];
                this.columnSpendTimeKilling = base.Columns["SpendTimeKilling"];
                this.columnTriedToCommitSuicide = base.Columns["TriedToCommitSuicide"];
                this.columnWatchYourStep = base.Columns["WatchYourStep"];
                this.columnFeelAnxious = base.Columns["FeelAnxious"];
                this.columnThoughtsComeQuickly = base.Columns["ThoughtsComeQuickly"];
                this.columnDestroyedProperty = base.Columns["DestroyedProperty"];
                this.columnFeelTrapped = base.Columns["FeelTrapped"];
                this.columnDissatifiedWithLife = base.Columns["DissatifiedWithLife"];
                this.columnUnPleasantThoughts = base.Columns["UnPleasantThoughts"];
                this.columnDifficultyInSleeping = base.Columns["DifficultyInSleeping"];
                this.columnPhysicallyHarmed = base.Columns["PhysicallyHarmed"];
                this.columnLostInterest = base.Columns["LostInterest"];
                this.columnFeelAngry = base.Columns["FeelAngry"];
                this.columnGetIntoTrouble = base.Columns["GetIntoTrouble"];
                this.columnFeelAfraid = base.Columns["FeelAfraid"];
                this.columnFeelDepressed = base.Columns["FeelDepressed"];
                this.columnSpendTimeOnThinkingAboutWeight = base.Columns["SpendTimeOnThinkingAboutWeight"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnPayingAttentionAtSchool = new global::System.Data.DataColumn("PayingAttentionAtSchool", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayingAttentionAtSchool);
                this.columnCanNotGetRidOfThought = new global::System.Data.DataColumn("CanNotGetRidOfThought", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCanNotGetRidOfThought);
                this.columnHearVoices = new global::System.Data.DataColumn("HearVoices", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHearVoices);
                this.columnSpendTimeKilling = new global::System.Data.DataColumn("SpendTimeKilling", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpendTimeKilling);
                this.columnTriedToCommitSuicide = new global::System.Data.DataColumn("TriedToCommitSuicide", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTriedToCommitSuicide);
                this.columnWatchYourStep = new global::System.Data.DataColumn("WatchYourStep", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWatchYourStep);
                this.columnFeelAnxious = new global::System.Data.DataColumn("FeelAnxious", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeelAnxious);
                this.columnThoughtsComeQuickly = new global::System.Data.DataColumn("ThoughtsComeQuickly", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoughtsComeQuickly);
                this.columnDestroyedProperty = new global::System.Data.DataColumn("DestroyedProperty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestroyedProperty);
                this.columnFeelTrapped = new global::System.Data.DataColumn("FeelTrapped", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeelTrapped);
                this.columnDissatifiedWithLife = new global::System.Data.DataColumn("DissatifiedWithLife", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDissatifiedWithLife);
                this.columnUnPleasantThoughts = new global::System.Data.DataColumn("UnPleasantThoughts", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnPleasantThoughts);
                this.columnDifficultyInSleeping = new global::System.Data.DataColumn("DifficultyInSleeping", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifficultyInSleeping);
                this.columnPhysicallyHarmed = new global::System.Data.DataColumn("PhysicallyHarmed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicallyHarmed);
                this.columnLostInterest = new global::System.Data.DataColumn("LostInterest", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLostInterest);
                this.columnFeelAngry = new global::System.Data.DataColumn("FeelAngry", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeelAngry);
                this.columnGetIntoTrouble = new global::System.Data.DataColumn("GetIntoTrouble", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGetIntoTrouble);
                this.columnFeelAfraid = new global::System.Data.DataColumn("FeelAfraid", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeelAfraid);
                this.columnFeelDepressed = new global::System.Data.DataColumn("FeelDepressed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeelDepressed);
                this.columnSpendTimeOnThinkingAboutWeight = new global::System.Data.DataColumn("SpendTimeOnThinkingAboutWeight", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpendTimeOnThinkingAboutWeight);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnComments.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentMentalHealthScreeningsRow NewCustomDocumentMentalHealthScreeningsRow() {
                return ((CustomDocumentMentalHealthScreeningsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentMentalHealthScreeningsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentMentalHealthScreeningsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentMentalHealthScreeningsRowChanged != null)) {
                    this.CustomDocumentMentalHealthScreeningsRowChanged(this, new CustomDocumentMentalHealthScreeningsRowChangeEvent(((CustomDocumentMentalHealthScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentMentalHealthScreeningsRowChanging != null)) {
                    this.CustomDocumentMentalHealthScreeningsRowChanging(this, new CustomDocumentMentalHealthScreeningsRowChangeEvent(((CustomDocumentMentalHealthScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentMentalHealthScreeningsRowDeleted != null)) {
                    this.CustomDocumentMentalHealthScreeningsRowDeleted(this, new CustomDocumentMentalHealthScreeningsRowChangeEvent(((CustomDocumentMentalHealthScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentMentalHealthScreeningsRowDeleting != null)) {
                    this.CustomDocumentMentalHealthScreeningsRowDeleting(this, new CustomDocumentMentalHealthScreeningsRowChangeEvent(((CustomDocumentMentalHealthScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentMentalHealthScreeningsRow(CustomDocumentMentalHealthScreeningsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetScreenings ds = new DataSetScreenings();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentMentalHealthScreeningsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentTraumaticBrainInjuryScreeningsDataTable : global::System.Data.TypedTableBase<CustomDocumentTraumaticBrainInjuryScreeningsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnBlowToTheHead;
            
            private global::System.Data.DataColumn columnHeadBlowWhenDidItOccur;
            
            private global::System.Data.DataColumn columnHowLongUnconscious;
            
            private global::System.Data.DataColumn columnCauseAConcussion;
            
            private global::System.Data.DataColumn columnConcussionWhenDidItOccur;
            
            private global::System.Data.DataColumn columnHowLongConcussionLast;
            
            private global::System.Data.DataColumn columnReceiveTreatmentForHeadInjury;
            
            private global::System.Data.DataColumn columnPhysicalAbilities;
            
            private global::System.Data.DataColumn columnMood;
            
            private global::System.Data.DataColumn columnCareForYourSelf;
            
            private global::System.Data.DataColumn columnTemper;
            
            private global::System.Data.DataColumn columnSpeech;
            
            private global::System.Data.DataColumn columnRelationshipWithOthers;
            
            private global::System.Data.DataColumn columnHearing;
            
            private global::System.Data.DataColumn columnMemory;
            
            private global::System.Data.DataColumn columnAbilityToConcentrate;
            
            private global::System.Data.DataColumn columnUseOfAlcohol;
            
            private global::System.Data.DataColumn columnAbilityToWork;
            
            private global::System.Data.DataColumn columnChangedAfterInjury;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTraumaticBrainInjuryScreeningsDataTable() {
                this.TableName = "CustomDocumentTraumaticBrainInjuryScreenings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentTraumaticBrainInjuryScreeningsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentTraumaticBrainInjuryScreeningsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlowToTheHeadColumn {
                get {
                    return this.columnBlowToTheHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeadBlowWhenDidItOccurColumn {
                get {
                    return this.columnHeadBlowWhenDidItOccur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HowLongUnconsciousColumn {
                get {
                    return this.columnHowLongUnconscious;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CauseAConcussionColumn {
                get {
                    return this.columnCauseAConcussion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConcussionWhenDidItOccurColumn {
                get {
                    return this.columnConcussionWhenDidItOccur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HowLongConcussionLastColumn {
                get {
                    return this.columnHowLongConcussionLast;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiveTreatmentForHeadInjuryColumn {
                get {
                    return this.columnReceiveTreatmentForHeadInjury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhysicalAbilitiesColumn {
                get {
                    return this.columnPhysicalAbilities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoodColumn {
                get {
                    return this.columnMood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CareForYourSelfColumn {
                get {
                    return this.columnCareForYourSelf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TemperColumn {
                get {
                    return this.columnTemper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpeechColumn {
                get {
                    return this.columnSpeech;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RelationshipWithOthersColumn {
                get {
                    return this.columnRelationshipWithOthers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HearingColumn {
                get {
                    return this.columnHearing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoryColumn {
                get {
                    return this.columnMemory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbilityToConcentrateColumn {
                get {
                    return this.columnAbilityToConcentrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseOfAlcoholColumn {
                get {
                    return this.columnUseOfAlcohol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbilityToWorkColumn {
                get {
                    return this.columnAbilityToWork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangedAfterInjuryColumn {
                get {
                    return this.columnChangedAfterInjury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTraumaticBrainInjuryScreeningsRow this[int index] {
                get {
                    return ((CustomDocumentTraumaticBrainInjuryScreeningsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEventHandler CustomDocumentTraumaticBrainInjuryScreeningsRowChanging;
            
            public event CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEventHandler CustomDocumentTraumaticBrainInjuryScreeningsRowChanged;
            
            public event CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEventHandler CustomDocumentTraumaticBrainInjuryScreeningsRowDeleting;
            
            public event CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEventHandler CustomDocumentTraumaticBrainInjuryScreeningsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentTraumaticBrainInjuryScreeningsRow(CustomDocumentTraumaticBrainInjuryScreeningsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTraumaticBrainInjuryScreeningsRow AddCustomDocumentTraumaticBrainInjuryScreeningsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int BlowToTheHead, 
                        string HeadBlowWhenDidItOccur, 
                        string HowLongUnconscious, 
                        int CauseAConcussion, 
                        string ConcussionWhenDidItOccur, 
                        string HowLongConcussionLast, 
                        int ReceiveTreatmentForHeadInjury, 
                        int PhysicalAbilities, 
                        int Mood, 
                        int CareForYourSelf, 
                        int Temper, 
                        int Speech, 
                        int RelationshipWithOthers, 
                        int Hearing, 
                        int Memory, 
                        int AbilityToConcentrate, 
                        int UseOfAlcohol, 
                        int AbilityToWork, 
                        int ChangedAfterInjury, 
                        string Comments) {
                CustomDocumentTraumaticBrainInjuryScreeningsRow rowCustomDocumentTraumaticBrainInjuryScreeningsRow = ((CustomDocumentTraumaticBrainInjuryScreeningsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        BlowToTheHead,
                        HeadBlowWhenDidItOccur,
                        HowLongUnconscious,
                        CauseAConcussion,
                        ConcussionWhenDidItOccur,
                        HowLongConcussionLast,
                        ReceiveTreatmentForHeadInjury,
                        PhysicalAbilities,
                        Mood,
                        CareForYourSelf,
                        Temper,
                        Speech,
                        RelationshipWithOthers,
                        Hearing,
                        Memory,
                        AbilityToConcentrate,
                        UseOfAlcohol,
                        AbilityToWork,
                        ChangedAfterInjury,
                        Comments};
                rowCustomDocumentTraumaticBrainInjuryScreeningsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentTraumaticBrainInjuryScreeningsRow);
                return rowCustomDocumentTraumaticBrainInjuryScreeningsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTraumaticBrainInjuryScreeningsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentTraumaticBrainInjuryScreeningsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentTraumaticBrainInjuryScreeningsDataTable cln = ((CustomDocumentTraumaticBrainInjuryScreeningsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentTraumaticBrainInjuryScreeningsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnBlowToTheHead = base.Columns["BlowToTheHead"];
                this.columnHeadBlowWhenDidItOccur = base.Columns["HeadBlowWhenDidItOccur"];
                this.columnHowLongUnconscious = base.Columns["HowLongUnconscious"];
                this.columnCauseAConcussion = base.Columns["CauseAConcussion"];
                this.columnConcussionWhenDidItOccur = base.Columns["ConcussionWhenDidItOccur"];
                this.columnHowLongConcussionLast = base.Columns["HowLongConcussionLast"];
                this.columnReceiveTreatmentForHeadInjury = base.Columns["ReceiveTreatmentForHeadInjury"];
                this.columnPhysicalAbilities = base.Columns["PhysicalAbilities"];
                this.columnMood = base.Columns["Mood"];
                this.columnCareForYourSelf = base.Columns["CareForYourSelf"];
                this.columnTemper = base.Columns["Temper"];
                this.columnSpeech = base.Columns["Speech"];
                this.columnRelationshipWithOthers = base.Columns["RelationshipWithOthers"];
                this.columnHearing = base.Columns["Hearing"];
                this.columnMemory = base.Columns["Memory"];
                this.columnAbilityToConcentrate = base.Columns["AbilityToConcentrate"];
                this.columnUseOfAlcohol = base.Columns["UseOfAlcohol"];
                this.columnAbilityToWork = base.Columns["AbilityToWork"];
                this.columnChangedAfterInjury = base.Columns["ChangedAfterInjury"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnBlowToTheHead = new global::System.Data.DataColumn("BlowToTheHead", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlowToTheHead);
                this.columnHeadBlowWhenDidItOccur = new global::System.Data.DataColumn("HeadBlowWhenDidItOccur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadBlowWhenDidItOccur);
                this.columnHowLongUnconscious = new global::System.Data.DataColumn("HowLongUnconscious", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHowLongUnconscious);
                this.columnCauseAConcussion = new global::System.Data.DataColumn("CauseAConcussion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCauseAConcussion);
                this.columnConcussionWhenDidItOccur = new global::System.Data.DataColumn("ConcussionWhenDidItOccur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConcussionWhenDidItOccur);
                this.columnHowLongConcussionLast = new global::System.Data.DataColumn("HowLongConcussionLast", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHowLongConcussionLast);
                this.columnReceiveTreatmentForHeadInjury = new global::System.Data.DataColumn("ReceiveTreatmentForHeadInjury", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveTreatmentForHeadInjury);
                this.columnPhysicalAbilities = new global::System.Data.DataColumn("PhysicalAbilities", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalAbilities);
                this.columnMood = new global::System.Data.DataColumn("Mood", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMood);
                this.columnCareForYourSelf = new global::System.Data.DataColumn("CareForYourSelf", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCareForYourSelf);
                this.columnTemper = new global::System.Data.DataColumn("Temper", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemper);
                this.columnSpeech = new global::System.Data.DataColumn("Speech", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeech);
                this.columnRelationshipWithOthers = new global::System.Data.DataColumn("RelationshipWithOthers", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipWithOthers);
                this.columnHearing = new global::System.Data.DataColumn("Hearing", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHearing);
                this.columnMemory = new global::System.Data.DataColumn("Memory", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemory);
                this.columnAbilityToConcentrate = new global::System.Data.DataColumn("AbilityToConcentrate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbilityToConcentrate);
                this.columnUseOfAlcohol = new global::System.Data.DataColumn("UseOfAlcohol", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseOfAlcohol);
                this.columnAbilityToWork = new global::System.Data.DataColumn("AbilityToWork", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbilityToWork);
                this.columnChangedAfterInjury = new global::System.Data.DataColumn("ChangedAfterInjury", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangedAfterInjury);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnHeadBlowWhenDidItOccur.MaxLength = 500;
                this.columnHowLongUnconscious.MaxLength = 500;
                this.columnConcussionWhenDidItOccur.MaxLength = 500;
                this.columnHowLongConcussionLast.MaxLength = 500;
                this.columnComments.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTraumaticBrainInjuryScreeningsRow NewCustomDocumentTraumaticBrainInjuryScreeningsRow() {
                return ((CustomDocumentTraumaticBrainInjuryScreeningsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentTraumaticBrainInjuryScreeningsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentTraumaticBrainInjuryScreeningsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentTraumaticBrainInjuryScreeningsRowChanged != null)) {
                    this.CustomDocumentTraumaticBrainInjuryScreeningsRowChanged(this, new CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEvent(((CustomDocumentTraumaticBrainInjuryScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentTraumaticBrainInjuryScreeningsRowChanging != null)) {
                    this.CustomDocumentTraumaticBrainInjuryScreeningsRowChanging(this, new CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEvent(((CustomDocumentTraumaticBrainInjuryScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentTraumaticBrainInjuryScreeningsRowDeleted != null)) {
                    this.CustomDocumentTraumaticBrainInjuryScreeningsRowDeleted(this, new CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEvent(((CustomDocumentTraumaticBrainInjuryScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentTraumaticBrainInjuryScreeningsRowDeleting != null)) {
                    this.CustomDocumentTraumaticBrainInjuryScreeningsRowDeleting(this, new CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEvent(((CustomDocumentTraumaticBrainInjuryScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentTraumaticBrainInjuryScreeningsRow(CustomDocumentTraumaticBrainInjuryScreeningsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetScreenings ds = new DataSetScreenings();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentTraumaticBrainInjuryScreeningsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentOutComesScreeningsDataTable : global::System.Data.TypedTableBase<CustomDocumentOutComesScreeningsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnSubstanceAbuseConsumer;
            
            private global::System.Data.DataColumn columnSubstanceAbuseConsumerSteps;
            
            private global::System.Data.DataColumn columnMentalHealthConsumer;
            
            private global::System.Data.DataColumn columnMentalHealthConsumerSteps;
            
            private global::System.Data.DataColumn columnFASDAssessment;
            
            private global::System.Data.DataColumn columnFASDAssessmentSteps;
            
            private global::System.Data.DataColumn columnMHAndSAConsumer;
            
            private global::System.Data.DataColumn columnMHAndSAConsumerSteps;
            
            private global::System.Data.DataColumn columnEvidenceOfInjury;
            
            private global::System.Data.DataColumn columnEvidenceOfInjurySteps;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentOutComesScreeningsDataTable() {
                this.TableName = "CustomDocumentOutComesScreenings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentOutComesScreeningsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentOutComesScreeningsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstanceAbuseConsumerColumn {
                get {
                    return this.columnSubstanceAbuseConsumer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstanceAbuseConsumerStepsColumn {
                get {
                    return this.columnSubstanceAbuseConsumerSteps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MentalHealthConsumerColumn {
                get {
                    return this.columnMentalHealthConsumer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MentalHealthConsumerStepsColumn {
                get {
                    return this.columnMentalHealthConsumerSteps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FASDAssessmentColumn {
                get {
                    return this.columnFASDAssessment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FASDAssessmentStepsColumn {
                get {
                    return this.columnFASDAssessmentSteps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHAndSAConsumerColumn {
                get {
                    return this.columnMHAndSAConsumer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MHAndSAConsumerStepsColumn {
                get {
                    return this.columnMHAndSAConsumerSteps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EvidenceOfInjuryColumn {
                get {
                    return this.columnEvidenceOfInjury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EvidenceOfInjuryStepsColumn {
                get {
                    return this.columnEvidenceOfInjurySteps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentOutComesScreeningsRow this[int index] {
                get {
                    return ((CustomDocumentOutComesScreeningsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentOutComesScreeningsRowChangeEventHandler CustomDocumentOutComesScreeningsRowChanging;
            
            public event CustomDocumentOutComesScreeningsRowChangeEventHandler CustomDocumentOutComesScreeningsRowChanged;
            
            public event CustomDocumentOutComesScreeningsRowChangeEventHandler CustomDocumentOutComesScreeningsRowDeleting;
            
            public event CustomDocumentOutComesScreeningsRowChangeEventHandler CustomDocumentOutComesScreeningsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentOutComesScreeningsRow(CustomDocumentOutComesScreeningsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentOutComesScreeningsRow AddCustomDocumentOutComesScreeningsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int SubstanceAbuseConsumer, 
                        string SubstanceAbuseConsumerSteps, 
                        int MentalHealthConsumer, 
                        string MentalHealthConsumerSteps, 
                        int FASDAssessment, 
                        string FASDAssessmentSteps, 
                        int MHAndSAConsumer, 
                        string MHAndSAConsumerSteps, 
                        int EvidenceOfInjury, 
                        string EvidenceOfInjurySteps, 
                        string Comments) {
                CustomDocumentOutComesScreeningsRow rowCustomDocumentOutComesScreeningsRow = ((CustomDocumentOutComesScreeningsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        SubstanceAbuseConsumer,
                        SubstanceAbuseConsumerSteps,
                        MentalHealthConsumer,
                        MentalHealthConsumerSteps,
                        FASDAssessment,
                        FASDAssessmentSteps,
                        MHAndSAConsumer,
                        MHAndSAConsumerSteps,
                        EvidenceOfInjury,
                        EvidenceOfInjurySteps,
                        Comments};
                rowCustomDocumentOutComesScreeningsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentOutComesScreeningsRow);
                return rowCustomDocumentOutComesScreeningsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentOutComesScreeningsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentOutComesScreeningsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentOutComesScreeningsDataTable cln = ((CustomDocumentOutComesScreeningsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentOutComesScreeningsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnSubstanceAbuseConsumer = base.Columns["SubstanceAbuseConsumer"];
                this.columnSubstanceAbuseConsumerSteps = base.Columns["SubstanceAbuseConsumerSteps"];
                this.columnMentalHealthConsumer = base.Columns["MentalHealthConsumer"];
                this.columnMentalHealthConsumerSteps = base.Columns["MentalHealthConsumerSteps"];
                this.columnFASDAssessment = base.Columns["FASDAssessment"];
                this.columnFASDAssessmentSteps = base.Columns["FASDAssessmentSteps"];
                this.columnMHAndSAConsumer = base.Columns["MHAndSAConsumer"];
                this.columnMHAndSAConsumerSteps = base.Columns["MHAndSAConsumerSteps"];
                this.columnEvidenceOfInjury = base.Columns["EvidenceOfInjury"];
                this.columnEvidenceOfInjurySteps = base.Columns["EvidenceOfInjurySteps"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnSubstanceAbuseConsumer = new global::System.Data.DataColumn("SubstanceAbuseConsumer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstanceAbuseConsumer);
                this.columnSubstanceAbuseConsumerSteps = new global::System.Data.DataColumn("SubstanceAbuseConsumerSteps", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstanceAbuseConsumerSteps);
                this.columnMentalHealthConsumer = new global::System.Data.DataColumn("MentalHealthConsumer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMentalHealthConsumer);
                this.columnMentalHealthConsumerSteps = new global::System.Data.DataColumn("MentalHealthConsumerSteps", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMentalHealthConsumerSteps);
                this.columnFASDAssessment = new global::System.Data.DataColumn("FASDAssessment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFASDAssessment);
                this.columnFASDAssessmentSteps = new global::System.Data.DataColumn("FASDAssessmentSteps", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFASDAssessmentSteps);
                this.columnMHAndSAConsumer = new global::System.Data.DataColumn("MHAndSAConsumer", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHAndSAConsumer);
                this.columnMHAndSAConsumerSteps = new global::System.Data.DataColumn("MHAndSAConsumerSteps", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMHAndSAConsumerSteps);
                this.columnEvidenceOfInjury = new global::System.Data.DataColumn("EvidenceOfInjury", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvidenceOfInjury);
                this.columnEvidenceOfInjurySteps = new global::System.Data.DataColumn("EvidenceOfInjurySteps", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvidenceOfInjurySteps);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnSubstanceAbuseConsumerSteps.MaxLength = 500;
                this.columnMentalHealthConsumerSteps.MaxLength = 500;
                this.columnFASDAssessmentSteps.MaxLength = 500;
                this.columnMHAndSAConsumerSteps.MaxLength = 500;
                this.columnEvidenceOfInjurySteps.MaxLength = 500;
                this.columnComments.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentOutComesScreeningsRow NewCustomDocumentOutComesScreeningsRow() {
                return ((CustomDocumentOutComesScreeningsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentOutComesScreeningsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentOutComesScreeningsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentOutComesScreeningsRowChanged != null)) {
                    this.CustomDocumentOutComesScreeningsRowChanged(this, new CustomDocumentOutComesScreeningsRowChangeEvent(((CustomDocumentOutComesScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentOutComesScreeningsRowChanging != null)) {
                    this.CustomDocumentOutComesScreeningsRowChanging(this, new CustomDocumentOutComesScreeningsRowChangeEvent(((CustomDocumentOutComesScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentOutComesScreeningsRowDeleted != null)) {
                    this.CustomDocumentOutComesScreeningsRowDeleted(this, new CustomDocumentOutComesScreeningsRowChangeEvent(((CustomDocumentOutComesScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentOutComesScreeningsRowDeleting != null)) {
                    this.CustomDocumentOutComesScreeningsRowDeleting(this, new CustomDocumentOutComesScreeningsRowChangeEvent(((CustomDocumentOutComesScreeningsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentOutComesScreeningsRow(CustomDocumentOutComesScreeningsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetScreenings ds = new DataSetScreenings();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentOutComesScreeningsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentSubstanceAbuseScreeningsRow : global::System.Data.DataRow {
            
            private CustomDocumentSubstanceAbuseScreeningsDataTable tableCustomDocumentSubstanceAbuseScreenings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentSubstanceAbuseScreeningsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentSubstanceAbuseScreenings = ((CustomDocumentSubstanceAbuseScreeningsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentSubstanceAbuseScreenings.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentSubstanceAbuseScreenings.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentSubstanceAbuseScreenings.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentSubstanceAbuseScreenings.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSubstanceAbuseScreenings.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentSubstanceAbuseScreen" +
                                "ings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSubstanceAbuseScreenings.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentSubstanceAbuseScreenings" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentSubstanceAbuseScreenings.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentSubstanceAbuseScreenin" +
                                "gs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Inhalants {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.InhalantsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inhalants\' in table \'CustomDocumentSubstanceAbuseScreenings" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.InhalantsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MissedSchool {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.MissedSchoolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MissedSchool\' in table \'CustomDocumentSubstanceAbuseScreeni" +
                                "ngs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.MissedSchoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PastYearDrunk {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.PastYearDrunkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PastYearDrunk\' in table \'CustomDocumentSubstanceAbuseScreen" +
                                "ings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.PastYearDrunkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RiskyWhenHigh {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.RiskyWhenHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiskyWhenHigh\' in table \'CustomDocumentSubstanceAbuseScreen" +
                                "ings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.RiskyWhenHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProblemWithDrinking {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.ProblemWithDrinkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProblemWithDrinking\' in table \'CustomDocumentSubstanceAbuse" +
                                "Screenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.ProblemWithDrinkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ThingsWithoutThinking {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.ThingsWithoutThinkingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThingsWithoutThinking\' in table \'CustomDocumentSubstanceAbu" +
                                "seScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.ThingsWithoutThinkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MissFamilyActivities {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.MissFamilyActivitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MissFamilyActivities\' in table \'CustomDocumentSubstanceAbus" +
                                "eScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.MissFamilyActivitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorryAboutUsingAlcohol {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutUsingAlcoholColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorryAboutUsingAlcohol\' in table \'CustomDocumentSubstanceAb" +
                                "useScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutUsingAlcoholColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HurtLovedOne {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.HurtLovedOneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HurtLovedOne\' in table \'CustomDocumentSubstanceAbuseScreeni" +
                                "ngs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.HurtLovedOneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ToFeelNormal {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.ToFeelNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToFeelNormal\' in table \'CustomDocumentSubstanceAbuseScreeni" +
                                "ngs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.ToFeelNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakeYouMad {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.MakeYouMadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MakeYouMad\' in table \'CustomDocumentSubstanceAbuseScreening" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.MakeYouMadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GuiltyAboutAlcohol {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.GuiltyAboutAlcoholColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GuiltyAboutAlcohol\' in table \'CustomDocumentSubstanceAbuseS" +
                                "creenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.GuiltyAboutAlcoholColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WorryAboutGamblingActivities {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutGamblingActivitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WorryAboutGamblingActivities\' in table \'CustomDocumentSubst" +
                                "anceAbuseScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutGamblingActivitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HasMotherConsumedAlcohol {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.HasMotherConsumedAlcoholColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasMotherConsumedAlcohol\' in table \'CustomDocumentSubstance" +
                                "AbuseScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.HasMotherConsumedAlcoholColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DidMotherDrinkInPregnancy {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentSubstanceAbuseScreenings.DidMotherDrinkInPregnancyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DidMotherDrinkInPregnancy\' in table \'CustomDocumentSubstanc" +
                                "eAbuseScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.DidMotherDrinkInPregnancyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentSubstanceAbuseScreenings.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'CustomDocumentSubstanceAbuseScreenings\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentSubstanceAbuseScreenings.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInhalantsNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.InhalantsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInhalantsNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.InhalantsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMissedSchoolNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.MissedSchoolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMissedSchoolNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.MissedSchoolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPastYearDrunkNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.PastYearDrunkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPastYearDrunkNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.PastYearDrunkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRiskyWhenHighNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.RiskyWhenHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRiskyWhenHighNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.RiskyWhenHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemWithDrinkingNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.ProblemWithDrinkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemWithDrinkingNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.ProblemWithDrinkingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThingsWithoutThinkingNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.ThingsWithoutThinkingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThingsWithoutThinkingNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.ThingsWithoutThinkingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMissFamilyActivitiesNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.MissFamilyActivitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMissFamilyActivitiesNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.MissFamilyActivitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorryAboutUsingAlcoholNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutUsingAlcoholColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorryAboutUsingAlcoholNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutUsingAlcoholColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHurtLovedOneNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.HurtLovedOneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHurtLovedOneNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.HurtLovedOneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsToFeelNormalNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.ToFeelNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetToFeelNormalNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.ToFeelNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakeYouMadNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.MakeYouMadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakeYouMadNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.MakeYouMadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGuiltyAboutAlcoholNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.GuiltyAboutAlcoholColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGuiltyAboutAlcoholNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.GuiltyAboutAlcoholColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorryAboutGamblingActivitiesNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutGamblingActivitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorryAboutGamblingActivitiesNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.WorryAboutGamblingActivitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasMotherConsumedAlcoholNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.HasMotherConsumedAlcoholColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasMotherConsumedAlcoholNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.HasMotherConsumedAlcoholColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDidMotherDrinkInPregnancyNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.DidMotherDrinkInPregnancyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDidMotherDrinkInPregnancyNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.DidMotherDrinkInPregnancyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableCustomDocumentSubstanceAbuseScreenings.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableCustomDocumentSubstanceAbuseScreenings.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentMentalHealthScreeningsRow : global::System.Data.DataRow {
            
            private CustomDocumentMentalHealthScreeningsDataTable tableCustomDocumentMentalHealthScreenings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentMentalHealthScreeningsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentMentalHealthScreenings = ((CustomDocumentMentalHealthScreeningsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentMentalHealthScreenings.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentMentalHealthScreenings.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentMentalHealthScreenings.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentMentalHealthScreenings.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentMentalHealthScreenings.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentMentalHealthScreenin" +
                                "gs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentMentalHealthScreenings.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentMentalHealthScreenings\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentMentalHealthScreenings.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentMentalHealthScreenings" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayingAttentionAtSchool {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.PayingAttentionAtSchoolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayingAttentionAtSchool\' in table \'CustomDocumentMentalHeal" +
                                "thScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.PayingAttentionAtSchoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CanNotGetRidOfThought {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.CanNotGetRidOfThoughtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CanNotGetRidOfThought\' in table \'CustomDocumentMentalHealth" +
                                "Screenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.CanNotGetRidOfThoughtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HearVoices {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.HearVoicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HearVoices\' in table \'CustomDocumentMentalHealthScreenings\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.HearVoicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SpendTimeKilling {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.SpendTimeKillingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpendTimeKilling\' in table \'CustomDocumentMentalHealthScree" +
                                "nings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.SpendTimeKillingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TriedToCommitSuicide {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.TriedToCommitSuicideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TriedToCommitSuicide\' in table \'CustomDocumentMentalHealthS" +
                                "creenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.TriedToCommitSuicideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WatchYourStep {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.WatchYourStepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WatchYourStep\' in table \'CustomDocumentMentalHealthScreenin" +
                                "gs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.WatchYourStepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeelAnxious {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.FeelAnxiousColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeelAnxious\' in table \'CustomDocumentMentalHealthScreenings" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.FeelAnxiousColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ThoughtsComeQuickly {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.ThoughtsComeQuicklyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoughtsComeQuickly\' in table \'CustomDocumentMentalHealthSc" +
                                "reenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.ThoughtsComeQuicklyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DestroyedProperty {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.DestroyedPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestroyedProperty\' in table \'CustomDocumentMentalHealthScre" +
                                "enings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.DestroyedPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeelTrapped {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.FeelTrappedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeelTrapped\' in table \'CustomDocumentMentalHealthScreenings" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.FeelTrappedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DissatifiedWithLife {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.DissatifiedWithLifeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DissatifiedWithLife\' in table \'CustomDocumentMentalHealthSc" +
                                "reenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.DissatifiedWithLifeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnPleasantThoughts {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.UnPleasantThoughtsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnPleasantThoughts\' in table \'CustomDocumentMentalHealthScr" +
                                "eenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.UnPleasantThoughtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DifficultyInSleeping {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.DifficultyInSleepingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DifficultyInSleeping\' in table \'CustomDocumentMentalHealthS" +
                                "creenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.DifficultyInSleepingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PhysicallyHarmed {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.PhysicallyHarmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicallyHarmed\' in table \'CustomDocumentMentalHealthScree" +
                                "nings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.PhysicallyHarmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LostInterest {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.LostInterestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LostInterest\' in table \'CustomDocumentMentalHealthScreening" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.LostInterestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeelAngry {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.FeelAngryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeelAngry\' in table \'CustomDocumentMentalHealthScreenings\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.FeelAngryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GetIntoTrouble {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.GetIntoTroubleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GetIntoTrouble\' in table \'CustomDocumentMentalHealthScreeni" +
                                "ngs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.GetIntoTroubleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeelAfraid {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.FeelAfraidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeelAfraid\' in table \'CustomDocumentMentalHealthScreenings\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.FeelAfraidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FeelDepressed {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.FeelDepressedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FeelDepressed\' in table \'CustomDocumentMentalHealthScreenin" +
                                "gs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.FeelDepressedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SpendTimeOnThinkingAboutWeight {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentMentalHealthScreenings.SpendTimeOnThinkingAboutWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpendTimeOnThinkingAboutWeight\' in table \'CustomDocumentMen" +
                                "talHealthScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.SpendTimeOnThinkingAboutWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentMentalHealthScreenings.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'CustomDocumentMentalHealthScreenings\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentMentalHealthScreenings.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayingAttentionAtSchoolNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.PayingAttentionAtSchoolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayingAttentionAtSchoolNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.PayingAttentionAtSchoolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCanNotGetRidOfThoughtNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.CanNotGetRidOfThoughtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCanNotGetRidOfThoughtNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.CanNotGetRidOfThoughtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHearVoicesNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.HearVoicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHearVoicesNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.HearVoicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpendTimeKillingNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.SpendTimeKillingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpendTimeKillingNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.SpendTimeKillingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTriedToCommitSuicideNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.TriedToCommitSuicideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTriedToCommitSuicideNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.TriedToCommitSuicideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWatchYourStepNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.WatchYourStepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWatchYourStepNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.WatchYourStepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeelAnxiousNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.FeelAnxiousColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeelAnxiousNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.FeelAnxiousColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoughtsComeQuicklyNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.ThoughtsComeQuicklyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoughtsComeQuicklyNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.ThoughtsComeQuicklyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestroyedPropertyNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.DestroyedPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestroyedPropertyNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.DestroyedPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeelTrappedNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.FeelTrappedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeelTrappedNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.FeelTrappedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDissatifiedWithLifeNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.DissatifiedWithLifeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDissatifiedWithLifeNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.DissatifiedWithLifeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnPleasantThoughtsNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.UnPleasantThoughtsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnPleasantThoughtsNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.UnPleasantThoughtsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDifficultyInSleepingNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.DifficultyInSleepingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDifficultyInSleepingNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.DifficultyInSleepingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysicallyHarmedNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.PhysicallyHarmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysicallyHarmedNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.PhysicallyHarmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLostInterestNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.LostInterestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLostInterestNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.LostInterestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeelAngryNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.FeelAngryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeelAngryNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.FeelAngryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGetIntoTroubleNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.GetIntoTroubleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGetIntoTroubleNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.GetIntoTroubleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeelAfraidNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.FeelAfraidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeelAfraidNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.FeelAfraidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFeelDepressedNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.FeelDepressedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFeelDepressedNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.FeelDepressedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpendTimeOnThinkingAboutWeightNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.SpendTimeOnThinkingAboutWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpendTimeOnThinkingAboutWeightNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.SpendTimeOnThinkingAboutWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableCustomDocumentMentalHealthScreenings.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableCustomDocumentMentalHealthScreenings.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentTraumaticBrainInjuryScreeningsRow : global::System.Data.DataRow {
            
            private CustomDocumentTraumaticBrainInjuryScreeningsDataTable tableCustomDocumentTraumaticBrainInjuryScreenings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentTraumaticBrainInjuryScreeningsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentTraumaticBrainInjuryScreenings = ((CustomDocumentTraumaticBrainInjuryScreeningsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentTraumaticBrainInjury" +
                                "Screenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentTraumaticBrainInjuryScre" +
                                "enings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentTraumaticBrainInjurySc" +
                                "reenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BlowToTheHead {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.BlowToTheHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlowToTheHead\' in table \'CustomDocumentTraumaticBrainInjury" +
                                "Screenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.BlowToTheHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HeadBlowWhenDidItOccur {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HeadBlowWhenDidItOccurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadBlowWhenDidItOccur\' in table \'CustomDocumentTraumaticBr" +
                                "ainInjuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HeadBlowWhenDidItOccurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HowLongUnconscious {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongUnconsciousColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HowLongUnconscious\' in table \'CustomDocumentTraumaticBrainI" +
                                "njuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongUnconsciousColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CauseAConcussion {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CauseAConcussionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CauseAConcussion\' in table \'CustomDocumentTraumaticBrainInj" +
                                "uryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CauseAConcussionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConcussionWhenDidItOccur {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ConcussionWhenDidItOccurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConcussionWhenDidItOccur\' in table \'CustomDocumentTraumatic" +
                                "BrainInjuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ConcussionWhenDidItOccurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HowLongConcussionLast {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongConcussionLastColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HowLongConcussionLast\' in table \'CustomDocumentTraumaticBra" +
                                "inInjuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongConcussionLastColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReceiveTreatmentForHeadInjury {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ReceiveTreatmentForHeadInjuryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiveTreatmentForHeadInjury\' in table \'CustomDocumentTrau" +
                                "maticBrainInjuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ReceiveTreatmentForHeadInjuryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PhysicalAbilities {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.PhysicalAbilitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalAbilities\' in table \'CustomDocumentTraumaticBrainIn" +
                                "juryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.PhysicalAbilitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Mood {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.MoodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mood\' in table \'CustomDocumentTraumaticBrainInjuryScreening" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.MoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CareForYourSelf {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CareForYourSelfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CareForYourSelf\' in table \'CustomDocumentTraumaticBrainInju" +
                                "ryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CareForYourSelfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Temper {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.TemperColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temper\' in table \'CustomDocumentTraumaticBrainInjuryScreeni" +
                                "ngs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.TemperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Speech {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.SpeechColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speech\' in table \'CustomDocumentTraumaticBrainInjuryScreeni" +
                                "ngs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.SpeechColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RelationshipWithOthers {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.RelationshipWithOthersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RelationshipWithOthers\' in table \'CustomDocumentTraumaticBr" +
                                "ainInjuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.RelationshipWithOthersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Hearing {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HearingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Hearing\' in table \'CustomDocumentTraumaticBrainInjuryScreen" +
                                "ings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HearingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Memory {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.MemoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memory\' in table \'CustomDocumentTraumaticBrainInjuryScreeni" +
                                "ngs\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.MemoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AbilityToConcentrate {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToConcentrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbilityToConcentrate\' in table \'CustomDocumentTraumaticBrai" +
                                "nInjuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToConcentrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UseOfAlcohol {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.UseOfAlcoholColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseOfAlcohol\' in table \'CustomDocumentTraumaticBrainInjuryS" +
                                "creenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.UseOfAlcoholColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AbilityToWork {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToWorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbilityToWork\' in table \'CustomDocumentTraumaticBrainInjury" +
                                "Screenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToWorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChangedAfterInjury {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ChangedAfterInjuryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChangedAfterInjury\' in table \'CustomDocumentTraumaticBrainI" +
                                "njuryScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ChangedAfterInjuryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'CustomDocumentTraumaticBrainInjuryScree" +
                                "nings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlowToTheHeadNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.BlowToTheHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlowToTheHeadNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.BlowToTheHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadBlowWhenDidItOccurNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.HeadBlowWhenDidItOccurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadBlowWhenDidItOccurNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HeadBlowWhenDidItOccurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHowLongUnconsciousNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongUnconsciousColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHowLongUnconsciousNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongUnconsciousColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCauseAConcussionNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.CauseAConcussionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCauseAConcussionNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CauseAConcussionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConcussionWhenDidItOccurNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.ConcussionWhenDidItOccurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConcussionWhenDidItOccurNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ConcussionWhenDidItOccurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHowLongConcussionLastNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongConcussionLastColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHowLongConcussionLastNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HowLongConcussionLastColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveTreatmentForHeadInjuryNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.ReceiveTreatmentForHeadInjuryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveTreatmentForHeadInjuryNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ReceiveTreatmentForHeadInjuryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysicalAbilitiesNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.PhysicalAbilitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysicalAbilitiesNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.PhysicalAbilitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoodNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.MoodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoodNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.MoodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCareForYourSelfNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.CareForYourSelfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCareForYourSelfNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CareForYourSelfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTemperNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.TemperColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTemperNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.TemperColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpeechNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.SpeechColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpeechNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.SpeechColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRelationshipWithOthersNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.RelationshipWithOthersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRelationshipWithOthersNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.RelationshipWithOthersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHearingNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.HearingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHearingNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.HearingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoryNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.MemoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoryNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.MemoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbilityToConcentrateNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToConcentrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbilityToConcentrateNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToConcentrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseOfAlcoholNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.UseOfAlcoholColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseOfAlcoholNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.UseOfAlcoholColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbilityToWorkNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToWorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbilityToWorkNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.AbilityToWorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangedAfterInjuryNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.ChangedAfterInjuryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangedAfterInjuryNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.ChangedAfterInjuryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableCustomDocumentTraumaticBrainInjuryScreenings.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableCustomDocumentTraumaticBrainInjuryScreenings.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentOutComesScreeningsRow : global::System.Data.DataRow {
            
            private CustomDocumentOutComesScreeningsDataTable tableCustomDocumentOutComesScreenings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentOutComesScreeningsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentOutComesScreenings = ((CustomDocumentOutComesScreeningsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentOutComesScreenings.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentOutComesScreenings.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentOutComesScreenings.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentOutComesScreenings.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentOutComesScreenings.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentOutComesScreenings\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentOutComesScreenings\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentOutComesScreenings.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentOutComesScreenings\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubstanceAbuseConsumer {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubstanceAbuseConsumer\' in table \'CustomDocumentOutComesScr" +
                                "eenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstanceAbuseConsumerSteps {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerStepsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubstanceAbuseConsumerSteps\' in table \'CustomDocumentOutCom" +
                                "esScreenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerStepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MentalHealthConsumer {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MentalHealthConsumer\' in table \'CustomDocumentOutComesScree" +
                                "nings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MentalHealthConsumerSteps {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerStepsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MentalHealthConsumerSteps\' in table \'CustomDocumentOutComes" +
                                "Screenings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerStepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FASDAssessment {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentOutComesScreenings.FASDAssessmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FASDAssessment\' in table \'CustomDocumentOutComesScreenings\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.FASDAssessmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FASDAssessmentSteps {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.FASDAssessmentStepsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FASDAssessmentSteps\' in table \'CustomDocumentOutComesScreen" +
                                "ings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.FASDAssessmentStepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MHAndSAConsumer {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHAndSAConsumer\' in table \'CustomDocumentOutComesScreenings" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MHAndSAConsumerSteps {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerStepsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MHAndSAConsumerSteps\' in table \'CustomDocumentOutComesScree" +
                                "nings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerStepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EvidenceOfInjury {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvidenceOfInjury\' in table \'CustomDocumentOutComesScreening" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EvidenceOfInjurySteps {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryStepsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EvidenceOfInjurySteps\' in table \'CustomDocumentOutComesScre" +
                                "enings\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryStepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentOutComesScreenings.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'CustomDocumentOutComesScreenings\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentOutComesScreenings.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentOutComesScreenings.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentOutComesScreenings.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentOutComesScreenings.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstanceAbuseConsumerNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstanceAbuseConsumerNull() {
                this[this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstanceAbuseConsumerStepsNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerStepsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstanceAbuseConsumerStepsNull() {
                this[this.tableCustomDocumentOutComesScreenings.SubstanceAbuseConsumerStepsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMentalHealthConsumerNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMentalHealthConsumerNull() {
                this[this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMentalHealthConsumerStepsNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerStepsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMentalHealthConsumerStepsNull() {
                this[this.tableCustomDocumentOutComesScreenings.MentalHealthConsumerStepsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFASDAssessmentNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.FASDAssessmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFASDAssessmentNull() {
                this[this.tableCustomDocumentOutComesScreenings.FASDAssessmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFASDAssessmentStepsNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.FASDAssessmentStepsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFASDAssessmentStepsNull() {
                this[this.tableCustomDocumentOutComesScreenings.FASDAssessmentStepsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHAndSAConsumerNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHAndSAConsumerNull() {
                this[this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMHAndSAConsumerStepsNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerStepsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMHAndSAConsumerStepsNull() {
                this[this.tableCustomDocumentOutComesScreenings.MHAndSAConsumerStepsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEvidenceOfInjuryNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEvidenceOfInjuryNull() {
                this[this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEvidenceOfInjuryStepsNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryStepsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEvidenceOfInjuryStepsNull() {
                this[this.tableCustomDocumentOutComesScreenings.EvidenceOfInjuryStepsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableCustomDocumentOutComesScreenings.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableCustomDocumentOutComesScreenings.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentSubstanceAbuseScreeningsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentSubstanceAbuseScreeningsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSubstanceAbuseScreeningsRowChangeEvent(CustomDocumentSubstanceAbuseScreeningsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentSubstanceAbuseScreeningsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentMentalHealthScreeningsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentMentalHealthScreeningsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentMentalHealthScreeningsRowChangeEvent(CustomDocumentMentalHealthScreeningsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentMentalHealthScreeningsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentTraumaticBrainInjuryScreeningsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTraumaticBrainInjuryScreeningsRowChangeEvent(CustomDocumentTraumaticBrainInjuryScreeningsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTraumaticBrainInjuryScreeningsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentOutComesScreeningsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentOutComesScreeningsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentOutComesScreeningsRowChangeEvent(CustomDocumentOutComesScreeningsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentOutComesScreeningsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591