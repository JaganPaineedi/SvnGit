//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetCustomPsychiatricEvaluations {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCustomPsychiatricEvaluations")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCustomPsychiatricEvaluations : global::System.Data.DataSet {
        
        private CustomDocumentPsychiatricEvaluationsDataTable tableCustomDocumentPsychiatricEvaluations;
        
        private CustomPsychiatricEvaluationProblemsDataTable tableCustomPsychiatricEvaluationProblems;
        
        private DocumentDiagnosisCodesDataTable tableDocumentDiagnosisCodes;
        
        private DocumentDiagnosisDataTable tableDocumentDiagnosis;
        
        private DocumentDiagnosisFactorsDataTable tableDocumentDiagnosisFactors;
        
        private NoteEMCodeOptionsDataTable tableNoteEMCodeOptions;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetCustomPsychiatricEvaluations() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetCustomPsychiatricEvaluations(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentPsychiatricEvaluations"] != null)) {
                    base.Tables.Add(new CustomDocumentPsychiatricEvaluationsDataTable(ds.Tables["CustomDocumentPsychiatricEvaluations"]));
                }
                if ((ds.Tables["CustomPsychiatricEvaluationProblems"] != null)) {
                    base.Tables.Add(new CustomPsychiatricEvaluationProblemsDataTable(ds.Tables["CustomPsychiatricEvaluationProblems"]));
                }
                if ((ds.Tables["DocumentDiagnosisCodes"] != null)) {
                    base.Tables.Add(new DocumentDiagnosisCodesDataTable(ds.Tables["DocumentDiagnosisCodes"]));
                }
                if ((ds.Tables["DocumentDiagnosis"] != null)) {
                    base.Tables.Add(new DocumentDiagnosisDataTable(ds.Tables["DocumentDiagnosis"]));
                }
                if ((ds.Tables["DocumentDiagnosisFactors"] != null)) {
                    base.Tables.Add(new DocumentDiagnosisFactorsDataTable(ds.Tables["DocumentDiagnosisFactors"]));
                }
                if ((ds.Tables["NoteEMCodeOptions"] != null)) {
                    base.Tables.Add(new NoteEMCodeOptionsDataTable(ds.Tables["NoteEMCodeOptions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentPsychiatricEvaluationsDataTable CustomDocumentPsychiatricEvaluations {
            get {
                return this.tableCustomDocumentPsychiatricEvaluations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomPsychiatricEvaluationProblemsDataTable CustomPsychiatricEvaluationProblems {
            get {
                return this.tableCustomPsychiatricEvaluationProblems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentDiagnosisCodesDataTable DocumentDiagnosisCodes {
            get {
                return this.tableDocumentDiagnosisCodes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentDiagnosisDataTable DocumentDiagnosis {
            get {
                return this.tableDocumentDiagnosis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DocumentDiagnosisFactorsDataTable DocumentDiagnosisFactors {
            get {
                return this.tableDocumentDiagnosisFactors;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NoteEMCodeOptionsDataTable NoteEMCodeOptions {
            get {
                return this.tableNoteEMCodeOptions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetCustomPsychiatricEvaluations cln = ((DataSetCustomPsychiatricEvaluations)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentPsychiatricEvaluations"] != null)) {
                    base.Tables.Add(new CustomDocumentPsychiatricEvaluationsDataTable(ds.Tables["CustomDocumentPsychiatricEvaluations"]));
                }
                if ((ds.Tables["CustomPsychiatricEvaluationProblems"] != null)) {
                    base.Tables.Add(new CustomPsychiatricEvaluationProblemsDataTable(ds.Tables["CustomPsychiatricEvaluationProblems"]));
                }
                if ((ds.Tables["DocumentDiagnosisCodes"] != null)) {
                    base.Tables.Add(new DocumentDiagnosisCodesDataTable(ds.Tables["DocumentDiagnosisCodes"]));
                }
                if ((ds.Tables["DocumentDiagnosis"] != null)) {
                    base.Tables.Add(new DocumentDiagnosisDataTable(ds.Tables["DocumentDiagnosis"]));
                }
                if ((ds.Tables["DocumentDiagnosisFactors"] != null)) {
                    base.Tables.Add(new DocumentDiagnosisFactorsDataTable(ds.Tables["DocumentDiagnosisFactors"]));
                }
                if ((ds.Tables["NoteEMCodeOptions"] != null)) {
                    base.Tables.Add(new NoteEMCodeOptionsDataTable(ds.Tables["NoteEMCodeOptions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentPsychiatricEvaluations = ((CustomDocumentPsychiatricEvaluationsDataTable)(base.Tables["CustomDocumentPsychiatricEvaluations"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentPsychiatricEvaluations != null)) {
                    this.tableCustomDocumentPsychiatricEvaluations.InitVars();
                }
            }
            this.tableCustomPsychiatricEvaluationProblems = ((CustomPsychiatricEvaluationProblemsDataTable)(base.Tables["CustomPsychiatricEvaluationProblems"]));
            if ((initTable == true)) {
                if ((this.tableCustomPsychiatricEvaluationProblems != null)) {
                    this.tableCustomPsychiatricEvaluationProblems.InitVars();
                }
            }
            this.tableDocumentDiagnosisCodes = ((DocumentDiagnosisCodesDataTable)(base.Tables["DocumentDiagnosisCodes"]));
            if ((initTable == true)) {
                if ((this.tableDocumentDiagnosisCodes != null)) {
                    this.tableDocumentDiagnosisCodes.InitVars();
                }
            }
            this.tableDocumentDiagnosis = ((DocumentDiagnosisDataTable)(base.Tables["DocumentDiagnosis"]));
            if ((initTable == true)) {
                if ((this.tableDocumentDiagnosis != null)) {
                    this.tableDocumentDiagnosis.InitVars();
                }
            }
            this.tableDocumentDiagnosisFactors = ((DocumentDiagnosisFactorsDataTable)(base.Tables["DocumentDiagnosisFactors"]));
            if ((initTable == true)) {
                if ((this.tableDocumentDiagnosisFactors != null)) {
                    this.tableDocumentDiagnosisFactors.InitVars();
                }
            }
            this.tableNoteEMCodeOptions = ((NoteEMCodeOptionsDataTable)(base.Tables["NoteEMCodeOptions"]));
            if ((initTable == true)) {
                if ((this.tableNoteEMCodeOptions != null)) {
                    this.tableNoteEMCodeOptions.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetCustomPsychiatricEvaluations";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCustomPsychiatricEvaluations.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentPsychiatricEvaluations = new CustomDocumentPsychiatricEvaluationsDataTable();
            base.Tables.Add(this.tableCustomDocumentPsychiatricEvaluations);
            this.tableCustomPsychiatricEvaluationProblems = new CustomPsychiatricEvaluationProblemsDataTable();
            base.Tables.Add(this.tableCustomPsychiatricEvaluationProblems);
            this.tableDocumentDiagnosisCodes = new DocumentDiagnosisCodesDataTable();
            base.Tables.Add(this.tableDocumentDiagnosisCodes);
            this.tableDocumentDiagnosis = new DocumentDiagnosisDataTable();
            base.Tables.Add(this.tableDocumentDiagnosis);
            this.tableDocumentDiagnosisFactors = new DocumentDiagnosisFactorsDataTable();
            base.Tables.Add(this.tableDocumentDiagnosisFactors);
            this.tableNoteEMCodeOptions = new NoteEMCodeOptionsDataTable();
            base.Tables.Add(this.tableNoteEMCodeOptions);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentPsychiatricEvaluations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomPsychiatricEvaluationProblems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDocumentDiagnosisCodes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDocumentDiagnosis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDocumentDiagnosisFactors() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNoteEMCodeOptions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCustomPsychiatricEvaluations ds = new DataSetCustomPsychiatricEvaluations();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentPsychiatricEvaluationsRowChangeEventHandler(object sender, CustomDocumentPsychiatricEvaluationsRowChangeEvent e);
        
        public delegate void CustomPsychiatricEvaluationProblemsRowChangeEventHandler(object sender, CustomPsychiatricEvaluationProblemsRowChangeEvent e);
        
        public delegate void DocumentDiagnosisCodesRowChangeEventHandler(object sender, DocumentDiagnosisCodesRowChangeEvent e);
        
        public delegate void DocumentDiagnosisRowChangeEventHandler(object sender, DocumentDiagnosisRowChangeEvent e);
        
        public delegate void DocumentDiagnosisFactorsRowChangeEventHandler(object sender, DocumentDiagnosisFactorsRowChangeEvent e);
        
        public delegate void NoteEMCodeOptionsRowChangeEventHandler(object sender, NoteEMCodeOptionsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentPsychiatricEvaluationsDataTable : global::System.Data.TypedTableBase<CustomDocumentPsychiatricEvaluationsRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnNotifyStaff1;
            
            private global::System.Data.DataColumn columnNotifyStaff2;
            
            private global::System.Data.DataColumn columnNotifyStaff3;
            
            private global::System.Data.DataColumn columnNextPsychiatricAppointment;
            
            private global::System.Data.DataColumn columnSummaryAndRecommendations;
            
            private global::System.Data.DataColumn columnMedicationListAtTheTimeOfTransition;
            
            private global::System.Data.DataColumn columnIdentifyingInformation;
            
            private global::System.Data.DataColumn columnFamilyHistory;
            
            private global::System.Data.DataColumn columnPastPsychiatricHistory;
            
            private global::System.Data.DataColumn columnDevelopmentalHistory;
            
            private global::System.Data.DataColumn columnSubstanceAbuseHistory;
            
            private global::System.Data.DataColumn columnMedicalHistory;
            
            private global::System.Data.DataColumn columnHistoryofPresentIllness;
            
            private global::System.Data.DataColumn columnSocialHistory;
            
            private global::System.Data.DataColumn columnReviewOfSystemPsych;
            
            private global::System.Data.DataColumn columnReviewOfSystemSomaticConcerns;
            
            private global::System.Data.DataColumn columnReviewOfSystemConstitutional;
            
            private global::System.Data.DataColumn columnReviewOfSystemEarNoseMouthThroat;
            
            private global::System.Data.DataColumn columnReviewOfSystemGI;
            
            private global::System.Data.DataColumn columnReviewOfSystemGU;
            
            private global::System.Data.DataColumn columnReviewOfSystemIntegumentary;
            
            private global::System.Data.DataColumn columnReviewOfSystemEndo;
            
            private global::System.Data.DataColumn columnReviewOfSystemNeuro;
            
            private global::System.Data.DataColumn columnReviewOfSystemImmune;
            
            private global::System.Data.DataColumn columnReviewOfSystemEyes;
            
            private global::System.Data.DataColumn columnReviewOfSystemResp;
            
            private global::System.Data.DataColumn columnReviewOfSystemCardioVascular;
            
            private global::System.Data.DataColumn columnReviewOfSystemHemLymph;
            
            private global::System.Data.DataColumn columnReviewOfSystemMusculo;
            
            private global::System.Data.DataColumn columnReviewOfSystemAllOthersNegative;
            
            private global::System.Data.DataColumn columnReviewOfSystemComments;
            
            private global::System.Data.DataColumn columnAppropriatelyDressed;
            
            private global::System.Data.DataColumn columnGeneralAppearanceUnkept;
            
            private global::System.Data.DataColumn columnGeneralAppearanceOther;
            
            private global::System.Data.DataColumn columnGeneralAppearanceOtherText;
            
            private global::System.Data.DataColumn columnMuscleStrengthNormal;
            
            private global::System.Data.DataColumn columnMuscleStrengthAbnormal;
            
            private global::System.Data.DataColumn columnMusculoskeletalTone;
            
            private global::System.Data.DataColumn columnGaitNormal;
            
            private global::System.Data.DataColumn columnGaitAbnormal;
            
            private global::System.Data.DataColumn columnTicsTremorsAbnormalMovements;
            
            private global::System.Data.DataColumn columnEPS;
            
            private global::System.Data.DataColumn columnSuicidal;
            
            private global::System.Data.DataColumn columnHomicidal;
            
            private global::System.Data.DataColumn columnIndicateIdeation;
            
            private global::System.Data.DataColumn columnAppearanceBehavior;
            
            private global::System.Data.DataColumn columnAppearanceBehaviorComments;
            
            private global::System.Data.DataColumn columnSpeech;
            
            private global::System.Data.DataColumn columnSpeechComments;
            
            private global::System.Data.DataColumn columnThoughtProcess;
            
            private global::System.Data.DataColumn columnThoughtProcessComments;
            
            private global::System.Data.DataColumn columnAssociations;
            
            private global::System.Data.DataColumn columnAssociationsComments;
            
            private global::System.Data.DataColumn columnAbnormalPsychoticThoughts;
            
            private global::System.Data.DataColumn columnAbnormalPsychoticThoughtsComments;
            
            private global::System.Data.DataColumn columnJudgmentAndInsight;
            
            private global::System.Data.DataColumn columnJudgmentAndInsightComments;
            
            private global::System.Data.DataColumn columnOrientation;
            
            private global::System.Data.DataColumn columnOrientationComments;
            
            private global::System.Data.DataColumn columnRecentRemoteMemory;
            
            private global::System.Data.DataColumn columnRecentRemoteMemoryComments;
            
            private global::System.Data.DataColumn columnAttentionConcentration;
            
            private global::System.Data.DataColumn columnAttentionConcentrationComments;
            
            private global::System.Data.DataColumn columnLanguage;
            
            private global::System.Data.DataColumn columnLanguageCommments;
            
            private global::System.Data.DataColumn columnFundOfKnowledge;
            
            private global::System.Data.DataColumn columnFundOfKnowledgeComments;
            
            private global::System.Data.DataColumn columnMoodAndAffect;
            
            private global::System.Data.DataColumn columnMoodAndAffectComments;
            
            private global::System.Data.DataColumn columnMedicalRecords;
            
            private global::System.Data.DataColumn columnDiagnosticTest;
            
            private global::System.Data.DataColumn columnLabs;
            
            private global::System.Data.DataColumn columnLabsSelected;
            
            private global::System.Data.DataColumn columnMedicalRecordsComments;
            
            private global::System.Data.DataColumn columnOrderedMedications;
            
            private global::System.Data.DataColumn columnRisksBenefits;
            
            private global::System.Data.DataColumn columnNewlyEmergentSideEffects;
            
            private global::System.Data.DataColumn columnLabOrder;
            
            private global::System.Data.DataColumn columnRadiologyOrder;
            
            private global::System.Data.DataColumn columnConsultations;
            
            private global::System.Data.DataColumn columnOrdersComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentPsychiatricEvaluationsDataTable() {
                this.TableName = "CustomDocumentPsychiatricEvaluations";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentPsychiatricEvaluationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentPsychiatricEvaluationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotifyStaff1Column {
                get {
                    return this.columnNotifyStaff1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotifyStaff2Column {
                get {
                    return this.columnNotifyStaff2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotifyStaff3Column {
                get {
                    return this.columnNotifyStaff3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextPsychiatricAppointmentColumn {
                get {
                    return this.columnNextPsychiatricAppointment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummaryAndRecommendationsColumn {
                get {
                    return this.columnSummaryAndRecommendations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicationListAtTheTimeOfTransitionColumn {
                get {
                    return this.columnMedicationListAtTheTimeOfTransition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdentifyingInformationColumn {
                get {
                    return this.columnIdentifyingInformation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyHistoryColumn {
                get {
                    return this.columnFamilyHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PastPsychiatricHistoryColumn {
                get {
                    return this.columnPastPsychiatricHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DevelopmentalHistoryColumn {
                get {
                    return this.columnDevelopmentalHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstanceAbuseHistoryColumn {
                get {
                    return this.columnSubstanceAbuseHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalHistoryColumn {
                get {
                    return this.columnMedicalHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryofPresentIllnessColumn {
                get {
                    return this.columnHistoryofPresentIllness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocialHistoryColumn {
                get {
                    return this.columnSocialHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemPsychColumn {
                get {
                    return this.columnReviewOfSystemPsych;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemSomaticConcernsColumn {
                get {
                    return this.columnReviewOfSystemSomaticConcerns;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemConstitutionalColumn {
                get {
                    return this.columnReviewOfSystemConstitutional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemEarNoseMouthThroatColumn {
                get {
                    return this.columnReviewOfSystemEarNoseMouthThroat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemGIColumn {
                get {
                    return this.columnReviewOfSystemGI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemGUColumn {
                get {
                    return this.columnReviewOfSystemGU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemIntegumentaryColumn {
                get {
                    return this.columnReviewOfSystemIntegumentary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemEndoColumn {
                get {
                    return this.columnReviewOfSystemEndo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemNeuroColumn {
                get {
                    return this.columnReviewOfSystemNeuro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemImmuneColumn {
                get {
                    return this.columnReviewOfSystemImmune;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemEyesColumn {
                get {
                    return this.columnReviewOfSystemEyes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemRespColumn {
                get {
                    return this.columnReviewOfSystemResp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemCardioVascularColumn {
                get {
                    return this.columnReviewOfSystemCardioVascular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemHemLymphColumn {
                get {
                    return this.columnReviewOfSystemHemLymph;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemMusculoColumn {
                get {
                    return this.columnReviewOfSystemMusculo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemAllOthersNegativeColumn {
                get {
                    return this.columnReviewOfSystemAllOthersNegative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReviewOfSystemCommentsColumn {
                get {
                    return this.columnReviewOfSystemComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppropriatelyDressedColumn {
                get {
                    return this.columnAppropriatelyDressed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralAppearanceUnkeptColumn {
                get {
                    return this.columnGeneralAppearanceUnkept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralAppearanceOtherColumn {
                get {
                    return this.columnGeneralAppearanceOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeneralAppearanceOtherTextColumn {
                get {
                    return this.columnGeneralAppearanceOtherText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MuscleStrengthNormalColumn {
                get {
                    return this.columnMuscleStrengthNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MuscleStrengthAbnormalColumn {
                get {
                    return this.columnMuscleStrengthAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MusculoskeletalToneColumn {
                get {
                    return this.columnMusculoskeletalTone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GaitNormalColumn {
                get {
                    return this.columnGaitNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GaitAbnormalColumn {
                get {
                    return this.columnGaitAbnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TicsTremorsAbnormalMovementsColumn {
                get {
                    return this.columnTicsTremorsAbnormalMovements;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EPSColumn {
                get {
                    return this.columnEPS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuicidalColumn {
                get {
                    return this.columnSuicidal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HomicidalColumn {
                get {
                    return this.columnHomicidal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndicateIdeationColumn {
                get {
                    return this.columnIndicateIdeation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppearanceBehaviorColumn {
                get {
                    return this.columnAppearanceBehavior;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppearanceBehaviorCommentsColumn {
                get {
                    return this.columnAppearanceBehaviorComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpeechColumn {
                get {
                    return this.columnSpeech;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpeechCommentsColumn {
                get {
                    return this.columnSpeechComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoughtProcessColumn {
                get {
                    return this.columnThoughtProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThoughtProcessCommentsColumn {
                get {
                    return this.columnThoughtProcessComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociationsColumn {
                get {
                    return this.columnAssociations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociationsCommentsColumn {
                get {
                    return this.columnAssociationsComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbnormalPsychoticThoughtsColumn {
                get {
                    return this.columnAbnormalPsychoticThoughts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbnormalPsychoticThoughtsCommentsColumn {
                get {
                    return this.columnAbnormalPsychoticThoughtsComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JudgmentAndInsightColumn {
                get {
                    return this.columnJudgmentAndInsight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JudgmentAndInsightCommentsColumn {
                get {
                    return this.columnJudgmentAndInsightComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrientationColumn {
                get {
                    return this.columnOrientation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrientationCommentsColumn {
                get {
                    return this.columnOrientationComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecentRemoteMemoryColumn {
                get {
                    return this.columnRecentRemoteMemory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecentRemoteMemoryCommentsColumn {
                get {
                    return this.columnRecentRemoteMemoryComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttentionConcentrationColumn {
                get {
                    return this.columnAttentionConcentration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttentionConcentrationCommentsColumn {
                get {
                    return this.columnAttentionConcentrationComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LanguageColumn {
                get {
                    return this.columnLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LanguageCommmentsColumn {
                get {
                    return this.columnLanguageCommments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FundOfKnowledgeColumn {
                get {
                    return this.columnFundOfKnowledge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FundOfKnowledgeCommentsColumn {
                get {
                    return this.columnFundOfKnowledgeComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoodAndAffectColumn {
                get {
                    return this.columnMoodAndAffect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoodAndAffectCommentsColumn {
                get {
                    return this.columnMoodAndAffectComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalRecordsColumn {
                get {
                    return this.columnMedicalRecords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiagnosticTestColumn {
                get {
                    return this.columnDiagnosticTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabsColumn {
                get {
                    return this.columnLabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabsSelectedColumn {
                get {
                    return this.columnLabsSelected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicalRecordsCommentsColumn {
                get {
                    return this.columnMedicalRecordsComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderedMedicationsColumn {
                get {
                    return this.columnOrderedMedications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RisksBenefitsColumn {
                get {
                    return this.columnRisksBenefits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewlyEmergentSideEffectsColumn {
                get {
                    return this.columnNewlyEmergentSideEffects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabOrderColumn {
                get {
                    return this.columnLabOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RadiologyOrderColumn {
                get {
                    return this.columnRadiologyOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsultationsColumn {
                get {
                    return this.columnConsultations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrdersCommentsColumn {
                get {
                    return this.columnOrdersComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentPsychiatricEvaluationsRow this[int index] {
                get {
                    return ((CustomDocumentPsychiatricEvaluationsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentPsychiatricEvaluationsRowChangeEventHandler CustomDocumentPsychiatricEvaluationsRowChanging;
            
            public event CustomDocumentPsychiatricEvaluationsRowChangeEventHandler CustomDocumentPsychiatricEvaluationsRowChanged;
            
            public event CustomDocumentPsychiatricEvaluationsRowChangeEventHandler CustomDocumentPsychiatricEvaluationsRowDeleting;
            
            public event CustomDocumentPsychiatricEvaluationsRowChangeEventHandler CustomDocumentPsychiatricEvaluationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentPsychiatricEvaluationsRow(CustomDocumentPsychiatricEvaluationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentPsychiatricEvaluationsRow AddCustomDocumentPsychiatricEvaluationsRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int NotifyStaff1, 
                        int NotifyStaff2, 
                        int NotifyStaff3, 
                        string NextPsychiatricAppointment, 
                        string SummaryAndRecommendations, 
                        string MedicationListAtTheTimeOfTransition, 
                        string IdentifyingInformation, 
                        string FamilyHistory, 
                        string PastPsychiatricHistory, 
                        string DevelopmentalHistory, 
                        string SubstanceAbuseHistory, 
                        string MedicalHistory, 
                        string HistoryofPresentIllness, 
                        string SocialHistory, 
                        string ReviewOfSystemPsych, 
                        string ReviewOfSystemSomaticConcerns, 
                        string ReviewOfSystemConstitutional, 
                        string ReviewOfSystemEarNoseMouthThroat, 
                        string ReviewOfSystemGI, 
                        string ReviewOfSystemGU, 
                        string ReviewOfSystemIntegumentary, 
                        string ReviewOfSystemEndo, 
                        string ReviewOfSystemNeuro, 
                        string ReviewOfSystemImmune, 
                        string ReviewOfSystemEyes, 
                        string ReviewOfSystemResp, 
                        string ReviewOfSystemCardioVascular, 
                        string ReviewOfSystemHemLymph, 
                        string ReviewOfSystemMusculo, 
                        string ReviewOfSystemAllOthersNegative, 
                        string ReviewOfSystemComments, 
                        string AppropriatelyDressed, 
                        string GeneralAppearanceUnkept, 
                        string GeneralAppearanceOther, 
                        string GeneralAppearanceOtherText, 
                        string MuscleStrengthNormal, 
                        string MuscleStrengthAbnormal, 
                        string MusculoskeletalTone, 
                        string GaitNormal, 
                        string GaitAbnormal, 
                        string TicsTremorsAbnormalMovements, 
                        string EPS, 
                        string Suicidal, 
                        string Homicidal, 
                        string IndicateIdeation, 
                        string AppearanceBehavior, 
                        string AppearanceBehaviorComments, 
                        string Speech, 
                        string SpeechComments, 
                        string ThoughtProcess, 
                        string ThoughtProcessComments, 
                        string Associations, 
                        string AssociationsComments, 
                        string AbnormalPsychoticThoughts, 
                        string AbnormalPsychoticThoughtsComments, 
                        string JudgmentAndInsight, 
                        string JudgmentAndInsightComments, 
                        string Orientation, 
                        string OrientationComments, 
                        string RecentRemoteMemory, 
                        string RecentRemoteMemoryComments, 
                        string AttentionConcentration, 
                        string AttentionConcentrationComments, 
                        string Language, 
                        string LanguageCommments, 
                        string FundOfKnowledge, 
                        string FundOfKnowledgeComments, 
                        string MoodAndAffect, 
                        string MoodAndAffectComments, 
                        string MedicalRecords, 
                        string DiagnosticTest, 
                        string Labs, 
                        int LabsSelected, 
                        string MedicalRecordsComments, 
                        string OrderedMedications, 
                        string RisksBenefits, 
                        string NewlyEmergentSideEffects, 
                        string LabOrder, 
                        string RadiologyOrder, 
                        string Consultations, 
                        string OrdersComments) {
                CustomDocumentPsychiatricEvaluationsRow rowCustomDocumentPsychiatricEvaluationsRow = ((CustomDocumentPsychiatricEvaluationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        NotifyStaff1,
                        NotifyStaff2,
                        NotifyStaff3,
                        NextPsychiatricAppointment,
                        SummaryAndRecommendations,
                        MedicationListAtTheTimeOfTransition,
                        IdentifyingInformation,
                        FamilyHistory,
                        PastPsychiatricHistory,
                        DevelopmentalHistory,
                        SubstanceAbuseHistory,
                        MedicalHistory,
                        HistoryofPresentIllness,
                        SocialHistory,
                        ReviewOfSystemPsych,
                        ReviewOfSystemSomaticConcerns,
                        ReviewOfSystemConstitutional,
                        ReviewOfSystemEarNoseMouthThroat,
                        ReviewOfSystemGI,
                        ReviewOfSystemGU,
                        ReviewOfSystemIntegumentary,
                        ReviewOfSystemEndo,
                        ReviewOfSystemNeuro,
                        ReviewOfSystemImmune,
                        ReviewOfSystemEyes,
                        ReviewOfSystemResp,
                        ReviewOfSystemCardioVascular,
                        ReviewOfSystemHemLymph,
                        ReviewOfSystemMusculo,
                        ReviewOfSystemAllOthersNegative,
                        ReviewOfSystemComments,
                        AppropriatelyDressed,
                        GeneralAppearanceUnkept,
                        GeneralAppearanceOther,
                        GeneralAppearanceOtherText,
                        MuscleStrengthNormal,
                        MuscleStrengthAbnormal,
                        MusculoskeletalTone,
                        GaitNormal,
                        GaitAbnormal,
                        TicsTremorsAbnormalMovements,
                        EPS,
                        Suicidal,
                        Homicidal,
                        IndicateIdeation,
                        AppearanceBehavior,
                        AppearanceBehaviorComments,
                        Speech,
                        SpeechComments,
                        ThoughtProcess,
                        ThoughtProcessComments,
                        Associations,
                        AssociationsComments,
                        AbnormalPsychoticThoughts,
                        AbnormalPsychoticThoughtsComments,
                        JudgmentAndInsight,
                        JudgmentAndInsightComments,
                        Orientation,
                        OrientationComments,
                        RecentRemoteMemory,
                        RecentRemoteMemoryComments,
                        AttentionConcentration,
                        AttentionConcentrationComments,
                        Language,
                        LanguageCommments,
                        FundOfKnowledge,
                        FundOfKnowledgeComments,
                        MoodAndAffect,
                        MoodAndAffectComments,
                        MedicalRecords,
                        DiagnosticTest,
                        Labs,
                        LabsSelected,
                        MedicalRecordsComments,
                        OrderedMedications,
                        RisksBenefits,
                        NewlyEmergentSideEffects,
                        LabOrder,
                        RadiologyOrder,
                        Consultations,
                        OrdersComments};
                rowCustomDocumentPsychiatricEvaluationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentPsychiatricEvaluationsRow);
                return rowCustomDocumentPsychiatricEvaluationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentPsychiatricEvaluationsRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentPsychiatricEvaluationsRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentPsychiatricEvaluationsDataTable cln = ((CustomDocumentPsychiatricEvaluationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentPsychiatricEvaluationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnNotifyStaff1 = base.Columns["NotifyStaff1"];
                this.columnNotifyStaff2 = base.Columns["NotifyStaff2"];
                this.columnNotifyStaff3 = base.Columns["NotifyStaff3"];
                this.columnNextPsychiatricAppointment = base.Columns["NextPsychiatricAppointment"];
                this.columnSummaryAndRecommendations = base.Columns["SummaryAndRecommendations"];
                this.columnMedicationListAtTheTimeOfTransition = base.Columns["MedicationListAtTheTimeOfTransition"];
                this.columnIdentifyingInformation = base.Columns["IdentifyingInformation"];
                this.columnFamilyHistory = base.Columns["FamilyHistory"];
                this.columnPastPsychiatricHistory = base.Columns["PastPsychiatricHistory"];
                this.columnDevelopmentalHistory = base.Columns["DevelopmentalHistory"];
                this.columnSubstanceAbuseHistory = base.Columns["SubstanceAbuseHistory"];
                this.columnMedicalHistory = base.Columns["MedicalHistory"];
                this.columnHistoryofPresentIllness = base.Columns["HistoryofPresentIllness"];
                this.columnSocialHistory = base.Columns["SocialHistory"];
                this.columnReviewOfSystemPsych = base.Columns["ReviewOfSystemPsych"];
                this.columnReviewOfSystemSomaticConcerns = base.Columns["ReviewOfSystemSomaticConcerns"];
                this.columnReviewOfSystemConstitutional = base.Columns["ReviewOfSystemConstitutional"];
                this.columnReviewOfSystemEarNoseMouthThroat = base.Columns["ReviewOfSystemEarNoseMouthThroat"];
                this.columnReviewOfSystemGI = base.Columns["ReviewOfSystemGI"];
                this.columnReviewOfSystemGU = base.Columns["ReviewOfSystemGU"];
                this.columnReviewOfSystemIntegumentary = base.Columns["ReviewOfSystemIntegumentary"];
                this.columnReviewOfSystemEndo = base.Columns["ReviewOfSystemEndo"];
                this.columnReviewOfSystemNeuro = base.Columns["ReviewOfSystemNeuro"];
                this.columnReviewOfSystemImmune = base.Columns["ReviewOfSystemImmune"];
                this.columnReviewOfSystemEyes = base.Columns["ReviewOfSystemEyes"];
                this.columnReviewOfSystemResp = base.Columns["ReviewOfSystemResp"];
                this.columnReviewOfSystemCardioVascular = base.Columns["ReviewOfSystemCardioVascular"];
                this.columnReviewOfSystemHemLymph = base.Columns["ReviewOfSystemHemLymph"];
                this.columnReviewOfSystemMusculo = base.Columns["ReviewOfSystemMusculo"];
                this.columnReviewOfSystemAllOthersNegative = base.Columns["ReviewOfSystemAllOthersNegative"];
                this.columnReviewOfSystemComments = base.Columns["ReviewOfSystemComments"];
                this.columnAppropriatelyDressed = base.Columns["AppropriatelyDressed"];
                this.columnGeneralAppearanceUnkept = base.Columns["GeneralAppearanceUnkept"];
                this.columnGeneralAppearanceOther = base.Columns["GeneralAppearanceOther"];
                this.columnGeneralAppearanceOtherText = base.Columns["GeneralAppearanceOtherText"];
                this.columnMuscleStrengthNormal = base.Columns["MuscleStrengthNormal"];
                this.columnMuscleStrengthAbnormal = base.Columns["MuscleStrengthAbnormal"];
                this.columnMusculoskeletalTone = base.Columns["MusculoskeletalTone"];
                this.columnGaitNormal = base.Columns["GaitNormal"];
                this.columnGaitAbnormal = base.Columns["GaitAbnormal"];
                this.columnTicsTremorsAbnormalMovements = base.Columns["TicsTremorsAbnormalMovements"];
                this.columnEPS = base.Columns["EPS"];
                this.columnSuicidal = base.Columns["Suicidal"];
                this.columnHomicidal = base.Columns["Homicidal"];
                this.columnIndicateIdeation = base.Columns["IndicateIdeation"];
                this.columnAppearanceBehavior = base.Columns["AppearanceBehavior"];
                this.columnAppearanceBehaviorComments = base.Columns["AppearanceBehaviorComments"];
                this.columnSpeech = base.Columns["Speech"];
                this.columnSpeechComments = base.Columns["SpeechComments"];
                this.columnThoughtProcess = base.Columns["ThoughtProcess"];
                this.columnThoughtProcessComments = base.Columns["ThoughtProcessComments"];
                this.columnAssociations = base.Columns["Associations"];
                this.columnAssociationsComments = base.Columns["AssociationsComments"];
                this.columnAbnormalPsychoticThoughts = base.Columns["AbnormalPsychoticThoughts"];
                this.columnAbnormalPsychoticThoughtsComments = base.Columns["AbnormalPsychoticThoughtsComments"];
                this.columnJudgmentAndInsight = base.Columns["JudgmentAndInsight"];
                this.columnJudgmentAndInsightComments = base.Columns["JudgmentAndInsightComments"];
                this.columnOrientation = base.Columns["Orientation"];
                this.columnOrientationComments = base.Columns["OrientationComments"];
                this.columnRecentRemoteMemory = base.Columns["RecentRemoteMemory"];
                this.columnRecentRemoteMemoryComments = base.Columns["RecentRemoteMemoryComments"];
                this.columnAttentionConcentration = base.Columns["AttentionConcentration"];
                this.columnAttentionConcentrationComments = base.Columns["AttentionConcentrationComments"];
                this.columnLanguage = base.Columns["Language"];
                this.columnLanguageCommments = base.Columns["LanguageCommments"];
                this.columnFundOfKnowledge = base.Columns["FundOfKnowledge"];
                this.columnFundOfKnowledgeComments = base.Columns["FundOfKnowledgeComments"];
                this.columnMoodAndAffect = base.Columns["MoodAndAffect"];
                this.columnMoodAndAffectComments = base.Columns["MoodAndAffectComments"];
                this.columnMedicalRecords = base.Columns["MedicalRecords"];
                this.columnDiagnosticTest = base.Columns["DiagnosticTest"];
                this.columnLabs = base.Columns["Labs"];
                this.columnLabsSelected = base.Columns["LabsSelected"];
                this.columnMedicalRecordsComments = base.Columns["MedicalRecordsComments"];
                this.columnOrderedMedications = base.Columns["OrderedMedications"];
                this.columnRisksBenefits = base.Columns["RisksBenefits"];
                this.columnNewlyEmergentSideEffects = base.Columns["NewlyEmergentSideEffects"];
                this.columnLabOrder = base.Columns["LabOrder"];
                this.columnRadiologyOrder = base.Columns["RadiologyOrder"];
                this.columnConsultations = base.Columns["Consultations"];
                this.columnOrdersComments = base.Columns["OrdersComments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnNotifyStaff1 = new global::System.Data.DataColumn("NotifyStaff1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyStaff1);
                this.columnNotifyStaff2 = new global::System.Data.DataColumn("NotifyStaff2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyStaff2);
                this.columnNotifyStaff3 = new global::System.Data.DataColumn("NotifyStaff3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyStaff3);
                this.columnNextPsychiatricAppointment = new global::System.Data.DataColumn("NextPsychiatricAppointment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextPsychiatricAppointment);
                this.columnSummaryAndRecommendations = new global::System.Data.DataColumn("SummaryAndRecommendations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummaryAndRecommendations);
                this.columnMedicationListAtTheTimeOfTransition = new global::System.Data.DataColumn("MedicationListAtTheTimeOfTransition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicationListAtTheTimeOfTransition);
                this.columnIdentifyingInformation = new global::System.Data.DataColumn("IdentifyingInformation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentifyingInformation);
                this.columnFamilyHistory = new global::System.Data.DataColumn("FamilyHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyHistory);
                this.columnPastPsychiatricHistory = new global::System.Data.DataColumn("PastPsychiatricHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPastPsychiatricHistory);
                this.columnDevelopmentalHistory = new global::System.Data.DataColumn("DevelopmentalHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDevelopmentalHistory);
                this.columnSubstanceAbuseHistory = new global::System.Data.DataColumn("SubstanceAbuseHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstanceAbuseHistory);
                this.columnMedicalHistory = new global::System.Data.DataColumn("MedicalHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalHistory);
                this.columnHistoryofPresentIllness = new global::System.Data.DataColumn("HistoryofPresentIllness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryofPresentIllness);
                this.columnSocialHistory = new global::System.Data.DataColumn("SocialHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocialHistory);
                this.columnReviewOfSystemPsych = new global::System.Data.DataColumn("ReviewOfSystemPsych", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemPsych);
                this.columnReviewOfSystemSomaticConcerns = new global::System.Data.DataColumn("ReviewOfSystemSomaticConcerns", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemSomaticConcerns);
                this.columnReviewOfSystemConstitutional = new global::System.Data.DataColumn("ReviewOfSystemConstitutional", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemConstitutional);
                this.columnReviewOfSystemEarNoseMouthThroat = new global::System.Data.DataColumn("ReviewOfSystemEarNoseMouthThroat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemEarNoseMouthThroat);
                this.columnReviewOfSystemGI = new global::System.Data.DataColumn("ReviewOfSystemGI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemGI);
                this.columnReviewOfSystemGU = new global::System.Data.DataColumn("ReviewOfSystemGU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemGU);
                this.columnReviewOfSystemIntegumentary = new global::System.Data.DataColumn("ReviewOfSystemIntegumentary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemIntegumentary);
                this.columnReviewOfSystemEndo = new global::System.Data.DataColumn("ReviewOfSystemEndo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemEndo);
                this.columnReviewOfSystemNeuro = new global::System.Data.DataColumn("ReviewOfSystemNeuro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemNeuro);
                this.columnReviewOfSystemImmune = new global::System.Data.DataColumn("ReviewOfSystemImmune", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemImmune);
                this.columnReviewOfSystemEyes = new global::System.Data.DataColumn("ReviewOfSystemEyes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemEyes);
                this.columnReviewOfSystemResp = new global::System.Data.DataColumn("ReviewOfSystemResp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemResp);
                this.columnReviewOfSystemCardioVascular = new global::System.Data.DataColumn("ReviewOfSystemCardioVascular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemCardioVascular);
                this.columnReviewOfSystemHemLymph = new global::System.Data.DataColumn("ReviewOfSystemHemLymph", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemHemLymph);
                this.columnReviewOfSystemMusculo = new global::System.Data.DataColumn("ReviewOfSystemMusculo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemMusculo);
                this.columnReviewOfSystemAllOthersNegative = new global::System.Data.DataColumn("ReviewOfSystemAllOthersNegative", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemAllOthersNegative);
                this.columnReviewOfSystemComments = new global::System.Data.DataColumn("ReviewOfSystemComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReviewOfSystemComments);
                this.columnAppropriatelyDressed = new global::System.Data.DataColumn("AppropriatelyDressed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppropriatelyDressed);
                this.columnGeneralAppearanceUnkept = new global::System.Data.DataColumn("GeneralAppearanceUnkept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralAppearanceUnkept);
                this.columnGeneralAppearanceOther = new global::System.Data.DataColumn("GeneralAppearanceOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralAppearanceOther);
                this.columnGeneralAppearanceOtherText = new global::System.Data.DataColumn("GeneralAppearanceOtherText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralAppearanceOtherText);
                this.columnMuscleStrengthNormal = new global::System.Data.DataColumn("MuscleStrengthNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMuscleStrengthNormal);
                this.columnMuscleStrengthAbnormal = new global::System.Data.DataColumn("MuscleStrengthAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMuscleStrengthAbnormal);
                this.columnMusculoskeletalTone = new global::System.Data.DataColumn("MusculoskeletalTone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMusculoskeletalTone);
                this.columnGaitNormal = new global::System.Data.DataColumn("GaitNormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitNormal);
                this.columnGaitAbnormal = new global::System.Data.DataColumn("GaitAbnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGaitAbnormal);
                this.columnTicsTremorsAbnormalMovements = new global::System.Data.DataColumn("TicsTremorsAbnormalMovements", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicsTremorsAbnormalMovements);
                this.columnEPS = new global::System.Data.DataColumn("EPS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEPS);
                this.columnSuicidal = new global::System.Data.DataColumn("Suicidal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuicidal);
                this.columnHomicidal = new global::System.Data.DataColumn("Homicidal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHomicidal);
                this.columnIndicateIdeation = new global::System.Data.DataColumn("IndicateIdeation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndicateIdeation);
                this.columnAppearanceBehavior = new global::System.Data.DataColumn("AppearanceBehavior", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppearanceBehavior);
                this.columnAppearanceBehaviorComments = new global::System.Data.DataColumn("AppearanceBehaviorComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppearanceBehaviorComments);
                this.columnSpeech = new global::System.Data.DataColumn("Speech", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeech);
                this.columnSpeechComments = new global::System.Data.DataColumn("SpeechComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeechComments);
                this.columnThoughtProcess = new global::System.Data.DataColumn("ThoughtProcess", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoughtProcess);
                this.columnThoughtProcessComments = new global::System.Data.DataColumn("ThoughtProcessComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThoughtProcessComments);
                this.columnAssociations = new global::System.Data.DataColumn("Associations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociations);
                this.columnAssociationsComments = new global::System.Data.DataColumn("AssociationsComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociationsComments);
                this.columnAbnormalPsychoticThoughts = new global::System.Data.DataColumn("AbnormalPsychoticThoughts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormalPsychoticThoughts);
                this.columnAbnormalPsychoticThoughtsComments = new global::System.Data.DataColumn("AbnormalPsychoticThoughtsComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormalPsychoticThoughtsComments);
                this.columnJudgmentAndInsight = new global::System.Data.DataColumn("JudgmentAndInsight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJudgmentAndInsight);
                this.columnJudgmentAndInsightComments = new global::System.Data.DataColumn("JudgmentAndInsightComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJudgmentAndInsightComments);
                this.columnOrientation = new global::System.Data.DataColumn("Orientation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrientation);
                this.columnOrientationComments = new global::System.Data.DataColumn("OrientationComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrientationComments);
                this.columnRecentRemoteMemory = new global::System.Data.DataColumn("RecentRemoteMemory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecentRemoteMemory);
                this.columnRecentRemoteMemoryComments = new global::System.Data.DataColumn("RecentRemoteMemoryComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecentRemoteMemoryComments);
                this.columnAttentionConcentration = new global::System.Data.DataColumn("AttentionConcentration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttentionConcentration);
                this.columnAttentionConcentrationComments = new global::System.Data.DataColumn("AttentionConcentrationComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttentionConcentrationComments);
                this.columnLanguage = new global::System.Data.DataColumn("Language", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLanguage);
                this.columnLanguageCommments = new global::System.Data.DataColumn("LanguageCommments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLanguageCommments);
                this.columnFundOfKnowledge = new global::System.Data.DataColumn("FundOfKnowledge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundOfKnowledge);
                this.columnFundOfKnowledgeComments = new global::System.Data.DataColumn("FundOfKnowledgeComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFundOfKnowledgeComments);
                this.columnMoodAndAffect = new global::System.Data.DataColumn("MoodAndAffect", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoodAndAffect);
                this.columnMoodAndAffectComments = new global::System.Data.DataColumn("MoodAndAffectComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoodAndAffectComments);
                this.columnMedicalRecords = new global::System.Data.DataColumn("MedicalRecords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalRecords);
                this.columnDiagnosticTest = new global::System.Data.DataColumn("DiagnosticTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosticTest);
                this.columnLabs = new global::System.Data.DataColumn("Labs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabs);
                this.columnLabsSelected = new global::System.Data.DataColumn("LabsSelected", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabsSelected);
                this.columnMedicalRecordsComments = new global::System.Data.DataColumn("MedicalRecordsComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalRecordsComments);
                this.columnOrderedMedications = new global::System.Data.DataColumn("OrderedMedications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderedMedications);
                this.columnRisksBenefits = new global::System.Data.DataColumn("RisksBenefits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRisksBenefits);
                this.columnNewlyEmergentSideEffects = new global::System.Data.DataColumn("NewlyEmergentSideEffects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewlyEmergentSideEffects);
                this.columnLabOrder = new global::System.Data.DataColumn("LabOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabOrder);
                this.columnRadiologyOrder = new global::System.Data.DataColumn("RadiologyOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRadiologyOrder);
                this.columnConsultations = new global::System.Data.DataColumn("Consultations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultations);
                this.columnOrdersComments = new global::System.Data.DataColumn("OrdersComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrdersComments);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnNextPsychiatricAppointment.MaxLength = 2147483647;
                this.columnSummaryAndRecommendations.MaxLength = 2147483647;
                this.columnMedicationListAtTheTimeOfTransition.MaxLength = 2147483647;
                this.columnIdentifyingInformation.MaxLength = 2147483647;
                this.columnFamilyHistory.MaxLength = 2147483647;
                this.columnPastPsychiatricHistory.MaxLength = 2147483647;
                this.columnDevelopmentalHistory.MaxLength = 2147483647;
                this.columnSubstanceAbuseHistory.MaxLength = 2147483647;
                this.columnMedicalHistory.MaxLength = 2147483647;
                this.columnHistoryofPresentIllness.MaxLength = 2147483647;
                this.columnSocialHistory.MaxLength = 2147483647;
                this.columnReviewOfSystemPsych.MaxLength = 1;
                this.columnReviewOfSystemSomaticConcerns.MaxLength = 1;
                this.columnReviewOfSystemConstitutional.MaxLength = 1;
                this.columnReviewOfSystemEarNoseMouthThroat.MaxLength = 1;
                this.columnReviewOfSystemGI.MaxLength = 1;
                this.columnReviewOfSystemGU.MaxLength = 1;
                this.columnReviewOfSystemIntegumentary.MaxLength = 1;
                this.columnReviewOfSystemEndo.MaxLength = 1;
                this.columnReviewOfSystemNeuro.MaxLength = 1;
                this.columnReviewOfSystemImmune.MaxLength = 1;
                this.columnReviewOfSystemEyes.MaxLength = 1;
                this.columnReviewOfSystemResp.MaxLength = 1;
                this.columnReviewOfSystemCardioVascular.MaxLength = 1;
                this.columnReviewOfSystemHemLymph.MaxLength = 1;
                this.columnReviewOfSystemMusculo.MaxLength = 1;
                this.columnReviewOfSystemAllOthersNegative.MaxLength = 1;
                this.columnReviewOfSystemComments.MaxLength = 2147483647;
                this.columnAppropriatelyDressed.MaxLength = 1;
                this.columnGeneralAppearanceUnkept.MaxLength = 1;
                this.columnGeneralAppearanceOther.MaxLength = 1;
                this.columnGeneralAppearanceOtherText.MaxLength = 2147483647;
                this.columnMuscleStrengthNormal.MaxLength = 1;
                this.columnMuscleStrengthAbnormal.MaxLength = 1;
                this.columnMusculoskeletalTone.MaxLength = 1;
                this.columnGaitNormal.MaxLength = 1;
                this.columnGaitAbnormal.MaxLength = 1;
                this.columnTicsTremorsAbnormalMovements.MaxLength = 1;
                this.columnEPS.MaxLength = 1;
                this.columnSuicidal.MaxLength = 1;
                this.columnHomicidal.MaxLength = 1;
                this.columnIndicateIdeation.MaxLength = 2147483647;
                this.columnAppearanceBehavior.MaxLength = 1;
                this.columnAppearanceBehaviorComments.MaxLength = 2147483647;
                this.columnSpeech.MaxLength = 1;
                this.columnSpeechComments.MaxLength = 2147483647;
                this.columnThoughtProcess.MaxLength = 1;
                this.columnThoughtProcessComments.MaxLength = 2147483647;
                this.columnAssociations.MaxLength = 1;
                this.columnAssociationsComments.MaxLength = 2147483647;
                this.columnAbnormalPsychoticThoughts.MaxLength = 1;
                this.columnAbnormalPsychoticThoughtsComments.MaxLength = 2147483647;
                this.columnJudgmentAndInsight.MaxLength = 1;
                this.columnJudgmentAndInsightComments.MaxLength = 2147483647;
                this.columnOrientation.MaxLength = 1;
                this.columnOrientationComments.MaxLength = 2147483647;
                this.columnRecentRemoteMemory.MaxLength = 1;
                this.columnRecentRemoteMemoryComments.MaxLength = 2147483647;
                this.columnAttentionConcentration.MaxLength = 1;
                this.columnAttentionConcentrationComments.MaxLength = 2147483647;
                this.columnLanguage.MaxLength = 1;
                this.columnLanguageCommments.MaxLength = 2147483647;
                this.columnFundOfKnowledge.MaxLength = 1;
                this.columnFundOfKnowledgeComments.MaxLength = 2147483647;
                this.columnMoodAndAffect.MaxLength = 1;
                this.columnMoodAndAffectComments.MaxLength = 2147483647;
                this.columnMedicalRecords.MaxLength = 1;
                this.columnDiagnosticTest.MaxLength = 1;
                this.columnLabs.MaxLength = 1;
                this.columnMedicalRecordsComments.MaxLength = 2147483647;
                this.columnOrderedMedications.MaxLength = 1;
                this.columnRisksBenefits.MaxLength = 1;
                this.columnNewlyEmergentSideEffects.MaxLength = 1;
                this.columnLabOrder.MaxLength = 1;
                this.columnRadiologyOrder.MaxLength = 1;
                this.columnConsultations.MaxLength = 1;
                this.columnOrdersComments.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentPsychiatricEvaluationsRow NewCustomDocumentPsychiatricEvaluationsRow() {
                return ((CustomDocumentPsychiatricEvaluationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentPsychiatricEvaluationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentPsychiatricEvaluationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentPsychiatricEvaluationsRowChanged != null)) {
                    this.CustomDocumentPsychiatricEvaluationsRowChanged(this, new CustomDocumentPsychiatricEvaluationsRowChangeEvent(((CustomDocumentPsychiatricEvaluationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentPsychiatricEvaluationsRowChanging != null)) {
                    this.CustomDocumentPsychiatricEvaluationsRowChanging(this, new CustomDocumentPsychiatricEvaluationsRowChangeEvent(((CustomDocumentPsychiatricEvaluationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentPsychiatricEvaluationsRowDeleted != null)) {
                    this.CustomDocumentPsychiatricEvaluationsRowDeleted(this, new CustomDocumentPsychiatricEvaluationsRowChangeEvent(((CustomDocumentPsychiatricEvaluationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentPsychiatricEvaluationsRowDeleting != null)) {
                    this.CustomDocumentPsychiatricEvaluationsRowDeleting(this, new CustomDocumentPsychiatricEvaluationsRowChangeEvent(((CustomDocumentPsychiatricEvaluationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentPsychiatricEvaluationsRow(CustomDocumentPsychiatricEvaluationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomPsychiatricEvaluations ds = new DataSetCustomPsychiatricEvaluations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentPsychiatricEvaluationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomPsychiatricEvaluationProblemsDataTable : global::System.Data.TypedTableBase<CustomPsychiatricEvaluationProblemsRow> {
            
            private global::System.Data.DataColumn columnPsychiatricEvaluationProblemId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnProblemText;
            
            private global::System.Data.DataColumn columnSeverity;
            
            private global::System.Data.DataColumn columnDuration;
            
            private global::System.Data.DataColumn columnIntensity;
            
            private global::System.Data.DataColumn columnTimeOfDayMorning;
            
            private global::System.Data.DataColumn columnTimeOfDayNoon;
            
            private global::System.Data.DataColumn columnTimeOfDayAfternoon;
            
            private global::System.Data.DataColumn columnTimeOfDayEvening;
            
            private global::System.Data.DataColumn columnTimeOfDayNight;
            
            private global::System.Data.DataColumn columnContextHome;
            
            private global::System.Data.DataColumn columnContextSchool;
            
            private global::System.Data.DataColumn columnContextWork;
            
            private global::System.Data.DataColumn columnContextCommunity;
            
            private global::System.Data.DataColumn columnContextOther;
            
            private global::System.Data.DataColumn columnContextOtherText;
            
            private global::System.Data.DataColumn columnAssociatedSignsSymptoms;
            
            private global::System.Data.DataColumn columnAssociatedSignsSymptomsOtherText;
            
            private global::System.Data.DataColumn columnModifyingFactors;
            
            private global::System.Data.DataColumn columnReasonResolved;
            
            private global::System.Data.DataColumn columnProblemStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomPsychiatricEvaluationProblemsDataTable() {
                this.TableName = "CustomPsychiatricEvaluationProblems";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomPsychiatricEvaluationProblemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomPsychiatricEvaluationProblemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PsychiatricEvaluationProblemIdColumn {
                get {
                    return this.columnPsychiatricEvaluationProblemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemTextColumn {
                get {
                    return this.columnProblemText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeverityColumn {
                get {
                    return this.columnSeverity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntensityColumn {
                get {
                    return this.columnIntensity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOfDayMorningColumn {
                get {
                    return this.columnTimeOfDayMorning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOfDayNoonColumn {
                get {
                    return this.columnTimeOfDayNoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOfDayAfternoonColumn {
                get {
                    return this.columnTimeOfDayAfternoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOfDayEveningColumn {
                get {
                    return this.columnTimeOfDayEvening;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TimeOfDayNightColumn {
                get {
                    return this.columnTimeOfDayNight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContextHomeColumn {
                get {
                    return this.columnContextHome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContextSchoolColumn {
                get {
                    return this.columnContextSchool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContextWorkColumn {
                get {
                    return this.columnContextWork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContextCommunityColumn {
                get {
                    return this.columnContextCommunity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContextOtherColumn {
                get {
                    return this.columnContextOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContextOtherTextColumn {
                get {
                    return this.columnContextOtherText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociatedSignsSymptomsColumn {
                get {
                    return this.columnAssociatedSignsSymptoms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssociatedSignsSymptomsOtherTextColumn {
                get {
                    return this.columnAssociatedSignsSymptomsOtherText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifyingFactorsColumn {
                get {
                    return this.columnModifyingFactors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonResolvedColumn {
                get {
                    return this.columnReasonResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemStatusColumn {
                get {
                    return this.columnProblemStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomPsychiatricEvaluationProblemsRow this[int index] {
                get {
                    return ((CustomPsychiatricEvaluationProblemsRow)(this.Rows[index]));
                }
            }
            
            public event CustomPsychiatricEvaluationProblemsRowChangeEventHandler CustomPsychiatricEvaluationProblemsRowChanging;
            
            public event CustomPsychiatricEvaluationProblemsRowChangeEventHandler CustomPsychiatricEvaluationProblemsRowChanged;
            
            public event CustomPsychiatricEvaluationProblemsRowChangeEventHandler CustomPsychiatricEvaluationProblemsRowDeleting;
            
            public event CustomPsychiatricEvaluationProblemsRowChangeEventHandler CustomPsychiatricEvaluationProblemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomPsychiatricEvaluationProblemsRow(CustomPsychiatricEvaluationProblemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomPsychiatricEvaluationProblemsRow AddCustomPsychiatricEvaluationProblemsRow(
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int DocumentVersionId, 
                        string ProblemText, 
                        int Severity, 
                        int Duration, 
                        int Intensity, 
                        string TimeOfDayMorning, 
                        string TimeOfDayNoon, 
                        string TimeOfDayAfternoon, 
                        string TimeOfDayEvening, 
                        string TimeOfDayNight, 
                        string ContextHome, 
                        string ContextSchool, 
                        string ContextWork, 
                        string ContextCommunity, 
                        string ContextOther, 
                        string ContextOtherText, 
                        int AssociatedSignsSymptoms, 
                        string AssociatedSignsSymptomsOtherText, 
                        string ModifyingFactors, 
                        string ReasonResolved, 
                        int ProblemStatus) {
                CustomPsychiatricEvaluationProblemsRow rowCustomPsychiatricEvaluationProblemsRow = ((CustomPsychiatricEvaluationProblemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        ProblemText,
                        Severity,
                        Duration,
                        Intensity,
                        TimeOfDayMorning,
                        TimeOfDayNoon,
                        TimeOfDayAfternoon,
                        TimeOfDayEvening,
                        TimeOfDayNight,
                        ContextHome,
                        ContextSchool,
                        ContextWork,
                        ContextCommunity,
                        ContextOther,
                        ContextOtherText,
                        AssociatedSignsSymptoms,
                        AssociatedSignsSymptomsOtherText,
                        ModifyingFactors,
                        ReasonResolved,
                        ProblemStatus};
                rowCustomPsychiatricEvaluationProblemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomPsychiatricEvaluationProblemsRow);
                return rowCustomPsychiatricEvaluationProblemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomPsychiatricEvaluationProblemsRow FindByPsychiatricEvaluationProblemId(int PsychiatricEvaluationProblemId) {
                return ((CustomPsychiatricEvaluationProblemsRow)(this.Rows.Find(new object[] {
                            PsychiatricEvaluationProblemId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomPsychiatricEvaluationProblemsDataTable cln = ((CustomPsychiatricEvaluationProblemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomPsychiatricEvaluationProblemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPsychiatricEvaluationProblemId = base.Columns["PsychiatricEvaluationProblemId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnProblemText = base.Columns["ProblemText"];
                this.columnSeverity = base.Columns["Severity"];
                this.columnDuration = base.Columns["Duration"];
                this.columnIntensity = base.Columns["Intensity"];
                this.columnTimeOfDayMorning = base.Columns["TimeOfDayMorning"];
                this.columnTimeOfDayNoon = base.Columns["TimeOfDayNoon"];
                this.columnTimeOfDayAfternoon = base.Columns["TimeOfDayAfternoon"];
                this.columnTimeOfDayEvening = base.Columns["TimeOfDayEvening"];
                this.columnTimeOfDayNight = base.Columns["TimeOfDayNight"];
                this.columnContextHome = base.Columns["ContextHome"];
                this.columnContextSchool = base.Columns["ContextSchool"];
                this.columnContextWork = base.Columns["ContextWork"];
                this.columnContextCommunity = base.Columns["ContextCommunity"];
                this.columnContextOther = base.Columns["ContextOther"];
                this.columnContextOtherText = base.Columns["ContextOtherText"];
                this.columnAssociatedSignsSymptoms = base.Columns["AssociatedSignsSymptoms"];
                this.columnAssociatedSignsSymptomsOtherText = base.Columns["AssociatedSignsSymptomsOtherText"];
                this.columnModifyingFactors = base.Columns["ModifyingFactors"];
                this.columnReasonResolved = base.Columns["ReasonResolved"];
                this.columnProblemStatus = base.Columns["ProblemStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPsychiatricEvaluationProblemId = new global::System.Data.DataColumn("PsychiatricEvaluationProblemId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsychiatricEvaluationProblemId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnProblemText = new global::System.Data.DataColumn("ProblemText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblemText);
                this.columnSeverity = new global::System.Data.DataColumn("Severity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverity);
                this.columnDuration = new global::System.Data.DataColumn("Duration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnIntensity = new global::System.Data.DataColumn("Intensity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntensity);
                this.columnTimeOfDayMorning = new global::System.Data.DataColumn("TimeOfDayMorning", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOfDayMorning);
                this.columnTimeOfDayNoon = new global::System.Data.DataColumn("TimeOfDayNoon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOfDayNoon);
                this.columnTimeOfDayAfternoon = new global::System.Data.DataColumn("TimeOfDayAfternoon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOfDayAfternoon);
                this.columnTimeOfDayEvening = new global::System.Data.DataColumn("TimeOfDayEvening", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOfDayEvening);
                this.columnTimeOfDayNight = new global::System.Data.DataColumn("TimeOfDayNight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeOfDayNight);
                this.columnContextHome = new global::System.Data.DataColumn("ContextHome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContextHome);
                this.columnContextSchool = new global::System.Data.DataColumn("ContextSchool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContextSchool);
                this.columnContextWork = new global::System.Data.DataColumn("ContextWork", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContextWork);
                this.columnContextCommunity = new global::System.Data.DataColumn("ContextCommunity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContextCommunity);
                this.columnContextOther = new global::System.Data.DataColumn("ContextOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContextOther);
                this.columnContextOtherText = new global::System.Data.DataColumn("ContextOtherText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContextOtherText);
                this.columnAssociatedSignsSymptoms = new global::System.Data.DataColumn("AssociatedSignsSymptoms", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociatedSignsSymptoms);
                this.columnAssociatedSignsSymptomsOtherText = new global::System.Data.DataColumn("AssociatedSignsSymptomsOtherText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssociatedSignsSymptomsOtherText);
                this.columnModifyingFactors = new global::System.Data.DataColumn("ModifyingFactors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifyingFactors);
                this.columnReasonResolved = new global::System.Data.DataColumn("ReasonResolved", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonResolved);
                this.columnProblemStatus = new global::System.Data.DataColumn("ProblemStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblemStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPsychiatricEvaluationProblemId}, true));
                this.columnPsychiatricEvaluationProblemId.AutoIncrement = true;
                this.columnPsychiatricEvaluationProblemId.AutoIncrementSeed = -1;
                this.columnPsychiatricEvaluationProblemId.AutoIncrementStep = -1;
                this.columnPsychiatricEvaluationProblemId.AllowDBNull = false;
                this.columnPsychiatricEvaluationProblemId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnProblemText.MaxLength = 2147483647;
                this.columnTimeOfDayMorning.MaxLength = 1;
                this.columnTimeOfDayNoon.MaxLength = 1;
                this.columnTimeOfDayAfternoon.MaxLength = 1;
                this.columnTimeOfDayEvening.MaxLength = 1;
                this.columnTimeOfDayNight.MaxLength = 1;
                this.columnContextHome.MaxLength = 1;
                this.columnContextSchool.MaxLength = 1;
                this.columnContextWork.MaxLength = 1;
                this.columnContextCommunity.MaxLength = 1;
                this.columnContextOther.MaxLength = 1;
                this.columnContextOtherText.MaxLength = 2147483647;
                this.columnAssociatedSignsSymptomsOtherText.MaxLength = 2147483647;
                this.columnModifyingFactors.MaxLength = 2147483647;
                this.columnReasonResolved.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomPsychiatricEvaluationProblemsRow NewCustomPsychiatricEvaluationProblemsRow() {
                return ((CustomPsychiatricEvaluationProblemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomPsychiatricEvaluationProblemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomPsychiatricEvaluationProblemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomPsychiatricEvaluationProblemsRowChanged != null)) {
                    this.CustomPsychiatricEvaluationProblemsRowChanged(this, new CustomPsychiatricEvaluationProblemsRowChangeEvent(((CustomPsychiatricEvaluationProblemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomPsychiatricEvaluationProblemsRowChanging != null)) {
                    this.CustomPsychiatricEvaluationProblemsRowChanging(this, new CustomPsychiatricEvaluationProblemsRowChangeEvent(((CustomPsychiatricEvaluationProblemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomPsychiatricEvaluationProblemsRowDeleted != null)) {
                    this.CustomPsychiatricEvaluationProblemsRowDeleted(this, new CustomPsychiatricEvaluationProblemsRowChangeEvent(((CustomPsychiatricEvaluationProblemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomPsychiatricEvaluationProblemsRowDeleting != null)) {
                    this.CustomPsychiatricEvaluationProblemsRowDeleting(this, new CustomPsychiatricEvaluationProblemsRowChangeEvent(((CustomPsychiatricEvaluationProblemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomPsychiatricEvaluationProblemsRow(CustomPsychiatricEvaluationProblemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomPsychiatricEvaluations ds = new DataSetCustomPsychiatricEvaluations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomPsychiatricEvaluationProblemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentDiagnosisCodesDataTable : global::System.Data.TypedTableBase<DocumentDiagnosisCodesRow> {
            
            private global::System.Data.DataColumn columnDocumentDiagnosisCodeId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnDSMVCodeId;
            
            private global::System.Data.DataColumn columnICD10Code;
            
            private global::System.Data.DataColumn columnICD9Code;
            
            private global::System.Data.DataColumn columnDiagnosisType;
            
            private global::System.Data.DataColumn columnRuleOut;
            
            private global::System.Data.DataColumn columnBillable;
            
            private global::System.Data.DataColumn columnSeverity;
            
            private global::System.Data.DataColumn columnDiagnosisOrder;
            
            private global::System.Data.DataColumn columnSpecifier;
            
            private global::System.Data.DataColumn columnRemission;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnDSMDescription;
            
            private global::System.Data.DataColumn columnRuleOutText;
            
            private global::System.Data.DataColumn columnDiagnosisTypeText;
            
            private global::System.Data.DataColumn columnSeverityText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisCodesDataTable() {
                this.TableName = "DocumentDiagnosisCodes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentDiagnosisCodesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DocumentDiagnosisCodesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentDiagnosisCodeIdColumn {
                get {
                    return this.columnDocumentDiagnosisCodeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMVCodeIdColumn {
                get {
                    return this.columnDSMVCodeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ICD10CodeColumn {
                get {
                    return this.columnICD10Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ICD9CodeColumn {
                get {
                    return this.columnICD9Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiagnosisTypeColumn {
                get {
                    return this.columnDiagnosisType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RuleOutColumn {
                get {
                    return this.columnRuleOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillableColumn {
                get {
                    return this.columnBillable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeverityColumn {
                get {
                    return this.columnSeverity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiagnosisOrderColumn {
                get {
                    return this.columnDiagnosisOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecifierColumn {
                get {
                    return this.columnSpecifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemissionColumn {
                get {
                    return this.columnRemission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DSMDescriptionColumn {
                get {
                    return this.columnDSMDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RuleOutTextColumn {
                get {
                    return this.columnRuleOutText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiagnosisTypeTextColumn {
                get {
                    return this.columnDiagnosisTypeText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeverityTextColumn {
                get {
                    return this.columnSeverityText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisCodesRow this[int index] {
                get {
                    return ((DocumentDiagnosisCodesRow)(this.Rows[index]));
                }
            }
            
            public event DocumentDiagnosisCodesRowChangeEventHandler DocumentDiagnosisCodesRowChanging;
            
            public event DocumentDiagnosisCodesRowChangeEventHandler DocumentDiagnosisCodesRowChanged;
            
            public event DocumentDiagnosisCodesRowChangeEventHandler DocumentDiagnosisCodesRowDeleting;
            
            public event DocumentDiagnosisCodesRowChangeEventHandler DocumentDiagnosisCodesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDocumentDiagnosisCodesRow(DocumentDiagnosisCodesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisCodesRow AddDocumentDiagnosisCodesRow(
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        System.DateTime DeletedDate, 
                        string DeletedBy, 
                        int DocumentVersionId, 
                        string DSMVCodeId, 
                        string ICD10Code, 
                        string ICD9Code, 
                        int DiagnosisType, 
                        string RuleOut, 
                        string Billable, 
                        int Severity, 
                        int DiagnosisOrder, 
                        string Specifier, 
                        int Remission, 
                        string Source, 
                        string Comments, 
                        string DSMDescription, 
                        string RuleOutText, 
                        string DiagnosisTypeText, 
                        string SeverityText) {
                DocumentDiagnosisCodesRow rowDocumentDiagnosisCodesRow = ((DocumentDiagnosisCodesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedDate,
                        DeletedBy,
                        DocumentVersionId,
                        DSMVCodeId,
                        ICD10Code,
                        ICD9Code,
                        DiagnosisType,
                        RuleOut,
                        Billable,
                        Severity,
                        DiagnosisOrder,
                        Specifier,
                        Remission,
                        Source,
                        Comments,
                        DSMDescription,
                        RuleOutText,
                        DiagnosisTypeText,
                        SeverityText};
                rowDocumentDiagnosisCodesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentDiagnosisCodesRow);
                return rowDocumentDiagnosisCodesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisCodesRow FindByDocumentDiagnosisCodeId(int DocumentDiagnosisCodeId) {
                return ((DocumentDiagnosisCodesRow)(this.Rows.Find(new object[] {
                            DocumentDiagnosisCodeId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DocumentDiagnosisCodesDataTable cln = ((DocumentDiagnosisCodesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentDiagnosisCodesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentDiagnosisCodeId = base.Columns["DocumentDiagnosisCodeId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnDSMVCodeId = base.Columns["DSMVCodeId"];
                this.columnICD10Code = base.Columns["ICD10Code"];
                this.columnICD9Code = base.Columns["ICD9Code"];
                this.columnDiagnosisType = base.Columns["DiagnosisType"];
                this.columnRuleOut = base.Columns["RuleOut"];
                this.columnBillable = base.Columns["Billable"];
                this.columnSeverity = base.Columns["Severity"];
                this.columnDiagnosisOrder = base.Columns["DiagnosisOrder"];
                this.columnSpecifier = base.Columns["Specifier"];
                this.columnRemission = base.Columns["Remission"];
                this.columnSource = base.Columns["Source"];
                this.columnComments = base.Columns["Comments"];
                this.columnDSMDescription = base.Columns["DSMDescription"];
                this.columnRuleOutText = base.Columns["RuleOutText"];
                this.columnDiagnosisTypeText = base.Columns["DiagnosisTypeText"];
                this.columnSeverityText = base.Columns["SeverityText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentDiagnosisCodeId = new global::System.Data.DataColumn("DocumentDiagnosisCodeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentDiagnosisCodeId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnDSMVCodeId = new global::System.Data.DataColumn("DSMVCodeId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMVCodeId);
                this.columnICD10Code = new global::System.Data.DataColumn("ICD10Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD10Code);
                this.columnICD9Code = new global::System.Data.DataColumn("ICD9Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD9Code);
                this.columnDiagnosisType = new global::System.Data.DataColumn("DiagnosisType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisType);
                this.columnRuleOut = new global::System.Data.DataColumn("RuleOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleOut);
                this.columnBillable = new global::System.Data.DataColumn("Billable", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillable);
                this.columnSeverity = new global::System.Data.DataColumn("Severity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverity);
                this.columnDiagnosisOrder = new global::System.Data.DataColumn("DiagnosisOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisOrder);
                this.columnSpecifier = new global::System.Data.DataColumn("Specifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecifier);
                this.columnRemission = new global::System.Data.DataColumn("Remission", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemission);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnDSMDescription = new global::System.Data.DataColumn("DSMDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSMDescription);
                this.columnRuleOutText = new global::System.Data.DataColumn("RuleOutText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleOutText);
                this.columnDiagnosisTypeText = new global::System.Data.DataColumn("DiagnosisTypeText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisTypeText);
                this.columnSeverityText = new global::System.Data.DataColumn("SeverityText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverityText);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentDiagnosisCodeId}, true));
                this.columnDocumentDiagnosisCodeId.AutoIncrement = true;
                this.columnDocumentDiagnosisCodeId.AutoIncrementSeed = -1;
                this.columnDocumentDiagnosisCodeId.AutoIncrementStep = -1;
                this.columnDocumentDiagnosisCodeId.AllowDBNull = false;
                this.columnDocumentDiagnosisCodeId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnDSMVCodeId.MaxLength = 20;
                this.columnICD10Code.MaxLength = 20;
                this.columnICD9Code.MaxLength = 20;
                this.columnRuleOut.MaxLength = 1;
                this.columnBillable.MaxLength = 1;
                this.columnSpecifier.MaxLength = 2147483647;
                this.columnSource.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisCodesRow NewDocumentDiagnosisCodesRow() {
                return ((DocumentDiagnosisCodesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentDiagnosisCodesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentDiagnosisCodesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentDiagnosisCodesRowChanged != null)) {
                    this.DocumentDiagnosisCodesRowChanged(this, new DocumentDiagnosisCodesRowChangeEvent(((DocumentDiagnosisCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentDiagnosisCodesRowChanging != null)) {
                    this.DocumentDiagnosisCodesRowChanging(this, new DocumentDiagnosisCodesRowChangeEvent(((DocumentDiagnosisCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentDiagnosisCodesRowDeleted != null)) {
                    this.DocumentDiagnosisCodesRowDeleted(this, new DocumentDiagnosisCodesRowChangeEvent(((DocumentDiagnosisCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentDiagnosisCodesRowDeleting != null)) {
                    this.DocumentDiagnosisCodesRowDeleting(this, new DocumentDiagnosisCodesRowChangeEvent(((DocumentDiagnosisCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDocumentDiagnosisCodesRow(DocumentDiagnosisCodesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomPsychiatricEvaluations ds = new DataSetCustomPsychiatricEvaluations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentDiagnosisCodesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentDiagnosisDataTable : global::System.Data.TypedTableBase<DocumentDiagnosisRow> {
            
            private global::System.Data.DataColumn columnDocumentDiagnosisId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnScreeeningTool;
            
            private global::System.Data.DataColumn columnOtherMedicalCondition;
            
            private global::System.Data.DataColumn columnFactorComments;
            
            private global::System.Data.DataColumn columnGAFScore;
            
            private global::System.Data.DataColumn columnWHODASScore;
            
            private global::System.Data.DataColumn columnCAFASScore;
            
            private global::System.Data.DataColumn columnNoDiagnosis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisDataTable() {
                this.TableName = "DocumentDiagnosis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentDiagnosisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DocumentDiagnosisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentDiagnosisIdColumn {
                get {
                    return this.columnDocumentDiagnosisId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScreeeningToolColumn {
                get {
                    return this.columnScreeeningTool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherMedicalConditionColumn {
                get {
                    return this.columnOtherMedicalCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactorCommentsColumn {
                get {
                    return this.columnFactorComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAFScoreColumn {
                get {
                    return this.columnGAFScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WHODASScoreColumn {
                get {
                    return this.columnWHODASScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAFASScoreColumn {
                get {
                    return this.columnCAFASScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoDiagnosisColumn {
                get {
                    return this.columnNoDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisRow this[int index] {
                get {
                    return ((DocumentDiagnosisRow)(this.Rows[index]));
                }
            }
            
            public event DocumentDiagnosisRowChangeEventHandler DocumentDiagnosisRowChanging;
            
            public event DocumentDiagnosisRowChangeEventHandler DocumentDiagnosisRowChanged;
            
            public event DocumentDiagnosisRowChangeEventHandler DocumentDiagnosisRowDeleting;
            
            public event DocumentDiagnosisRowChangeEventHandler DocumentDiagnosisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDocumentDiagnosisRow(DocumentDiagnosisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisRow AddDocumentDiagnosisRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, System.DateTime DeletedDate, string DeletedBy, int DocumentVersionId, string ScreeeningTool, string OtherMedicalCondition, string FactorComments, int GAFScore, int WHODASScore, int CAFASScore, string NoDiagnosis) {
                DocumentDiagnosisRow rowDocumentDiagnosisRow = ((DocumentDiagnosisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedDate,
                        DeletedBy,
                        DocumentVersionId,
                        ScreeeningTool,
                        OtherMedicalCondition,
                        FactorComments,
                        GAFScore,
                        WHODASScore,
                        CAFASScore,
                        NoDiagnosis};
                rowDocumentDiagnosisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentDiagnosisRow);
                return rowDocumentDiagnosisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisRow FindByDocumentDiagnosisId(int DocumentDiagnosisId) {
                return ((DocumentDiagnosisRow)(this.Rows.Find(new object[] {
                            DocumentDiagnosisId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DocumentDiagnosisDataTable cln = ((DocumentDiagnosisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentDiagnosisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentDiagnosisId = base.Columns["DocumentDiagnosisId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnScreeeningTool = base.Columns["ScreeeningTool"];
                this.columnOtherMedicalCondition = base.Columns["OtherMedicalCondition"];
                this.columnFactorComments = base.Columns["FactorComments"];
                this.columnGAFScore = base.Columns["GAFScore"];
                this.columnWHODASScore = base.Columns["WHODASScore"];
                this.columnCAFASScore = base.Columns["CAFASScore"];
                this.columnNoDiagnosis = base.Columns["NoDiagnosis"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentDiagnosisId = new global::System.Data.DataColumn("DocumentDiagnosisId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentDiagnosisId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnScreeeningTool = new global::System.Data.DataColumn("ScreeeningTool", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScreeeningTool);
                this.columnOtherMedicalCondition = new global::System.Data.DataColumn("OtherMedicalCondition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherMedicalCondition);
                this.columnFactorComments = new global::System.Data.DataColumn("FactorComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorComments);
                this.columnGAFScore = new global::System.Data.DataColumn("GAFScore", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAFScore);
                this.columnWHODASScore = new global::System.Data.DataColumn("WHODASScore", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWHODASScore);
                this.columnCAFASScore = new global::System.Data.DataColumn("CAFASScore", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAFASScore);
                this.columnNoDiagnosis = new global::System.Data.DataColumn("NoDiagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoDiagnosis);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentDiagnosisId}, true));
                this.columnDocumentDiagnosisId.AutoIncrement = true;
                this.columnDocumentDiagnosisId.AutoIncrementSeed = -1;
                this.columnDocumentDiagnosisId.AutoIncrementStep = -1;
                this.columnDocumentDiagnosisId.AllowDBNull = false;
                this.columnDocumentDiagnosisId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnScreeeningTool.MaxLength = 2147483647;
                this.columnOtherMedicalCondition.MaxLength = 2147483647;
                this.columnFactorComments.MaxLength = 2147483647;
                this.columnNoDiagnosis.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisRow NewDocumentDiagnosisRow() {
                return ((DocumentDiagnosisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentDiagnosisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentDiagnosisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentDiagnosisRowChanged != null)) {
                    this.DocumentDiagnosisRowChanged(this, new DocumentDiagnosisRowChangeEvent(((DocumentDiagnosisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentDiagnosisRowChanging != null)) {
                    this.DocumentDiagnosisRowChanging(this, new DocumentDiagnosisRowChangeEvent(((DocumentDiagnosisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentDiagnosisRowDeleted != null)) {
                    this.DocumentDiagnosisRowDeleted(this, new DocumentDiagnosisRowChangeEvent(((DocumentDiagnosisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentDiagnosisRowDeleting != null)) {
                    this.DocumentDiagnosisRowDeleting(this, new DocumentDiagnosisRowChangeEvent(((DocumentDiagnosisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDocumentDiagnosisRow(DocumentDiagnosisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomPsychiatricEvaluations ds = new DataSetCustomPsychiatricEvaluations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentDiagnosisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DocumentDiagnosisFactorsDataTable : global::System.Data.TypedTableBase<DocumentDiagnosisFactorsRow> {
            
            private global::System.Data.DataColumn columnDocumentDiagnosisFactorId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnFactorId;
            
            private global::System.Data.DataColumn columnFactors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisFactorsDataTable() {
                this.TableName = "DocumentDiagnosisFactors";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentDiagnosisFactorsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DocumentDiagnosisFactorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentDiagnosisFactorIdColumn {
                get {
                    return this.columnDocumentDiagnosisFactorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactorIdColumn {
                get {
                    return this.columnFactorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FactorsColumn {
                get {
                    return this.columnFactors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisFactorsRow this[int index] {
                get {
                    return ((DocumentDiagnosisFactorsRow)(this.Rows[index]));
                }
            }
            
            public event DocumentDiagnosisFactorsRowChangeEventHandler DocumentDiagnosisFactorsRowChanging;
            
            public event DocumentDiagnosisFactorsRowChangeEventHandler DocumentDiagnosisFactorsRowChanged;
            
            public event DocumentDiagnosisFactorsRowChangeEventHandler DocumentDiagnosisFactorsRowDeleting;
            
            public event DocumentDiagnosisFactorsRowChangeEventHandler DocumentDiagnosisFactorsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDocumentDiagnosisFactorsRow(DocumentDiagnosisFactorsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisFactorsRow AddDocumentDiagnosisFactorsRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, System.DateTime DeletedDate, string DeletedBy, int DocumentVersionId, int FactorId, string Factors) {
                DocumentDiagnosisFactorsRow rowDocumentDiagnosisFactorsRow = ((DocumentDiagnosisFactorsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedDate,
                        DeletedBy,
                        DocumentVersionId,
                        FactorId,
                        Factors};
                rowDocumentDiagnosisFactorsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDocumentDiagnosisFactorsRow);
                return rowDocumentDiagnosisFactorsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisFactorsRow FindByDocumentDiagnosisFactorId(int DocumentDiagnosisFactorId) {
                return ((DocumentDiagnosisFactorsRow)(this.Rows.Find(new object[] {
                            DocumentDiagnosisFactorId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DocumentDiagnosisFactorsDataTable cln = ((DocumentDiagnosisFactorsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DocumentDiagnosisFactorsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentDiagnosisFactorId = base.Columns["DocumentDiagnosisFactorId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnFactorId = base.Columns["FactorId"];
                this.columnFactors = base.Columns["Factors"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentDiagnosisFactorId = new global::System.Data.DataColumn("DocumentDiagnosisFactorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentDiagnosisFactorId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnFactorId = new global::System.Data.DataColumn("FactorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorId);
                this.columnFactors = new global::System.Data.DataColumn("Factors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactors);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentDiagnosisFactorId}, true));
                this.columnDocumentDiagnosisFactorId.AutoIncrement = true;
                this.columnDocumentDiagnosisFactorId.AutoIncrementSeed = -1;
                this.columnDocumentDiagnosisFactorId.AutoIncrementStep = -1;
                this.columnDocumentDiagnosisFactorId.AllowDBNull = false;
                this.columnDocumentDiagnosisFactorId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisFactorsRow NewDocumentDiagnosisFactorsRow() {
                return ((DocumentDiagnosisFactorsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DocumentDiagnosisFactorsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DocumentDiagnosisFactorsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DocumentDiagnosisFactorsRowChanged != null)) {
                    this.DocumentDiagnosisFactorsRowChanged(this, new DocumentDiagnosisFactorsRowChangeEvent(((DocumentDiagnosisFactorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DocumentDiagnosisFactorsRowChanging != null)) {
                    this.DocumentDiagnosisFactorsRowChanging(this, new DocumentDiagnosisFactorsRowChangeEvent(((DocumentDiagnosisFactorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DocumentDiagnosisFactorsRowDeleted != null)) {
                    this.DocumentDiagnosisFactorsRowDeleted(this, new DocumentDiagnosisFactorsRowChangeEvent(((DocumentDiagnosisFactorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DocumentDiagnosisFactorsRowDeleting != null)) {
                    this.DocumentDiagnosisFactorsRowDeleting(this, new DocumentDiagnosisFactorsRowChangeEvent(((DocumentDiagnosisFactorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDocumentDiagnosisFactorsRow(DocumentDiagnosisFactorsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomPsychiatricEvaluations ds = new DataSetCustomPsychiatricEvaluations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DocumentDiagnosisFactorsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NoteEMCodeOptionsDataTable : global::System.Data.TypedTableBase<NoteEMCodeOptionsRow> {
            
            private global::System.Data.DataColumn columnNoteEMCodeOptionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnProcedureCodeId;
            
            private global::System.Data.DataColumn columnProgramId;
            
            private global::System.Data.DataColumn columnLocationId;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnModifierId1;
            
            private global::System.Data.DataColumn columnModifierId2;
            
            private global::System.Data.DataColumn columnModifierId3;
            
            private global::System.Data.DataColumn columnModifierId4;
            
            private global::System.Data.DataColumn columnHistoryHPILocation;
            
            private global::System.Data.DataColumn columnHistoryHPIDuration;
            
            private global::System.Data.DataColumn columnHistoryHPIModifyingFactors;
            
            private global::System.Data.DataColumn columnHistoryHPIContextOnset;
            
            private global::System.Data.DataColumn columnHistoryHPIQualityNature;
            
            private global::System.Data.DataColumn columnHistoryHPITimingFrequency;
            
            private global::System.Data.DataColumn columnHistoryHPIAssociatedSignsSymptoms;
            
            private global::System.Data.DataColumn columnHistoryHPISeverity;
            
            private global::System.Data.DataColumn columnHistoryHPITotalCount;
            
            private global::System.Data.DataColumn columnHistoryHPIResults;
            
            private global::System.Data.DataColumn columnHistoryROSConstitutional;
            
            private global::System.Data.DataColumn columnHistoryROSEarNoseMouthThroat;
            
            private global::System.Data.DataColumn columnHistoryROSCardiovascular;
            
            private global::System.Data.DataColumn columnHistoryROSRespiratory;
            
            private global::System.Data.DataColumn columnHistoryROSSkin;
            
            private global::System.Data.DataColumn columnHistoryROSPsychiatric;
            
            private global::System.Data.DataColumn columnHistoryROSHematologicLymphatic;
            
            private global::System.Data.DataColumn columnHistoryROSEye;
            
            private global::System.Data.DataColumn columnHistoryROSGastrointestinal;
            
            private global::System.Data.DataColumn columnHistoryROSGenitourinary;
            
            private global::System.Data.DataColumn columnHistoryROSMusculoskeletal;
            
            private global::System.Data.DataColumn columnHistoryROSNeurological;
            
            private global::System.Data.DataColumn columnHistoryROSEndocrine;
            
            private global::System.Data.DataColumn columnHistoryROSAllergicImmunologic;
            
            private global::System.Data.DataColumn columnHistoryROSTotalCount;
            
            private global::System.Data.DataColumn columnHistoryROSResults;
            
            private global::System.Data.DataColumn columnHistoryPHFamilyHistory;
            
            private global::System.Data.DataColumn columnHistoryPHSocialHistory;
            
            private global::System.Data.DataColumn columnHistoryPHMedicalHistory;
            
            private global::System.Data.DataColumn columnHistoryPHTotalCount;
            
            private global::System.Data.DataColumn columnHistoryPHResults;
            
            private global::System.Data.DataColumn columnHistoryFinalResult;
            
            private global::System.Data.DataColumn columnExamBAHead;
            
            private global::System.Data.DataColumn columnExamBABack;
            
            private global::System.Data.DataColumn columnExamBALeftUpperExtremity;
            
            private global::System.Data.DataColumn columnExamBALeftLowerExtremity;
            
            private global::System.Data.DataColumn columnExamBAAbdomen;
            
            private global::System.Data.DataColumn columnExamBANeck;
            
            private global::System.Data.DataColumn columnExamBAChest;
            
            private global::System.Data.DataColumn columnExamBARightUpperExtremity;
            
            private global::System.Data.DataColumn columnExamBARightLowerExtremity;
            
            private global::System.Data.DataColumn columnExamBAGenitaliaButtocks;
            
            private global::System.Data.DataColumn columnExamOSConstitutional;
            
            private global::System.Data.DataColumn columnExamOSEyes;
            
            private global::System.Data.DataColumn columnExamOSEarNoseMouthThroat;
            
            private global::System.Data.DataColumn columnExamOSCardiovascular;
            
            private global::System.Data.DataColumn columnExamOSRespiratory;
            
            private global::System.Data.DataColumn columnExamOSPsychiatric;
            
            private global::System.Data.DataColumn columnExamOSGastrointestinal;
            
            private global::System.Data.DataColumn columnExamOSGenitourinary;
            
            private global::System.Data.DataColumn columnExamOSMusculoskeletal;
            
            private global::System.Data.DataColumn columnExamOSSkin;
            
            private global::System.Data.DataColumn columnExamOSNeurologic;
            
            private global::System.Data.DataColumn columnExamOSHematologicLymphatic;
            
            private global::System.Data.DataColumn columnExamTypeOfExam;
            
            private global::System.Data.DataColumn columnExamFinalResult;
            
            private global::System.Data.DataColumn columnMDMDRROClinicalLabs;
            
            private global::System.Data.DataColumn columnMDMDRROOtherTest;
            
            private global::System.Data.DataColumn columnMDMDRObtainRecords;
            
            private global::System.Data.DataColumn columnMDMDRIndependentVisualization;
            
            private global::System.Data.DataColumn columnMDMDRRORadiologyTest;
            
            private global::System.Data.DataColumn columnMDMDRDiscussion;
            
            private global::System.Data.DataColumn columnMDMDRReviewSummarize;
            
            private global::System.Data.DataColumn columnMDMDRResults;
            
            private global::System.Data.DataColumn columnMDMDTONewProblem;
            
            private global::System.Data.DataColumn columnMDMDTOProblems1;
            
            private global::System.Data.DataColumn columnMDMDTOProblems2;
            
            private global::System.Data.DataColumn columnMDMDTOProblems3;
            
            private global::System.Data.DataColumn columnMDMDTOProblems4Plus;
            
            private global::System.Data.DataColumn columnMDMDTOAdditionalWorkup;
            
            private global::System.Data.DataColumn columnMDMDTOProblemWorsening1;
            
            private global::System.Data.DataColumn columnMDMDTOProblemWorsening2;
            
            private global::System.Data.DataColumn columnMDMDTOResults;
            
            private global::System.Data.DataColumn columnMDMRCMMResults;
            
            private global::System.Data.DataColumn columnMDMFinalResult;
            
            private global::System.Data.DataColumn columnECEEMCode;
            
            private global::System.Data.DataColumn columnECEGuidelines;
            
            private global::System.Data.DataColumn columnECETypeOfPatient;
            
            private global::System.Data.DataColumn columnECEVisitType;
            
            private global::System.Data.DataColumn columnECE50PercentFaceTime;
            
            private global::System.Data.DataColumn columnECEMinutes;
            
            private global::System.Data.DataColumn columnECAQChronicProblemsAddressed3Plus;
            
            private global::System.Data.DataColumn columnECAQAdditionalWorkup;
            
            private global::System.Data.DataColumn columnECAQProblemWorsening1;
            
            private global::System.Data.DataColumn columnECAQProblemWorsening2;
            
            private global::System.Data.DataColumn columnECAQIllnessWithExacerbation;
            
            private global::System.Data.DataColumn columnECAQDiscussion;
            
            private global::System.Data.DataColumn columnECAQObtainRecords;
            
            private global::System.Data.DataColumn columnECAQIndependentVisualization;
            
            private global::System.Data.DataColumn columnECAQReviewSummarize;
            
            private global::System.Data.DataColumn columnExamBAHeadCount;
            
            private global::System.Data.DataColumn columnExamBAHeadTotalCount;
            
            private global::System.Data.DataColumn columnExamBABackCount;
            
            private global::System.Data.DataColumn columnExamBABackTotalCount;
            
            private global::System.Data.DataColumn columnExamBALeftUpperExtremityCount;
            
            private global::System.Data.DataColumn columnExamBALeftUpperExtremityTotalCount;
            
            private global::System.Data.DataColumn columnExamBALeftLowerExtremityCount;
            
            private global::System.Data.DataColumn columnExamBALeftLowerExtremityTotalCount;
            
            private global::System.Data.DataColumn columnExamBAAbdomenCount;
            
            private global::System.Data.DataColumn columnExamBAAbdomenTotalCount;
            
            private global::System.Data.DataColumn columnExamBANeckCount;
            
            private global::System.Data.DataColumn columnExamBANeckTotalCount;
            
            private global::System.Data.DataColumn columnExamBAChestCount;
            
            private global::System.Data.DataColumn columnExamBAChestTotalCount;
            
            private global::System.Data.DataColumn columnExamBARightUpperExtremityCount;
            
            private global::System.Data.DataColumn columnExamBARightUpperExtremityTotalCount;
            
            private global::System.Data.DataColumn columnExamBARightLowerExtremityCount;
            
            private global::System.Data.DataColumn columnExamBARightLowerExtremityTotalCount;
            
            private global::System.Data.DataColumn columnExamBAGenitaliaButtocksCount;
            
            private global::System.Data.DataColumn columnExamBAGenitaliaButtocksTotalCount;
            
            private global::System.Data.DataColumn columnExamOSConstitutionalCount;
            
            private global::System.Data.DataColumn columnExamOSConstitutionalTotalCount;
            
            private global::System.Data.DataColumn columnExamOSEyesCount;
            
            private global::System.Data.DataColumn columnExamOSEyesTotalCount;
            
            private global::System.Data.DataColumn columnExamOSEarNoseMouthThroatCount;
            
            private global::System.Data.DataColumn columnExamOSEarNoseMouthThroatTotalCount;
            
            private global::System.Data.DataColumn columnExamOSCardiovascularCount;
            
            private global::System.Data.DataColumn columnExamOSCardiovascularTotalCount;
            
            private global::System.Data.DataColumn columnExamOSRespiratoryCount;
            
            private global::System.Data.DataColumn columnExamOSRespiratoryTotalCount;
            
            private global::System.Data.DataColumn columnExamOSPsychiatricCount;
            
            private global::System.Data.DataColumn columnExamOSPsychiatricTotalCount;
            
            private global::System.Data.DataColumn columnExamOSGastrointestinalCount;
            
            private global::System.Data.DataColumn columnExamOSGastrointestinalTotalCount;
            
            private global::System.Data.DataColumn columnExamOSGenitourinaryCount;
            
            private global::System.Data.DataColumn columnExamOSGenitourinaryTotalCount;
            
            private global::System.Data.DataColumn columnExamOSMusculoskeletalCount;
            
            private global::System.Data.DataColumn columnExamOSMusculoskeletalTotalCount;
            
            private global::System.Data.DataColumn columnExamOSSkinCount;
            
            private global::System.Data.DataColumn columnExamOSSkinTotalCount;
            
            private global::System.Data.DataColumn columnExamOSNeurologicCount;
            
            private global::System.Data.DataColumn columnExamOSNeurologicTotalCount;
            
            private global::System.Data.DataColumn columnExamOSHematologicLymphaticCount;
            
            private global::System.Data.DataColumn columnExamOSHematologicLymphaticTotalCount;
            
            private global::System.Data.DataColumn columnMDMRCMMPPMinorOtherProb1;
            
            private global::System.Data.DataColumn columnMDMRCMMPPMinorOtherProb2Plus;
            
            private global::System.Data.DataColumn columnMDMRCMMPPStableChronicMajor1;
            
            private global::System.Data.DataColumn columnMDMRCMMPPChronicMajorMildExac1Plus;
            
            private global::System.Data.DataColumn columnMDMRCMMPPAcuteUncomplicated1;
            
            private global::System.Data.DataColumn columnMDMRCMMPPNewProblem;
            
            private global::System.Data.DataColumn columnMDMRCMMPPAcuteIllness;
            
            private global::System.Data.DataColumn columnMDMRCMMPPAcuteComplicatedInjury;
            
            private global::System.Data.DataColumn columnMDMRCMMPPChronicMajorSevereExac1Plus;
            
            private global::System.Data.DataColumn columnMDMRCMMPPAcuteChronicThreat;
            
            private global::System.Data.DataColumn columnMDMRCMMDLabVenipuncture;
            
            private global::System.Data.DataColumn columnMDMRCMMDNonCardImaging;
            
            private global::System.Data.DataColumn columnMDMRCMMDPhysTestNoStress;
            
            private global::System.Data.DataColumn columnMDMRCMMDPhysTestYesStress;
            
            private global::System.Data.DataColumn columnMDMRCMMDSkinBiopsies;
            
            private global::System.Data.DataColumn columnMDMRCMMDDeepNeedle;
            
            private global::System.Data.DataColumn columnMDMRCMMDDiagEndoNoRisk;
            
            private global::System.Data.DataColumn columnMDMRCMMDDiagEndoYesRisk;
            
            private global::System.Data.DataColumn columnMDMRCMMDCardImagingNoRisk;
            
            private global::System.Data.DataColumn columnMDMRCMMDCardImagingYesRisk;
            
            private global::System.Data.DataColumn columnMDMRCMMDClinicalLab;
            
            private global::System.Data.DataColumn columnMDMRCMMDObtainFluid;
            
            private global::System.Data.DataColumn columnMDMRCMMDCardiacElectro;
            
            private global::System.Data.DataColumn columnMDMRCMMDDiscopgraphy;
            
            private global::System.Data.DataColumn columnMDMRCMMMOSMedicationManagement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NoteEMCodeOptionsDataTable() {
                this.TableName = "NoteEMCodeOptions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NoteEMCodeOptionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NoteEMCodeOptionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteEMCodeOptionIdColumn {
                get {
                    return this.columnNoteEMCodeOptionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProcedureCodeIdColumn {
                get {
                    return this.columnProcedureCodeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramIdColumn {
                get {
                    return this.columnProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationIdColumn {
                get {
                    return this.columnLocationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifierId1Column {
                get {
                    return this.columnModifierId1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifierId2Column {
                get {
                    return this.columnModifierId2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifierId3Column {
                get {
                    return this.columnModifierId3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifierId4Column {
                get {
                    return this.columnModifierId4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPILocationColumn {
                get {
                    return this.columnHistoryHPILocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPIDurationColumn {
                get {
                    return this.columnHistoryHPIDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPIModifyingFactorsColumn {
                get {
                    return this.columnHistoryHPIModifyingFactors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPIContextOnsetColumn {
                get {
                    return this.columnHistoryHPIContextOnset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPIQualityNatureColumn {
                get {
                    return this.columnHistoryHPIQualityNature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPITimingFrequencyColumn {
                get {
                    return this.columnHistoryHPITimingFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPIAssociatedSignsSymptomsColumn {
                get {
                    return this.columnHistoryHPIAssociatedSignsSymptoms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPISeverityColumn {
                get {
                    return this.columnHistoryHPISeverity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPITotalCountColumn {
                get {
                    return this.columnHistoryHPITotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryHPIResultsColumn {
                get {
                    return this.columnHistoryHPIResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSConstitutionalColumn {
                get {
                    return this.columnHistoryROSConstitutional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSEarNoseMouthThroatColumn {
                get {
                    return this.columnHistoryROSEarNoseMouthThroat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSCardiovascularColumn {
                get {
                    return this.columnHistoryROSCardiovascular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSRespiratoryColumn {
                get {
                    return this.columnHistoryROSRespiratory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSSkinColumn {
                get {
                    return this.columnHistoryROSSkin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSPsychiatricColumn {
                get {
                    return this.columnHistoryROSPsychiatric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSHematologicLymphaticColumn {
                get {
                    return this.columnHistoryROSHematologicLymphatic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSEyeColumn {
                get {
                    return this.columnHistoryROSEye;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSGastrointestinalColumn {
                get {
                    return this.columnHistoryROSGastrointestinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSGenitourinaryColumn {
                get {
                    return this.columnHistoryROSGenitourinary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSMusculoskeletalColumn {
                get {
                    return this.columnHistoryROSMusculoskeletal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSNeurologicalColumn {
                get {
                    return this.columnHistoryROSNeurological;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSEndocrineColumn {
                get {
                    return this.columnHistoryROSEndocrine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSAllergicImmunologicColumn {
                get {
                    return this.columnHistoryROSAllergicImmunologic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSTotalCountColumn {
                get {
                    return this.columnHistoryROSTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryROSResultsColumn {
                get {
                    return this.columnHistoryROSResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryPHFamilyHistoryColumn {
                get {
                    return this.columnHistoryPHFamilyHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryPHSocialHistoryColumn {
                get {
                    return this.columnHistoryPHSocialHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryPHMedicalHistoryColumn {
                get {
                    return this.columnHistoryPHMedicalHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryPHTotalCountColumn {
                get {
                    return this.columnHistoryPHTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryPHResultsColumn {
                get {
                    return this.columnHistoryPHResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryFinalResultColumn {
                get {
                    return this.columnHistoryFinalResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAHeadColumn {
                get {
                    return this.columnExamBAHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBABackColumn {
                get {
                    return this.columnExamBABack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBALeftUpperExtremityColumn {
                get {
                    return this.columnExamBALeftUpperExtremity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBALeftLowerExtremityColumn {
                get {
                    return this.columnExamBALeftLowerExtremity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAAbdomenColumn {
                get {
                    return this.columnExamBAAbdomen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBANeckColumn {
                get {
                    return this.columnExamBANeck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAChestColumn {
                get {
                    return this.columnExamBAChest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBARightUpperExtremityColumn {
                get {
                    return this.columnExamBARightUpperExtremity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBARightLowerExtremityColumn {
                get {
                    return this.columnExamBARightLowerExtremity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAGenitaliaButtocksColumn {
                get {
                    return this.columnExamBAGenitaliaButtocks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSConstitutionalColumn {
                get {
                    return this.columnExamOSConstitutional;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSEyesColumn {
                get {
                    return this.columnExamOSEyes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSEarNoseMouthThroatColumn {
                get {
                    return this.columnExamOSEarNoseMouthThroat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSCardiovascularColumn {
                get {
                    return this.columnExamOSCardiovascular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSRespiratoryColumn {
                get {
                    return this.columnExamOSRespiratory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSPsychiatricColumn {
                get {
                    return this.columnExamOSPsychiatric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSGastrointestinalColumn {
                get {
                    return this.columnExamOSGastrointestinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSGenitourinaryColumn {
                get {
                    return this.columnExamOSGenitourinary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSMusculoskeletalColumn {
                get {
                    return this.columnExamOSMusculoskeletal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSSkinColumn {
                get {
                    return this.columnExamOSSkin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSNeurologicColumn {
                get {
                    return this.columnExamOSNeurologic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSHematologicLymphaticColumn {
                get {
                    return this.columnExamOSHematologicLymphatic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamTypeOfExamColumn {
                get {
                    return this.columnExamTypeOfExam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamFinalResultColumn {
                get {
                    return this.columnExamFinalResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRROClinicalLabsColumn {
                get {
                    return this.columnMDMDRROClinicalLabs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRROOtherTestColumn {
                get {
                    return this.columnMDMDRROOtherTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRObtainRecordsColumn {
                get {
                    return this.columnMDMDRObtainRecords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRIndependentVisualizationColumn {
                get {
                    return this.columnMDMDRIndependentVisualization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRRORadiologyTestColumn {
                get {
                    return this.columnMDMDRRORadiologyTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRDiscussionColumn {
                get {
                    return this.columnMDMDRDiscussion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRReviewSummarizeColumn {
                get {
                    return this.columnMDMDRReviewSummarize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDRResultsColumn {
                get {
                    return this.columnMDMDRResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTONewProblemColumn {
                get {
                    return this.columnMDMDTONewProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOProblems1Column {
                get {
                    return this.columnMDMDTOProblems1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOProblems2Column {
                get {
                    return this.columnMDMDTOProblems2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOProblems3Column {
                get {
                    return this.columnMDMDTOProblems3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOProblems4PlusColumn {
                get {
                    return this.columnMDMDTOProblems4Plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOAdditionalWorkupColumn {
                get {
                    return this.columnMDMDTOAdditionalWorkup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOProblemWorsening1Column {
                get {
                    return this.columnMDMDTOProblemWorsening1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOProblemWorsening2Column {
                get {
                    return this.columnMDMDTOProblemWorsening2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMDTOResultsColumn {
                get {
                    return this.columnMDMDTOResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMResultsColumn {
                get {
                    return this.columnMDMRCMMResults;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMFinalResultColumn {
                get {
                    return this.columnMDMFinalResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECEEMCodeColumn {
                get {
                    return this.columnECEEMCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECEGuidelinesColumn {
                get {
                    return this.columnECEGuidelines;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECETypeOfPatientColumn {
                get {
                    return this.columnECETypeOfPatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECEVisitTypeColumn {
                get {
                    return this.columnECEVisitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECE50PercentFaceTimeColumn {
                get {
                    return this.columnECE50PercentFaceTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECEMinutesColumn {
                get {
                    return this.columnECEMinutes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQChronicProblemsAddressed3PlusColumn {
                get {
                    return this.columnECAQChronicProblemsAddressed3Plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQAdditionalWorkupColumn {
                get {
                    return this.columnECAQAdditionalWorkup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQProblemWorsening1Column {
                get {
                    return this.columnECAQProblemWorsening1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQProblemWorsening2Column {
                get {
                    return this.columnECAQProblemWorsening2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQIllnessWithExacerbationColumn {
                get {
                    return this.columnECAQIllnessWithExacerbation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQDiscussionColumn {
                get {
                    return this.columnECAQDiscussion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQObtainRecordsColumn {
                get {
                    return this.columnECAQObtainRecords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQIndependentVisualizationColumn {
                get {
                    return this.columnECAQIndependentVisualization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ECAQReviewSummarizeColumn {
                get {
                    return this.columnECAQReviewSummarize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAHeadCountColumn {
                get {
                    return this.columnExamBAHeadCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAHeadTotalCountColumn {
                get {
                    return this.columnExamBAHeadTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBABackCountColumn {
                get {
                    return this.columnExamBABackCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBABackTotalCountColumn {
                get {
                    return this.columnExamBABackTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBALeftUpperExtremityCountColumn {
                get {
                    return this.columnExamBALeftUpperExtremityCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBALeftUpperExtremityTotalCountColumn {
                get {
                    return this.columnExamBALeftUpperExtremityTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBALeftLowerExtremityCountColumn {
                get {
                    return this.columnExamBALeftLowerExtremityCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBALeftLowerExtremityTotalCountColumn {
                get {
                    return this.columnExamBALeftLowerExtremityTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAAbdomenCountColumn {
                get {
                    return this.columnExamBAAbdomenCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAAbdomenTotalCountColumn {
                get {
                    return this.columnExamBAAbdomenTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBANeckCountColumn {
                get {
                    return this.columnExamBANeckCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBANeckTotalCountColumn {
                get {
                    return this.columnExamBANeckTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAChestCountColumn {
                get {
                    return this.columnExamBAChestCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAChestTotalCountColumn {
                get {
                    return this.columnExamBAChestTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBARightUpperExtremityCountColumn {
                get {
                    return this.columnExamBARightUpperExtremityCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBARightUpperExtremityTotalCountColumn {
                get {
                    return this.columnExamBARightUpperExtremityTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBARightLowerExtremityCountColumn {
                get {
                    return this.columnExamBARightLowerExtremityCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBARightLowerExtremityTotalCountColumn {
                get {
                    return this.columnExamBARightLowerExtremityTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAGenitaliaButtocksCountColumn {
                get {
                    return this.columnExamBAGenitaliaButtocksCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamBAGenitaliaButtocksTotalCountColumn {
                get {
                    return this.columnExamBAGenitaliaButtocksTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSConstitutionalCountColumn {
                get {
                    return this.columnExamOSConstitutionalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSConstitutionalTotalCountColumn {
                get {
                    return this.columnExamOSConstitutionalTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSEyesCountColumn {
                get {
                    return this.columnExamOSEyesCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSEyesTotalCountColumn {
                get {
                    return this.columnExamOSEyesTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSEarNoseMouthThroatCountColumn {
                get {
                    return this.columnExamOSEarNoseMouthThroatCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSEarNoseMouthThroatTotalCountColumn {
                get {
                    return this.columnExamOSEarNoseMouthThroatTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSCardiovascularCountColumn {
                get {
                    return this.columnExamOSCardiovascularCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSCardiovascularTotalCountColumn {
                get {
                    return this.columnExamOSCardiovascularTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSRespiratoryCountColumn {
                get {
                    return this.columnExamOSRespiratoryCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSRespiratoryTotalCountColumn {
                get {
                    return this.columnExamOSRespiratoryTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSPsychiatricCountColumn {
                get {
                    return this.columnExamOSPsychiatricCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSPsychiatricTotalCountColumn {
                get {
                    return this.columnExamOSPsychiatricTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSGastrointestinalCountColumn {
                get {
                    return this.columnExamOSGastrointestinalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSGastrointestinalTotalCountColumn {
                get {
                    return this.columnExamOSGastrointestinalTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSGenitourinaryCountColumn {
                get {
                    return this.columnExamOSGenitourinaryCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSGenitourinaryTotalCountColumn {
                get {
                    return this.columnExamOSGenitourinaryTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSMusculoskeletalCountColumn {
                get {
                    return this.columnExamOSMusculoskeletalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSMusculoskeletalTotalCountColumn {
                get {
                    return this.columnExamOSMusculoskeletalTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSSkinCountColumn {
                get {
                    return this.columnExamOSSkinCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSSkinTotalCountColumn {
                get {
                    return this.columnExamOSSkinTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSNeurologicCountColumn {
                get {
                    return this.columnExamOSNeurologicCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSNeurologicTotalCountColumn {
                get {
                    return this.columnExamOSNeurologicTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSHematologicLymphaticCountColumn {
                get {
                    return this.columnExamOSHematologicLymphaticCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExamOSHematologicLymphaticTotalCountColumn {
                get {
                    return this.columnExamOSHematologicLymphaticTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPMinorOtherProb1Column {
                get {
                    return this.columnMDMRCMMPPMinorOtherProb1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPMinorOtherProb2PlusColumn {
                get {
                    return this.columnMDMRCMMPPMinorOtherProb2Plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPStableChronicMajor1Column {
                get {
                    return this.columnMDMRCMMPPStableChronicMajor1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPChronicMajorMildExac1PlusColumn {
                get {
                    return this.columnMDMRCMMPPChronicMajorMildExac1Plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPAcuteUncomplicated1Column {
                get {
                    return this.columnMDMRCMMPPAcuteUncomplicated1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPNewProblemColumn {
                get {
                    return this.columnMDMRCMMPPNewProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPAcuteIllnessColumn {
                get {
                    return this.columnMDMRCMMPPAcuteIllness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPAcuteComplicatedInjuryColumn {
                get {
                    return this.columnMDMRCMMPPAcuteComplicatedInjury;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPChronicMajorSevereExac1PlusColumn {
                get {
                    return this.columnMDMRCMMPPChronicMajorSevereExac1Plus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMPPAcuteChronicThreatColumn {
                get {
                    return this.columnMDMRCMMPPAcuteChronicThreat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDLabVenipunctureColumn {
                get {
                    return this.columnMDMRCMMDLabVenipuncture;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDNonCardImagingColumn {
                get {
                    return this.columnMDMRCMMDNonCardImaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDPhysTestNoStressColumn {
                get {
                    return this.columnMDMRCMMDPhysTestNoStress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDPhysTestYesStressColumn {
                get {
                    return this.columnMDMRCMMDPhysTestYesStress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDSkinBiopsiesColumn {
                get {
                    return this.columnMDMRCMMDSkinBiopsies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDDeepNeedleColumn {
                get {
                    return this.columnMDMRCMMDDeepNeedle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDDiagEndoNoRiskColumn {
                get {
                    return this.columnMDMRCMMDDiagEndoNoRisk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDDiagEndoYesRiskColumn {
                get {
                    return this.columnMDMRCMMDDiagEndoYesRisk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDCardImagingNoRiskColumn {
                get {
                    return this.columnMDMRCMMDCardImagingNoRisk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDCardImagingYesRiskColumn {
                get {
                    return this.columnMDMRCMMDCardImagingYesRisk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDClinicalLabColumn {
                get {
                    return this.columnMDMRCMMDClinicalLab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDObtainFluidColumn {
                get {
                    return this.columnMDMRCMMDObtainFluid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDCardiacElectroColumn {
                get {
                    return this.columnMDMRCMMDCardiacElectro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMDDiscopgraphyColumn {
                get {
                    return this.columnMDMRCMMDDiscopgraphy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MDMRCMMMOSMedicationManagementColumn {
                get {
                    return this.columnMDMRCMMMOSMedicationManagement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NoteEMCodeOptionsRow this[int index] {
                get {
                    return ((NoteEMCodeOptionsRow)(this.Rows[index]));
                }
            }
            
            public event NoteEMCodeOptionsRowChangeEventHandler NoteEMCodeOptionsRowChanging;
            
            public event NoteEMCodeOptionsRowChangeEventHandler NoteEMCodeOptionsRowChanged;
            
            public event NoteEMCodeOptionsRowChangeEventHandler NoteEMCodeOptionsRowDeleting;
            
            public event NoteEMCodeOptionsRowChangeEventHandler NoteEMCodeOptionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNoteEMCodeOptionsRow(NoteEMCodeOptionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NoteEMCodeOptionsRow AddNoteEMCodeOptionsRow(
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        System.DateTime DeletedDate, 
                        string DeletedBy, 
                        int DocumentVersionId, 
                        int ProcedureCodeId, 
                        int ProgramId, 
                        int LocationId, 
                        System.DateTime StartTime, 
                        System.DateTime EndTime, 
                        int ModifierId1, 
                        int ModifierId2, 
                        int ModifierId3, 
                        int ModifierId4, 
                        string HistoryHPILocation, 
                        string HistoryHPIDuration, 
                        string HistoryHPIModifyingFactors, 
                        string HistoryHPIContextOnset, 
                        string HistoryHPIQualityNature, 
                        string HistoryHPITimingFrequency, 
                        string HistoryHPIAssociatedSignsSymptoms, 
                        string HistoryHPISeverity, 
                        int HistoryHPITotalCount, 
                        string HistoryHPIResults, 
                        string HistoryROSConstitutional, 
                        string HistoryROSEarNoseMouthThroat, 
                        string HistoryROSCardiovascular, 
                        string HistoryROSRespiratory, 
                        string HistoryROSSkin, 
                        string HistoryROSPsychiatric, 
                        string HistoryROSHematologicLymphatic, 
                        string HistoryROSEye, 
                        string HistoryROSGastrointestinal, 
                        string HistoryROSGenitourinary, 
                        string HistoryROSMusculoskeletal, 
                        string HistoryROSNeurological, 
                        string HistoryROSEndocrine, 
                        string HistoryROSAllergicImmunologic, 
                        int HistoryROSTotalCount, 
                        string HistoryROSResults, 
                        string HistoryPHFamilyHistory, 
                        string HistoryPHSocialHistory, 
                        string HistoryPHMedicalHistory, 
                        int HistoryPHTotalCount, 
                        string HistoryPHResults, 
                        string HistoryFinalResult, 
                        string ExamBAHead, 
                        string ExamBABack, 
                        string ExamBALeftUpperExtremity, 
                        string ExamBALeftLowerExtremity, 
                        string ExamBAAbdomen, 
                        string ExamBANeck, 
                        string ExamBAChest, 
                        string ExamBARightUpperExtremity, 
                        string ExamBARightLowerExtremity, 
                        string ExamBAGenitaliaButtocks, 
                        string ExamOSConstitutional, 
                        string ExamOSEyes, 
                        string ExamOSEarNoseMouthThroat, 
                        string ExamOSCardiovascular, 
                        string ExamOSRespiratory, 
                        string ExamOSPsychiatric, 
                        string ExamOSGastrointestinal, 
                        string ExamOSGenitourinary, 
                        string ExamOSMusculoskeletal, 
                        string ExamOSSkin, 
                        string ExamOSNeurologic, 
                        string ExamOSHematologicLymphatic, 
                        string ExamTypeOfExam, 
                        string ExamFinalResult, 
                        string MDMDRROClinicalLabs, 
                        string MDMDRROOtherTest, 
                        string MDMDRObtainRecords, 
                        string MDMDRIndependentVisualization, 
                        string MDMDRRORadiologyTest, 
                        string MDMDRDiscussion, 
                        string MDMDRReviewSummarize, 
                        string MDMDRResults, 
                        string MDMDTONewProblem, 
                        string MDMDTOProblems1, 
                        string MDMDTOProblems2, 
                        string MDMDTOProblems3, 
                        string MDMDTOProblems4Plus, 
                        string MDMDTOAdditionalWorkup, 
                        string MDMDTOProblemWorsening1, 
                        string MDMDTOProblemWorsening2, 
                        string MDMDTOResults, 
                        string MDMRCMMResults, 
                        string MDMFinalResult, 
                        string ECEEMCode, 
                        string ECEGuidelines, 
                        string ECETypeOfPatient, 
                        string ECEVisitType, 
                        string ECE50PercentFaceTime, 
                        int ECEMinutes, 
                        string ECAQChronicProblemsAddressed3Plus, 
                        string ECAQAdditionalWorkup, 
                        string ECAQProblemWorsening1, 
                        string ECAQProblemWorsening2, 
                        string ECAQIllnessWithExacerbation, 
                        string ECAQDiscussion, 
                        string ECAQObtainRecords, 
                        string ECAQIndependentVisualization, 
                        string ECAQReviewSummarize, 
                        int ExamBAHeadCount, 
                        int ExamBAHeadTotalCount, 
                        int ExamBABackCount, 
                        int ExamBABackTotalCount, 
                        int ExamBALeftUpperExtremityCount, 
                        int ExamBALeftUpperExtremityTotalCount, 
                        int ExamBALeftLowerExtremityCount, 
                        int ExamBALeftLowerExtremityTotalCount, 
                        int ExamBAAbdomenCount, 
                        int ExamBAAbdomenTotalCount, 
                        int ExamBANeckCount, 
                        int ExamBANeckTotalCount, 
                        int ExamBAChestCount, 
                        int ExamBAChestTotalCount, 
                        int ExamBARightUpperExtremityCount, 
                        int ExamBARightUpperExtremityTotalCount, 
                        int ExamBARightLowerExtremityCount, 
                        int ExamBARightLowerExtremityTotalCount, 
                        int ExamBAGenitaliaButtocksCount, 
                        int ExamBAGenitaliaButtocksTotalCount, 
                        int ExamOSConstitutionalCount, 
                        int ExamOSConstitutionalTotalCount, 
                        int ExamOSEyesCount, 
                        int ExamOSEyesTotalCount, 
                        int ExamOSEarNoseMouthThroatCount, 
                        int ExamOSEarNoseMouthThroatTotalCount, 
                        int ExamOSCardiovascularCount, 
                        int ExamOSCardiovascularTotalCount, 
                        int ExamOSRespiratoryCount, 
                        int ExamOSRespiratoryTotalCount, 
                        int ExamOSPsychiatricCount, 
                        int ExamOSPsychiatricTotalCount, 
                        int ExamOSGastrointestinalCount, 
                        int ExamOSGastrointestinalTotalCount, 
                        int ExamOSGenitourinaryCount, 
                        int ExamOSGenitourinaryTotalCount, 
                        int ExamOSMusculoskeletalCount, 
                        int ExamOSMusculoskeletalTotalCount, 
                        int ExamOSSkinCount, 
                        int ExamOSSkinTotalCount, 
                        int ExamOSNeurologicCount, 
                        int ExamOSNeurologicTotalCount, 
                        int ExamOSHematologicLymphaticCount, 
                        int ExamOSHematologicLymphaticTotalCount, 
                        string MDMRCMMPPMinorOtherProb1, 
                        string MDMRCMMPPMinorOtherProb2Plus, 
                        string MDMRCMMPPStableChronicMajor1, 
                        string MDMRCMMPPChronicMajorMildExac1Plus, 
                        string MDMRCMMPPAcuteUncomplicated1, 
                        string MDMRCMMPPNewProblem, 
                        string MDMRCMMPPAcuteIllness, 
                        string MDMRCMMPPAcuteComplicatedInjury, 
                        string MDMRCMMPPChronicMajorSevereExac1Plus, 
                        string MDMRCMMPPAcuteChronicThreat, 
                        string MDMRCMMDLabVenipuncture, 
                        string MDMRCMMDNonCardImaging, 
                        string MDMRCMMDPhysTestNoStress, 
                        string MDMRCMMDPhysTestYesStress, 
                        string MDMRCMMDSkinBiopsies, 
                        string MDMRCMMDDeepNeedle, 
                        string MDMRCMMDDiagEndoNoRisk, 
                        string MDMRCMMDDiagEndoYesRisk, 
                        string MDMRCMMDCardImagingNoRisk, 
                        string MDMRCMMDCardImagingYesRisk, 
                        string MDMRCMMDClinicalLab, 
                        string MDMRCMMDObtainFluid, 
                        string MDMRCMMDCardiacElectro, 
                        string MDMRCMMDDiscopgraphy, 
                        string MDMRCMMMOSMedicationManagement) {
                NoteEMCodeOptionsRow rowNoteEMCodeOptionsRow = ((NoteEMCodeOptionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedDate,
                        DeletedBy,
                        DocumentVersionId,
                        ProcedureCodeId,
                        ProgramId,
                        LocationId,
                        StartTime,
                        EndTime,
                        ModifierId1,
                        ModifierId2,
                        ModifierId3,
                        ModifierId4,
                        HistoryHPILocation,
                        HistoryHPIDuration,
                        HistoryHPIModifyingFactors,
                        HistoryHPIContextOnset,
                        HistoryHPIQualityNature,
                        HistoryHPITimingFrequency,
                        HistoryHPIAssociatedSignsSymptoms,
                        HistoryHPISeverity,
                        HistoryHPITotalCount,
                        HistoryHPIResults,
                        HistoryROSConstitutional,
                        HistoryROSEarNoseMouthThroat,
                        HistoryROSCardiovascular,
                        HistoryROSRespiratory,
                        HistoryROSSkin,
                        HistoryROSPsychiatric,
                        HistoryROSHematologicLymphatic,
                        HistoryROSEye,
                        HistoryROSGastrointestinal,
                        HistoryROSGenitourinary,
                        HistoryROSMusculoskeletal,
                        HistoryROSNeurological,
                        HistoryROSEndocrine,
                        HistoryROSAllergicImmunologic,
                        HistoryROSTotalCount,
                        HistoryROSResults,
                        HistoryPHFamilyHistory,
                        HistoryPHSocialHistory,
                        HistoryPHMedicalHistory,
                        HistoryPHTotalCount,
                        HistoryPHResults,
                        HistoryFinalResult,
                        ExamBAHead,
                        ExamBABack,
                        ExamBALeftUpperExtremity,
                        ExamBALeftLowerExtremity,
                        ExamBAAbdomen,
                        ExamBANeck,
                        ExamBAChest,
                        ExamBARightUpperExtremity,
                        ExamBARightLowerExtremity,
                        ExamBAGenitaliaButtocks,
                        ExamOSConstitutional,
                        ExamOSEyes,
                        ExamOSEarNoseMouthThroat,
                        ExamOSCardiovascular,
                        ExamOSRespiratory,
                        ExamOSPsychiatric,
                        ExamOSGastrointestinal,
                        ExamOSGenitourinary,
                        ExamOSMusculoskeletal,
                        ExamOSSkin,
                        ExamOSNeurologic,
                        ExamOSHematologicLymphatic,
                        ExamTypeOfExam,
                        ExamFinalResult,
                        MDMDRROClinicalLabs,
                        MDMDRROOtherTest,
                        MDMDRObtainRecords,
                        MDMDRIndependentVisualization,
                        MDMDRRORadiologyTest,
                        MDMDRDiscussion,
                        MDMDRReviewSummarize,
                        MDMDRResults,
                        MDMDTONewProblem,
                        MDMDTOProblems1,
                        MDMDTOProblems2,
                        MDMDTOProblems3,
                        MDMDTOProblems4Plus,
                        MDMDTOAdditionalWorkup,
                        MDMDTOProblemWorsening1,
                        MDMDTOProblemWorsening2,
                        MDMDTOResults,
                        MDMRCMMResults,
                        MDMFinalResult,
                        ECEEMCode,
                        ECEGuidelines,
                        ECETypeOfPatient,
                        ECEVisitType,
                        ECE50PercentFaceTime,
                        ECEMinutes,
                        ECAQChronicProblemsAddressed3Plus,
                        ECAQAdditionalWorkup,
                        ECAQProblemWorsening1,
                        ECAQProblemWorsening2,
                        ECAQIllnessWithExacerbation,
                        ECAQDiscussion,
                        ECAQObtainRecords,
                        ECAQIndependentVisualization,
                        ECAQReviewSummarize,
                        ExamBAHeadCount,
                        ExamBAHeadTotalCount,
                        ExamBABackCount,
                        ExamBABackTotalCount,
                        ExamBALeftUpperExtremityCount,
                        ExamBALeftUpperExtremityTotalCount,
                        ExamBALeftLowerExtremityCount,
                        ExamBALeftLowerExtremityTotalCount,
                        ExamBAAbdomenCount,
                        ExamBAAbdomenTotalCount,
                        ExamBANeckCount,
                        ExamBANeckTotalCount,
                        ExamBAChestCount,
                        ExamBAChestTotalCount,
                        ExamBARightUpperExtremityCount,
                        ExamBARightUpperExtremityTotalCount,
                        ExamBARightLowerExtremityCount,
                        ExamBARightLowerExtremityTotalCount,
                        ExamBAGenitaliaButtocksCount,
                        ExamBAGenitaliaButtocksTotalCount,
                        ExamOSConstitutionalCount,
                        ExamOSConstitutionalTotalCount,
                        ExamOSEyesCount,
                        ExamOSEyesTotalCount,
                        ExamOSEarNoseMouthThroatCount,
                        ExamOSEarNoseMouthThroatTotalCount,
                        ExamOSCardiovascularCount,
                        ExamOSCardiovascularTotalCount,
                        ExamOSRespiratoryCount,
                        ExamOSRespiratoryTotalCount,
                        ExamOSPsychiatricCount,
                        ExamOSPsychiatricTotalCount,
                        ExamOSGastrointestinalCount,
                        ExamOSGastrointestinalTotalCount,
                        ExamOSGenitourinaryCount,
                        ExamOSGenitourinaryTotalCount,
                        ExamOSMusculoskeletalCount,
                        ExamOSMusculoskeletalTotalCount,
                        ExamOSSkinCount,
                        ExamOSSkinTotalCount,
                        ExamOSNeurologicCount,
                        ExamOSNeurologicTotalCount,
                        ExamOSHematologicLymphaticCount,
                        ExamOSHematologicLymphaticTotalCount,
                        MDMRCMMPPMinorOtherProb1,
                        MDMRCMMPPMinorOtherProb2Plus,
                        MDMRCMMPPStableChronicMajor1,
                        MDMRCMMPPChronicMajorMildExac1Plus,
                        MDMRCMMPPAcuteUncomplicated1,
                        MDMRCMMPPNewProblem,
                        MDMRCMMPPAcuteIllness,
                        MDMRCMMPPAcuteComplicatedInjury,
                        MDMRCMMPPChronicMajorSevereExac1Plus,
                        MDMRCMMPPAcuteChronicThreat,
                        MDMRCMMDLabVenipuncture,
                        MDMRCMMDNonCardImaging,
                        MDMRCMMDPhysTestNoStress,
                        MDMRCMMDPhysTestYesStress,
                        MDMRCMMDSkinBiopsies,
                        MDMRCMMDDeepNeedle,
                        MDMRCMMDDiagEndoNoRisk,
                        MDMRCMMDDiagEndoYesRisk,
                        MDMRCMMDCardImagingNoRisk,
                        MDMRCMMDCardImagingYesRisk,
                        MDMRCMMDClinicalLab,
                        MDMRCMMDObtainFluid,
                        MDMRCMMDCardiacElectro,
                        MDMRCMMDDiscopgraphy,
                        MDMRCMMMOSMedicationManagement};
                rowNoteEMCodeOptionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNoteEMCodeOptionsRow);
                return rowNoteEMCodeOptionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NoteEMCodeOptionsRow FindByNoteEMCodeOptionId(long NoteEMCodeOptionId) {
                return ((NoteEMCodeOptionsRow)(this.Rows.Find(new object[] {
                            NoteEMCodeOptionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NoteEMCodeOptionsDataTable cln = ((NoteEMCodeOptionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NoteEMCodeOptionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNoteEMCodeOptionId = base.Columns["NoteEMCodeOptionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnProcedureCodeId = base.Columns["ProcedureCodeId"];
                this.columnProgramId = base.Columns["ProgramId"];
                this.columnLocationId = base.Columns["LocationId"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnModifierId1 = base.Columns["ModifierId1"];
                this.columnModifierId2 = base.Columns["ModifierId2"];
                this.columnModifierId3 = base.Columns["ModifierId3"];
                this.columnModifierId4 = base.Columns["ModifierId4"];
                this.columnHistoryHPILocation = base.Columns["HistoryHPILocation"];
                this.columnHistoryHPIDuration = base.Columns["HistoryHPIDuration"];
                this.columnHistoryHPIModifyingFactors = base.Columns["HistoryHPIModifyingFactors"];
                this.columnHistoryHPIContextOnset = base.Columns["HistoryHPIContextOnset"];
                this.columnHistoryHPIQualityNature = base.Columns["HistoryHPIQualityNature"];
                this.columnHistoryHPITimingFrequency = base.Columns["HistoryHPITimingFrequency"];
                this.columnHistoryHPIAssociatedSignsSymptoms = base.Columns["HistoryHPIAssociatedSignsSymptoms"];
                this.columnHistoryHPISeverity = base.Columns["HistoryHPISeverity"];
                this.columnHistoryHPITotalCount = base.Columns["HistoryHPITotalCount"];
                this.columnHistoryHPIResults = base.Columns["HistoryHPIResults"];
                this.columnHistoryROSConstitutional = base.Columns["HistoryROSConstitutional"];
                this.columnHistoryROSEarNoseMouthThroat = base.Columns["HistoryROSEarNoseMouthThroat"];
                this.columnHistoryROSCardiovascular = base.Columns["HistoryROSCardiovascular"];
                this.columnHistoryROSRespiratory = base.Columns["HistoryROSRespiratory"];
                this.columnHistoryROSSkin = base.Columns["HistoryROSSkin"];
                this.columnHistoryROSPsychiatric = base.Columns["HistoryROSPsychiatric"];
                this.columnHistoryROSHematologicLymphatic = base.Columns["HistoryROSHematologicLymphatic"];
                this.columnHistoryROSEye = base.Columns["HistoryROSEye"];
                this.columnHistoryROSGastrointestinal = base.Columns["HistoryROSGastrointestinal"];
                this.columnHistoryROSGenitourinary = base.Columns["HistoryROSGenitourinary"];
                this.columnHistoryROSMusculoskeletal = base.Columns["HistoryROSMusculoskeletal"];
                this.columnHistoryROSNeurological = base.Columns["HistoryROSNeurological"];
                this.columnHistoryROSEndocrine = base.Columns["HistoryROSEndocrine"];
                this.columnHistoryROSAllergicImmunologic = base.Columns["HistoryROSAllergicImmunologic"];
                this.columnHistoryROSTotalCount = base.Columns["HistoryROSTotalCount"];
                this.columnHistoryROSResults = base.Columns["HistoryROSResults"];
                this.columnHistoryPHFamilyHistory = base.Columns["HistoryPHFamilyHistory"];
                this.columnHistoryPHSocialHistory = base.Columns["HistoryPHSocialHistory"];
                this.columnHistoryPHMedicalHistory = base.Columns["HistoryPHMedicalHistory"];
                this.columnHistoryPHTotalCount = base.Columns["HistoryPHTotalCount"];
                this.columnHistoryPHResults = base.Columns["HistoryPHResults"];
                this.columnHistoryFinalResult = base.Columns["HistoryFinalResult"];
                this.columnExamBAHead = base.Columns["ExamBAHead"];
                this.columnExamBABack = base.Columns["ExamBABack"];
                this.columnExamBALeftUpperExtremity = base.Columns["ExamBALeftUpperExtremity"];
                this.columnExamBALeftLowerExtremity = base.Columns["ExamBALeftLowerExtremity"];
                this.columnExamBAAbdomen = base.Columns["ExamBAAbdomen"];
                this.columnExamBANeck = base.Columns["ExamBANeck"];
                this.columnExamBAChest = base.Columns["ExamBAChest"];
                this.columnExamBARightUpperExtremity = base.Columns["ExamBARightUpperExtremity"];
                this.columnExamBARightLowerExtremity = base.Columns["ExamBARightLowerExtremity"];
                this.columnExamBAGenitaliaButtocks = base.Columns["ExamBAGenitaliaButtocks"];
                this.columnExamOSConstitutional = base.Columns["ExamOSConstitutional"];
                this.columnExamOSEyes = base.Columns["ExamOSEyes"];
                this.columnExamOSEarNoseMouthThroat = base.Columns["ExamOSEarNoseMouthThroat"];
                this.columnExamOSCardiovascular = base.Columns["ExamOSCardiovascular"];
                this.columnExamOSRespiratory = base.Columns["ExamOSRespiratory"];
                this.columnExamOSPsychiatric = base.Columns["ExamOSPsychiatric"];
                this.columnExamOSGastrointestinal = base.Columns["ExamOSGastrointestinal"];
                this.columnExamOSGenitourinary = base.Columns["ExamOSGenitourinary"];
                this.columnExamOSMusculoskeletal = base.Columns["ExamOSMusculoskeletal"];
                this.columnExamOSSkin = base.Columns["ExamOSSkin"];
                this.columnExamOSNeurologic = base.Columns["ExamOSNeurologic"];
                this.columnExamOSHematologicLymphatic = base.Columns["ExamOSHematologicLymphatic"];
                this.columnExamTypeOfExam = base.Columns["ExamTypeOfExam"];
                this.columnExamFinalResult = base.Columns["ExamFinalResult"];
                this.columnMDMDRROClinicalLabs = base.Columns["MDMDRROClinicalLabs"];
                this.columnMDMDRROOtherTest = base.Columns["MDMDRROOtherTest"];
                this.columnMDMDRObtainRecords = base.Columns["MDMDRObtainRecords"];
                this.columnMDMDRIndependentVisualization = base.Columns["MDMDRIndependentVisualization"];
                this.columnMDMDRRORadiologyTest = base.Columns["MDMDRRORadiologyTest"];
                this.columnMDMDRDiscussion = base.Columns["MDMDRDiscussion"];
                this.columnMDMDRReviewSummarize = base.Columns["MDMDRReviewSummarize"];
                this.columnMDMDRResults = base.Columns["MDMDRResults"];
                this.columnMDMDTONewProblem = base.Columns["MDMDTONewProblem"];
                this.columnMDMDTOProblems1 = base.Columns["MDMDTOProblems1"];
                this.columnMDMDTOProblems2 = base.Columns["MDMDTOProblems2"];
                this.columnMDMDTOProblems3 = base.Columns["MDMDTOProblems3"];
                this.columnMDMDTOProblems4Plus = base.Columns["MDMDTOProblems4Plus"];
                this.columnMDMDTOAdditionalWorkup = base.Columns["MDMDTOAdditionalWorkup"];
                this.columnMDMDTOProblemWorsening1 = base.Columns["MDMDTOProblemWorsening1"];
                this.columnMDMDTOProblemWorsening2 = base.Columns["MDMDTOProblemWorsening2"];
                this.columnMDMDTOResults = base.Columns["MDMDTOResults"];
                this.columnMDMRCMMResults = base.Columns["MDMRCMMResults"];
                this.columnMDMFinalResult = base.Columns["MDMFinalResult"];
                this.columnECEEMCode = base.Columns["ECEEMCode"];
                this.columnECEGuidelines = base.Columns["ECEGuidelines"];
                this.columnECETypeOfPatient = base.Columns["ECETypeOfPatient"];
                this.columnECEVisitType = base.Columns["ECEVisitType"];
                this.columnECE50PercentFaceTime = base.Columns["ECE50PercentFaceTime"];
                this.columnECEMinutes = base.Columns["ECEMinutes"];
                this.columnECAQChronicProblemsAddressed3Plus = base.Columns["ECAQChronicProblemsAddressed3Plus"];
                this.columnECAQAdditionalWorkup = base.Columns["ECAQAdditionalWorkup"];
                this.columnECAQProblemWorsening1 = base.Columns["ECAQProblemWorsening1"];
                this.columnECAQProblemWorsening2 = base.Columns["ECAQProblemWorsening2"];
                this.columnECAQIllnessWithExacerbation = base.Columns["ECAQIllnessWithExacerbation"];
                this.columnECAQDiscussion = base.Columns["ECAQDiscussion"];
                this.columnECAQObtainRecords = base.Columns["ECAQObtainRecords"];
                this.columnECAQIndependentVisualization = base.Columns["ECAQIndependentVisualization"];
                this.columnECAQReviewSummarize = base.Columns["ECAQReviewSummarize"];
                this.columnExamBAHeadCount = base.Columns["ExamBAHeadCount"];
                this.columnExamBAHeadTotalCount = base.Columns["ExamBAHeadTotalCount"];
                this.columnExamBABackCount = base.Columns["ExamBABackCount"];
                this.columnExamBABackTotalCount = base.Columns["ExamBABackTotalCount"];
                this.columnExamBALeftUpperExtremityCount = base.Columns["ExamBALeftUpperExtremityCount"];
                this.columnExamBALeftUpperExtremityTotalCount = base.Columns["ExamBALeftUpperExtremityTotalCount"];
                this.columnExamBALeftLowerExtremityCount = base.Columns["ExamBALeftLowerExtremityCount"];
                this.columnExamBALeftLowerExtremityTotalCount = base.Columns["ExamBALeftLowerExtremityTotalCount"];
                this.columnExamBAAbdomenCount = base.Columns["ExamBAAbdomenCount"];
                this.columnExamBAAbdomenTotalCount = base.Columns["ExamBAAbdomenTotalCount"];
                this.columnExamBANeckCount = base.Columns["ExamBANeckCount"];
                this.columnExamBANeckTotalCount = base.Columns["ExamBANeckTotalCount"];
                this.columnExamBAChestCount = base.Columns["ExamBAChestCount"];
                this.columnExamBAChestTotalCount = base.Columns["ExamBAChestTotalCount"];
                this.columnExamBARightUpperExtremityCount = base.Columns["ExamBARightUpperExtremityCount"];
                this.columnExamBARightUpperExtremityTotalCount = base.Columns["ExamBARightUpperExtremityTotalCount"];
                this.columnExamBARightLowerExtremityCount = base.Columns["ExamBARightLowerExtremityCount"];
                this.columnExamBARightLowerExtremityTotalCount = base.Columns["ExamBARightLowerExtremityTotalCount"];
                this.columnExamBAGenitaliaButtocksCount = base.Columns["ExamBAGenitaliaButtocksCount"];
                this.columnExamBAGenitaliaButtocksTotalCount = base.Columns["ExamBAGenitaliaButtocksTotalCount"];
                this.columnExamOSConstitutionalCount = base.Columns["ExamOSConstitutionalCount"];
                this.columnExamOSConstitutionalTotalCount = base.Columns["ExamOSConstitutionalTotalCount"];
                this.columnExamOSEyesCount = base.Columns["ExamOSEyesCount"];
                this.columnExamOSEyesTotalCount = base.Columns["ExamOSEyesTotalCount"];
                this.columnExamOSEarNoseMouthThroatCount = base.Columns["ExamOSEarNoseMouthThroatCount"];
                this.columnExamOSEarNoseMouthThroatTotalCount = base.Columns["ExamOSEarNoseMouthThroatTotalCount"];
                this.columnExamOSCardiovascularCount = base.Columns["ExamOSCardiovascularCount"];
                this.columnExamOSCardiovascularTotalCount = base.Columns["ExamOSCardiovascularTotalCount"];
                this.columnExamOSRespiratoryCount = base.Columns["ExamOSRespiratoryCount"];
                this.columnExamOSRespiratoryTotalCount = base.Columns["ExamOSRespiratoryTotalCount"];
                this.columnExamOSPsychiatricCount = base.Columns["ExamOSPsychiatricCount"];
                this.columnExamOSPsychiatricTotalCount = base.Columns["ExamOSPsychiatricTotalCount"];
                this.columnExamOSGastrointestinalCount = base.Columns["ExamOSGastrointestinalCount"];
                this.columnExamOSGastrointestinalTotalCount = base.Columns["ExamOSGastrointestinalTotalCount"];
                this.columnExamOSGenitourinaryCount = base.Columns["ExamOSGenitourinaryCount"];
                this.columnExamOSGenitourinaryTotalCount = base.Columns["ExamOSGenitourinaryTotalCount"];
                this.columnExamOSMusculoskeletalCount = base.Columns["ExamOSMusculoskeletalCount"];
                this.columnExamOSMusculoskeletalTotalCount = base.Columns["ExamOSMusculoskeletalTotalCount"];
                this.columnExamOSSkinCount = base.Columns["ExamOSSkinCount"];
                this.columnExamOSSkinTotalCount = base.Columns["ExamOSSkinTotalCount"];
                this.columnExamOSNeurologicCount = base.Columns["ExamOSNeurologicCount"];
                this.columnExamOSNeurologicTotalCount = base.Columns["ExamOSNeurologicTotalCount"];
                this.columnExamOSHematologicLymphaticCount = base.Columns["ExamOSHematologicLymphaticCount"];
                this.columnExamOSHematologicLymphaticTotalCount = base.Columns["ExamOSHematologicLymphaticTotalCount"];
                this.columnMDMRCMMPPMinorOtherProb1 = base.Columns["MDMRCMMPPMinorOtherProb1"];
                this.columnMDMRCMMPPMinorOtherProb2Plus = base.Columns["MDMRCMMPPMinorOtherProb2Plus"];
                this.columnMDMRCMMPPStableChronicMajor1 = base.Columns["MDMRCMMPPStableChronicMajor1"];
                this.columnMDMRCMMPPChronicMajorMildExac1Plus = base.Columns["MDMRCMMPPChronicMajorMildExac1Plus"];
                this.columnMDMRCMMPPAcuteUncomplicated1 = base.Columns["MDMRCMMPPAcuteUncomplicated1"];
                this.columnMDMRCMMPPNewProblem = base.Columns["MDMRCMMPPNewProblem"];
                this.columnMDMRCMMPPAcuteIllness = base.Columns["MDMRCMMPPAcuteIllness"];
                this.columnMDMRCMMPPAcuteComplicatedInjury = base.Columns["MDMRCMMPPAcuteComplicatedInjury"];
                this.columnMDMRCMMPPChronicMajorSevereExac1Plus = base.Columns["MDMRCMMPPChronicMajorSevereExac1Plus"];
                this.columnMDMRCMMPPAcuteChronicThreat = base.Columns["MDMRCMMPPAcuteChronicThreat"];
                this.columnMDMRCMMDLabVenipuncture = base.Columns["MDMRCMMDLabVenipuncture"];
                this.columnMDMRCMMDNonCardImaging = base.Columns["MDMRCMMDNonCardImaging"];
                this.columnMDMRCMMDPhysTestNoStress = base.Columns["MDMRCMMDPhysTestNoStress"];
                this.columnMDMRCMMDPhysTestYesStress = base.Columns["MDMRCMMDPhysTestYesStress"];
                this.columnMDMRCMMDSkinBiopsies = base.Columns["MDMRCMMDSkinBiopsies"];
                this.columnMDMRCMMDDeepNeedle = base.Columns["MDMRCMMDDeepNeedle"];
                this.columnMDMRCMMDDiagEndoNoRisk = base.Columns["MDMRCMMDDiagEndoNoRisk"];
                this.columnMDMRCMMDDiagEndoYesRisk = base.Columns["MDMRCMMDDiagEndoYesRisk"];
                this.columnMDMRCMMDCardImagingNoRisk = base.Columns["MDMRCMMDCardImagingNoRisk"];
                this.columnMDMRCMMDCardImagingYesRisk = base.Columns["MDMRCMMDCardImagingYesRisk"];
                this.columnMDMRCMMDClinicalLab = base.Columns["MDMRCMMDClinicalLab"];
                this.columnMDMRCMMDObtainFluid = base.Columns["MDMRCMMDObtainFluid"];
                this.columnMDMRCMMDCardiacElectro = base.Columns["MDMRCMMDCardiacElectro"];
                this.columnMDMRCMMDDiscopgraphy = base.Columns["MDMRCMMDDiscopgraphy"];
                this.columnMDMRCMMMOSMedicationManagement = base.Columns["MDMRCMMMOSMedicationManagement"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNoteEMCodeOptionId = new global::System.Data.DataColumn("NoteEMCodeOptionId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoteEMCodeOptionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnProcedureCodeId = new global::System.Data.DataColumn("ProcedureCodeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureCodeId);
                this.columnProgramId = new global::System.Data.DataColumn("ProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramId);
                this.columnLocationId = new global::System.Data.DataColumn("LocationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationId);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnModifierId1 = new global::System.Data.DataColumn("ModifierId1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifierId1);
                this.columnModifierId2 = new global::System.Data.DataColumn("ModifierId2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifierId2);
                this.columnModifierId3 = new global::System.Data.DataColumn("ModifierId3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifierId3);
                this.columnModifierId4 = new global::System.Data.DataColumn("ModifierId4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifierId4);
                this.columnHistoryHPILocation = new global::System.Data.DataColumn("HistoryHPILocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPILocation);
                this.columnHistoryHPIDuration = new global::System.Data.DataColumn("HistoryHPIDuration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPIDuration);
                this.columnHistoryHPIModifyingFactors = new global::System.Data.DataColumn("HistoryHPIModifyingFactors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPIModifyingFactors);
                this.columnHistoryHPIContextOnset = new global::System.Data.DataColumn("HistoryHPIContextOnset", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPIContextOnset);
                this.columnHistoryHPIQualityNature = new global::System.Data.DataColumn("HistoryHPIQualityNature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPIQualityNature);
                this.columnHistoryHPITimingFrequency = new global::System.Data.DataColumn("HistoryHPITimingFrequency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPITimingFrequency);
                this.columnHistoryHPIAssociatedSignsSymptoms = new global::System.Data.DataColumn("HistoryHPIAssociatedSignsSymptoms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPIAssociatedSignsSymptoms);
                this.columnHistoryHPISeverity = new global::System.Data.DataColumn("HistoryHPISeverity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPISeverity);
                this.columnHistoryHPITotalCount = new global::System.Data.DataColumn("HistoryHPITotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPITotalCount);
                this.columnHistoryHPIResults = new global::System.Data.DataColumn("HistoryHPIResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryHPIResults);
                this.columnHistoryROSConstitutional = new global::System.Data.DataColumn("HistoryROSConstitutional", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSConstitutional);
                this.columnHistoryROSEarNoseMouthThroat = new global::System.Data.DataColumn("HistoryROSEarNoseMouthThroat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSEarNoseMouthThroat);
                this.columnHistoryROSCardiovascular = new global::System.Data.DataColumn("HistoryROSCardiovascular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSCardiovascular);
                this.columnHistoryROSRespiratory = new global::System.Data.DataColumn("HistoryROSRespiratory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSRespiratory);
                this.columnHistoryROSSkin = new global::System.Data.DataColumn("HistoryROSSkin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSSkin);
                this.columnHistoryROSPsychiatric = new global::System.Data.DataColumn("HistoryROSPsychiatric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSPsychiatric);
                this.columnHistoryROSHematologicLymphatic = new global::System.Data.DataColumn("HistoryROSHematologicLymphatic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSHematologicLymphatic);
                this.columnHistoryROSEye = new global::System.Data.DataColumn("HistoryROSEye", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSEye);
                this.columnHistoryROSGastrointestinal = new global::System.Data.DataColumn("HistoryROSGastrointestinal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSGastrointestinal);
                this.columnHistoryROSGenitourinary = new global::System.Data.DataColumn("HistoryROSGenitourinary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSGenitourinary);
                this.columnHistoryROSMusculoskeletal = new global::System.Data.DataColumn("HistoryROSMusculoskeletal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSMusculoskeletal);
                this.columnHistoryROSNeurological = new global::System.Data.DataColumn("HistoryROSNeurological", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSNeurological);
                this.columnHistoryROSEndocrine = new global::System.Data.DataColumn("HistoryROSEndocrine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSEndocrine);
                this.columnHistoryROSAllergicImmunologic = new global::System.Data.DataColumn("HistoryROSAllergicImmunologic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSAllergicImmunologic);
                this.columnHistoryROSTotalCount = new global::System.Data.DataColumn("HistoryROSTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSTotalCount);
                this.columnHistoryROSResults = new global::System.Data.DataColumn("HistoryROSResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryROSResults);
                this.columnHistoryPHFamilyHistory = new global::System.Data.DataColumn("HistoryPHFamilyHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryPHFamilyHistory);
                this.columnHistoryPHSocialHistory = new global::System.Data.DataColumn("HistoryPHSocialHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryPHSocialHistory);
                this.columnHistoryPHMedicalHistory = new global::System.Data.DataColumn("HistoryPHMedicalHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryPHMedicalHistory);
                this.columnHistoryPHTotalCount = new global::System.Data.DataColumn("HistoryPHTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryPHTotalCount);
                this.columnHistoryPHResults = new global::System.Data.DataColumn("HistoryPHResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryPHResults);
                this.columnHistoryFinalResult = new global::System.Data.DataColumn("HistoryFinalResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryFinalResult);
                this.columnExamBAHead = new global::System.Data.DataColumn("ExamBAHead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAHead);
                this.columnExamBABack = new global::System.Data.DataColumn("ExamBABack", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBABack);
                this.columnExamBALeftUpperExtremity = new global::System.Data.DataColumn("ExamBALeftUpperExtremity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBALeftUpperExtremity);
                this.columnExamBALeftLowerExtremity = new global::System.Data.DataColumn("ExamBALeftLowerExtremity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBALeftLowerExtremity);
                this.columnExamBAAbdomen = new global::System.Data.DataColumn("ExamBAAbdomen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAAbdomen);
                this.columnExamBANeck = new global::System.Data.DataColumn("ExamBANeck", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBANeck);
                this.columnExamBAChest = new global::System.Data.DataColumn("ExamBAChest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAChest);
                this.columnExamBARightUpperExtremity = new global::System.Data.DataColumn("ExamBARightUpperExtremity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBARightUpperExtremity);
                this.columnExamBARightLowerExtremity = new global::System.Data.DataColumn("ExamBARightLowerExtremity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBARightLowerExtremity);
                this.columnExamBAGenitaliaButtocks = new global::System.Data.DataColumn("ExamBAGenitaliaButtocks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAGenitaliaButtocks);
                this.columnExamOSConstitutional = new global::System.Data.DataColumn("ExamOSConstitutional", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSConstitutional);
                this.columnExamOSEyes = new global::System.Data.DataColumn("ExamOSEyes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSEyes);
                this.columnExamOSEarNoseMouthThroat = new global::System.Data.DataColumn("ExamOSEarNoseMouthThroat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSEarNoseMouthThroat);
                this.columnExamOSCardiovascular = new global::System.Data.DataColumn("ExamOSCardiovascular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSCardiovascular);
                this.columnExamOSRespiratory = new global::System.Data.DataColumn("ExamOSRespiratory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSRespiratory);
                this.columnExamOSPsychiatric = new global::System.Data.DataColumn("ExamOSPsychiatric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSPsychiatric);
                this.columnExamOSGastrointestinal = new global::System.Data.DataColumn("ExamOSGastrointestinal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSGastrointestinal);
                this.columnExamOSGenitourinary = new global::System.Data.DataColumn("ExamOSGenitourinary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSGenitourinary);
                this.columnExamOSMusculoskeletal = new global::System.Data.DataColumn("ExamOSMusculoskeletal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSMusculoskeletal);
                this.columnExamOSSkin = new global::System.Data.DataColumn("ExamOSSkin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSSkin);
                this.columnExamOSNeurologic = new global::System.Data.DataColumn("ExamOSNeurologic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSNeurologic);
                this.columnExamOSHematologicLymphatic = new global::System.Data.DataColumn("ExamOSHematologicLymphatic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSHematologicLymphatic);
                this.columnExamTypeOfExam = new global::System.Data.DataColumn("ExamTypeOfExam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamTypeOfExam);
                this.columnExamFinalResult = new global::System.Data.DataColumn("ExamFinalResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamFinalResult);
                this.columnMDMDRROClinicalLabs = new global::System.Data.DataColumn("MDMDRROClinicalLabs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRROClinicalLabs);
                this.columnMDMDRROOtherTest = new global::System.Data.DataColumn("MDMDRROOtherTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRROOtherTest);
                this.columnMDMDRObtainRecords = new global::System.Data.DataColumn("MDMDRObtainRecords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRObtainRecords);
                this.columnMDMDRIndependentVisualization = new global::System.Data.DataColumn("MDMDRIndependentVisualization", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRIndependentVisualization);
                this.columnMDMDRRORadiologyTest = new global::System.Data.DataColumn("MDMDRRORadiologyTest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRRORadiologyTest);
                this.columnMDMDRDiscussion = new global::System.Data.DataColumn("MDMDRDiscussion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRDiscussion);
                this.columnMDMDRReviewSummarize = new global::System.Data.DataColumn("MDMDRReviewSummarize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRReviewSummarize);
                this.columnMDMDRResults = new global::System.Data.DataColumn("MDMDRResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDRResults);
                this.columnMDMDTONewProblem = new global::System.Data.DataColumn("MDMDTONewProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTONewProblem);
                this.columnMDMDTOProblems1 = new global::System.Data.DataColumn("MDMDTOProblems1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOProblems1);
                this.columnMDMDTOProblems2 = new global::System.Data.DataColumn("MDMDTOProblems2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOProblems2);
                this.columnMDMDTOProblems3 = new global::System.Data.DataColumn("MDMDTOProblems3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOProblems3);
                this.columnMDMDTOProblems4Plus = new global::System.Data.DataColumn("MDMDTOProblems4Plus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOProblems4Plus);
                this.columnMDMDTOAdditionalWorkup = new global::System.Data.DataColumn("MDMDTOAdditionalWorkup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOAdditionalWorkup);
                this.columnMDMDTOProblemWorsening1 = new global::System.Data.DataColumn("MDMDTOProblemWorsening1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOProblemWorsening1);
                this.columnMDMDTOProblemWorsening2 = new global::System.Data.DataColumn("MDMDTOProblemWorsening2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOProblemWorsening2);
                this.columnMDMDTOResults = new global::System.Data.DataColumn("MDMDTOResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMDTOResults);
                this.columnMDMRCMMResults = new global::System.Data.DataColumn("MDMRCMMResults", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMResults);
                this.columnMDMFinalResult = new global::System.Data.DataColumn("MDMFinalResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMFinalResult);
                this.columnECEEMCode = new global::System.Data.DataColumn("ECEEMCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECEEMCode);
                this.columnECEGuidelines = new global::System.Data.DataColumn("ECEGuidelines", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECEGuidelines);
                this.columnECETypeOfPatient = new global::System.Data.DataColumn("ECETypeOfPatient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECETypeOfPatient);
                this.columnECEVisitType = new global::System.Data.DataColumn("ECEVisitType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECEVisitType);
                this.columnECE50PercentFaceTime = new global::System.Data.DataColumn("ECE50PercentFaceTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECE50PercentFaceTime);
                this.columnECEMinutes = new global::System.Data.DataColumn("ECEMinutes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECEMinutes);
                this.columnECAQChronicProblemsAddressed3Plus = new global::System.Data.DataColumn("ECAQChronicProblemsAddressed3Plus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQChronicProblemsAddressed3Plus);
                this.columnECAQAdditionalWorkup = new global::System.Data.DataColumn("ECAQAdditionalWorkup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQAdditionalWorkup);
                this.columnECAQProblemWorsening1 = new global::System.Data.DataColumn("ECAQProblemWorsening1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQProblemWorsening1);
                this.columnECAQProblemWorsening2 = new global::System.Data.DataColumn("ECAQProblemWorsening2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQProblemWorsening2);
                this.columnECAQIllnessWithExacerbation = new global::System.Data.DataColumn("ECAQIllnessWithExacerbation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQIllnessWithExacerbation);
                this.columnECAQDiscussion = new global::System.Data.DataColumn("ECAQDiscussion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQDiscussion);
                this.columnECAQObtainRecords = new global::System.Data.DataColumn("ECAQObtainRecords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQObtainRecords);
                this.columnECAQIndependentVisualization = new global::System.Data.DataColumn("ECAQIndependentVisualization", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQIndependentVisualization);
                this.columnECAQReviewSummarize = new global::System.Data.DataColumn("ECAQReviewSummarize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECAQReviewSummarize);
                this.columnExamBAHeadCount = new global::System.Data.DataColumn("ExamBAHeadCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAHeadCount);
                this.columnExamBAHeadTotalCount = new global::System.Data.DataColumn("ExamBAHeadTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAHeadTotalCount);
                this.columnExamBABackCount = new global::System.Data.DataColumn("ExamBABackCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBABackCount);
                this.columnExamBABackTotalCount = new global::System.Data.DataColumn("ExamBABackTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBABackTotalCount);
                this.columnExamBALeftUpperExtremityCount = new global::System.Data.DataColumn("ExamBALeftUpperExtremityCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBALeftUpperExtremityCount);
                this.columnExamBALeftUpperExtremityTotalCount = new global::System.Data.DataColumn("ExamBALeftUpperExtremityTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBALeftUpperExtremityTotalCount);
                this.columnExamBALeftLowerExtremityCount = new global::System.Data.DataColumn("ExamBALeftLowerExtremityCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBALeftLowerExtremityCount);
                this.columnExamBALeftLowerExtremityTotalCount = new global::System.Data.DataColumn("ExamBALeftLowerExtremityTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBALeftLowerExtremityTotalCount);
                this.columnExamBAAbdomenCount = new global::System.Data.DataColumn("ExamBAAbdomenCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAAbdomenCount);
                this.columnExamBAAbdomenTotalCount = new global::System.Data.DataColumn("ExamBAAbdomenTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAAbdomenTotalCount);
                this.columnExamBANeckCount = new global::System.Data.DataColumn("ExamBANeckCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBANeckCount);
                this.columnExamBANeckTotalCount = new global::System.Data.DataColumn("ExamBANeckTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBANeckTotalCount);
                this.columnExamBAChestCount = new global::System.Data.DataColumn("ExamBAChestCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAChestCount);
                this.columnExamBAChestTotalCount = new global::System.Data.DataColumn("ExamBAChestTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAChestTotalCount);
                this.columnExamBARightUpperExtremityCount = new global::System.Data.DataColumn("ExamBARightUpperExtremityCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBARightUpperExtremityCount);
                this.columnExamBARightUpperExtremityTotalCount = new global::System.Data.DataColumn("ExamBARightUpperExtremityTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBARightUpperExtremityTotalCount);
                this.columnExamBARightLowerExtremityCount = new global::System.Data.DataColumn("ExamBARightLowerExtremityCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBARightLowerExtremityCount);
                this.columnExamBARightLowerExtremityTotalCount = new global::System.Data.DataColumn("ExamBARightLowerExtremityTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBARightLowerExtremityTotalCount);
                this.columnExamBAGenitaliaButtocksCount = new global::System.Data.DataColumn("ExamBAGenitaliaButtocksCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAGenitaliaButtocksCount);
                this.columnExamBAGenitaliaButtocksTotalCount = new global::System.Data.DataColumn("ExamBAGenitaliaButtocksTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamBAGenitaliaButtocksTotalCount);
                this.columnExamOSConstitutionalCount = new global::System.Data.DataColumn("ExamOSConstitutionalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSConstitutionalCount);
                this.columnExamOSConstitutionalTotalCount = new global::System.Data.DataColumn("ExamOSConstitutionalTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSConstitutionalTotalCount);
                this.columnExamOSEyesCount = new global::System.Data.DataColumn("ExamOSEyesCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSEyesCount);
                this.columnExamOSEyesTotalCount = new global::System.Data.DataColumn("ExamOSEyesTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSEyesTotalCount);
                this.columnExamOSEarNoseMouthThroatCount = new global::System.Data.DataColumn("ExamOSEarNoseMouthThroatCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSEarNoseMouthThroatCount);
                this.columnExamOSEarNoseMouthThroatTotalCount = new global::System.Data.DataColumn("ExamOSEarNoseMouthThroatTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSEarNoseMouthThroatTotalCount);
                this.columnExamOSCardiovascularCount = new global::System.Data.DataColumn("ExamOSCardiovascularCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSCardiovascularCount);
                this.columnExamOSCardiovascularTotalCount = new global::System.Data.DataColumn("ExamOSCardiovascularTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSCardiovascularTotalCount);
                this.columnExamOSRespiratoryCount = new global::System.Data.DataColumn("ExamOSRespiratoryCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSRespiratoryCount);
                this.columnExamOSRespiratoryTotalCount = new global::System.Data.DataColumn("ExamOSRespiratoryTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSRespiratoryTotalCount);
                this.columnExamOSPsychiatricCount = new global::System.Data.DataColumn("ExamOSPsychiatricCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSPsychiatricCount);
                this.columnExamOSPsychiatricTotalCount = new global::System.Data.DataColumn("ExamOSPsychiatricTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSPsychiatricTotalCount);
                this.columnExamOSGastrointestinalCount = new global::System.Data.DataColumn("ExamOSGastrointestinalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSGastrointestinalCount);
                this.columnExamOSGastrointestinalTotalCount = new global::System.Data.DataColumn("ExamOSGastrointestinalTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSGastrointestinalTotalCount);
                this.columnExamOSGenitourinaryCount = new global::System.Data.DataColumn("ExamOSGenitourinaryCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSGenitourinaryCount);
                this.columnExamOSGenitourinaryTotalCount = new global::System.Data.DataColumn("ExamOSGenitourinaryTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSGenitourinaryTotalCount);
                this.columnExamOSMusculoskeletalCount = new global::System.Data.DataColumn("ExamOSMusculoskeletalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSMusculoskeletalCount);
                this.columnExamOSMusculoskeletalTotalCount = new global::System.Data.DataColumn("ExamOSMusculoskeletalTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSMusculoskeletalTotalCount);
                this.columnExamOSSkinCount = new global::System.Data.DataColumn("ExamOSSkinCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSSkinCount);
                this.columnExamOSSkinTotalCount = new global::System.Data.DataColumn("ExamOSSkinTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSSkinTotalCount);
                this.columnExamOSNeurologicCount = new global::System.Data.DataColumn("ExamOSNeurologicCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSNeurologicCount);
                this.columnExamOSNeurologicTotalCount = new global::System.Data.DataColumn("ExamOSNeurologicTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSNeurologicTotalCount);
                this.columnExamOSHematologicLymphaticCount = new global::System.Data.DataColumn("ExamOSHematologicLymphaticCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSHematologicLymphaticCount);
                this.columnExamOSHematologicLymphaticTotalCount = new global::System.Data.DataColumn("ExamOSHematologicLymphaticTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamOSHematologicLymphaticTotalCount);
                this.columnMDMRCMMPPMinorOtherProb1 = new global::System.Data.DataColumn("MDMRCMMPPMinorOtherProb1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPMinorOtherProb1);
                this.columnMDMRCMMPPMinorOtherProb2Plus = new global::System.Data.DataColumn("MDMRCMMPPMinorOtherProb2Plus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPMinorOtherProb2Plus);
                this.columnMDMRCMMPPStableChronicMajor1 = new global::System.Data.DataColumn("MDMRCMMPPStableChronicMajor1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPStableChronicMajor1);
                this.columnMDMRCMMPPChronicMajorMildExac1Plus = new global::System.Data.DataColumn("MDMRCMMPPChronicMajorMildExac1Plus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPChronicMajorMildExac1Plus);
                this.columnMDMRCMMPPAcuteUncomplicated1 = new global::System.Data.DataColumn("MDMRCMMPPAcuteUncomplicated1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPAcuteUncomplicated1);
                this.columnMDMRCMMPPNewProblem = new global::System.Data.DataColumn("MDMRCMMPPNewProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPNewProblem);
                this.columnMDMRCMMPPAcuteIllness = new global::System.Data.DataColumn("MDMRCMMPPAcuteIllness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPAcuteIllness);
                this.columnMDMRCMMPPAcuteComplicatedInjury = new global::System.Data.DataColumn("MDMRCMMPPAcuteComplicatedInjury", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPAcuteComplicatedInjury);
                this.columnMDMRCMMPPChronicMajorSevereExac1Plus = new global::System.Data.DataColumn("MDMRCMMPPChronicMajorSevereExac1Plus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPChronicMajorSevereExac1Plus);
                this.columnMDMRCMMPPAcuteChronicThreat = new global::System.Data.DataColumn("MDMRCMMPPAcuteChronicThreat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMPPAcuteChronicThreat);
                this.columnMDMRCMMDLabVenipuncture = new global::System.Data.DataColumn("MDMRCMMDLabVenipuncture", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDLabVenipuncture);
                this.columnMDMRCMMDNonCardImaging = new global::System.Data.DataColumn("MDMRCMMDNonCardImaging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDNonCardImaging);
                this.columnMDMRCMMDPhysTestNoStress = new global::System.Data.DataColumn("MDMRCMMDPhysTestNoStress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDPhysTestNoStress);
                this.columnMDMRCMMDPhysTestYesStress = new global::System.Data.DataColumn("MDMRCMMDPhysTestYesStress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDPhysTestYesStress);
                this.columnMDMRCMMDSkinBiopsies = new global::System.Data.DataColumn("MDMRCMMDSkinBiopsies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDSkinBiopsies);
                this.columnMDMRCMMDDeepNeedle = new global::System.Data.DataColumn("MDMRCMMDDeepNeedle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDDeepNeedle);
                this.columnMDMRCMMDDiagEndoNoRisk = new global::System.Data.DataColumn("MDMRCMMDDiagEndoNoRisk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDDiagEndoNoRisk);
                this.columnMDMRCMMDDiagEndoYesRisk = new global::System.Data.DataColumn("MDMRCMMDDiagEndoYesRisk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDDiagEndoYesRisk);
                this.columnMDMRCMMDCardImagingNoRisk = new global::System.Data.DataColumn("MDMRCMMDCardImagingNoRisk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDCardImagingNoRisk);
                this.columnMDMRCMMDCardImagingYesRisk = new global::System.Data.DataColumn("MDMRCMMDCardImagingYesRisk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDCardImagingYesRisk);
                this.columnMDMRCMMDClinicalLab = new global::System.Data.DataColumn("MDMRCMMDClinicalLab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDClinicalLab);
                this.columnMDMRCMMDObtainFluid = new global::System.Data.DataColumn("MDMRCMMDObtainFluid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDObtainFluid);
                this.columnMDMRCMMDCardiacElectro = new global::System.Data.DataColumn("MDMRCMMDCardiacElectro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDCardiacElectro);
                this.columnMDMRCMMDDiscopgraphy = new global::System.Data.DataColumn("MDMRCMMDDiscopgraphy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMDDiscopgraphy);
                this.columnMDMRCMMMOSMedicationManagement = new global::System.Data.DataColumn("MDMRCMMMOSMedicationManagement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDMRCMMMOSMedicationManagement);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNoteEMCodeOptionId}, true));
                this.columnNoteEMCodeOptionId.AutoIncrement = true;
                this.columnNoteEMCodeOptionId.AutoIncrementSeed = -1;
                this.columnNoteEMCodeOptionId.AutoIncrementStep = -1;
                this.columnNoteEMCodeOptionId.AllowDBNull = false;
                this.columnNoteEMCodeOptionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnHistoryHPILocation.MaxLength = 1;
                this.columnHistoryHPIDuration.MaxLength = 1;
                this.columnHistoryHPIModifyingFactors.MaxLength = 1;
                this.columnHistoryHPIContextOnset.MaxLength = 1;
                this.columnHistoryHPIQualityNature.MaxLength = 1;
                this.columnHistoryHPITimingFrequency.MaxLength = 1;
                this.columnHistoryHPIAssociatedSignsSymptoms.MaxLength = 1;
                this.columnHistoryHPISeverity.MaxLength = 1;
                this.columnHistoryHPIResults.MaxLength = 1;
                this.columnHistoryROSConstitutional.MaxLength = 1;
                this.columnHistoryROSEarNoseMouthThroat.MaxLength = 1;
                this.columnHistoryROSCardiovascular.MaxLength = 1;
                this.columnHistoryROSRespiratory.MaxLength = 1;
                this.columnHistoryROSSkin.MaxLength = 1;
                this.columnHistoryROSPsychiatric.MaxLength = 1;
                this.columnHistoryROSHematologicLymphatic.MaxLength = 1;
                this.columnHistoryROSEye.MaxLength = 1;
                this.columnHistoryROSGastrointestinal.MaxLength = 1;
                this.columnHistoryROSGenitourinary.MaxLength = 1;
                this.columnHistoryROSMusculoskeletal.MaxLength = 1;
                this.columnHistoryROSNeurological.MaxLength = 1;
                this.columnHistoryROSEndocrine.MaxLength = 1;
                this.columnHistoryROSAllergicImmunologic.MaxLength = 1;
                this.columnHistoryROSResults.MaxLength = 1;
                this.columnHistoryPHFamilyHistory.MaxLength = 1;
                this.columnHistoryPHSocialHistory.MaxLength = 1;
                this.columnHistoryPHMedicalHistory.MaxLength = 1;
                this.columnHistoryPHResults.MaxLength = 1;
                this.columnHistoryFinalResult.MaxLength = 200;
                this.columnExamBAHead.MaxLength = 1;
                this.columnExamBABack.MaxLength = 1;
                this.columnExamBALeftUpperExtremity.MaxLength = 1;
                this.columnExamBALeftLowerExtremity.MaxLength = 1;
                this.columnExamBAAbdomen.MaxLength = 1;
                this.columnExamBANeck.MaxLength = 1;
                this.columnExamBAChest.MaxLength = 1;
                this.columnExamBARightUpperExtremity.MaxLength = 1;
                this.columnExamBARightLowerExtremity.MaxLength = 1;
                this.columnExamBAGenitaliaButtocks.MaxLength = 1;
                this.columnExamOSConstitutional.MaxLength = 1;
                this.columnExamOSEyes.MaxLength = 1;
                this.columnExamOSEarNoseMouthThroat.MaxLength = 1;
                this.columnExamOSCardiovascular.MaxLength = 1;
                this.columnExamOSRespiratory.MaxLength = 1;
                this.columnExamOSPsychiatric.MaxLength = 1;
                this.columnExamOSGastrointestinal.MaxLength = 1;
                this.columnExamOSGenitourinary.MaxLength = 1;
                this.columnExamOSMusculoskeletal.MaxLength = 1;
                this.columnExamOSSkin.MaxLength = 1;
                this.columnExamOSNeurologic.MaxLength = 1;
                this.columnExamOSHematologicLymphatic.MaxLength = 1;
                this.columnExamTypeOfExam.MaxLength = 1;
                this.columnExamFinalResult.MaxLength = 200;
                this.columnMDMDRROClinicalLabs.MaxLength = 1;
                this.columnMDMDRROOtherTest.MaxLength = 1;
                this.columnMDMDRObtainRecords.MaxLength = 1;
                this.columnMDMDRIndependentVisualization.MaxLength = 1;
                this.columnMDMDRRORadiologyTest.MaxLength = 1;
                this.columnMDMDRDiscussion.MaxLength = 1;
                this.columnMDMDRReviewSummarize.MaxLength = 1;
                this.columnMDMDRResults.MaxLength = 1;
                this.columnMDMDTONewProblem.MaxLength = 1;
                this.columnMDMDTOProblems1.MaxLength = 1;
                this.columnMDMDTOProblems2.MaxLength = 1;
                this.columnMDMDTOProblems3.MaxLength = 1;
                this.columnMDMDTOProblems4Plus.MaxLength = 1;
                this.columnMDMDTOAdditionalWorkup.MaxLength = 1;
                this.columnMDMDTOProblemWorsening1.MaxLength = 1;
                this.columnMDMDTOProblemWorsening2.MaxLength = 1;
                this.columnMDMDTOResults.MaxLength = 1;
                this.columnMDMRCMMResults.MaxLength = 1;
                this.columnMDMFinalResult.MaxLength = 200;
                this.columnECEEMCode.MaxLength = 10;
                this.columnECEGuidelines.MaxLength = 10;
                this.columnECETypeOfPatient.MaxLength = 1;
                this.columnECEVisitType.MaxLength = 1;
                this.columnECE50PercentFaceTime.MaxLength = 1;
                this.columnECAQChronicProblemsAddressed3Plus.MaxLength = 1;
                this.columnECAQAdditionalWorkup.MaxLength = 1;
                this.columnECAQProblemWorsening1.MaxLength = 1;
                this.columnECAQProblemWorsening2.MaxLength = 1;
                this.columnECAQIllnessWithExacerbation.MaxLength = 1;
                this.columnECAQDiscussion.MaxLength = 1;
                this.columnECAQObtainRecords.MaxLength = 1;
                this.columnECAQIndependentVisualization.MaxLength = 1;
                this.columnECAQReviewSummarize.MaxLength = 1;
                this.columnMDMRCMMPPMinorOtherProb1.MaxLength = 1;
                this.columnMDMRCMMPPMinorOtherProb2Plus.MaxLength = 1;
                this.columnMDMRCMMPPStableChronicMajor1.MaxLength = 1;
                this.columnMDMRCMMPPChronicMajorMildExac1Plus.MaxLength = 1;
                this.columnMDMRCMMPPAcuteUncomplicated1.MaxLength = 1;
                this.columnMDMRCMMPPNewProblem.MaxLength = 1;
                this.columnMDMRCMMPPAcuteIllness.MaxLength = 1;
                this.columnMDMRCMMPPAcuteComplicatedInjury.MaxLength = 1;
                this.columnMDMRCMMPPChronicMajorSevereExac1Plus.MaxLength = 1;
                this.columnMDMRCMMPPAcuteChronicThreat.MaxLength = 1;
                this.columnMDMRCMMDLabVenipuncture.MaxLength = 1;
                this.columnMDMRCMMDNonCardImaging.MaxLength = 1;
                this.columnMDMRCMMDPhysTestNoStress.MaxLength = 1;
                this.columnMDMRCMMDPhysTestYesStress.MaxLength = 1;
                this.columnMDMRCMMDSkinBiopsies.MaxLength = 1;
                this.columnMDMRCMMDDeepNeedle.MaxLength = 1;
                this.columnMDMRCMMDDiagEndoNoRisk.MaxLength = 1;
                this.columnMDMRCMMDDiagEndoYesRisk.MaxLength = 1;
                this.columnMDMRCMMDCardImagingNoRisk.MaxLength = 1;
                this.columnMDMRCMMDCardImagingYesRisk.MaxLength = 1;
                this.columnMDMRCMMDClinicalLab.MaxLength = 1;
                this.columnMDMRCMMDObtainFluid.MaxLength = 1;
                this.columnMDMRCMMDCardiacElectro.MaxLength = 1;
                this.columnMDMRCMMDDiscopgraphy.MaxLength = 1;
                this.columnMDMRCMMMOSMedicationManagement.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NoteEMCodeOptionsRow NewNoteEMCodeOptionsRow() {
                return ((NoteEMCodeOptionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NoteEMCodeOptionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NoteEMCodeOptionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NoteEMCodeOptionsRowChanged != null)) {
                    this.NoteEMCodeOptionsRowChanged(this, new NoteEMCodeOptionsRowChangeEvent(((NoteEMCodeOptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NoteEMCodeOptionsRowChanging != null)) {
                    this.NoteEMCodeOptionsRowChanging(this, new NoteEMCodeOptionsRowChangeEvent(((NoteEMCodeOptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NoteEMCodeOptionsRowDeleted != null)) {
                    this.NoteEMCodeOptionsRowDeleted(this, new NoteEMCodeOptionsRowChangeEvent(((NoteEMCodeOptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NoteEMCodeOptionsRowDeleting != null)) {
                    this.NoteEMCodeOptionsRowDeleting(this, new NoteEMCodeOptionsRowChangeEvent(((NoteEMCodeOptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNoteEMCodeOptionsRow(NoteEMCodeOptionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomPsychiatricEvaluations ds = new DataSetCustomPsychiatricEvaluations();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NoteEMCodeOptionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentPsychiatricEvaluationsRow : global::System.Data.DataRow {
            
            private CustomDocumentPsychiatricEvaluationsDataTable tableCustomDocumentPsychiatricEvaluations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentPsychiatricEvaluationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentPsychiatricEvaluations = ((CustomDocumentPsychiatricEvaluationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentPsychiatricEvaluations.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentPsychiatricEvaluations.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentPsychiatricEvaluations.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentPsychiatricEvaluatio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentPsychiatricEvaluations\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentPsychiatricEvaluations.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentPsychiatricEvaluations" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotifyStaff1 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotifyStaff1\' in table \'CustomDocumentPsychiatricEvaluation" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotifyStaff2 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotifyStaff2\' in table \'CustomDocumentPsychiatricEvaluation" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NotifyStaff3 {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotifyStaff3\' in table \'CustomDocumentPsychiatricEvaluation" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NextPsychiatricAppointment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.NextPsychiatricAppointmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextPsychiatricAppointment\' in table \'CustomDocumentPsychia" +
                                "tricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.NextPsychiatricAppointmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SummaryAndRecommendations {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.SummaryAndRecommendationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SummaryAndRecommendations\' in table \'CustomDocumentPsychiat" +
                                "ricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.SummaryAndRecommendationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicationListAtTheTimeOfTransition {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MedicationListAtTheTimeOfTransitionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicationListAtTheTimeOfTransition\' in table \'CustomDocume" +
                                "ntPsychiatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MedicationListAtTheTimeOfTransitionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IdentifyingInformation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.IdentifyingInformationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdentifyingInformation\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.IdentifyingInformationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyHistory {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.FamilyHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyHistory\' in table \'CustomDocumentPsychiatricEvaluatio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.FamilyHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PastPsychiatricHistory {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.PastPsychiatricHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PastPsychiatricHistory\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.PastPsychiatricHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DevelopmentalHistory {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.DevelopmentalHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DevelopmentalHistory\' in table \'CustomDocumentPsychiatricEv" +
                                "aluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.DevelopmentalHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstanceAbuseHistory {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.SubstanceAbuseHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubstanceAbuseHistory\' in table \'CustomDocumentPsychiatricE" +
                                "valuations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.SubstanceAbuseHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicalHistory {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MedicalHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalHistory\' in table \'CustomDocumentPsychiatricEvaluati" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MedicalHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryofPresentIllness {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.HistoryofPresentIllnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryofPresentIllness\' in table \'CustomDocumentPsychiatri" +
                                "cEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.HistoryofPresentIllnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SocialHistory {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.SocialHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SocialHistory\' in table \'CustomDocumentPsychiatricEvaluatio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.SocialHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemPsych {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemPsychColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemPsych\' in table \'CustomDocumentPsychiatricEva" +
                                "luations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemPsychColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemSomaticConcerns {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemSomaticConcernsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemSomaticConcerns\' in table \'CustomDocumentPsyc" +
                                "hiatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemSomaticConcernsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemConstitutional {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemConstitutionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemConstitutional\' in table \'CustomDocumentPsych" +
                                "iatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemConstitutionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemEarNoseMouthThroat {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEarNoseMouthThroatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemEarNoseMouthThroat\' in table \'CustomDocumentP" +
                                "sychiatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEarNoseMouthThroatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemGI {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemGI\' in table \'CustomDocumentPsychiatricEvalua" +
                                "tions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemGU {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemGU\' in table \'CustomDocumentPsychiatricEvalua" +
                                "tions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemIntegumentary {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemIntegumentaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemIntegumentary\' in table \'CustomDocumentPsychi" +
                                "atricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemIntegumentaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemEndo {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEndoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemEndo\' in table \'CustomDocumentPsychiatricEval" +
                                "uations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEndoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemNeuro {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemNeuroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemNeuro\' in table \'CustomDocumentPsychiatricEva" +
                                "luations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemNeuroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemImmune {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemImmuneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemImmune\' in table \'CustomDocumentPsychiatricEv" +
                                "aluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemImmuneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemEyes {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEyesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemEyes\' in table \'CustomDocumentPsychiatricEval" +
                                "uations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEyesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemResp {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemRespColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemResp\' in table \'CustomDocumentPsychiatricEval" +
                                "uations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemRespColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemCardioVascular {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCardioVascularColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemCardioVascular\' in table \'CustomDocumentPsych" +
                                "iatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCardioVascularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemHemLymph {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemHemLymphColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemHemLymph\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemHemLymphColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemMusculo {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemMusculoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemMusculo\' in table \'CustomDocumentPsychiatricE" +
                                "valuations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemMusculoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemAllOthersNegative {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemAllOthersNegativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemAllOthersNegative\' in table \'CustomDocumentPs" +
                                "ychiatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemAllOthersNegativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReviewOfSystemComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReviewOfSystemComments\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppropriatelyDressed {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AppropriatelyDressedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppropriatelyDressed\' in table \'CustomDocumentPsychiatricEv" +
                                "aluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AppropriatelyDressedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralAppearanceUnkept {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceUnkeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralAppearanceUnkept\' in table \'CustomDocumentPsychiatri" +
                                "cEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceUnkeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralAppearanceOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralAppearanceOther\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeneralAppearanceOtherText {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralAppearanceOtherText\' in table \'CustomDocumentPsychia" +
                                "tricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MuscleStrengthNormal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MuscleStrengthNormal\' in table \'CustomDocumentPsychiatricEv" +
                                "aluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MuscleStrengthAbnormal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MuscleStrengthAbnormal\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MusculoskeletalTone {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MusculoskeletalToneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MusculoskeletalTone\' in table \'CustomDocumentPsychiatricEva" +
                                "luations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MusculoskeletalToneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GaitNormal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.GaitNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GaitNormal\' in table \'CustomDocumentPsychiatricEvaluations\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.GaitNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GaitAbnormal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.GaitAbnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GaitAbnormal\' in table \'CustomDocumentPsychiatricEvaluation" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.GaitAbnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TicsTremorsAbnormalMovements {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.TicsTremorsAbnormalMovementsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TicsTremorsAbnormalMovements\' in table \'CustomDocumentPsych" +
                                "iatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.TicsTremorsAbnormalMovementsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EPS {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.EPSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EPS\' in table \'CustomDocumentPsychiatricEvaluations\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.EPSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Suicidal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.SuicidalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Suicidal\' in table \'CustomDocumentPsychiatricEvaluations\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.SuicidalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Homicidal {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.HomicidalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Homicidal\' in table \'CustomDocumentPsychiatricEvaluations\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.HomicidalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IndicateIdeation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.IndicateIdeationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IndicateIdeation\' in table \'CustomDocumentPsychiatricEvalua" +
                                "tions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.IndicateIdeationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppearanceBehavior {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppearanceBehavior\' in table \'CustomDocumentPsychiatricEval" +
                                "uations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppearanceBehaviorComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppearanceBehaviorComments\' in table \'CustomDocumentPsychia" +
                                "tricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Speech {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.SpeechColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speech\' in table \'CustomDocumentPsychiatricEvaluations\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.SpeechColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpeechComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.SpeechCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpeechComments\' in table \'CustomDocumentPsychiatricEvaluati" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.SpeechCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThoughtProcess {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoughtProcess\' in table \'CustomDocumentPsychiatricEvaluati" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThoughtProcessComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThoughtProcessComments\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Associations {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AssociationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Associations\' in table \'CustomDocumentPsychiatricEvaluation" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AssociationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssociationsComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AssociationsCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociationsComments\' in table \'CustomDocumentPsychiatricEv" +
                                "aluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AssociationsCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AbnormalPsychoticThoughts {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbnormalPsychoticThoughts\' in table \'CustomDocumentPsychiat" +
                                "ricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AbnormalPsychoticThoughtsComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbnormalPsychoticThoughtsComments\' in table \'CustomDocument" +
                                "PsychiatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JudgmentAndInsight {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JudgmentAndInsight\' in table \'CustomDocumentPsychiatricEval" +
                                "uations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JudgmentAndInsightComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JudgmentAndInsightComments\' in table \'CustomDocumentPsychia" +
                                "tricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Orientation {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.OrientationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Orientation\' in table \'CustomDocumentPsychiatricEvaluations" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.OrientationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrientationComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.OrientationCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrientationComments\' in table \'CustomDocumentPsychiatricEva" +
                                "luations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.OrientationCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecentRemoteMemory {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecentRemoteMemory\' in table \'CustomDocumentPsychiatricEval" +
                                "uations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecentRemoteMemoryComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecentRemoteMemoryComments\' in table \'CustomDocumentPsychia" +
                                "tricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AttentionConcentration {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttentionConcentration\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AttentionConcentrationComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttentionConcentrationComments\' in table \'CustomDocumentPsy" +
                                "chiatricEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Language {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.LanguageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Language\' in table \'CustomDocumentPsychiatricEvaluations\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.LanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LanguageCommments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.LanguageCommmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LanguageCommments\' in table \'CustomDocumentPsychiatricEvalu" +
                                "ations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.LanguageCommmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FundOfKnowledge {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundOfKnowledge\' in table \'CustomDocumentPsychiatricEvaluat" +
                                "ions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FundOfKnowledgeComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FundOfKnowledgeComments\' in table \'CustomDocumentPsychiatri" +
                                "cEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoodAndAffect {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoodAndAffect\' in table \'CustomDocumentPsychiatricEvaluatio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoodAndAffectComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoodAndAffectComments\' in table \'CustomDocumentPsychiatricE" +
                                "valuations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicalRecords {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalRecords\' in table \'CustomDocumentPsychiatricEvaluati" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiagnosticTest {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.DiagnosticTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosticTest\' in table \'CustomDocumentPsychiatricEvaluati" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.DiagnosticTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Labs {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.LabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Labs\' in table \'CustomDocumentPsychiatricEvaluations\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.LabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LabsSelected {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentPsychiatricEvaluations.LabsSelectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabsSelected\' in table \'CustomDocumentPsychiatricEvaluation" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.LabsSelectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicalRecordsComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalRecordsComments\' in table \'CustomDocumentPsychiatric" +
                                "Evaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderedMedications {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.OrderedMedicationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderedMedications\' in table \'CustomDocumentPsychiatricEval" +
                                "uations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.OrderedMedicationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RisksBenefits {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.RisksBenefitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RisksBenefits\' in table \'CustomDocumentPsychiatricEvaluatio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.RisksBenefitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewlyEmergentSideEffects {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.NewlyEmergentSideEffectsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewlyEmergentSideEffects\' in table \'CustomDocumentPsychiatr" +
                                "icEvaluations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.NewlyEmergentSideEffectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabOrder {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.LabOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabOrder\' in table \'CustomDocumentPsychiatricEvaluations\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.LabOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RadiologyOrder {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.RadiologyOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RadiologyOrder\' in table \'CustomDocumentPsychiatricEvaluati" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.RadiologyOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Consultations {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.ConsultationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Consultations\' in table \'CustomDocumentPsychiatricEvaluatio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.ConsultationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrdersComments {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentPsychiatricEvaluations.OrdersCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrdersComments\' in table \'CustomDocumentPsychiatricEvaluati" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentPsychiatricEvaluations.OrdersCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotifyStaff1Null() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotifyStaff1Null() {
                this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotifyStaff2Null() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotifyStaff2Null() {
                this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotifyStaff3Null() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotifyStaff3Null() {
                this[this.tableCustomDocumentPsychiatricEvaluations.NotifyStaff3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextPsychiatricAppointmentNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.NextPsychiatricAppointmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextPsychiatricAppointmentNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.NextPsychiatricAppointmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummaryAndRecommendationsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.SummaryAndRecommendationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummaryAndRecommendationsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.SummaryAndRecommendationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicationListAtTheTimeOfTransitionNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MedicationListAtTheTimeOfTransitionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicationListAtTheTimeOfTransitionNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MedicationListAtTheTimeOfTransitionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdentifyingInformationNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.IdentifyingInformationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdentifyingInformationNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.IdentifyingInformationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyHistoryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.FamilyHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyHistoryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.FamilyHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPastPsychiatricHistoryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.PastPsychiatricHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPastPsychiatricHistoryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.PastPsychiatricHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDevelopmentalHistoryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.DevelopmentalHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDevelopmentalHistoryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.DevelopmentalHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstanceAbuseHistoryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.SubstanceAbuseHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstanceAbuseHistoryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.SubstanceAbuseHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalHistoryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MedicalHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicalHistoryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MedicalHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryofPresentIllnessNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.HistoryofPresentIllnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryofPresentIllnessNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.HistoryofPresentIllnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocialHistoryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.SocialHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocialHistoryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.SocialHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemPsychNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemPsychColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemPsychNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemPsychColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemSomaticConcernsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemSomaticConcernsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemSomaticConcernsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemSomaticConcernsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemConstitutionalNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemConstitutionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemConstitutionalNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemConstitutionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemEarNoseMouthThroatNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEarNoseMouthThroatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemEarNoseMouthThroatNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEarNoseMouthThroatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemGINull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemGINull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemGUNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemGUNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemGUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemIntegumentaryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemIntegumentaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemIntegumentaryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemIntegumentaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemEndoNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEndoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemEndoNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEndoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemNeuroNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemNeuroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemNeuroNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemNeuroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemImmuneNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemImmuneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemImmuneNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemImmuneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemEyesNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEyesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemEyesNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemEyesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemRespNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemRespColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemRespNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemRespColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemCardioVascularNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCardioVascularColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemCardioVascularNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCardioVascularColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemHemLymphNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemHemLymphColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemHemLymphNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemHemLymphColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemMusculoNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemMusculoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemMusculoNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemMusculoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemAllOthersNegativeNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemAllOthersNegativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemAllOthersNegativeNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemAllOthersNegativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReviewOfSystemCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReviewOfSystemCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ReviewOfSystemCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppropriatelyDressedNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AppropriatelyDressedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppropriatelyDressedNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AppropriatelyDressedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralAppearanceUnkeptNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceUnkeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralAppearanceUnkeptNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceUnkeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralAppearanceOtherNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralAppearanceOtherNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeneralAppearanceOtherTextNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeneralAppearanceOtherTextNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.GeneralAppearanceOtherTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMuscleStrengthNormalNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMuscleStrengthNormalNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMuscleStrengthAbnormalNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMuscleStrengthAbnormalNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MuscleStrengthAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMusculoskeletalToneNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MusculoskeletalToneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMusculoskeletalToneNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MusculoskeletalToneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGaitNormalNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.GaitNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGaitNormalNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.GaitNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGaitAbnormalNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.GaitAbnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGaitAbnormalNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.GaitAbnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTicsTremorsAbnormalMovementsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.TicsTremorsAbnormalMovementsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTicsTremorsAbnormalMovementsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.TicsTremorsAbnormalMovementsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEPSNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.EPSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEPSNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.EPSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuicidalNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.SuicidalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuicidalNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.SuicidalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHomicidalNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.HomicidalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHomicidalNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.HomicidalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndicateIdeationNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.IndicateIdeationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndicateIdeationNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.IndicateIdeationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppearanceBehaviorNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppearanceBehaviorNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppearanceBehaviorCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppearanceBehaviorCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AppearanceBehaviorCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpeechNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.SpeechColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpeechNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.SpeechColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpeechCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.SpeechCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpeechCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.SpeechCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoughtProcessNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoughtProcessNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThoughtProcessCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThoughtProcessCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ThoughtProcessCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociationsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AssociationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssociationsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AssociationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociationsCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AssociationsCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssociationsCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AssociationsCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormalPsychoticThoughtsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormalPsychoticThoughtsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormalPsychoticThoughtsCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormalPsychoticThoughtsCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AbnormalPsychoticThoughtsCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJudgmentAndInsightNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJudgmentAndInsightNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJudgmentAndInsightCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJudgmentAndInsightCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.JudgmentAndInsightCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrientationNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.OrientationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrientationNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.OrientationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrientationCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.OrientationCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrientationCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.OrientationCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecentRemoteMemoryNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecentRemoteMemoryNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecentRemoteMemoryCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecentRemoteMemoryCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.RecentRemoteMemoryCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttentionConcentrationNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttentionConcentrationNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttentionConcentrationCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttentionConcentrationCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.AttentionConcentrationCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLanguageNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.LanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLanguageNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.LanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLanguageCommmentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.LanguageCommmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLanguageCommmentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.LanguageCommmentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFundOfKnowledgeNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFundOfKnowledgeNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFundOfKnowledgeCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFundOfKnowledgeCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.FundOfKnowledgeCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoodAndAffectNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoodAndAffectNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoodAndAffectCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoodAndAffectCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MoodAndAffectCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalRecordsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicalRecordsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiagnosticTestNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.DiagnosticTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiagnosticTestNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.DiagnosticTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.LabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.LabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabsSelectedNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.LabsSelectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabsSelectedNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.LabsSelectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicalRecordsCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicalRecordsCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.MedicalRecordsCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderedMedicationsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.OrderedMedicationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderedMedicationsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.OrderedMedicationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRisksBenefitsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.RisksBenefitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRisksBenefitsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.RisksBenefitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewlyEmergentSideEffectsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.NewlyEmergentSideEffectsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewlyEmergentSideEffectsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.NewlyEmergentSideEffectsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabOrderNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.LabOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabOrderNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.LabOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRadiologyOrderNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.RadiologyOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRadiologyOrderNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.RadiologyOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsultationsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.ConsultationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsultationsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.ConsultationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrdersCommentsNull() {
                return this.IsNull(this.tableCustomDocumentPsychiatricEvaluations.OrdersCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrdersCommentsNull() {
                this[this.tableCustomDocumentPsychiatricEvaluations.OrdersCommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomPsychiatricEvaluationProblemsRow : global::System.Data.DataRow {
            
            private CustomPsychiatricEvaluationProblemsDataTable tableCustomPsychiatricEvaluationProblems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomPsychiatricEvaluationProblemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomPsychiatricEvaluationProblems = ((CustomPsychiatricEvaluationProblemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PsychiatricEvaluationProblemId {
                get {
                    return ((int)(this[this.tableCustomPsychiatricEvaluationProblems.PsychiatricEvaluationProblemIdColumn]));
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.PsychiatricEvaluationProblemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomPsychiatricEvaluationProblems.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomPsychiatricEvaluationProblems.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomPsychiatricEvaluationProblem" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomPsychiatricEvaluationProblems\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomPsychiatricEvaluationProblems.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomPsychiatricEvaluationProblems\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomPsychiatricEvaluationProblems.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomPsychiatricEvaluationPro" +
                                "blems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProblemText {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ProblemTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProblemText\' in table \'CustomPsychiatricEvaluationProblems\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ProblemTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Severity {
                get {
                    try {
                        return ((int)(this[this.tableCustomPsychiatricEvaluationProblems.SeverityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Severity\' in table \'CustomPsychiatricEvaluationProblems\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.SeverityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Duration {
                get {
                    try {
                        return ((int)(this[this.tableCustomPsychiatricEvaluationProblems.DurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duration\' in table \'CustomPsychiatricEvaluationProblems\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.DurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Intensity {
                get {
                    try {
                        return ((int)(this[this.tableCustomPsychiatricEvaluationProblems.IntensityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Intensity\' in table \'CustomPsychiatricEvaluationProblems\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.IntensityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOfDayMorning {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayMorningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOfDayMorning\' in table \'CustomPsychiatricEvaluationProb" +
                                "lems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayMorningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOfDayNoon {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOfDayNoon\' in table \'CustomPsychiatricEvaluationProblem" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOfDayAfternoon {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayAfternoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOfDayAfternoon\' in table \'CustomPsychiatricEvaluationPr" +
                                "oblems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayAfternoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOfDayEvening {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayEveningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOfDayEvening\' in table \'CustomPsychiatricEvaluationProb" +
                                "lems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayEveningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TimeOfDayNight {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeOfDayNight\' in table \'CustomPsychiatricEvaluationProble" +
                                "ms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContextHome {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ContextHomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContextHome\' in table \'CustomPsychiatricEvaluationProblems\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ContextHomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContextSchool {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ContextSchoolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContextSchool\' in table \'CustomPsychiatricEvaluationProblem" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ContextSchoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContextWork {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ContextWorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContextWork\' in table \'CustomPsychiatricEvaluationProblems\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ContextWorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContextCommunity {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ContextCommunityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContextCommunity\' in table \'CustomPsychiatricEvaluationProb" +
                                "lems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ContextCommunityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContextOther {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ContextOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContextOther\' in table \'CustomPsychiatricEvaluationProblems" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ContextOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContextOtherText {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ContextOtherTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContextOtherText\' in table \'CustomPsychiatricEvaluationProb" +
                                "lems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ContextOtherTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssociatedSignsSymptoms {
                get {
                    try {
                        return ((int)(this[this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociatedSignsSymptoms\' in table \'CustomPsychiatricEvaluat" +
                                "ionProblems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssociatedSignsSymptomsOtherText {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsOtherTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssociatedSignsSymptomsOtherText\' in table \'CustomPsychiatr" +
                                "icEvaluationProblems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsOtherTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifyingFactors {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ModifyingFactorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifyingFactors\' in table \'CustomPsychiatricEvaluationProb" +
                                "lems\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ModifyingFactorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReasonResolved {
                get {
                    try {
                        return ((string)(this[this.tableCustomPsychiatricEvaluationProblems.ReasonResolvedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonResolved\' in table \'CustomPsychiatricEvaluationProble" +
                                "ms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ReasonResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProblemStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomPsychiatricEvaluationProblems.ProblemStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProblemStatus\' in table \'CustomPsychiatricEvaluationProblem" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomPsychiatricEvaluationProblems.ProblemStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemTextNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ProblemTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemTextNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ProblemTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeverityNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.SeverityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeverityNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.SeverityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDurationNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.DurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDurationNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.DurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntensityNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.IntensityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntensityNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.IntensityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOfDayMorningNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.TimeOfDayMorningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOfDayMorningNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayMorningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOfDayNoonNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOfDayNoonNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOfDayAfternoonNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.TimeOfDayAfternoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOfDayAfternoonNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayAfternoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOfDayEveningNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.TimeOfDayEveningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOfDayEveningNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayEveningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTimeOfDayNightNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTimeOfDayNightNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.TimeOfDayNightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContextHomeNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ContextHomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContextHomeNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ContextHomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContextSchoolNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ContextSchoolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContextSchoolNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ContextSchoolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContextWorkNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ContextWorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContextWorkNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ContextWorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContextCommunityNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ContextCommunityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContextCommunityNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ContextCommunityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContextOtherNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ContextOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContextOtherNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ContextOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContextOtherTextNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ContextOtherTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContextOtherTextNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ContextOtherTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociatedSignsSymptomsNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssociatedSignsSymptomsNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssociatedSignsSymptomsOtherTextNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsOtherTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssociatedSignsSymptomsOtherTextNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.AssociatedSignsSymptomsOtherTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifyingFactorsNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ModifyingFactorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifyingFactorsNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ModifyingFactorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonResolvedNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ReasonResolvedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonResolvedNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ReasonResolvedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemStatusNull() {
                return this.IsNull(this.tableCustomPsychiatricEvaluationProblems.ProblemStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemStatusNull() {
                this[this.tableCustomPsychiatricEvaluationProblems.ProblemStatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DocumentDiagnosisCodesRow : global::System.Data.DataRow {
            
            private DocumentDiagnosisCodesDataTable tableDocumentDiagnosisCodes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentDiagnosisCodesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocumentDiagnosisCodes = ((DocumentDiagnosisCodesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentDiagnosisCodeId {
                get {
                    return ((int)(this[this.tableDocumentDiagnosisCodes.DocumentDiagnosisCodeIdColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DocumentDiagnosisCodeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableDocumentDiagnosisCodes.CreatedByColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentDiagnosisCodes.CreatedDateColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableDocumentDiagnosisCodes.ModifiedByColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentDiagnosisCodes.ModifiedDateColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'DocumentDiagnosisCodes\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocumentDiagnosisCodes.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosisCodes.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'DocumentDiagnosisCodes\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMVCodeId {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.DSMVCodeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMVCodeId\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DSMVCodeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ICD10Code {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.ICD10CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD10Code\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.ICD10CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ICD9Code {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.ICD9CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD9Code\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.ICD9CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DiagnosisType {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosisCodes.DiagnosisTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisType\' in table \'DocumentDiagnosisCodes\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DiagnosisTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RuleOut {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.RuleOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleOut\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.RuleOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Billable {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.BillableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Billable\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.BillableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Severity {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosisCodes.SeverityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Severity\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.SeverityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DiagnosisOrder {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosisCodes.DiagnosisOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisOrder\' in table \'DocumentDiagnosisCodes\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DiagnosisOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Specifier {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.SpecifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specifier\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.SpecifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Remission {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosisCodes.RemissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remission\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.RemissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Source {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DSMDescription {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.DSMDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DSMDescription\' in table \'DocumentDiagnosisCodes\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DSMDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RuleOutText {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.RuleOutTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RuleOutText\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.RuleOutTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DiagnosisTypeText {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.DiagnosisTypeTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisTypeText\' in table \'DocumentDiagnosisCodes\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.DiagnosisTypeTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SeverityText {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisCodes.SeverityTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeverityText\' in table \'DocumentDiagnosisCodes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisCodes.SeverityTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableDocumentDiagnosisCodes.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableDocumentDiagnosisCodes.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableDocumentDiagnosisCodes.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableDocumentDiagnosisCodes.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMVCodeIdNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DSMVCodeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMVCodeIdNull() {
                this[this.tableDocumentDiagnosisCodes.DSMVCodeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsICD10CodeNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.ICD10CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetICD10CodeNull() {
                this[this.tableDocumentDiagnosisCodes.ICD10CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsICD9CodeNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.ICD9CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetICD9CodeNull() {
                this[this.tableDocumentDiagnosisCodes.ICD9CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiagnosisTypeNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DiagnosisTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiagnosisTypeNull() {
                this[this.tableDocumentDiagnosisCodes.DiagnosisTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRuleOutNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.RuleOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRuleOutNull() {
                this[this.tableDocumentDiagnosisCodes.RuleOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillableNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.BillableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillableNull() {
                this[this.tableDocumentDiagnosisCodes.BillableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeverityNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.SeverityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeverityNull() {
                this[this.tableDocumentDiagnosisCodes.SeverityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiagnosisOrderNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DiagnosisOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiagnosisOrderNull() {
                this[this.tableDocumentDiagnosisCodes.DiagnosisOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecifierNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.SpecifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecifierNull() {
                this[this.tableDocumentDiagnosisCodes.SpecifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemissionNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.RemissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemissionNull() {
                this[this.tableDocumentDiagnosisCodes.RemissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceNull() {
                this[this.tableDocumentDiagnosisCodes.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentsNull() {
                this[this.tableDocumentDiagnosisCodes.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDSMDescriptionNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DSMDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDSMDescriptionNull() {
                this[this.tableDocumentDiagnosisCodes.DSMDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRuleOutTextNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.RuleOutTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRuleOutTextNull() {
                this[this.tableDocumentDiagnosisCodes.RuleOutTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiagnosisTypeTextNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.DiagnosisTypeTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiagnosisTypeTextNull() {
                this[this.tableDocumentDiagnosisCodes.DiagnosisTypeTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeverityTextNull() {
                return this.IsNull(this.tableDocumentDiagnosisCodes.SeverityTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeverityTextNull() {
                this[this.tableDocumentDiagnosisCodes.SeverityTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DocumentDiagnosisRow : global::System.Data.DataRow {
            
            private DocumentDiagnosisDataTable tableDocumentDiagnosis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentDiagnosisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocumentDiagnosis = ((DocumentDiagnosisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentDiagnosisId {
                get {
                    return ((int)(this[this.tableDocumentDiagnosis.DocumentDiagnosisIdColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosis.DocumentDiagnosisIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableDocumentDiagnosis.CreatedByColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosis.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentDiagnosis.CreatedDateColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosis.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableDocumentDiagnosis.ModifiedByColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosis.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentDiagnosis.ModifiedDateColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosis.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosis.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocumentDiagnosis.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosis.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosis.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScreeeningTool {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosis.ScreeeningToolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScreeeningTool\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.ScreeeningToolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherMedicalCondition {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosis.OtherMedicalConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherMedicalCondition\' in table \'DocumentDiagnosis\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.OtherMedicalConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FactorComments {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosis.FactorCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorComments\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.FactorCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GAFScore {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosis.GAFScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GAFScore\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.GAFScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WHODASScore {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosis.WHODASScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WHODASScore\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.WHODASScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CAFASScore {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosis.CAFASScoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAFASScore\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.CAFASScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoDiagnosis {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosis.NoDiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoDiagnosis\' in table \'DocumentDiagnosis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosis.NoDiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableDocumentDiagnosis.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableDocumentDiagnosis.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableDocumentDiagnosis.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableDocumentDiagnosis.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableDocumentDiagnosis.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableDocumentDiagnosis.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableDocumentDiagnosis.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableDocumentDiagnosis.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScreeeningToolNull() {
                return this.IsNull(this.tableDocumentDiagnosis.ScreeeningToolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScreeeningToolNull() {
                this[this.tableDocumentDiagnosis.ScreeeningToolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherMedicalConditionNull() {
                return this.IsNull(this.tableDocumentDiagnosis.OtherMedicalConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherMedicalConditionNull() {
                this[this.tableDocumentDiagnosis.OtherMedicalConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactorCommentsNull() {
                return this.IsNull(this.tableDocumentDiagnosis.FactorCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactorCommentsNull() {
                this[this.tableDocumentDiagnosis.FactorCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAFScoreNull() {
                return this.IsNull(this.tableDocumentDiagnosis.GAFScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAFScoreNull() {
                this[this.tableDocumentDiagnosis.GAFScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWHODASScoreNull() {
                return this.IsNull(this.tableDocumentDiagnosis.WHODASScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWHODASScoreNull() {
                this[this.tableDocumentDiagnosis.WHODASScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAFASScoreNull() {
                return this.IsNull(this.tableDocumentDiagnosis.CAFASScoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAFASScoreNull() {
                this[this.tableDocumentDiagnosis.CAFASScoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoDiagnosisNull() {
                return this.IsNull(this.tableDocumentDiagnosis.NoDiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoDiagnosisNull() {
                this[this.tableDocumentDiagnosis.NoDiagnosisColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DocumentDiagnosisFactorsRow : global::System.Data.DataRow {
            
            private DocumentDiagnosisFactorsDataTable tableDocumentDiagnosisFactors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DocumentDiagnosisFactorsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDocumentDiagnosisFactors = ((DocumentDiagnosisFactorsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentDiagnosisFactorId {
                get {
                    return ((int)(this[this.tableDocumentDiagnosisFactors.DocumentDiagnosisFactorIdColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.DocumentDiagnosisFactorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableDocumentDiagnosisFactors.CreatedByColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentDiagnosisFactors.CreatedDateColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableDocumentDiagnosisFactors.ModifiedByColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDocumentDiagnosisFactors.ModifiedDateColumn]));
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisFactors.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'DocumentDiagnosisFactors\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDocumentDiagnosisFactors.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'DocumentDiagnosisFactors\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisFactors.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'DocumentDiagnosisFactors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosisFactors.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'DocumentDiagnosisFactors\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FactorId {
                get {
                    try {
                        return ((int)(this[this.tableDocumentDiagnosisFactors.FactorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorId\' in table \'DocumentDiagnosisFactors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.FactorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Factors {
                get {
                    try {
                        return ((string)(this[this.tableDocumentDiagnosisFactors.FactorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Factors\' in table \'DocumentDiagnosisFactors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDocumentDiagnosisFactors.FactorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableDocumentDiagnosisFactors.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableDocumentDiagnosisFactors.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableDocumentDiagnosisFactors.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableDocumentDiagnosisFactors.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableDocumentDiagnosisFactors.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableDocumentDiagnosisFactors.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableDocumentDiagnosisFactors.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableDocumentDiagnosisFactors.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactorIdNull() {
                return this.IsNull(this.tableDocumentDiagnosisFactors.FactorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactorIdNull() {
                this[this.tableDocumentDiagnosisFactors.FactorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFactorsNull() {
                return this.IsNull(this.tableDocumentDiagnosisFactors.FactorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFactorsNull() {
                this[this.tableDocumentDiagnosisFactors.FactorsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NoteEMCodeOptionsRow : global::System.Data.DataRow {
            
            private NoteEMCodeOptionsDataTable tableNoteEMCodeOptions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NoteEMCodeOptionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNoteEMCodeOptions = ((NoteEMCodeOptionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NoteEMCodeOptionId {
                get {
                    return ((long)(this[this.tableNoteEMCodeOptions.NoteEMCodeOptionIdColumn]));
                }
                set {
                    this[this.tableNoteEMCodeOptions.NoteEMCodeOptionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableNoteEMCodeOptions.CreatedByColumn]));
                }
                set {
                    this[this.tableNoteEMCodeOptions.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableNoteEMCodeOptions.CreatedDateColumn]));
                }
                set {
                    this[this.tableNoteEMCodeOptions.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableNoteEMCodeOptions.ModifiedByColumn]));
                }
                set {
                    this[this.tableNoteEMCodeOptions.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableNoteEMCodeOptions.ModifiedDateColumn]));
                }
                set {
                    this[this.tableNoteEMCodeOptions.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNoteEMCodeOptions.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProcedureCodeId {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ProcedureCodeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcedureCodeId\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ProcedureCodeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProgramId {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ProgramIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramId\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LocationId {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.LocationIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationId\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.LocationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNoteEMCodeOptions.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNoteEMCodeOptions.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModifierId1 {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ModifierId1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifierId1\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ModifierId1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModifierId2 {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ModifierId2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifierId2\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ModifierId2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModifierId3 {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ModifierId3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifierId3\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ModifierId3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModifierId4 {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ModifierId4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifierId4\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ModifierId4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPILocation {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPILocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPILocation\' in table \'NoteEMCodeOptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPILocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPIDuration {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPIDurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPIDuration\' in table \'NoteEMCodeOptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPIDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPIModifyingFactors {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPIModifyingFactorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPIModifyingFactors\' in table \'NoteEMCodeOptions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPIModifyingFactorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPIContextOnset {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPIContextOnsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPIContextOnset\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPIContextOnsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPIQualityNature {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPIQualityNatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPIQualityNature\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPIQualityNatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPITimingFrequency {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPITimingFrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPITimingFrequency\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPITimingFrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPIAssociatedSignsSymptoms {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPIAssociatedSignsSymptomsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPIAssociatedSignsSymptoms\' in table \'NoteEMCodeOpti" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPIAssociatedSignsSymptomsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPISeverity {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPISeverityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPISeverity\' in table \'NoteEMCodeOptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPISeverityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HistoryHPITotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.HistoryHPITotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPITotalCount\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPITotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryHPIResults {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryHPIResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryHPIResults\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryHPIResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSConstitutional {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSConstitutionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSConstitutional\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSConstitutionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSEarNoseMouthThroat {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSEarNoseMouthThroatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSEarNoseMouthThroat\' in table \'NoteEMCodeOptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSEarNoseMouthThroatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSCardiovascular {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSCardiovascularColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSCardiovascular\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSCardiovascularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSRespiratory {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSRespiratoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSRespiratory\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSRespiratoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSSkin {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSSkinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSSkin\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSSkinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSPsychiatric {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSPsychiatricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSPsychiatric\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSPsychiatricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSHematologicLymphatic {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSHematologicLymphaticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSHematologicLymphatic\' in table \'NoteEMCodeOptions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSHematologicLymphaticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSEye {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSEyeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSEye\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSEyeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSGastrointestinal {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSGastrointestinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSGastrointestinal\' in table \'NoteEMCodeOptions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSGastrointestinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSGenitourinary {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSGenitourinaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSGenitourinary\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSGenitourinaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSMusculoskeletal {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSMusculoskeletalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSMusculoskeletal\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSMusculoskeletalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSNeurological {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSNeurologicalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSNeurological\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSNeurologicalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSEndocrine {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSEndocrineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSEndocrine\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSEndocrineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSAllergicImmunologic {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSAllergicImmunologicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSAllergicImmunologic\' in table \'NoteEMCodeOptions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSAllergicImmunologicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HistoryROSTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.HistoryROSTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSTotalCount\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryROSResults {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryROSResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryROSResults\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryROSResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryPHFamilyHistory {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryPHFamilyHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryPHFamilyHistory\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryPHFamilyHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryPHSocialHistory {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryPHSocialHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryPHSocialHistory\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryPHSocialHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryPHMedicalHistory {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryPHMedicalHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryPHMedicalHistory\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryPHMedicalHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HistoryPHTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.HistoryPHTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryPHTotalCount\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryPHTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryPHResults {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryPHResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryPHResults\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryPHResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryFinalResult {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.HistoryFinalResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryFinalResult\' in table \'NoteEMCodeOptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.HistoryFinalResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBAHead {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBAHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAHead\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBABack {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBABackColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBABack\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBABackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBALeftUpperExtremity {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBALeftUpperExtremity\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBALeftLowerExtremity {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBALeftLowerExtremity\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBAAbdomen {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBAAbdomenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAAbdomen\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAAbdomenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBANeck {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBANeckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBANeck\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBANeckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBAChest {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBAChestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAChest\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAChestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBARightUpperExtremity {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBARightUpperExtremity\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBARightLowerExtremity {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBARightLowerExtremity\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamBAGenitaliaButtocks {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAGenitaliaButtocks\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSConstitutional {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSConstitutionalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSConstitutional\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSConstitutionalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSEyes {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSEyesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSEyes\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSEyesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSEarNoseMouthThroat {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSEarNoseMouthThroat\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSCardiovascular {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSCardiovascularColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSCardiovascular\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSCardiovascularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSRespiratory {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSRespiratoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSRespiratory\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSRespiratoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSPsychiatric {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSPsychiatricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSPsychiatric\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSPsychiatricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSGastrointestinal {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSGastrointestinal\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSGenitourinary {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSGenitourinary\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSMusculoskeletal {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSMusculoskeletal\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSSkin {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSSkinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSSkin\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSSkinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSNeurologic {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSNeurologicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSNeurologic\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSNeurologicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamOSHematologicLymphatic {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSHematologicLymphatic\' in table \'NoteEMCodeOptions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamTypeOfExam {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamTypeOfExamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamTypeOfExam\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamTypeOfExamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExamFinalResult {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ExamFinalResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamFinalResult\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamFinalResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRROClinicalLabs {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRROClinicalLabsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRROClinicalLabs\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRROClinicalLabsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRROOtherTest {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRROOtherTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRROOtherTest\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRROOtherTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRObtainRecords {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRObtainRecordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRObtainRecords\' in table \'NoteEMCodeOptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRObtainRecordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRIndependentVisualization {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRIndependentVisualizationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRIndependentVisualization\' in table \'NoteEMCodeOptions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRIndependentVisualizationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRRORadiologyTest {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRRORadiologyTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRRORadiologyTest\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRRORadiologyTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRDiscussion {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRDiscussionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRDiscussion\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRDiscussionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRReviewSummarize {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRReviewSummarizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRReviewSummarize\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRReviewSummarizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDRResults {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDRResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDRResults\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDRResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTONewProblem {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTONewProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTONewProblem\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTONewProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOProblems1 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOProblems1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOProblems1\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOProblems1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOProblems2 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOProblems2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOProblems2\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOProblems2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOProblems3 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOProblems3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOProblems3\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOProblems3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOProblems4Plus {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOProblems4PlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOProblems4Plus\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOProblems4PlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOAdditionalWorkup {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOAdditionalWorkupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOAdditionalWorkup\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOAdditionalWorkupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOProblemWorsening1 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOProblemWorsening1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOProblemWorsening1\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOProblemWorsening1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOProblemWorsening2 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOProblemWorsening2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOProblemWorsening2\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOProblemWorsening2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMDTOResults {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMDTOResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMDTOResults\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMDTOResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMResults {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMResultsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMResults\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMResultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMFinalResult {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMFinalResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMFinalResult\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMFinalResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECEEMCode {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECEEMCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECEEMCode\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECEEMCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECEGuidelines {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECEGuidelinesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECEGuidelines\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECEGuidelinesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECETypeOfPatient {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECETypeOfPatientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECETypeOfPatient\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECETypeOfPatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECEVisitType {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECEVisitTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECEVisitType\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECEVisitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECE50PercentFaceTime {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECE50PercentFaceTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECE50PercentFaceTime\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECE50PercentFaceTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ECEMinutes {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ECEMinutesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECEMinutes\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECEMinutesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQChronicProblemsAddressed3Plus {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQChronicProblemsAddressed3PlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQChronicProblemsAddressed3Plus\' in table \'NoteEMCodeOpti" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQChronicProblemsAddressed3PlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQAdditionalWorkup {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQAdditionalWorkupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQAdditionalWorkup\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQAdditionalWorkupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQProblemWorsening1 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQProblemWorsening1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQProblemWorsening1\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQProblemWorsening1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQProblemWorsening2 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQProblemWorsening2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQProblemWorsening2\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQProblemWorsening2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQIllnessWithExacerbation {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQIllnessWithExacerbationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQIllnessWithExacerbation\' in table \'NoteEMCodeOptions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQIllnessWithExacerbationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQDiscussion {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQDiscussionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQDiscussion\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQDiscussionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQObtainRecords {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQObtainRecordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQObtainRecords\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQObtainRecordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQIndependentVisualization {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQIndependentVisualizationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQIndependentVisualization\' in table \'NoteEMCodeOptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQIndependentVisualizationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ECAQReviewSummarize {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.ECAQReviewSummarizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECAQReviewSummarize\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ECAQReviewSummarizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAHeadCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAHeadCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAHeadCount\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAHeadCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAHeadTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAHeadTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAHeadTotalCount\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAHeadTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBABackCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBABackCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBABackCount\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBABackCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBABackTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBABackTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBABackTotalCount\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBABackTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBALeftUpperExtremityCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBALeftUpperExtremityCount\' in table \'NoteEMCodeOptions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBALeftUpperExtremityTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBALeftUpperExtremityTotalCount\' in table \'NoteEMCodeOpt" +
                                "ions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBALeftLowerExtremityCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBALeftLowerExtremityCount\' in table \'NoteEMCodeOptions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBALeftLowerExtremityTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBALeftLowerExtremityTotalCount\' in table \'NoteEMCodeOpt" +
                                "ions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAAbdomenCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAAbdomenCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAAbdomenCount\' in table \'NoteEMCodeOptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAAbdomenCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAAbdomenTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAAbdomenTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAAbdomenTotalCount\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAAbdomenTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBANeckCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBANeckCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBANeckCount\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBANeckCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBANeckTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBANeckTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBANeckTotalCount\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBANeckTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAChestCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAChestCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAChestCount\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAChestCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAChestTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAChestTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAChestTotalCount\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAChestTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBARightUpperExtremityCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBARightUpperExtremityCount\' in table \'NoteEMCodeOptions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBARightUpperExtremityTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBARightUpperExtremityTotalCount\' in table \'NoteEMCodeOp" +
                                "tions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBARightLowerExtremityCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBARightLowerExtremityCount\' in table \'NoteEMCodeOptions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBARightLowerExtremityTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBARightLowerExtremityTotalCount\' in table \'NoteEMCodeOp" +
                                "tions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAGenitaliaButtocksCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAGenitaliaButtocksCount\' in table \'NoteEMCodeOptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamBAGenitaliaButtocksTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamBAGenitaliaButtocksTotalCount\' in table \'NoteEMCodeOpti" +
                                "ons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSConstitutionalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSConstitutionalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSConstitutionalCount\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSConstitutionalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSConstitutionalTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSConstitutionalTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSConstitutionalTotalCount\' in table \'NoteEMCodeOptions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSConstitutionalTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSEyesCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSEyesCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSEyesCount\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSEyesCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSEyesTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSEyesTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSEyesTotalCount\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSEyesTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSEarNoseMouthThroatCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSEarNoseMouthThroatCount\' in table \'NoteEMCodeOptions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSEarNoseMouthThroatTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSEarNoseMouthThroatTotalCount\' in table \'NoteEMCodeOpt" +
                                "ions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSCardiovascularCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSCardiovascularCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSCardiovascularCount\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSCardiovascularCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSCardiovascularTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSCardiovascularTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSCardiovascularTotalCount\' in table \'NoteEMCodeOptions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSCardiovascularTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSRespiratoryCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSRespiratoryCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSRespiratoryCount\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSRespiratoryCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSRespiratoryTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSRespiratoryTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSRespiratoryTotalCount\' in table \'NoteEMCodeOptions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSRespiratoryTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSPsychiatricCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSPsychiatricCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSPsychiatricCount\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSPsychiatricCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSPsychiatricTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSPsychiatricTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSPsychiatricTotalCount\' in table \'NoteEMCodeOptions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSPsychiatricTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSGastrointestinalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSGastrointestinalCount\' in table \'NoteEMCodeOptions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSGastrointestinalTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSGastrointestinalTotalCount\' in table \'NoteEMCodeOptio" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSGenitourinaryCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSGenitourinaryCount\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSGenitourinaryTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSGenitourinaryTotalCount\' in table \'NoteEMCodeOptions\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSMusculoskeletalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSMusculoskeletalCount\' in table \'NoteEMCodeOptions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSMusculoskeletalTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSMusculoskeletalTotalCount\' in table \'NoteEMCodeOption" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSSkinCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSSkinCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSSkinCount\' in table \'NoteEMCodeOptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSSkinCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSSkinTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSSkinTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSSkinTotalCount\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSSkinTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSNeurologicCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSNeurologicCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSNeurologicCount\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSNeurologicCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSNeurologicTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSNeurologicTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSNeurologicTotalCount\' in table \'NoteEMCodeOptions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSNeurologicTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSHematologicLymphaticCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSHematologicLymphaticCount\' in table \'NoteEMCodeOption" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ExamOSHematologicLymphaticTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamOSHematologicLymphaticTotalCount\' in table \'NoteEMCodeO" +
                                "ptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPMinorOtherProb1 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPMinorOtherProb1\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPMinorOtherProb2Plus {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb2PlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPMinorOtherProb2Plus\' in table \'NoteEMCodeOptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb2PlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPStableChronicMajor1 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPStableChronicMajor1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPStableChronicMajor1\' in table \'NoteEMCodeOptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPStableChronicMajor1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPChronicMajorMildExac1Plus {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorMildExac1PlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPChronicMajorMildExac1Plus\' in table \'NoteEMCodeOpt" +
                                "ions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorMildExac1PlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPAcuteUncomplicated1 {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteUncomplicated1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPAcuteUncomplicated1\' in table \'NoteEMCodeOptions\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteUncomplicated1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPNewProblem {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPNewProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPNewProblem\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPNewProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPAcuteIllness {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteIllnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPAcuteIllness\' in table \'NoteEMCodeOptions\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteIllnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPAcuteComplicatedInjury {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteComplicatedInjuryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPAcuteComplicatedInjury\' in table \'NoteEMCodeOption" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteComplicatedInjuryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPChronicMajorSevereExac1Plus {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorSevereExac1PlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPChronicMajorSevereExac1Plus\' in table \'NoteEMCodeO" +
                                "ptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorSevereExac1PlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMPPAcuteChronicThreat {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteChronicThreatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMPPAcuteChronicThreat\' in table \'NoteEMCodeOptions\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteChronicThreatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDLabVenipuncture {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDLabVenipunctureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDLabVenipuncture\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDLabVenipunctureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDNonCardImaging {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDNonCardImagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDNonCardImaging\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDNonCardImagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDPhysTestNoStress {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDPhysTestNoStressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDPhysTestNoStress\' in table \'NoteEMCodeOptions\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDPhysTestNoStressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDPhysTestYesStress {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDPhysTestYesStressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDPhysTestYesStress\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDPhysTestYesStressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDSkinBiopsies {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDSkinBiopsiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDSkinBiopsies\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDSkinBiopsiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDDeepNeedle {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDDeepNeedleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDDeepNeedle\' in table \'NoteEMCodeOptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDDeepNeedleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDDiagEndoNoRisk {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoNoRiskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDDiagEndoNoRisk\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoNoRiskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDDiagEndoYesRisk {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoYesRiskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDDiagEndoYesRisk\' in table \'NoteEMCodeOptions\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoYesRiskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDCardImagingNoRisk {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDCardImagingNoRiskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDCardImagingNoRisk\' in table \'NoteEMCodeOptions\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDCardImagingNoRiskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDCardImagingYesRisk {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDCardImagingYesRiskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDCardImagingYesRisk\' in table \'NoteEMCodeOptions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDCardImagingYesRiskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDClinicalLab {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDClinicalLabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDClinicalLab\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDClinicalLabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDObtainFluid {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDObtainFluidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDObtainFluid\' in table \'NoteEMCodeOptions\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDObtainFluidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDCardiacElectro {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDCardiacElectroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDCardiacElectro\' in table \'NoteEMCodeOptions\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDCardiacElectroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMDDiscopgraphy {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMDDiscopgraphyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMDDiscopgraphy\' in table \'NoteEMCodeOptions\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMDDiscopgraphyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MDMRCMMMOSMedicationManagement {
                get {
                    try {
                        return ((string)(this[this.tableNoteEMCodeOptions.MDMRCMMMOSMedicationManagementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDMRCMMMOSMedicationManagement\' in table \'NoteEMCodeOptions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableNoteEMCodeOptions.MDMRCMMMOSMedicationManagementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableNoteEMCodeOptions.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableNoteEMCodeOptions.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableNoteEMCodeOptions.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableNoteEMCodeOptions.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcedureCodeIdNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ProcedureCodeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProcedureCodeIdNull() {
                this[this.tableNoteEMCodeOptions.ProcedureCodeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramIdNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ProgramIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramIdNull() {
                this[this.tableNoteEMCodeOptions.ProgramIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationIdNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.LocationIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationIdNull() {
                this[this.tableNoteEMCodeOptions.LocationIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableNoteEMCodeOptions.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableNoteEMCodeOptions.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifierId1Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.ModifierId1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifierId1Null() {
                this[this.tableNoteEMCodeOptions.ModifierId1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifierId2Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.ModifierId2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifierId2Null() {
                this[this.tableNoteEMCodeOptions.ModifierId2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifierId3Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.ModifierId3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifierId3Null() {
                this[this.tableNoteEMCodeOptions.ModifierId3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifierId4Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.ModifierId4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifierId4Null() {
                this[this.tableNoteEMCodeOptions.ModifierId4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPILocationNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPILocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPILocationNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPILocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPIDurationNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPIDurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPIDurationNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPIDurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPIModifyingFactorsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPIModifyingFactorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPIModifyingFactorsNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPIModifyingFactorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPIContextOnsetNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPIContextOnsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPIContextOnsetNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPIContextOnsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPIQualityNatureNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPIQualityNatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPIQualityNatureNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPIQualityNatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPITimingFrequencyNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPITimingFrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPITimingFrequencyNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPITimingFrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPIAssociatedSignsSymptomsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPIAssociatedSignsSymptomsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPIAssociatedSignsSymptomsNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPIAssociatedSignsSymptomsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPISeverityNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPISeverityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPISeverityNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPISeverityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPITotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPITotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPITotalCountNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPITotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryHPIResultsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryHPIResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryHPIResultsNull() {
                this[this.tableNoteEMCodeOptions.HistoryHPIResultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSConstitutionalNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSConstitutionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSConstitutionalNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSConstitutionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSEarNoseMouthThroatNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSEarNoseMouthThroatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSEarNoseMouthThroatNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSEarNoseMouthThroatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSCardiovascularNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSCardiovascularColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSCardiovascularNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSCardiovascularColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSRespiratoryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSRespiratoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSRespiratoryNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSRespiratoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSSkinNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSSkinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSSkinNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSSkinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSPsychiatricNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSPsychiatricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSPsychiatricNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSPsychiatricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSHematologicLymphaticNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSHematologicLymphaticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSHematologicLymphaticNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSHematologicLymphaticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSEyeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSEyeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSEyeNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSEyeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSGastrointestinalNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSGastrointestinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSGastrointestinalNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSGastrointestinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSGenitourinaryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSGenitourinaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSGenitourinaryNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSGenitourinaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSMusculoskeletalNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSMusculoskeletalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSMusculoskeletalNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSMusculoskeletalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSNeurologicalNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSNeurologicalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSNeurologicalNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSNeurologicalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSEndocrineNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSEndocrineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSEndocrineNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSEndocrineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSAllergicImmunologicNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSAllergicImmunologicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSAllergicImmunologicNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSAllergicImmunologicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSTotalCountNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryROSResultsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryROSResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryROSResultsNull() {
                this[this.tableNoteEMCodeOptions.HistoryROSResultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryPHFamilyHistoryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryPHFamilyHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryPHFamilyHistoryNull() {
                this[this.tableNoteEMCodeOptions.HistoryPHFamilyHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryPHSocialHistoryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryPHSocialHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryPHSocialHistoryNull() {
                this[this.tableNoteEMCodeOptions.HistoryPHSocialHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryPHMedicalHistoryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryPHMedicalHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryPHMedicalHistoryNull() {
                this[this.tableNoteEMCodeOptions.HistoryPHMedicalHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryPHTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryPHTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryPHTotalCountNull() {
                this[this.tableNoteEMCodeOptions.HistoryPHTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryPHResultsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryPHResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryPHResultsNull() {
                this[this.tableNoteEMCodeOptions.HistoryPHResultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryFinalResultNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.HistoryFinalResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryFinalResultNull() {
                this[this.tableNoteEMCodeOptions.HistoryFinalResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAHeadNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAHeadNull() {
                this[this.tableNoteEMCodeOptions.ExamBAHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBABackNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBABackColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBABackNull() {
                this[this.tableNoteEMCodeOptions.ExamBABackColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBALeftUpperExtremityNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBALeftUpperExtremityNull() {
                this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBALeftLowerExtremityNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBALeftLowerExtremityNull() {
                this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAAbdomenNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAAbdomenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAAbdomenNull() {
                this[this.tableNoteEMCodeOptions.ExamBAAbdomenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBANeckNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBANeckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBANeckNull() {
                this[this.tableNoteEMCodeOptions.ExamBANeckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAChestNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAChestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAChestNull() {
                this[this.tableNoteEMCodeOptions.ExamBAChestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBARightUpperExtremityNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBARightUpperExtremityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBARightUpperExtremityNull() {
                this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBARightLowerExtremityNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBARightLowerExtremityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBARightLowerExtremityNull() {
                this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAGenitaliaButtocksNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAGenitaliaButtocksNull() {
                this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSConstitutionalNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSConstitutionalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSConstitutionalNull() {
                this[this.tableNoteEMCodeOptions.ExamOSConstitutionalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSEyesNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSEyesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSEyesNull() {
                this[this.tableNoteEMCodeOptions.ExamOSEyesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSEarNoseMouthThroatNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSEarNoseMouthThroatNull() {
                this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSCardiovascularNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSCardiovascularColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSCardiovascularNull() {
                this[this.tableNoteEMCodeOptions.ExamOSCardiovascularColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSRespiratoryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSRespiratoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSRespiratoryNull() {
                this[this.tableNoteEMCodeOptions.ExamOSRespiratoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSPsychiatricNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSPsychiatricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSPsychiatricNull() {
                this[this.tableNoteEMCodeOptions.ExamOSPsychiatricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSGastrointestinalNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSGastrointestinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSGastrointestinalNull() {
                this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSGenitourinaryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSGenitourinaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSGenitourinaryNull() {
                this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSMusculoskeletalNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSMusculoskeletalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSMusculoskeletalNull() {
                this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSSkinNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSSkinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSSkinNull() {
                this[this.tableNoteEMCodeOptions.ExamOSSkinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSNeurologicNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSNeurologicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSNeurologicNull() {
                this[this.tableNoteEMCodeOptions.ExamOSNeurologicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSHematologicLymphaticNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSHematologicLymphaticNull() {
                this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamTypeOfExamNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamTypeOfExamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamTypeOfExamNull() {
                this[this.tableNoteEMCodeOptions.ExamTypeOfExamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamFinalResultNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamFinalResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamFinalResultNull() {
                this[this.tableNoteEMCodeOptions.ExamFinalResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRROClinicalLabsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRROClinicalLabsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRROClinicalLabsNull() {
                this[this.tableNoteEMCodeOptions.MDMDRROClinicalLabsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRROOtherTestNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRROOtherTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRROOtherTestNull() {
                this[this.tableNoteEMCodeOptions.MDMDRROOtherTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRObtainRecordsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRObtainRecordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRObtainRecordsNull() {
                this[this.tableNoteEMCodeOptions.MDMDRObtainRecordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRIndependentVisualizationNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRIndependentVisualizationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRIndependentVisualizationNull() {
                this[this.tableNoteEMCodeOptions.MDMDRIndependentVisualizationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRRORadiologyTestNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRRORadiologyTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRRORadiologyTestNull() {
                this[this.tableNoteEMCodeOptions.MDMDRRORadiologyTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRDiscussionNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRDiscussionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRDiscussionNull() {
                this[this.tableNoteEMCodeOptions.MDMDRDiscussionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRReviewSummarizeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRReviewSummarizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRReviewSummarizeNull() {
                this[this.tableNoteEMCodeOptions.MDMDRReviewSummarizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDRResultsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDRResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDRResultsNull() {
                this[this.tableNoteEMCodeOptions.MDMDRResultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTONewProblemNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTONewProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTONewProblemNull() {
                this[this.tableNoteEMCodeOptions.MDMDTONewProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOProblems1Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOProblems1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOProblems1Null() {
                this[this.tableNoteEMCodeOptions.MDMDTOProblems1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOProblems2Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOProblems2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOProblems2Null() {
                this[this.tableNoteEMCodeOptions.MDMDTOProblems2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOProblems3Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOProblems3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOProblems3Null() {
                this[this.tableNoteEMCodeOptions.MDMDTOProblems3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOProblems4PlusNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOProblems4PlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOProblems4PlusNull() {
                this[this.tableNoteEMCodeOptions.MDMDTOProblems4PlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOAdditionalWorkupNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOAdditionalWorkupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOAdditionalWorkupNull() {
                this[this.tableNoteEMCodeOptions.MDMDTOAdditionalWorkupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOProblemWorsening1Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOProblemWorsening1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOProblemWorsening1Null() {
                this[this.tableNoteEMCodeOptions.MDMDTOProblemWorsening1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOProblemWorsening2Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOProblemWorsening2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOProblemWorsening2Null() {
                this[this.tableNoteEMCodeOptions.MDMDTOProblemWorsening2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMDTOResultsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMDTOResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMDTOResultsNull() {
                this[this.tableNoteEMCodeOptions.MDMDTOResultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMResultsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMResultsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMResultsNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMResultsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMFinalResultNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMFinalResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMFinalResultNull() {
                this[this.tableNoteEMCodeOptions.MDMFinalResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECEEMCodeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECEEMCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECEEMCodeNull() {
                this[this.tableNoteEMCodeOptions.ECEEMCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECEGuidelinesNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECEGuidelinesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECEGuidelinesNull() {
                this[this.tableNoteEMCodeOptions.ECEGuidelinesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECETypeOfPatientNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECETypeOfPatientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECETypeOfPatientNull() {
                this[this.tableNoteEMCodeOptions.ECETypeOfPatientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECEVisitTypeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECEVisitTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECEVisitTypeNull() {
                this[this.tableNoteEMCodeOptions.ECEVisitTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECE50PercentFaceTimeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECE50PercentFaceTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECE50PercentFaceTimeNull() {
                this[this.tableNoteEMCodeOptions.ECE50PercentFaceTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECEMinutesNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECEMinutesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECEMinutesNull() {
                this[this.tableNoteEMCodeOptions.ECEMinutesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQChronicProblemsAddressed3PlusNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQChronicProblemsAddressed3PlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQChronicProblemsAddressed3PlusNull() {
                this[this.tableNoteEMCodeOptions.ECAQChronicProblemsAddressed3PlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQAdditionalWorkupNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQAdditionalWorkupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQAdditionalWorkupNull() {
                this[this.tableNoteEMCodeOptions.ECAQAdditionalWorkupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQProblemWorsening1Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQProblemWorsening1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQProblemWorsening1Null() {
                this[this.tableNoteEMCodeOptions.ECAQProblemWorsening1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQProblemWorsening2Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQProblemWorsening2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQProblemWorsening2Null() {
                this[this.tableNoteEMCodeOptions.ECAQProblemWorsening2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQIllnessWithExacerbationNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQIllnessWithExacerbationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQIllnessWithExacerbationNull() {
                this[this.tableNoteEMCodeOptions.ECAQIllnessWithExacerbationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQDiscussionNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQDiscussionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQDiscussionNull() {
                this[this.tableNoteEMCodeOptions.ECAQDiscussionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQObtainRecordsNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQObtainRecordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQObtainRecordsNull() {
                this[this.tableNoteEMCodeOptions.ECAQObtainRecordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQIndependentVisualizationNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQIndependentVisualizationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQIndependentVisualizationNull() {
                this[this.tableNoteEMCodeOptions.ECAQIndependentVisualizationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsECAQReviewSummarizeNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ECAQReviewSummarizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetECAQReviewSummarizeNull() {
                this[this.tableNoteEMCodeOptions.ECAQReviewSummarizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAHeadCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAHeadCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAHeadCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAHeadCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAHeadTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAHeadTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAHeadTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAHeadTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBABackCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBABackCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBABackCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBABackCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBABackTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBABackTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBABackTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBABackTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBALeftUpperExtremityCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBALeftUpperExtremityCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBALeftUpperExtremityTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBALeftUpperExtremityTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBALeftUpperExtremityTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBALeftLowerExtremityCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBALeftLowerExtremityCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBALeftLowerExtremityTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBALeftLowerExtremityTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBALeftLowerExtremityTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAAbdomenCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAAbdomenCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAAbdomenCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAAbdomenCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAAbdomenTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAAbdomenTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAAbdomenTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAAbdomenTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBANeckCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBANeckCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBANeckCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBANeckCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBANeckTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBANeckTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBANeckTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBANeckTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAChestCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAChestCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAChestCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAChestCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAChestTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAChestTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAChestTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAChestTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBARightUpperExtremityCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBARightUpperExtremityCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBARightUpperExtremityCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBARightUpperExtremityTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBARightUpperExtremityTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBARightUpperExtremityTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBARightUpperExtremityTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBARightLowerExtremityCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBARightLowerExtremityCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBARightLowerExtremityCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBARightLowerExtremityTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBARightLowerExtremityTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBARightLowerExtremityTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBARightLowerExtremityTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAGenitaliaButtocksCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAGenitaliaButtocksCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamBAGenitaliaButtocksTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamBAGenitaliaButtocksTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamBAGenitaliaButtocksTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSConstitutionalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSConstitutionalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSConstitutionalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSConstitutionalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSConstitutionalTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSConstitutionalTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSConstitutionalTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSConstitutionalTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSEyesCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSEyesCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSEyesCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSEyesCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSEyesTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSEyesTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSEyesTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSEyesTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSEarNoseMouthThroatCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSEarNoseMouthThroatCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSEarNoseMouthThroatTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSEarNoseMouthThroatTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSEarNoseMouthThroatTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSCardiovascularCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSCardiovascularCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSCardiovascularCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSCardiovascularCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSCardiovascularTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSCardiovascularTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSCardiovascularTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSCardiovascularTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSRespiratoryCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSRespiratoryCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSRespiratoryCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSRespiratoryCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSRespiratoryTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSRespiratoryTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSRespiratoryTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSRespiratoryTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSPsychiatricCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSPsychiatricCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSPsychiatricCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSPsychiatricCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSPsychiatricTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSPsychiatricTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSPsychiatricTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSPsychiatricTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSGastrointestinalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSGastrointestinalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSGastrointestinalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSGastrointestinalTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSGastrointestinalTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSGastrointestinalTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSGastrointestinalTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSGenitourinaryCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSGenitourinaryCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSGenitourinaryCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSGenitourinaryTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSGenitourinaryTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSGenitourinaryTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSGenitourinaryTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSMusculoskeletalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSMusculoskeletalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSMusculoskeletalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSMusculoskeletalTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSMusculoskeletalTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSMusculoskeletalTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSMusculoskeletalTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSSkinCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSSkinCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSSkinCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSSkinCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSSkinTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSSkinTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSSkinTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSSkinTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSNeurologicCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSNeurologicCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSNeurologicCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSNeurologicCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSNeurologicTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSNeurologicTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSNeurologicTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSNeurologicTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSHematologicLymphaticCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSHematologicLymphaticCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExamOSHematologicLymphaticTotalCountNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExamOSHematologicLymphaticTotalCountNull() {
                this[this.tableNoteEMCodeOptions.ExamOSHematologicLymphaticTotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPMinorOtherProb1Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPMinorOtherProb1Null() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPMinorOtherProb2PlusNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb2PlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPMinorOtherProb2PlusNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPMinorOtherProb2PlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPStableChronicMajor1Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPStableChronicMajor1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPStableChronicMajor1Null() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPStableChronicMajor1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPChronicMajorMildExac1PlusNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorMildExac1PlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPChronicMajorMildExac1PlusNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorMildExac1PlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPAcuteUncomplicated1Null() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPAcuteUncomplicated1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPAcuteUncomplicated1Null() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteUncomplicated1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPNewProblemNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPNewProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPNewProblemNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPNewProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPAcuteIllnessNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPAcuteIllnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPAcuteIllnessNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteIllnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPAcuteComplicatedInjuryNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPAcuteComplicatedInjuryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPAcuteComplicatedInjuryNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteComplicatedInjuryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPChronicMajorSevereExac1PlusNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorSevereExac1PlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPChronicMajorSevereExac1PlusNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPChronicMajorSevereExac1PlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMPPAcuteChronicThreatNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMPPAcuteChronicThreatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMPPAcuteChronicThreatNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMPPAcuteChronicThreatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDLabVenipunctureNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDLabVenipunctureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDLabVenipunctureNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDLabVenipunctureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDNonCardImagingNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDNonCardImagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDNonCardImagingNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDNonCardImagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDPhysTestNoStressNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDPhysTestNoStressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDPhysTestNoStressNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDPhysTestNoStressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDPhysTestYesStressNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDPhysTestYesStressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDPhysTestYesStressNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDPhysTestYesStressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDSkinBiopsiesNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDSkinBiopsiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDSkinBiopsiesNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDSkinBiopsiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDDeepNeedleNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDDeepNeedleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDDeepNeedleNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDDeepNeedleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDDiagEndoNoRiskNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoNoRiskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDDiagEndoNoRiskNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoNoRiskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDDiagEndoYesRiskNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoYesRiskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDDiagEndoYesRiskNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDDiagEndoYesRiskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDCardImagingNoRiskNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDCardImagingNoRiskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDCardImagingNoRiskNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDCardImagingNoRiskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDCardImagingYesRiskNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDCardImagingYesRiskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDCardImagingYesRiskNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDCardImagingYesRiskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDClinicalLabNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDClinicalLabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDClinicalLabNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDClinicalLabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDObtainFluidNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDObtainFluidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDObtainFluidNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDObtainFluidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDCardiacElectroNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDCardiacElectroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDCardiacElectroNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDCardiacElectroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMDDiscopgraphyNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMDDiscopgraphyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMDDiscopgraphyNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMDDiscopgraphyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMDMRCMMMOSMedicationManagementNull() {
                return this.IsNull(this.tableNoteEMCodeOptions.MDMRCMMMOSMedicationManagementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMDMRCMMMOSMedicationManagementNull() {
                this[this.tableNoteEMCodeOptions.MDMRCMMMOSMedicationManagementColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentPsychiatricEvaluationsRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentPsychiatricEvaluationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentPsychiatricEvaluationsRowChangeEvent(CustomDocumentPsychiatricEvaluationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentPsychiatricEvaluationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomPsychiatricEvaluationProblemsRowChangeEvent : global::System.EventArgs {
            
            private CustomPsychiatricEvaluationProblemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomPsychiatricEvaluationProblemsRowChangeEvent(CustomPsychiatricEvaluationProblemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomPsychiatricEvaluationProblemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DocumentDiagnosisCodesRowChangeEvent : global::System.EventArgs {
            
            private DocumentDiagnosisCodesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisCodesRowChangeEvent(DocumentDiagnosisCodesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisCodesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DocumentDiagnosisRowChangeEvent : global::System.EventArgs {
            
            private DocumentDiagnosisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisRowChangeEvent(DocumentDiagnosisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DocumentDiagnosisFactorsRowChangeEvent : global::System.EventArgs {
            
            private DocumentDiagnosisFactorsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisFactorsRowChangeEvent(DocumentDiagnosisFactorsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DocumentDiagnosisFactorsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NoteEMCodeOptionsRowChangeEvent : global::System.EventArgs {
            
            private NoteEMCodeOptionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NoteEMCodeOptionsRowChangeEvent(NoteEMCodeOptionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NoteEMCodeOptionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591