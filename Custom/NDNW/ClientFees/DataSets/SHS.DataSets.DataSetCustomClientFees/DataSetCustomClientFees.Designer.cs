//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetCustomClientFees {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCustomClientFees")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCustomClientFees : global::System.Data.DataSet {
        
        private ClientsDataTable tableClients;
        
        private CustomClientFeesDataTable tableCustomClientFees;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetCustomClientFees() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetCustomClientFees(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Clients"] != null)) {
                    base.Tables.Add(new ClientsDataTable(ds.Tables["Clients"]));
                }
                if ((ds.Tables["CustomClientFees"] != null)) {
                    base.Tables.Add(new CustomClientFeesDataTable(ds.Tables["CustomClientFees"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientsDataTable Clients {
            get {
                return this.tableClients;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomClientFeesDataTable CustomClientFees {
            get {
                return this.tableCustomClientFees;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetCustomClientFees cln = ((DataSetCustomClientFees)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Clients"] != null)) {
                    base.Tables.Add(new ClientsDataTable(ds.Tables["Clients"]));
                }
                if ((ds.Tables["CustomClientFees"] != null)) {
                    base.Tables.Add(new CustomClientFeesDataTable(ds.Tables["CustomClientFees"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableClients = ((ClientsDataTable)(base.Tables["Clients"]));
            if ((initTable == true)) {
                if ((this.tableClients != null)) {
                    this.tableClients.InitVars();
                }
            }
            this.tableCustomClientFees = ((CustomClientFeesDataTable)(base.Tables["CustomClientFees"]));
            if ((initTable == true)) {
                if ((this.tableCustomClientFees != null)) {
                    this.tableCustomClientFees.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetCustomClientFees";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCustomClientFees.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableClients = new ClientsDataTable();
            base.Tables.Add(this.tableClients);
            this.tableCustomClientFees = new CustomClientFeesDataTable();
            base.Tables.Add(this.tableCustomClientFees);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeClients() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomClientFees() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCustomClientFees ds = new DataSetCustomClientFees();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ClientsRowChangeEventHandler(object sender, ClientsRowChangeEvent e);
        
        public delegate void CustomClientFeesRowChangeEventHandler(object sender, CustomClientFeesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientsDataTable : global::System.Data.TypedTableBase<ClientsRow> {
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnExternalClientId;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnMRN;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleName;
            
            private global::System.Data.DataColumn columnPrefix;
            
            private global::System.Data.DataColumn columnSuffix;
            
            private global::System.Data.DataColumn columnSSN;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnPrimaryClinicianId;
            
            private global::System.Data.DataColumn columnCountyOfResidence;
            
            private global::System.Data.DataColumn columnCountyOfTreatment;
            
            private global::System.Data.DataColumn columnCorrectionStatus;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnLivingArrangement;
            
            private global::System.Data.DataColumn columnNumberOfBeds;
            
            private global::System.Data.DataColumn columnMinimumWage;
            
            private global::System.Data.DataColumn columnFinanciallyResponsible;
            
            private global::System.Data.DataColumn columnAnnualHouseholdIncome;
            
            private global::System.Data.DataColumn columnNumberOfDependents;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnEmploymentStatus;
            
            private global::System.Data.DataColumn columnEmploymentInformation;
            
            private global::System.Data.DataColumn columnMilitaryStatus;
            
            private global::System.Data.DataColumn columnEducationalStatus;
            
            private global::System.Data.DataColumn columnDoesNotSpeakEnglish;
            
            private global::System.Data.DataColumn columnPrimaryLanguage;
            
            private global::System.Data.DataColumn columnCurrentEpisodeNumber;
            
            private global::System.Data.DataColumn columnAssignedAdminStaffId;
            
            private global::System.Data.DataColumn columnInpatientCaseManager;
            
            private global::System.Data.DataColumn columnInformationComplete;
            
            private global::System.Data.DataColumn columnPrimaryProgramId;
            
            private global::System.Data.DataColumn columnLastNameSoundex;
            
            private global::System.Data.DataColumn columnFirstNameSoundex;
            
            private global::System.Data.DataColumn columnCurrentBalance;
            
            private global::System.Data.DataColumn columnCareManagementId;
            
            private global::System.Data.DataColumn columnHispanicOrigin;
            
            private global::System.Data.DataColumn columnDeceasedOn;
            
            private global::System.Data.DataColumn columnLastStatementDate;
            
            private global::System.Data.DataColumn columnLastPaymentId;
            
            private global::System.Data.DataColumn columnLastClientStatementId;
            
            private global::System.Data.DataColumn columnDoNotSendStatement;
            
            private global::System.Data.DataColumn columnDoNotSendStatementReason;
            
            private global::System.Data.DataColumn columnAccountingNotes;
            
            private global::System.Data.DataColumn columnMasterRecord;
            
            private global::System.Data.DataColumn columnProviderPrimaryClinicianId;
            
            private global::System.Data.DataColumn columnRowIdentifier;
            
            private global::System.Data.DataColumn columnExternalReferenceId;
            
            private global::System.Data.DataColumn columnDoNotOverwritePlan;
            
            private global::System.Data.DataColumn columnDisposition;
            
            private global::System.Data.DataColumn columnNoKnownAllergies;
            
            private global::System.Data.DataColumn columnReminderPreference;
            
            private global::System.Data.DataColumn columnMobilePhoneProvider;
            
            private global::System.Data.DataColumn columnSchedulingPreferenceMonday;
            
            private global::System.Data.DataColumn columnSchedulingPreferenceTuesday;
            
            private global::System.Data.DataColumn columnSchedulingPreferenceWednesday;
            
            private global::System.Data.DataColumn columnSchedulingPreferenceThursday;
            
            private global::System.Data.DataColumn columnSchedulingPreferenceFriday;
            
            private global::System.Data.DataColumn columnGeographicLocation;
            
            private global::System.Data.DataColumn columnSchedulingComment;
            
            private global::System.Data.DataColumn columnCauseofDeath;
            
            private global::System.Data.DataColumn columnFosterCareLicence;
            
            private global::System.Data.DataColumn columnPrimaryPhysicianId;
            
            private global::System.Data.DataColumn columnAllergiesLastReviewedBy;
            
            private global::System.Data.DataColumn columnAllergiesLastReviewedDate;
            
            private global::System.Data.DataColumn columnAllergiesReviewStatus;
            
            private global::System.Data.DataColumn columnHasNoMedications;
            
            private global::System.Data.DataColumn columnUserStaffId;
            
            private global::System.Data.DataColumn columnProfessionalSuffix;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientsDataTable() {
                this.TableName = "Clients";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClientsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExternalClientIdColumn {
                get {
                    return this.columnExternalClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MRNColumn {
                get {
                    return this.columnMRN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiddleNameColumn {
                get {
                    return this.columnMiddleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrefixColumn {
                get {
                    return this.columnPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuffixColumn {
                get {
                    return this.columnSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SSNColumn {
                get {
                    return this.columnSSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryClinicianIdColumn {
                get {
                    return this.columnPrimaryClinicianId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyOfResidenceColumn {
                get {
                    return this.columnCountyOfResidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyOfTreatmentColumn {
                get {
                    return this.columnCountyOfTreatment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CorrectionStatusColumn {
                get {
                    return this.columnCorrectionStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LivingArrangementColumn {
                get {
                    return this.columnLivingArrangement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfBedsColumn {
                get {
                    return this.columnNumberOfBeds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumWageColumn {
                get {
                    return this.columnMinimumWage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinanciallyResponsibleColumn {
                get {
                    return this.columnFinanciallyResponsible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnualHouseholdIncomeColumn {
                get {
                    return this.columnAnnualHouseholdIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfDependentsColumn {
                get {
                    return this.columnNumberOfDependents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmploymentStatusColumn {
                get {
                    return this.columnEmploymentStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmploymentInformationColumn {
                get {
                    return this.columnEmploymentInformation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MilitaryStatusColumn {
                get {
                    return this.columnMilitaryStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducationalStatusColumn {
                get {
                    return this.columnEducationalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoesNotSpeakEnglishColumn {
                get {
                    return this.columnDoesNotSpeakEnglish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryLanguageColumn {
                get {
                    return this.columnPrimaryLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentEpisodeNumberColumn {
                get {
                    return this.columnCurrentEpisodeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignedAdminStaffIdColumn {
                get {
                    return this.columnAssignedAdminStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpatientCaseManagerColumn {
                get {
                    return this.columnInpatientCaseManager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InformationCompleteColumn {
                get {
                    return this.columnInformationComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryProgramIdColumn {
                get {
                    return this.columnPrimaryProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameSoundexColumn {
                get {
                    return this.columnLastNameSoundex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameSoundexColumn {
                get {
                    return this.columnFirstNameSoundex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentBalanceColumn {
                get {
                    return this.columnCurrentBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CareManagementIdColumn {
                get {
                    return this.columnCareManagementId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HispanicOriginColumn {
                get {
                    return this.columnHispanicOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeceasedOnColumn {
                get {
                    return this.columnDeceasedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastStatementDateColumn {
                get {
                    return this.columnLastStatementDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPaymentIdColumn {
                get {
                    return this.columnLastPaymentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastClientStatementIdColumn {
                get {
                    return this.columnLastClientStatementId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoNotSendStatementColumn {
                get {
                    return this.columnDoNotSendStatement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoNotSendStatementReasonColumn {
                get {
                    return this.columnDoNotSendStatementReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountingNotesColumn {
                get {
                    return this.columnAccountingNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterRecordColumn {
                get {
                    return this.columnMasterRecord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProviderPrimaryClinicianIdColumn {
                get {
                    return this.columnProviderPrimaryClinicianId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowIdentifierColumn {
                get {
                    return this.columnRowIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExternalReferenceIdColumn {
                get {
                    return this.columnExternalReferenceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DoNotOverwritePlanColumn {
                get {
                    return this.columnDoNotOverwritePlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DispositionColumn {
                get {
                    return this.columnDisposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoKnownAllergiesColumn {
                get {
                    return this.columnNoKnownAllergies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReminderPreferenceColumn {
                get {
                    return this.columnReminderPreference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobilePhoneProviderColumn {
                get {
                    return this.columnMobilePhoneProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchedulingPreferenceMondayColumn {
                get {
                    return this.columnSchedulingPreferenceMonday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchedulingPreferenceTuesdayColumn {
                get {
                    return this.columnSchedulingPreferenceTuesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchedulingPreferenceWednesdayColumn {
                get {
                    return this.columnSchedulingPreferenceWednesday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchedulingPreferenceThursdayColumn {
                get {
                    return this.columnSchedulingPreferenceThursday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchedulingPreferenceFridayColumn {
                get {
                    return this.columnSchedulingPreferenceFriday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GeographicLocationColumn {
                get {
                    return this.columnGeographicLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchedulingCommentColumn {
                get {
                    return this.columnSchedulingComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CauseofDeathColumn {
                get {
                    return this.columnCauseofDeath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FosterCareLicenceColumn {
                get {
                    return this.columnFosterCareLicence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryPhysicianIdColumn {
                get {
                    return this.columnPrimaryPhysicianId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllergiesLastReviewedByColumn {
                get {
                    return this.columnAllergiesLastReviewedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllergiesLastReviewedDateColumn {
                get {
                    return this.columnAllergiesLastReviewedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllergiesReviewStatusColumn {
                get {
                    return this.columnAllergiesReviewStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HasNoMedicationsColumn {
                get {
                    return this.columnHasNoMedications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserStaffIdColumn {
                get {
                    return this.columnUserStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProfessionalSuffixColumn {
                get {
                    return this.columnProfessionalSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientsRow this[int index] {
                get {
                    return ((ClientsRow)(this.Rows[index]));
                }
            }
            
            public event ClientsRowChangeEventHandler ClientsRowChanging;
            
            public event ClientsRowChangeEventHandler ClientsRowChanged;
            
            public event ClientsRowChangeEventHandler ClientsRowDeleting;
            
            public event ClientsRowChangeEventHandler ClientsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClientsRow(ClientsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientsRow AddClientsRow(
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        System.DateTime DeletedDate, 
                        string DeletedBy, 
                        string ExternalClientId, 
                        string Active, 
                        string MRN, 
                        string LastName, 
                        string FirstName, 
                        string MiddleName, 
                        string Prefix, 
                        string Suffix, 
                        string SSN, 
                        string Sex, 
                        System.DateTime DOB, 
                        int PrimaryClinicianId, 
                        string CountyOfResidence, 
                        string CountyOfTreatment, 
                        int CorrectionStatus, 
                        string Email, 
                        string Comment, 
                        int LivingArrangement, 
                        int NumberOfBeds, 
                        string MinimumWage, 
                        string FinanciallyResponsible, 
                        decimal AnnualHouseholdIncome, 
                        int NumberOfDependents, 
                        int MaritalStatus, 
                        int EmploymentStatus, 
                        string EmploymentInformation, 
                        int MilitaryStatus, 
                        int EducationalStatus, 
                        string DoesNotSpeakEnglish, 
                        int PrimaryLanguage, 
                        int CurrentEpisodeNumber, 
                        int AssignedAdminStaffId, 
                        int InpatientCaseManager, 
                        string InformationComplete, 
                        int PrimaryProgramId, 
                        string LastNameSoundex, 
                        string FirstNameSoundex, 
                        decimal CurrentBalance, 
                        int CareManagementId, 
                        int HispanicOrigin, 
                        System.DateTime DeceasedOn, 
                        System.DateTime LastStatementDate, 
                        int LastPaymentId, 
                        int LastClientStatementId, 
                        string DoNotSendStatement, 
                        int DoNotSendStatementReason, 
                        string AccountingNotes, 
                        string MasterRecord, 
                        int ProviderPrimaryClinicianId, 
                        System.Guid RowIdentifier, 
                        string ExternalReferenceId, 
                        string DoNotOverwritePlan, 
                        int Disposition, 
                        string NoKnownAllergies, 
                        int ReminderPreference, 
                        int MobilePhoneProvider, 
                        string SchedulingPreferenceMonday, 
                        string SchedulingPreferenceTuesday, 
                        string SchedulingPreferenceWednesday, 
                        string SchedulingPreferenceThursday, 
                        string SchedulingPreferenceFriday, 
                        string GeographicLocation, 
                        string SchedulingComment, 
                        int CauseofDeath, 
                        string FosterCareLicence, 
                        int PrimaryPhysicianId, 
                        string AllergiesLastReviewedBy, 
                        System.DateTime AllergiesLastReviewedDate, 
                        int AllergiesReviewStatus, 
                        string HasNoMedications, 
                        int UserStaffId, 
                        string ProfessionalSuffix) {
                ClientsRow rowClientsRow = ((ClientsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedDate,
                        DeletedBy,
                        ExternalClientId,
                        Active,
                        MRN,
                        LastName,
                        FirstName,
                        MiddleName,
                        Prefix,
                        Suffix,
                        SSN,
                        Sex,
                        DOB,
                        PrimaryClinicianId,
                        CountyOfResidence,
                        CountyOfTreatment,
                        CorrectionStatus,
                        Email,
                        Comment,
                        LivingArrangement,
                        NumberOfBeds,
                        MinimumWage,
                        FinanciallyResponsible,
                        AnnualHouseholdIncome,
                        NumberOfDependents,
                        MaritalStatus,
                        EmploymentStatus,
                        EmploymentInformation,
                        MilitaryStatus,
                        EducationalStatus,
                        DoesNotSpeakEnglish,
                        PrimaryLanguage,
                        CurrentEpisodeNumber,
                        AssignedAdminStaffId,
                        InpatientCaseManager,
                        InformationComplete,
                        PrimaryProgramId,
                        LastNameSoundex,
                        FirstNameSoundex,
                        CurrentBalance,
                        CareManagementId,
                        HispanicOrigin,
                        DeceasedOn,
                        LastStatementDate,
                        LastPaymentId,
                        LastClientStatementId,
                        DoNotSendStatement,
                        DoNotSendStatementReason,
                        AccountingNotes,
                        MasterRecord,
                        ProviderPrimaryClinicianId,
                        RowIdentifier,
                        ExternalReferenceId,
                        DoNotOverwritePlan,
                        Disposition,
                        NoKnownAllergies,
                        ReminderPreference,
                        MobilePhoneProvider,
                        SchedulingPreferenceMonday,
                        SchedulingPreferenceTuesday,
                        SchedulingPreferenceWednesday,
                        SchedulingPreferenceThursday,
                        SchedulingPreferenceFriday,
                        GeographicLocation,
                        SchedulingComment,
                        CauseofDeath,
                        FosterCareLicence,
                        PrimaryPhysicianId,
                        AllergiesLastReviewedBy,
                        AllergiesLastReviewedDate,
                        AllergiesReviewStatus,
                        HasNoMedications,
                        UserStaffId,
                        ProfessionalSuffix};
                rowClientsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientsRow);
                return rowClientsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientsRow FindByClientId(int ClientId) {
                return ((ClientsRow)(this.Rows.Find(new object[] {
                            ClientId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ClientsDataTable cln = ((ClientsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClientId = base.Columns["ClientId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnExternalClientId = base.Columns["ExternalClientId"];
                this.columnActive = base.Columns["Active"];
                this.columnMRN = base.Columns["MRN"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleName = base.Columns["MiddleName"];
                this.columnPrefix = base.Columns["Prefix"];
                this.columnSuffix = base.Columns["Suffix"];
                this.columnSSN = base.Columns["SSN"];
                this.columnSex = base.Columns["Sex"];
                this.columnDOB = base.Columns["DOB"];
                this.columnPrimaryClinicianId = base.Columns["PrimaryClinicianId"];
                this.columnCountyOfResidence = base.Columns["CountyOfResidence"];
                this.columnCountyOfTreatment = base.Columns["CountyOfTreatment"];
                this.columnCorrectionStatus = base.Columns["CorrectionStatus"];
                this.columnEmail = base.Columns["Email"];
                this.columnComment = base.Columns["Comment"];
                this.columnLivingArrangement = base.Columns["LivingArrangement"];
                this.columnNumberOfBeds = base.Columns["NumberOfBeds"];
                this.columnMinimumWage = base.Columns["MinimumWage"];
                this.columnFinanciallyResponsible = base.Columns["FinanciallyResponsible"];
                this.columnAnnualHouseholdIncome = base.Columns["AnnualHouseholdIncome"];
                this.columnNumberOfDependents = base.Columns["NumberOfDependents"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnEmploymentStatus = base.Columns["EmploymentStatus"];
                this.columnEmploymentInformation = base.Columns["EmploymentInformation"];
                this.columnMilitaryStatus = base.Columns["MilitaryStatus"];
                this.columnEducationalStatus = base.Columns["EducationalStatus"];
                this.columnDoesNotSpeakEnglish = base.Columns["DoesNotSpeakEnglish"];
                this.columnPrimaryLanguage = base.Columns["PrimaryLanguage"];
                this.columnCurrentEpisodeNumber = base.Columns["CurrentEpisodeNumber"];
                this.columnAssignedAdminStaffId = base.Columns["AssignedAdminStaffId"];
                this.columnInpatientCaseManager = base.Columns["InpatientCaseManager"];
                this.columnInformationComplete = base.Columns["InformationComplete"];
                this.columnPrimaryProgramId = base.Columns["PrimaryProgramId"];
                this.columnLastNameSoundex = base.Columns["LastNameSoundex"];
                this.columnFirstNameSoundex = base.Columns["FirstNameSoundex"];
                this.columnCurrentBalance = base.Columns["CurrentBalance"];
                this.columnCareManagementId = base.Columns["CareManagementId"];
                this.columnHispanicOrigin = base.Columns["HispanicOrigin"];
                this.columnDeceasedOn = base.Columns["DeceasedOn"];
                this.columnLastStatementDate = base.Columns["LastStatementDate"];
                this.columnLastPaymentId = base.Columns["LastPaymentId"];
                this.columnLastClientStatementId = base.Columns["LastClientStatementId"];
                this.columnDoNotSendStatement = base.Columns["DoNotSendStatement"];
                this.columnDoNotSendStatementReason = base.Columns["DoNotSendStatementReason"];
                this.columnAccountingNotes = base.Columns["AccountingNotes"];
                this.columnMasterRecord = base.Columns["MasterRecord"];
                this.columnProviderPrimaryClinicianId = base.Columns["ProviderPrimaryClinicianId"];
                this.columnRowIdentifier = base.Columns["RowIdentifier"];
                this.columnExternalReferenceId = base.Columns["ExternalReferenceId"];
                this.columnDoNotOverwritePlan = base.Columns["DoNotOverwritePlan"];
                this.columnDisposition = base.Columns["Disposition"];
                this.columnNoKnownAllergies = base.Columns["NoKnownAllergies"];
                this.columnReminderPreference = base.Columns["ReminderPreference"];
                this.columnMobilePhoneProvider = base.Columns["MobilePhoneProvider"];
                this.columnSchedulingPreferenceMonday = base.Columns["SchedulingPreferenceMonday"];
                this.columnSchedulingPreferenceTuesday = base.Columns["SchedulingPreferenceTuesday"];
                this.columnSchedulingPreferenceWednesday = base.Columns["SchedulingPreferenceWednesday"];
                this.columnSchedulingPreferenceThursday = base.Columns["SchedulingPreferenceThursday"];
                this.columnSchedulingPreferenceFriday = base.Columns["SchedulingPreferenceFriday"];
                this.columnGeographicLocation = base.Columns["GeographicLocation"];
                this.columnSchedulingComment = base.Columns["SchedulingComment"];
                this.columnCauseofDeath = base.Columns["CauseofDeath"];
                this.columnFosterCareLicence = base.Columns["FosterCareLicence"];
                this.columnPrimaryPhysicianId = base.Columns["PrimaryPhysicianId"];
                this.columnAllergiesLastReviewedBy = base.Columns["AllergiesLastReviewedBy"];
                this.columnAllergiesLastReviewedDate = base.Columns["AllergiesLastReviewedDate"];
                this.columnAllergiesReviewStatus = base.Columns["AllergiesReviewStatus"];
                this.columnHasNoMedications = base.Columns["HasNoMedications"];
                this.columnUserStaffId = base.Columns["UserStaffId"];
                this.columnProfessionalSuffix = base.Columns["ProfessionalSuffix"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnExternalClientId = new global::System.Data.DataColumn("ExternalClientId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExternalClientId);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnMRN = new global::System.Data.DataColumn("MRN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRN);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleName = new global::System.Data.DataColumn("MiddleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleName);
                this.columnPrefix = new global::System.Data.DataColumn("Prefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrefix);
                this.columnSuffix = new global::System.Data.DataColumn("Suffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuffix);
                this.columnSSN = new global::System.Data.DataColumn("SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSN);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnPrimaryClinicianId = new global::System.Data.DataColumn("PrimaryClinicianId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryClinicianId);
                this.columnCountyOfResidence = new global::System.Data.DataColumn("CountyOfResidence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyOfResidence);
                this.columnCountyOfTreatment = new global::System.Data.DataColumn("CountyOfTreatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyOfTreatment);
                this.columnCorrectionStatus = new global::System.Data.DataColumn("CorrectionStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorrectionStatus);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnLivingArrangement = new global::System.Data.DataColumn("LivingArrangement", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLivingArrangement);
                this.columnNumberOfBeds = new global::System.Data.DataColumn("NumberOfBeds", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfBeds);
                this.columnMinimumWage = new global::System.Data.DataColumn("MinimumWage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumWage);
                this.columnFinanciallyResponsible = new global::System.Data.DataColumn("FinanciallyResponsible", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinanciallyResponsible);
                this.columnAnnualHouseholdIncome = new global::System.Data.DataColumn("AnnualHouseholdIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnualHouseholdIncome);
                this.columnNumberOfDependents = new global::System.Data.DataColumn("NumberOfDependents", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfDependents);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnEmploymentStatus = new global::System.Data.DataColumn("EmploymentStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmploymentStatus);
                this.columnEmploymentInformation = new global::System.Data.DataColumn("EmploymentInformation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmploymentInformation);
                this.columnMilitaryStatus = new global::System.Data.DataColumn("MilitaryStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMilitaryStatus);
                this.columnEducationalStatus = new global::System.Data.DataColumn("EducationalStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducationalStatus);
                this.columnDoesNotSpeakEnglish = new global::System.Data.DataColumn("DoesNotSpeakEnglish", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoesNotSpeakEnglish);
                this.columnPrimaryLanguage = new global::System.Data.DataColumn("PrimaryLanguage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryLanguage);
                this.columnCurrentEpisodeNumber = new global::System.Data.DataColumn("CurrentEpisodeNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentEpisodeNumber);
                this.columnAssignedAdminStaffId = new global::System.Data.DataColumn("AssignedAdminStaffId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignedAdminStaffId);
                this.columnInpatientCaseManager = new global::System.Data.DataColumn("InpatientCaseManager", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpatientCaseManager);
                this.columnInformationComplete = new global::System.Data.DataColumn("InformationComplete", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformationComplete);
                this.columnPrimaryProgramId = new global::System.Data.DataColumn("PrimaryProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryProgramId);
                this.columnLastNameSoundex = new global::System.Data.DataColumn("LastNameSoundex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastNameSoundex);
                this.columnFirstNameSoundex = new global::System.Data.DataColumn("FirstNameSoundex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstNameSoundex);
                this.columnCurrentBalance = new global::System.Data.DataColumn("CurrentBalance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentBalance);
                this.columnCareManagementId = new global::System.Data.DataColumn("CareManagementId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCareManagementId);
                this.columnHispanicOrigin = new global::System.Data.DataColumn("HispanicOrigin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHispanicOrigin);
                this.columnDeceasedOn = new global::System.Data.DataColumn("DeceasedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeceasedOn);
                this.columnLastStatementDate = new global::System.Data.DataColumn("LastStatementDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastStatementDate);
                this.columnLastPaymentId = new global::System.Data.DataColumn("LastPaymentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPaymentId);
                this.columnLastClientStatementId = new global::System.Data.DataColumn("LastClientStatementId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastClientStatementId);
                this.columnDoNotSendStatement = new global::System.Data.DataColumn("DoNotSendStatement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoNotSendStatement);
                this.columnDoNotSendStatementReason = new global::System.Data.DataColumn("DoNotSendStatementReason", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoNotSendStatementReason);
                this.columnAccountingNotes = new global::System.Data.DataColumn("AccountingNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountingNotes);
                this.columnMasterRecord = new global::System.Data.DataColumn("MasterRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterRecord);
                this.columnProviderPrimaryClinicianId = new global::System.Data.DataColumn("ProviderPrimaryClinicianId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderPrimaryClinicianId);
                this.columnRowIdentifier = new global::System.Data.DataColumn("RowIdentifier", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowIdentifier);
                this.columnExternalReferenceId = new global::System.Data.DataColumn("ExternalReferenceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExternalReferenceId);
                this.columnDoNotOverwritePlan = new global::System.Data.DataColumn("DoNotOverwritePlan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoNotOverwritePlan);
                this.columnDisposition = new global::System.Data.DataColumn("Disposition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisposition);
                this.columnNoKnownAllergies = new global::System.Data.DataColumn("NoKnownAllergies", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoKnownAllergies);
                this.columnReminderPreference = new global::System.Data.DataColumn("ReminderPreference", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReminderPreference);
                this.columnMobilePhoneProvider = new global::System.Data.DataColumn("MobilePhoneProvider", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobilePhoneProvider);
                this.columnSchedulingPreferenceMonday = new global::System.Data.DataColumn("SchedulingPreferenceMonday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchedulingPreferenceMonday);
                this.columnSchedulingPreferenceTuesday = new global::System.Data.DataColumn("SchedulingPreferenceTuesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchedulingPreferenceTuesday);
                this.columnSchedulingPreferenceWednesday = new global::System.Data.DataColumn("SchedulingPreferenceWednesday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchedulingPreferenceWednesday);
                this.columnSchedulingPreferenceThursday = new global::System.Data.DataColumn("SchedulingPreferenceThursday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchedulingPreferenceThursday);
                this.columnSchedulingPreferenceFriday = new global::System.Data.DataColumn("SchedulingPreferenceFriday", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchedulingPreferenceFriday);
                this.columnGeographicLocation = new global::System.Data.DataColumn("GeographicLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeographicLocation);
                this.columnSchedulingComment = new global::System.Data.DataColumn("SchedulingComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchedulingComment);
                this.columnCauseofDeath = new global::System.Data.DataColumn("CauseofDeath", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCauseofDeath);
                this.columnFosterCareLicence = new global::System.Data.DataColumn("FosterCareLicence", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFosterCareLicence);
                this.columnPrimaryPhysicianId = new global::System.Data.DataColumn("PrimaryPhysicianId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryPhysicianId);
                this.columnAllergiesLastReviewedBy = new global::System.Data.DataColumn("AllergiesLastReviewedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllergiesLastReviewedBy);
                this.columnAllergiesLastReviewedDate = new global::System.Data.DataColumn("AllergiesLastReviewedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllergiesLastReviewedDate);
                this.columnAllergiesReviewStatus = new global::System.Data.DataColumn("AllergiesReviewStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllergiesReviewStatus);
                this.columnHasNoMedications = new global::System.Data.DataColumn("HasNoMedications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasNoMedications);
                this.columnUserStaffId = new global::System.Data.DataColumn("UserStaffId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserStaffId);
                this.columnProfessionalSuffix = new global::System.Data.DataColumn("ProfessionalSuffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfessionalSuffix);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnClientId}, true));
                this.columnClientId.AutoIncrement = true;
                this.columnClientId.AutoIncrementSeed = -1;
                this.columnClientId.AutoIncrementStep = -1;
                this.columnClientId.AllowDBNull = false;
                this.columnClientId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnExternalClientId.MaxLength = 15;
                this.columnActive.AllowDBNull = false;
                this.columnActive.MaxLength = 1;
                this.columnMRN.MaxLength = 15;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 50;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 30;
                this.columnMiddleName.MaxLength = 30;
                this.columnPrefix.MaxLength = 10;
                this.columnSuffix.MaxLength = 10;
                this.columnSSN.MaxLength = 25;
                this.columnSex.MaxLength = 1;
                this.columnCountyOfResidence.MaxLength = 5;
                this.columnCountyOfTreatment.MaxLength = 5;
                this.columnEmail.MaxLength = 50;
                this.columnComment.MaxLength = 2147483647;
                this.columnMinimumWage.MaxLength = 3;
                this.columnFinanciallyResponsible.AllowDBNull = false;
                this.columnFinanciallyResponsible.MaxLength = 1;
                this.columnEmploymentInformation.MaxLength = 100;
                this.columnDoesNotSpeakEnglish.AllowDBNull = false;
                this.columnDoesNotSpeakEnglish.MaxLength = 1;
                this.columnInformationComplete.MaxLength = 1;
                this.columnLastNameSoundex.MaxLength = 4;
                this.columnFirstNameSoundex.MaxLength = 4;
                this.columnDoNotSendStatement.MaxLength = 1;
                this.columnAccountingNotes.MaxLength = 2147483647;
                this.columnMasterRecord.MaxLength = 1;
                this.columnRowIdentifier.AllowDBNull = false;
                this.columnExternalReferenceId.MaxLength = 30;
                this.columnDoNotOverwritePlan.MaxLength = 1;
                this.columnNoKnownAllergies.MaxLength = 1;
                this.columnSchedulingPreferenceMonday.MaxLength = 1;
                this.columnSchedulingPreferenceTuesday.MaxLength = 1;
                this.columnSchedulingPreferenceWednesday.MaxLength = 1;
                this.columnSchedulingPreferenceThursday.MaxLength = 1;
                this.columnSchedulingPreferenceFriday.MaxLength = 1;
                this.columnGeographicLocation.MaxLength = 50;
                this.columnSchedulingComment.MaxLength = 2147483647;
                this.columnFosterCareLicence.MaxLength = 50;
                this.columnAllergiesLastReviewedBy.MaxLength = 500;
                this.columnHasNoMedications.MaxLength = 1;
                this.columnProfessionalSuffix.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientsRow NewClientsRow() {
                return ((ClientsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ClientsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientsRowChanged != null)) {
                    this.ClientsRowChanged(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientsRowChanging != null)) {
                    this.ClientsRowChanging(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientsRowDeleted != null)) {
                    this.ClientsRowDeleted(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientsRowDeleting != null)) {
                    this.ClientsRowDeleting(this, new ClientsRowChangeEvent(((ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClientsRow(ClientsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomClientFees ds = new DataSetCustomClientFees();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomClientFeesDataTable : global::System.Data.TypedTableBase<CustomClientFeesRow> {
            
            private global::System.Data.DataColumn columnClientFeeId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnStandardRatePercentage;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnLocations;
            
            private global::System.Data.DataColumn columnPrograms;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnStandardRatePercentage1;
            
            private global::System.Data.DataColumn columnProgramsText;
            
            private global::System.Data.DataColumn columnLocationsText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomClientFeesDataTable() {
                this.TableName = "CustomClientFees";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomClientFeesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomClientFeesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientFeeIdColumn {
                get {
                    return this.columnClientFeeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardRatePercentageColumn {
                get {
                    return this.columnStandardRatePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationsColumn {
                get {
                    return this.columnLocations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramsColumn {
                get {
                    return this.columnPrograms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardRatePercentage1Column {
                get {
                    return this.columnStandardRatePercentage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramsTextColumn {
                get {
                    return this.columnProgramsText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationsTextColumn {
                get {
                    return this.columnLocationsText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomClientFeesRow this[int index] {
                get {
                    return ((CustomClientFeesRow)(this.Rows[index]));
                }
            }
            
            public event CustomClientFeesRowChangeEventHandler CustomClientFeesRowChanging;
            
            public event CustomClientFeesRowChangeEventHandler CustomClientFeesRowChanged;
            
            public event CustomClientFeesRowChangeEventHandler CustomClientFeesRowDeleting;
            
            public event CustomClientFeesRowChangeEventHandler CustomClientFeesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomClientFeesRow(CustomClientFeesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomClientFeesRow AddCustomClientFeesRow(
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int ClientId, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        decimal StandardRatePercentage, 
                        decimal Rate, 
                        string Locations, 
                        string Programs, 
                        string Comment, 
                        string StandardRatePercentage1, 
                        string ProgramsText, 
                        string LocationsText) {
                CustomClientFeesRow rowCustomClientFeesRow = ((CustomClientFeesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        ClientId,
                        StartDate,
                        EndDate,
                        StandardRatePercentage,
                        Rate,
                        Locations,
                        Programs,
                        Comment,
                        StandardRatePercentage1,
                        ProgramsText,
                        LocationsText};
                rowCustomClientFeesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomClientFeesRow);
                return rowCustomClientFeesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomClientFeesRow FindByClientFeeId(int ClientFeeId) {
                return ((CustomClientFeesRow)(this.Rows.Find(new object[] {
                            ClientFeeId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomClientFeesDataTable cln = ((CustomClientFeesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomClientFeesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClientFeeId = base.Columns["ClientFeeId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnClientId = base.Columns["ClientId"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnStandardRatePercentage = base.Columns["StandardRatePercentage"];
                this.columnRate = base.Columns["Rate"];
                this.columnLocations = base.Columns["Locations"];
                this.columnPrograms = base.Columns["Programs"];
                this.columnComment = base.Columns["Comment"];
                this.columnStandardRatePercentage1 = base.Columns["StandardRatePercentage1"];
                this.columnProgramsText = base.Columns["ProgramsText"];
                this.columnLocationsText = base.Columns["LocationsText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClientFeeId = new global::System.Data.DataColumn("ClientFeeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientFeeId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnStandardRatePercentage = new global::System.Data.DataColumn("StandardRatePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardRatePercentage);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnLocations = new global::System.Data.DataColumn("Locations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocations);
                this.columnPrograms = new global::System.Data.DataColumn("Programs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrograms);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnStandardRatePercentage1 = new global::System.Data.DataColumn("StandardRatePercentage1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardRatePercentage1);
                this.columnProgramsText = new global::System.Data.DataColumn("ProgramsText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramsText);
                this.columnLocationsText = new global::System.Data.DataColumn("LocationsText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationsText);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnClientFeeId}, true));
                this.columnClientFeeId.AutoIncrement = true;
                this.columnClientFeeId.AutoIncrementSeed = -1;
                this.columnClientFeeId.AutoIncrementStep = -1;
                this.columnClientFeeId.AllowDBNull = false;
                this.columnClientFeeId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnLocations.MaxLength = 2147483647;
                this.columnPrograms.MaxLength = 2147483647;
                this.columnComment.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomClientFeesRow NewCustomClientFeesRow() {
                return ((CustomClientFeesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomClientFeesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomClientFeesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomClientFeesRowChanged != null)) {
                    this.CustomClientFeesRowChanged(this, new CustomClientFeesRowChangeEvent(((CustomClientFeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomClientFeesRowChanging != null)) {
                    this.CustomClientFeesRowChanging(this, new CustomClientFeesRowChangeEvent(((CustomClientFeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomClientFeesRowDeleted != null)) {
                    this.CustomClientFeesRowDeleted(this, new CustomClientFeesRowChangeEvent(((CustomClientFeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomClientFeesRowDeleting != null)) {
                    this.CustomClientFeesRowDeleting(this, new CustomClientFeesRowChangeEvent(((CustomClientFeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomClientFeesRow(CustomClientFeesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCustomClientFees ds = new DataSetCustomClientFees();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomClientFeesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClientsRow : global::System.Data.DataRow {
            
            private ClientsDataTable tableClients;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClients = ((ClientsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientId {
                get {
                    return ((int)(this[this.tableClients.ClientIdColumn]));
                }
                set {
                    this[this.tableClients.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableClients.CreatedByColumn]));
                }
                set {
                    this[this.tableClients.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClients.CreatedDateColumn]));
                }
                set {
                    this[this.tableClients.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableClients.ModifiedByColumn]));
                }
                set {
                    this[this.tableClients.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClients.ModifiedDateColumn]));
                }
                set {
                    this[this.tableClients.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableClients.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClients.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableClients.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExternalClientId {
                get {
                    try {
                        return ((string)(this[this.tableClients.ExternalClientIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExternalClientId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.ExternalClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Active {
                get {
                    return ((string)(this[this.tableClients.ActiveColumn]));
                }
                set {
                    this[this.tableClients.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MRN {
                get {
                    try {
                        return ((string)(this[this.tableClients.MRNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRN\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.MRNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    return ((string)(this[this.tableClients.LastNameColumn]));
                }
                set {
                    this[this.tableClients.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    return ((string)(this[this.tableClients.FirstNameColumn]));
                }
                set {
                    this[this.tableClients.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MiddleName {
                get {
                    try {
                        return ((string)(this[this.tableClients.MiddleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiddleName\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.MiddleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prefix {
                get {
                    try {
                        return ((string)(this[this.tableClients.PrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prefix\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.PrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Suffix {
                get {
                    try {
                        return ((string)(this[this.tableClients.SuffixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Suffix\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SSN {
                get {
                    try {
                        return ((string)(this[this.tableClients.SSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SSN\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tableClients.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClients.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrimaryClinicianId {
                get {
                    try {
                        return ((int)(this[this.tableClients.PrimaryClinicianIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryClinicianId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.PrimaryClinicianIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountyOfResidence {
                get {
                    try {
                        return ((string)(this[this.tableClients.CountyOfResidenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyOfResidence\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CountyOfResidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CountyOfTreatment {
                get {
                    try {
                        return ((string)(this[this.tableClients.CountyOfTreatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyOfTreatment\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CountyOfTreatmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CorrectionStatus {
                get {
                    try {
                        return ((int)(this[this.tableClients.CorrectionStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CorrectionStatus\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CorrectionStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableClients.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableClients.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LivingArrangement {
                get {
                    try {
                        return ((int)(this[this.tableClients.LivingArrangementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LivingArrangement\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.LivingArrangementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfBeds {
                get {
                    try {
                        return ((int)(this[this.tableClients.NumberOfBedsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfBeds\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.NumberOfBedsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MinimumWage {
                get {
                    try {
                        return ((string)(this[this.tableClients.MinimumWageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinimumWage\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.MinimumWageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FinanciallyResponsible {
                get {
                    return ((string)(this[this.tableClients.FinanciallyResponsibleColumn]));
                }
                set {
                    this[this.tableClients.FinanciallyResponsibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AnnualHouseholdIncome {
                get {
                    try {
                        return ((decimal)(this[this.tableClients.AnnualHouseholdIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnnualHouseholdIncome\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.AnnualHouseholdIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfDependents {
                get {
                    try {
                        return ((int)(this[this.tableClients.NumberOfDependentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfDependents\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.NumberOfDependentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritalStatus {
                get {
                    try {
                        return ((int)(this[this.tableClients.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmploymentStatus {
                get {
                    try {
                        return ((int)(this[this.tableClients.EmploymentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmploymentStatus\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.EmploymentStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmploymentInformation {
                get {
                    try {
                        return ((string)(this[this.tableClients.EmploymentInformationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmploymentInformation\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.EmploymentInformationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MilitaryStatus {
                get {
                    try {
                        return ((int)(this[this.tableClients.MilitaryStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MilitaryStatus\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.MilitaryStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EducationalStatus {
                get {
                    try {
                        return ((int)(this[this.tableClients.EducationalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EducationalStatus\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.EducationalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DoesNotSpeakEnglish {
                get {
                    return ((string)(this[this.tableClients.DoesNotSpeakEnglishColumn]));
                }
                set {
                    this[this.tableClients.DoesNotSpeakEnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrimaryLanguage {
                get {
                    try {
                        return ((int)(this[this.tableClients.PrimaryLanguageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryLanguage\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.PrimaryLanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrentEpisodeNumber {
                get {
                    try {
                        return ((int)(this[this.tableClients.CurrentEpisodeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentEpisodeNumber\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CurrentEpisodeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssignedAdminStaffId {
                get {
                    try {
                        return ((int)(this[this.tableClients.AssignedAdminStaffIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignedAdminStaffId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.AssignedAdminStaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InpatientCaseManager {
                get {
                    try {
                        return ((int)(this[this.tableClients.InpatientCaseManagerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InpatientCaseManager\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.InpatientCaseManagerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InformationComplete {
                get {
                    try {
                        return ((string)(this[this.tableClients.InformationCompleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InformationComplete\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.InformationCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrimaryProgramId {
                get {
                    try {
                        return ((int)(this[this.tableClients.PrimaryProgramIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryProgramId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.PrimaryProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastNameSoundex {
                get {
                    try {
                        return ((string)(this[this.tableClients.LastNameSoundexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastNameSoundex\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.LastNameSoundexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstNameSoundex {
                get {
                    try {
                        return ((string)(this[this.tableClients.FirstNameSoundexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstNameSoundex\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.FirstNameSoundexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CurrentBalance {
                get {
                    try {
                        return ((decimal)(this[this.tableClients.CurrentBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentBalance\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CurrentBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CareManagementId {
                get {
                    try {
                        return ((int)(this[this.tableClients.CareManagementIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CareManagementId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CareManagementIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HispanicOrigin {
                get {
                    try {
                        return ((int)(this[this.tableClients.HispanicOriginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HispanicOrigin\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.HispanicOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeceasedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClients.DeceasedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeceasedOn\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DeceasedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastStatementDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClients.LastStatementDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastStatementDate\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.LastStatementDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LastPaymentId {
                get {
                    try {
                        return ((int)(this[this.tableClients.LastPaymentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPaymentId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.LastPaymentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LastClientStatementId {
                get {
                    try {
                        return ((int)(this[this.tableClients.LastClientStatementIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastClientStatementId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.LastClientStatementIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DoNotSendStatement {
                get {
                    try {
                        return ((string)(this[this.tableClients.DoNotSendStatementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoNotSendStatement\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DoNotSendStatementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DoNotSendStatementReason {
                get {
                    try {
                        return ((int)(this[this.tableClients.DoNotSendStatementReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoNotSendStatementReason\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DoNotSendStatementReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountingNotes {
                get {
                    try {
                        return ((string)(this[this.tableClients.AccountingNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountingNotes\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.AccountingNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MasterRecord {
                get {
                    try {
                        return ((string)(this[this.tableClients.MasterRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterRecord\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.MasterRecordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProviderPrimaryClinicianId {
                get {
                    try {
                        return ((int)(this[this.tableClients.ProviderPrimaryClinicianIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProviderPrimaryClinicianId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.ProviderPrimaryClinicianIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid RowIdentifier {
                get {
                    return ((global::System.Guid)(this[this.tableClients.RowIdentifierColumn]));
                }
                set {
                    this[this.tableClients.RowIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExternalReferenceId {
                get {
                    try {
                        return ((string)(this[this.tableClients.ExternalReferenceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExternalReferenceId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.ExternalReferenceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DoNotOverwritePlan {
                get {
                    try {
                        return ((string)(this[this.tableClients.DoNotOverwritePlanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoNotOverwritePlan\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DoNotOverwritePlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Disposition {
                get {
                    try {
                        return ((int)(this[this.tableClients.DispositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Disposition\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.DispositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoKnownAllergies {
                get {
                    try {
                        return ((string)(this[this.tableClients.NoKnownAllergiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoKnownAllergies\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.NoKnownAllergiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReminderPreference {
                get {
                    try {
                        return ((int)(this[this.tableClients.ReminderPreferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReminderPreference\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.ReminderPreferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MobilePhoneProvider {
                get {
                    try {
                        return ((int)(this[this.tableClients.MobilePhoneProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobilePhoneProvider\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.MobilePhoneProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchedulingPreferenceMonday {
                get {
                    try {
                        return ((string)(this[this.tableClients.SchedulingPreferenceMondayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchedulingPreferenceMonday\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SchedulingPreferenceMondayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchedulingPreferenceTuesday {
                get {
                    try {
                        return ((string)(this[this.tableClients.SchedulingPreferenceTuesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchedulingPreferenceTuesday\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SchedulingPreferenceTuesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchedulingPreferenceWednesday {
                get {
                    try {
                        return ((string)(this[this.tableClients.SchedulingPreferenceWednesdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchedulingPreferenceWednesday\' in table \'Clients\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableClients.SchedulingPreferenceWednesdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchedulingPreferenceThursday {
                get {
                    try {
                        return ((string)(this[this.tableClients.SchedulingPreferenceThursdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchedulingPreferenceThursday\' in table \'Clients\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableClients.SchedulingPreferenceThursdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchedulingPreferenceFriday {
                get {
                    try {
                        return ((string)(this[this.tableClients.SchedulingPreferenceFridayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchedulingPreferenceFriday\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SchedulingPreferenceFridayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GeographicLocation {
                get {
                    try {
                        return ((string)(this[this.tableClients.GeographicLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeographicLocation\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.GeographicLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchedulingComment {
                get {
                    try {
                        return ((string)(this[this.tableClients.SchedulingCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchedulingComment\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.SchedulingCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CauseofDeath {
                get {
                    try {
                        return ((int)(this[this.tableClients.CauseofDeathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CauseofDeath\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.CauseofDeathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FosterCareLicence {
                get {
                    try {
                        return ((string)(this[this.tableClients.FosterCareLicenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FosterCareLicence\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.FosterCareLicenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrimaryPhysicianId {
                get {
                    try {
                        return ((int)(this[this.tableClients.PrimaryPhysicianIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrimaryPhysicianId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.PrimaryPhysicianIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AllergiesLastReviewedBy {
                get {
                    try {
                        return ((string)(this[this.tableClients.AllergiesLastReviewedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllergiesLastReviewedBy\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.AllergiesLastReviewedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AllergiesLastReviewedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClients.AllergiesLastReviewedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllergiesLastReviewedDate\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.AllergiesLastReviewedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AllergiesReviewStatus {
                get {
                    try {
                        return ((int)(this[this.tableClients.AllergiesReviewStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllergiesReviewStatus\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.AllergiesReviewStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HasNoMedications {
                get {
                    try {
                        return ((string)(this[this.tableClients.HasNoMedicationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasNoMedications\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.HasNoMedicationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserStaffId {
                get {
                    try {
                        return ((int)(this[this.tableClients.UserStaffIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserStaffId\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.UserStaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProfessionalSuffix {
                get {
                    try {
                        return ((string)(this[this.tableClients.ProfessionalSuffixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfessionalSuffix\' in table \'Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClients.ProfessionalSuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableClients.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableClients.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableClients.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableClients.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableClients.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableClients.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExternalClientIdNull() {
                return this.IsNull(this.tableClients.ExternalClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExternalClientIdNull() {
                this[this.tableClients.ExternalClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMRNNull() {
                return this.IsNull(this.tableClients.MRNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMRNNull() {
                this[this.tableClients.MRNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiddleNameNull() {
                return this.IsNull(this.tableClients.MiddleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiddleNameNull() {
                this[this.tableClients.MiddleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrefixNull() {
                return this.IsNull(this.tableClients.PrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrefixNull() {
                this[this.tableClients.PrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuffixNull() {
                return this.IsNull(this.tableClients.SuffixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuffixNull() {
                this[this.tableClients.SuffixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSSNNull() {
                return this.IsNull(this.tableClients.SSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSSNNull() {
                this[this.tableClients.SSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tableClients.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tableClients.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOBNull() {
                return this.IsNull(this.tableClients.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOBNull() {
                this[this.tableClients.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryClinicianIdNull() {
                return this.IsNull(this.tableClients.PrimaryClinicianIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryClinicianIdNull() {
                this[this.tableClients.PrimaryClinicianIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyOfResidenceNull() {
                return this.IsNull(this.tableClients.CountyOfResidenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyOfResidenceNull() {
                this[this.tableClients.CountyOfResidenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyOfTreatmentNull() {
                return this.IsNull(this.tableClients.CountyOfTreatmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyOfTreatmentNull() {
                this[this.tableClients.CountyOfTreatmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCorrectionStatusNull() {
                return this.IsNull(this.tableClients.CorrectionStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCorrectionStatusNull() {
                this[this.tableClients.CorrectionStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableClients.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableClients.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableClients.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableClients.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLivingArrangementNull() {
                return this.IsNull(this.tableClients.LivingArrangementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLivingArrangementNull() {
                this[this.tableClients.LivingArrangementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfBedsNull() {
                return this.IsNull(this.tableClients.NumberOfBedsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfBedsNull() {
                this[this.tableClients.NumberOfBedsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumWageNull() {
                return this.IsNull(this.tableClients.MinimumWageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumWageNull() {
                this[this.tableClients.MinimumWageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnualHouseholdIncomeNull() {
                return this.IsNull(this.tableClients.AnnualHouseholdIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnualHouseholdIncomeNull() {
                this[this.tableClients.AnnualHouseholdIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfDependentsNull() {
                return this.IsNull(this.tableClients.NumberOfDependentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfDependentsNull() {
                this[this.tableClients.NumberOfDependentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableClients.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableClients.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmploymentStatusNull() {
                return this.IsNull(this.tableClients.EmploymentStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmploymentStatusNull() {
                this[this.tableClients.EmploymentStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmploymentInformationNull() {
                return this.IsNull(this.tableClients.EmploymentInformationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmploymentInformationNull() {
                this[this.tableClients.EmploymentInformationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMilitaryStatusNull() {
                return this.IsNull(this.tableClients.MilitaryStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMilitaryStatusNull() {
                this[this.tableClients.MilitaryStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEducationalStatusNull() {
                return this.IsNull(this.tableClients.EducationalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEducationalStatusNull() {
                this[this.tableClients.EducationalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryLanguageNull() {
                return this.IsNull(this.tableClients.PrimaryLanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryLanguageNull() {
                this[this.tableClients.PrimaryLanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentEpisodeNumberNull() {
                return this.IsNull(this.tableClients.CurrentEpisodeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentEpisodeNumberNull() {
                this[this.tableClients.CurrentEpisodeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignedAdminStaffIdNull() {
                return this.IsNull(this.tableClients.AssignedAdminStaffIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignedAdminStaffIdNull() {
                this[this.tableClients.AssignedAdminStaffIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpatientCaseManagerNull() {
                return this.IsNull(this.tableClients.InpatientCaseManagerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpatientCaseManagerNull() {
                this[this.tableClients.InpatientCaseManagerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInformationCompleteNull() {
                return this.IsNull(this.tableClients.InformationCompleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInformationCompleteNull() {
                this[this.tableClients.InformationCompleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryProgramIdNull() {
                return this.IsNull(this.tableClients.PrimaryProgramIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryProgramIdNull() {
                this[this.tableClients.PrimaryProgramIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameSoundexNull() {
                return this.IsNull(this.tableClients.LastNameSoundexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameSoundexNull() {
                this[this.tableClients.LastNameSoundexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameSoundexNull() {
                return this.IsNull(this.tableClients.FirstNameSoundexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameSoundexNull() {
                this[this.tableClients.FirstNameSoundexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentBalanceNull() {
                return this.IsNull(this.tableClients.CurrentBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentBalanceNull() {
                this[this.tableClients.CurrentBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCareManagementIdNull() {
                return this.IsNull(this.tableClients.CareManagementIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCareManagementIdNull() {
                this[this.tableClients.CareManagementIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHispanicOriginNull() {
                return this.IsNull(this.tableClients.HispanicOriginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHispanicOriginNull() {
                this[this.tableClients.HispanicOriginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeceasedOnNull() {
                return this.IsNull(this.tableClients.DeceasedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeceasedOnNull() {
                this[this.tableClients.DeceasedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastStatementDateNull() {
                return this.IsNull(this.tableClients.LastStatementDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastStatementDateNull() {
                this[this.tableClients.LastStatementDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPaymentIdNull() {
                return this.IsNull(this.tableClients.LastPaymentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPaymentIdNull() {
                this[this.tableClients.LastPaymentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastClientStatementIdNull() {
                return this.IsNull(this.tableClients.LastClientStatementIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastClientStatementIdNull() {
                this[this.tableClients.LastClientStatementIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoNotSendStatementNull() {
                return this.IsNull(this.tableClients.DoNotSendStatementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoNotSendStatementNull() {
                this[this.tableClients.DoNotSendStatementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoNotSendStatementReasonNull() {
                return this.IsNull(this.tableClients.DoNotSendStatementReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoNotSendStatementReasonNull() {
                this[this.tableClients.DoNotSendStatementReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountingNotesNull() {
                return this.IsNull(this.tableClients.AccountingNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountingNotesNull() {
                this[this.tableClients.AccountingNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterRecordNull() {
                return this.IsNull(this.tableClients.MasterRecordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterRecordNull() {
                this[this.tableClients.MasterRecordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderPrimaryClinicianIdNull() {
                return this.IsNull(this.tableClients.ProviderPrimaryClinicianIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderPrimaryClinicianIdNull() {
                this[this.tableClients.ProviderPrimaryClinicianIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExternalReferenceIdNull() {
                return this.IsNull(this.tableClients.ExternalReferenceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExternalReferenceIdNull() {
                this[this.tableClients.ExternalReferenceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDoNotOverwritePlanNull() {
                return this.IsNull(this.tableClients.DoNotOverwritePlanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDoNotOverwritePlanNull() {
                this[this.tableClients.DoNotOverwritePlanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDispositionNull() {
                return this.IsNull(this.tableClients.DispositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDispositionNull() {
                this[this.tableClients.DispositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoKnownAllergiesNull() {
                return this.IsNull(this.tableClients.NoKnownAllergiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoKnownAllergiesNull() {
                this[this.tableClients.NoKnownAllergiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReminderPreferenceNull() {
                return this.IsNull(this.tableClients.ReminderPreferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReminderPreferenceNull() {
                this[this.tableClients.ReminderPreferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobilePhoneProviderNull() {
                return this.IsNull(this.tableClients.MobilePhoneProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobilePhoneProviderNull() {
                this[this.tableClients.MobilePhoneProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchedulingPreferenceMondayNull() {
                return this.IsNull(this.tableClients.SchedulingPreferenceMondayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchedulingPreferenceMondayNull() {
                this[this.tableClients.SchedulingPreferenceMondayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchedulingPreferenceTuesdayNull() {
                return this.IsNull(this.tableClients.SchedulingPreferenceTuesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchedulingPreferenceTuesdayNull() {
                this[this.tableClients.SchedulingPreferenceTuesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchedulingPreferenceWednesdayNull() {
                return this.IsNull(this.tableClients.SchedulingPreferenceWednesdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchedulingPreferenceWednesdayNull() {
                this[this.tableClients.SchedulingPreferenceWednesdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchedulingPreferenceThursdayNull() {
                return this.IsNull(this.tableClients.SchedulingPreferenceThursdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchedulingPreferenceThursdayNull() {
                this[this.tableClients.SchedulingPreferenceThursdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchedulingPreferenceFridayNull() {
                return this.IsNull(this.tableClients.SchedulingPreferenceFridayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchedulingPreferenceFridayNull() {
                this[this.tableClients.SchedulingPreferenceFridayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGeographicLocationNull() {
                return this.IsNull(this.tableClients.GeographicLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGeographicLocationNull() {
                this[this.tableClients.GeographicLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchedulingCommentNull() {
                return this.IsNull(this.tableClients.SchedulingCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchedulingCommentNull() {
                this[this.tableClients.SchedulingCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCauseofDeathNull() {
                return this.IsNull(this.tableClients.CauseofDeathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCauseofDeathNull() {
                this[this.tableClients.CauseofDeathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFosterCareLicenceNull() {
                return this.IsNull(this.tableClients.FosterCareLicenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFosterCareLicenceNull() {
                this[this.tableClients.FosterCareLicenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimaryPhysicianIdNull() {
                return this.IsNull(this.tableClients.PrimaryPhysicianIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimaryPhysicianIdNull() {
                this[this.tableClients.PrimaryPhysicianIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllergiesLastReviewedByNull() {
                return this.IsNull(this.tableClients.AllergiesLastReviewedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllergiesLastReviewedByNull() {
                this[this.tableClients.AllergiesLastReviewedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllergiesLastReviewedDateNull() {
                return this.IsNull(this.tableClients.AllergiesLastReviewedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllergiesLastReviewedDateNull() {
                this[this.tableClients.AllergiesLastReviewedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllergiesReviewStatusNull() {
                return this.IsNull(this.tableClients.AllergiesReviewStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllergiesReviewStatusNull() {
                this[this.tableClients.AllergiesReviewStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHasNoMedicationsNull() {
                return this.IsNull(this.tableClients.HasNoMedicationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHasNoMedicationsNull() {
                this[this.tableClients.HasNoMedicationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserStaffIdNull() {
                return this.IsNull(this.tableClients.UserStaffIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserStaffIdNull() {
                this[this.tableClients.UserStaffIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfessionalSuffixNull() {
                return this.IsNull(this.tableClients.ProfessionalSuffixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfessionalSuffixNull() {
                this[this.tableClients.ProfessionalSuffixColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomClientFeesRow : global::System.Data.DataRow {
            
            private CustomClientFeesDataTable tableCustomClientFees;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomClientFeesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomClientFees = ((CustomClientFeesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientFeeId {
                get {
                    return ((int)(this[this.tableCustomClientFees.ClientFeeIdColumn]));
                }
                set {
                    this[this.tableCustomClientFees.ClientFeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomClientFees.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomClientFees.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomClientFees.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomClientFees.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomClientFees.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomClientFees.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomClientFees.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomClientFees.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomClientFees.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientId {
                get {
                    try {
                        return ((int)(this[this.tableCustomClientFees.ClientIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientId\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomClientFees.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomClientFees.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StandardRatePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomClientFees.StandardRatePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardRatePercentage\' in table \'CustomClientFees\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.StandardRatePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomClientFees.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Locations {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.LocationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Locations\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.LocationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Programs {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.ProgramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Programs\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.ProgramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StandardRatePercentage1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.StandardRatePercentage1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StandardRatePercentage1\' in table \'CustomClientFees\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.StandardRatePercentage1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProgramsText {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.ProgramsTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramsText\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.ProgramsTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocationsText {
                get {
                    try {
                        return ((string)(this[this.tableCustomClientFees.LocationsTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationsText\' in table \'CustomClientFees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomClientFees.LocationsTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomClientFees.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomClientFees.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomClientFees.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomClientFees.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomClientFees.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomClientFees.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientIdNull() {
                return this.IsNull(this.tableCustomClientFees.ClientIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientIdNull() {
                this[this.tableCustomClientFees.ClientIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableCustomClientFees.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableCustomClientFees.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableCustomClientFees.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableCustomClientFees.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardRatePercentageNull() {
                return this.IsNull(this.tableCustomClientFees.StandardRatePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardRatePercentageNull() {
                this[this.tableCustomClientFees.StandardRatePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableCustomClientFees.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableCustomClientFees.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationsNull() {
                return this.IsNull(this.tableCustomClientFees.LocationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationsNull() {
                this[this.tableCustomClientFees.LocationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramsNull() {
                return this.IsNull(this.tableCustomClientFees.ProgramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramsNull() {
                this[this.tableCustomClientFees.ProgramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableCustomClientFees.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableCustomClientFees.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardRatePercentage1Null() {
                return this.IsNull(this.tableCustomClientFees.StandardRatePercentage1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardRatePercentage1Null() {
                this[this.tableCustomClientFees.StandardRatePercentage1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramsTextNull() {
                return this.IsNull(this.tableCustomClientFees.ProgramsTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramsTextNull() {
                this[this.tableCustomClientFees.ProgramsTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationsTextNull() {
                return this.IsNull(this.tableCustomClientFees.LocationsTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationsTextNull() {
                this[this.tableCustomClientFees.LocationsTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClientsRowChangeEvent : global::System.EventArgs {
            
            private ClientsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientsRowChangeEvent(ClientsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomClientFeesRowChangeEvent : global::System.EventArgs {
            
            private CustomClientFeesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomClientFeesRowChangeEvent(CustomClientFeesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomClientFeesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591