//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DataSetDocumentTransfersValley {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetDocumentTransfersValley")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetDocumentTransfersValley : global::System.Data.DataSet {
        
        private CustomDocumentTransfersDataTable tableCustomDocumentTransfers;
        
        private CustomTransferServicesDataTable tableCustomTransferServices;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetDocumentTransfersValley() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetDocumentTransfersValley(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDocumentTransfers"] != null)) {
                    base.Tables.Add(new CustomDocumentTransfersDataTable(ds.Tables["CustomDocumentTransfers"]));
                }
                if ((ds.Tables["CustomTransferServices"] != null)) {
                    base.Tables.Add(new CustomTransferServicesDataTable(ds.Tables["CustomTransferServices"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentTransfersDataTable CustomDocumentTransfers {
            get {
                return this.tableCustomDocumentTransfers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomTransferServicesDataTable CustomTransferServices {
            get {
                return this.tableCustomTransferServices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetDocumentTransfersValley cln = ((DataSetDocumentTransfersValley)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDocumentTransfers"] != null)) {
                    base.Tables.Add(new CustomDocumentTransfersDataTable(ds.Tables["CustomDocumentTransfers"]));
                }
                if ((ds.Tables["CustomTransferServices"] != null)) {
                    base.Tables.Add(new CustomTransferServicesDataTable(ds.Tables["CustomTransferServices"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDocumentTransfers = ((CustomDocumentTransfersDataTable)(base.Tables["CustomDocumentTransfers"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentTransfers != null)) {
                    this.tableCustomDocumentTransfers.InitVars();
                }
            }
            this.tableCustomTransferServices = ((CustomTransferServicesDataTable)(base.Tables["CustomTransferServices"]));
            if ((initTable == true)) {
                if ((this.tableCustomTransferServices != null)) {
                    this.tableCustomTransferServices.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetDocumentTransfersValley";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetDocumentTransfersValley.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDocumentTransfers = new CustomDocumentTransfersDataTable();
            base.Tables.Add(this.tableCustomDocumentTransfers);
            this.tableCustomTransferServices = new CustomTransferServicesDataTable();
            base.Tables.Add(this.tableCustomTransferServices);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentTransfers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomTransferServices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetDocumentTransfersValley ds = new DataSetDocumentTransfersValley();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDocumentTransfersRowChangeEventHandler(object sender, CustomDocumentTransfersRowChangeEvent e);
        
        public delegate void CustomTransferServicesRowChangeEventHandler(object sender, CustomTransferServicesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentTransfersDataTable : global::System.Data.TypedTableBase<CustomDocumentTransfersRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnTransferStatus;
            
            private global::System.Data.DataColumn columnTransferringStaff;
            
            private global::System.Data.DataColumn columnAssessedNeedForTransfer;
            
            private global::System.Data.DataColumn columnReceivingStaff;
            
            private global::System.Data.DataColumn columnReceivingProgram;
            
            private global::System.Data.DataColumn columnClientParticpatedWithTransfer;
            
            private global::System.Data.DataColumn columnTransferSentDate;
            
            private global::System.Data.DataColumn columnReceivingComment;
            
            private global::System.Data.DataColumn columnReceivingAction;
            
            private global::System.Data.DataColumn columnReceivingActionDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTransfersDataTable() {
                this.TableName = "CustomDocumentTransfers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentTransfersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentTransfersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferStatusColumn {
                get {
                    return this.columnTransferStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferringStaffColumn {
                get {
                    return this.columnTransferringStaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssessedNeedForTransferColumn {
                get {
                    return this.columnAssessedNeedForTransfer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivingStaffColumn {
                get {
                    return this.columnReceivingStaff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivingProgramColumn {
                get {
                    return this.columnReceivingProgram;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientParticpatedWithTransferColumn {
                get {
                    return this.columnClientParticpatedWithTransfer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferSentDateColumn {
                get {
                    return this.columnTransferSentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivingCommentColumn {
                get {
                    return this.columnReceivingComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivingActionColumn {
                get {
                    return this.columnReceivingAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivingActionDateColumn {
                get {
                    return this.columnReceivingActionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTransfersRow this[int index] {
                get {
                    return ((CustomDocumentTransfersRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentTransfersRowChangeEventHandler CustomDocumentTransfersRowChanging;
            
            public event CustomDocumentTransfersRowChangeEventHandler CustomDocumentTransfersRowChanged;
            
            public event CustomDocumentTransfersRowChangeEventHandler CustomDocumentTransfersRowDeleting;
            
            public event CustomDocumentTransfersRowChangeEventHandler CustomDocumentTransfersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentTransfersRow(CustomDocumentTransfersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTransfersRow AddCustomDocumentTransfersRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int TransferStatus, 
                        int TransferringStaff, 
                        string AssessedNeedForTransfer, 
                        int ReceivingStaff, 
                        int ReceivingProgram, 
                        string ClientParticpatedWithTransfer, 
                        System.DateTime TransferSentDate, 
                        string ReceivingComment, 
                        int ReceivingAction, 
                        System.DateTime ReceivingActionDate) {
                CustomDocumentTransfersRow rowCustomDocumentTransfersRow = ((CustomDocumentTransfersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        TransferStatus,
                        TransferringStaff,
                        AssessedNeedForTransfer,
                        ReceivingStaff,
                        ReceivingProgram,
                        ClientParticpatedWithTransfer,
                        TransferSentDate,
                        ReceivingComment,
                        ReceivingAction,
                        ReceivingActionDate};
                rowCustomDocumentTransfersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentTransfersRow);
                return rowCustomDocumentTransfersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTransfersRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentTransfersRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentTransfersDataTable cln = ((CustomDocumentTransfersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentTransfersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnTransferStatus = base.Columns["TransferStatus"];
                this.columnTransferringStaff = base.Columns["TransferringStaff"];
                this.columnAssessedNeedForTransfer = base.Columns["AssessedNeedForTransfer"];
                this.columnReceivingStaff = base.Columns["ReceivingStaff"];
                this.columnReceivingProgram = base.Columns["ReceivingProgram"];
                this.columnClientParticpatedWithTransfer = base.Columns["ClientParticpatedWithTransfer"];
                this.columnTransferSentDate = base.Columns["TransferSentDate"];
                this.columnReceivingComment = base.Columns["ReceivingComment"];
                this.columnReceivingAction = base.Columns["ReceivingAction"];
                this.columnReceivingActionDate = base.Columns["ReceivingActionDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnTransferStatus = new global::System.Data.DataColumn("TransferStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferStatus);
                this.columnTransferringStaff = new global::System.Data.DataColumn("TransferringStaff", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferringStaff);
                this.columnAssessedNeedForTransfer = new global::System.Data.DataColumn("AssessedNeedForTransfer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssessedNeedForTransfer);
                this.columnReceivingStaff = new global::System.Data.DataColumn("ReceivingStaff", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivingStaff);
                this.columnReceivingProgram = new global::System.Data.DataColumn("ReceivingProgram", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivingProgram);
                this.columnClientParticpatedWithTransfer = new global::System.Data.DataColumn("ClientParticpatedWithTransfer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientParticpatedWithTransfer);
                this.columnTransferSentDate = new global::System.Data.DataColumn("TransferSentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferSentDate);
                this.columnReceivingComment = new global::System.Data.DataColumn("ReceivingComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivingComment);
                this.columnReceivingAction = new global::System.Data.DataColumn("ReceivingAction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivingAction);
                this.columnReceivingActionDate = new global::System.Data.DataColumn("ReceivingActionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivingActionDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnAssessedNeedForTransfer.MaxLength = 2147483647;
                this.columnClientParticpatedWithTransfer.MaxLength = 1;
                this.columnReceivingComment.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTransfersRow NewCustomDocumentTransfersRow() {
                return ((CustomDocumentTransfersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentTransfersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentTransfersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentTransfersRowChanged != null)) {
                    this.CustomDocumentTransfersRowChanged(this, new CustomDocumentTransfersRowChangeEvent(((CustomDocumentTransfersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentTransfersRowChanging != null)) {
                    this.CustomDocumentTransfersRowChanging(this, new CustomDocumentTransfersRowChangeEvent(((CustomDocumentTransfersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentTransfersRowDeleted != null)) {
                    this.CustomDocumentTransfersRowDeleted(this, new CustomDocumentTransfersRowChangeEvent(((CustomDocumentTransfersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentTransfersRowDeleting != null)) {
                    this.CustomDocumentTransfersRowDeleting(this, new CustomDocumentTransfersRowChangeEvent(((CustomDocumentTransfersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentTransfersRow(CustomDocumentTransfersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDocumentTransfersValley ds = new DataSetDocumentTransfersValley();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentTransfersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomTransferServicesDataTable : global::System.Data.TypedTableBase<CustomTransferServicesRow> {
            
            private global::System.Data.DataColumn columnTransferServiceId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnAuthorizationCodeId;
            
            private global::System.Data.DataColumn columnAuthorizationCodeIdText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomTransferServicesDataTable() {
                this.TableName = "CustomTransferServices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomTransferServicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomTransferServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransferServiceIdColumn {
                get {
                    return this.columnTransferServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorizationCodeIdColumn {
                get {
                    return this.columnAuthorizationCodeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorizationCodeIdTextColumn {
                get {
                    return this.columnAuthorizationCodeIdText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomTransferServicesRow this[int index] {
                get {
                    return ((CustomTransferServicesRow)(this.Rows[index]));
                }
            }
            
            public event CustomTransferServicesRowChangeEventHandler CustomTransferServicesRowChanging;
            
            public event CustomTransferServicesRowChangeEventHandler CustomTransferServicesRowChanged;
            
            public event CustomTransferServicesRowChangeEventHandler CustomTransferServicesRowDeleting;
            
            public event CustomTransferServicesRowChangeEventHandler CustomTransferServicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomTransferServicesRow(CustomTransferServicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomTransferServicesRow AddCustomTransferServicesRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int AuthorizationCodeId, string AuthorizationCodeIdText) {
                CustomTransferServicesRow rowCustomTransferServicesRow = ((CustomTransferServicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        AuthorizationCodeId,
                        AuthorizationCodeIdText};
                rowCustomTransferServicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomTransferServicesRow);
                return rowCustomTransferServicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomTransferServicesRow FindByTransferServiceId(int TransferServiceId) {
                return ((CustomTransferServicesRow)(this.Rows.Find(new object[] {
                            TransferServiceId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomTransferServicesDataTable cln = ((CustomTransferServicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomTransferServicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTransferServiceId = base.Columns["TransferServiceId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnAuthorizationCodeId = base.Columns["AuthorizationCodeId"];
                this.columnAuthorizationCodeIdText = base.Columns["AuthorizationCodeIdText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTransferServiceId = new global::System.Data.DataColumn("TransferServiceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferServiceId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnAuthorizationCodeId = new global::System.Data.DataColumn("AuthorizationCodeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorizationCodeId);
                this.columnAuthorizationCodeIdText = new global::System.Data.DataColumn("AuthorizationCodeIdText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorizationCodeIdText);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTransferServiceId}, true));
                this.columnTransferServiceId.AutoIncrement = true;
                this.columnTransferServiceId.AutoIncrementSeed = -1;
                this.columnTransferServiceId.AutoIncrementStep = -1;
                this.columnTransferServiceId.AllowDBNull = false;
                this.columnTransferServiceId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomTransferServicesRow NewCustomTransferServicesRow() {
                return ((CustomTransferServicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomTransferServicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomTransferServicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomTransferServicesRowChanged != null)) {
                    this.CustomTransferServicesRowChanged(this, new CustomTransferServicesRowChangeEvent(((CustomTransferServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomTransferServicesRowChanging != null)) {
                    this.CustomTransferServicesRowChanging(this, new CustomTransferServicesRowChangeEvent(((CustomTransferServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomTransferServicesRowDeleted != null)) {
                    this.CustomTransferServicesRowDeleted(this, new CustomTransferServicesRowChangeEvent(((CustomTransferServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomTransferServicesRowDeleting != null)) {
                    this.CustomTransferServicesRowDeleting(this, new CustomTransferServicesRowChangeEvent(((CustomTransferServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomTransferServicesRow(CustomTransferServicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetDocumentTransfersValley ds = new DataSetDocumentTransfersValley();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomTransferServicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentTransfersRow : global::System.Data.DataRow {
            
            private CustomDocumentTransfersDataTable tableCustomDocumentTransfers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentTransfersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentTransfers = ((CustomDocumentTransfersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentTransfers.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentTransfers.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentTransfers.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentTransfers.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentTransfers.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentTransfers.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentTransfers.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentTransfers.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentTransfers.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentTransfers.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTransfers.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentTransfers\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTransfers.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentTransfers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentTransfers.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentTransfers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransferStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTransfers.TransferStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferStatus\' in table \'CustomDocumentTransfers\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.TransferStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransferringStaff {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTransfers.TransferringStaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferringStaff\' in table \'CustomDocumentTransfers\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.TransferringStaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AssessedNeedForTransfer {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTransfers.AssessedNeedForTransferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssessedNeedForTransfer\' in table \'CustomDocumentTransfers\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.AssessedNeedForTransferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReceivingStaff {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTransfers.ReceivingStaffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivingStaff\' in table \'CustomDocumentTransfers\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.ReceivingStaffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReceivingProgram {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTransfers.ReceivingProgramColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivingProgram\' in table \'CustomDocumentTransfers\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.ReceivingProgramColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientParticpatedWithTransfer {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTransfers.ClientParticpatedWithTransferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientParticpatedWithTransfer\' in table \'CustomDocumentTran" +
                                "sfers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.ClientParticpatedWithTransferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TransferSentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentTransfers.TransferSentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferSentDate\' in table \'CustomDocumentTransfers\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.TransferSentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivingComment {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentTransfers.ReceivingCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivingComment\' in table \'CustomDocumentTransfers\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.ReceivingCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReceivingAction {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentTransfers.ReceivingActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivingAction\' in table \'CustomDocumentTransfers\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.ReceivingActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceivingActionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentTransfers.ReceivingActionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivingActionDate\' in table \'CustomDocumentTransfers\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentTransfers.ReceivingActionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentTransfers.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentTransfers.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentTransfers.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferStatusNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.TransferStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferStatusNull() {
                this[this.tableCustomDocumentTransfers.TransferStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferringStaffNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.TransferringStaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferringStaffNull() {
                this[this.tableCustomDocumentTransfers.TransferringStaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssessedNeedForTransferNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.AssessedNeedForTransferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssessedNeedForTransferNull() {
                this[this.tableCustomDocumentTransfers.AssessedNeedForTransferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivingStaffNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.ReceivingStaffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivingStaffNull() {
                this[this.tableCustomDocumentTransfers.ReceivingStaffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivingProgramNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.ReceivingProgramColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivingProgramNull() {
                this[this.tableCustomDocumentTransfers.ReceivingProgramColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientParticpatedWithTransferNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.ClientParticpatedWithTransferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientParticpatedWithTransferNull() {
                this[this.tableCustomDocumentTransfers.ClientParticpatedWithTransferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransferSentDateNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.TransferSentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransferSentDateNull() {
                this[this.tableCustomDocumentTransfers.TransferSentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivingCommentNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.ReceivingCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivingCommentNull() {
                this[this.tableCustomDocumentTransfers.ReceivingCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivingActionNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.ReceivingActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivingActionNull() {
                this[this.tableCustomDocumentTransfers.ReceivingActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivingActionDateNull() {
                return this.IsNull(this.tableCustomDocumentTransfers.ReceivingActionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivingActionDateNull() {
                this[this.tableCustomDocumentTransfers.ReceivingActionDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomTransferServicesRow : global::System.Data.DataRow {
            
            private CustomTransferServicesDataTable tableCustomTransferServices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomTransferServicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomTransferServices = ((CustomTransferServicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransferServiceId {
                get {
                    return ((int)(this[this.tableCustomTransferServices.TransferServiceIdColumn]));
                }
                set {
                    this[this.tableCustomTransferServices.TransferServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomTransferServices.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomTransferServices.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomTransferServices.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomTransferServices.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomTransferServices.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomTransferServices.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomTransferServices.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomTransferServices.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomTransferServices.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomTransferServices\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomTransferServices.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomTransferServices.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomTransferServices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomTransferServices.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomTransferServices.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomTransferServices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomTransferServices.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomTransferServices.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomTransferServices\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomTransferServices.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuthorizationCodeId {
                get {
                    try {
                        return ((int)(this[this.tableCustomTransferServices.AuthorizationCodeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuthorizationCodeId\' in table \'CustomTransferServices\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomTransferServices.AuthorizationCodeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthorizationCodeIdText {
                get {
                    try {
                        return ((string)(this[this.tableCustomTransferServices.AuthorizationCodeIdTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuthorizationCodeIdText\' in table \'CustomTransferServices\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomTransferServices.AuthorizationCodeIdTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomTransferServices.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomTransferServices.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomTransferServices.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomTransferServices.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomTransferServices.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomTransferServices.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomTransferServices.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomTransferServices.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorizationCodeIdNull() {
                return this.IsNull(this.tableCustomTransferServices.AuthorizationCodeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorizationCodeIdNull() {
                this[this.tableCustomTransferServices.AuthorizationCodeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorizationCodeIdTextNull() {
                return this.IsNull(this.tableCustomTransferServices.AuthorizationCodeIdTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorizationCodeIdTextNull() {
                this[this.tableCustomTransferServices.AuthorizationCodeIdTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentTransfersRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentTransfersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTransfersRowChangeEvent(CustomDocumentTransfersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentTransfersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomTransferServicesRowChangeEvent : global::System.EventArgs {
            
            private CustomTransferServicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomTransferServicesRowChangeEvent(CustomTransferServicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomTransferServicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591