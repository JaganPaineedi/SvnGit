//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SHS.DataSets.DatasetDischarge {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DatasetDischarge")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DatasetDischarge : global::System.Data.DataSet {
        
        private CustomDischargeProgramsDataTable tableCustomDischargePrograms;
        
        private CustomDischargeReferralsDataTable tableCustomDischargeReferrals;
        
        private ClientProgramsDataTable tableClientPrograms;
        
        private CustomDocumentDischargesDataTable tableCustomDocumentDischarges;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DatasetDischarge() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DatasetDischarge(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomDischargePrograms"] != null)) {
                    base.Tables.Add(new CustomDischargeProgramsDataTable(ds.Tables["CustomDischargePrograms"]));
                }
                if ((ds.Tables["CustomDischargeReferrals"] != null)) {
                    base.Tables.Add(new CustomDischargeReferralsDataTable(ds.Tables["CustomDischargeReferrals"]));
                }
                if ((ds.Tables["ClientPrograms"] != null)) {
                    base.Tables.Add(new ClientProgramsDataTable(ds.Tables["ClientPrograms"]));
                }
                if ((ds.Tables["CustomDocumentDischarges"] != null)) {
                    base.Tables.Add(new CustomDocumentDischargesDataTable(ds.Tables["CustomDocumentDischarges"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDischargeProgramsDataTable CustomDischargePrograms {
            get {
                return this.tableCustomDischargePrograms;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDischargeReferralsDataTable CustomDischargeReferrals {
            get {
                return this.tableCustomDischargeReferrals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientProgramsDataTable ClientPrograms {
            get {
                return this.tableClientPrograms;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomDocumentDischargesDataTable CustomDocumentDischarges {
            get {
                return this.tableCustomDocumentDischarges;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DatasetDischarge cln = ((DatasetDischarge)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomDischargePrograms"] != null)) {
                    base.Tables.Add(new CustomDischargeProgramsDataTable(ds.Tables["CustomDischargePrograms"]));
                }
                if ((ds.Tables["CustomDischargeReferrals"] != null)) {
                    base.Tables.Add(new CustomDischargeReferralsDataTable(ds.Tables["CustomDischargeReferrals"]));
                }
                if ((ds.Tables["ClientPrograms"] != null)) {
                    base.Tables.Add(new ClientProgramsDataTable(ds.Tables["ClientPrograms"]));
                }
                if ((ds.Tables["CustomDocumentDischarges"] != null)) {
                    base.Tables.Add(new CustomDocumentDischargesDataTable(ds.Tables["CustomDocumentDischarges"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomDischargePrograms = ((CustomDischargeProgramsDataTable)(base.Tables["CustomDischargePrograms"]));
            if ((initTable == true)) {
                if ((this.tableCustomDischargePrograms != null)) {
                    this.tableCustomDischargePrograms.InitVars();
                }
            }
            this.tableCustomDischargeReferrals = ((CustomDischargeReferralsDataTable)(base.Tables["CustomDischargeReferrals"]));
            if ((initTable == true)) {
                if ((this.tableCustomDischargeReferrals != null)) {
                    this.tableCustomDischargeReferrals.InitVars();
                }
            }
            this.tableClientPrograms = ((ClientProgramsDataTable)(base.Tables["ClientPrograms"]));
            if ((initTable == true)) {
                if ((this.tableClientPrograms != null)) {
                    this.tableClientPrograms.InitVars();
                }
            }
            this.tableCustomDocumentDischarges = ((CustomDocumentDischargesDataTable)(base.Tables["CustomDocumentDischarges"]));
            if ((initTable == true)) {
                if ((this.tableCustomDocumentDischarges != null)) {
                    this.tableCustomDocumentDischarges.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DatasetDischarge";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DatasetDischarge.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomDischargePrograms = new CustomDischargeProgramsDataTable();
            base.Tables.Add(this.tableCustomDischargePrograms);
            this.tableCustomDischargeReferrals = new CustomDischargeReferralsDataTable();
            base.Tables.Add(this.tableCustomDischargeReferrals);
            this.tableClientPrograms = new ClientProgramsDataTable();
            base.Tables.Add(this.tableClientPrograms);
            this.tableCustomDocumentDischarges = new CustomDocumentDischargesDataTable();
            base.Tables.Add(this.tableCustomDocumentDischarges);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDischargePrograms() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDischargeReferrals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeClientPrograms() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomDocumentDischarges() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DatasetDischarge ds = new DatasetDischarge();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomDischargeProgramsRowChangeEventHandler(object sender, CustomDischargeProgramsRowChangeEvent e);
        
        public delegate void CustomDischargeReferralsRowChangeEventHandler(object sender, CustomDischargeReferralsRowChangeEvent e);
        
        public delegate void ClientProgramsRowChangeEventHandler(object sender, ClientProgramsRowChangeEvent e);
        
        public delegate void CustomDocumentDischargesRowChangeEventHandler(object sender, CustomDocumentDischargesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDischargeProgramsDataTable : global::System.Data.TypedTableBase<CustomDischargeProgramsRow> {
            
            private global::System.Data.DataColumn columnDischargeProgramId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnClientProgramId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeProgramsDataTable() {
                this.TableName = "CustomDischargePrograms";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDischargeProgramsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDischargeProgramsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeProgramIdColumn {
                get {
                    return this.columnDischargeProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientProgramIdColumn {
                get {
                    return this.columnClientProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeProgramsRow this[int index] {
                get {
                    return ((CustomDischargeProgramsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDischargeProgramsRowChangeEventHandler CustomDischargeProgramsRowChanging;
            
            public event CustomDischargeProgramsRowChangeEventHandler CustomDischargeProgramsRowChanged;
            
            public event CustomDischargeProgramsRowChangeEventHandler CustomDischargeProgramsRowDeleting;
            
            public event CustomDischargeProgramsRowChangeEventHandler CustomDischargeProgramsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDischargeProgramsRow(CustomDischargeProgramsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeProgramsRow AddCustomDischargeProgramsRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int ClientProgramId) {
                CustomDischargeProgramsRow rowCustomDischargeProgramsRow = ((CustomDischargeProgramsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        ClientProgramId};
                rowCustomDischargeProgramsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDischargeProgramsRow);
                return rowCustomDischargeProgramsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeProgramsRow FindByDischargeProgramId(int DischargeProgramId) {
                return ((CustomDischargeProgramsRow)(this.Rows.Find(new object[] {
                            DischargeProgramId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDischargeProgramsDataTable cln = ((CustomDischargeProgramsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDischargeProgramsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDischargeProgramId = base.Columns["DischargeProgramId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnClientProgramId = base.Columns["ClientProgramId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDischargeProgramId = new global::System.Data.DataColumn("DischargeProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeProgramId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnClientProgramId = new global::System.Data.DataColumn("ClientProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientProgramId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDischargeProgramId}, true));
                this.columnDischargeProgramId.AutoIncrement = true;
                this.columnDischargeProgramId.AutoIncrementSeed = -1;
                this.columnDischargeProgramId.AutoIncrementStep = -1;
                this.columnDischargeProgramId.AllowDBNull = false;
                this.columnDischargeProgramId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeProgramsRow NewCustomDischargeProgramsRow() {
                return ((CustomDischargeProgramsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDischargeProgramsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDischargeProgramsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDischargeProgramsRowChanged != null)) {
                    this.CustomDischargeProgramsRowChanged(this, new CustomDischargeProgramsRowChangeEvent(((CustomDischargeProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDischargeProgramsRowChanging != null)) {
                    this.CustomDischargeProgramsRowChanging(this, new CustomDischargeProgramsRowChangeEvent(((CustomDischargeProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDischargeProgramsRowDeleted != null)) {
                    this.CustomDischargeProgramsRowDeleted(this, new CustomDischargeProgramsRowChangeEvent(((CustomDischargeProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDischargeProgramsRowDeleting != null)) {
                    this.CustomDischargeProgramsRowDeleting(this, new CustomDischargeProgramsRowChangeEvent(((CustomDischargeProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDischargeProgramsRow(CustomDischargeProgramsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatasetDischarge ds = new DatasetDischarge();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDischargeProgramsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDischargeReferralsDataTable : global::System.Data.TypedTableBase<CustomDischargeReferralsRow> {
            
            private global::System.Data.DataColumn columnDischargeReferralId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnReferral;
            
            private global::System.Data.DataColumn columnProgram;
            
            private global::System.Data.DataColumn columnReferralText;
            
            private global::System.Data.DataColumn columnProgramText;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeReferralsDataTable() {
                this.TableName = "CustomDischargeReferrals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDischargeReferralsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDischargeReferralsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeReferralIdColumn {
                get {
                    return this.columnDischargeReferralId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralColumn {
                get {
                    return this.columnReferral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramColumn {
                get {
                    return this.columnProgram;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralTextColumn {
                get {
                    return this.columnReferralText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramTextColumn {
                get {
                    return this.columnProgramText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeReferralsRow this[int index] {
                get {
                    return ((CustomDischargeReferralsRow)(this.Rows[index]));
                }
            }
            
            public event CustomDischargeReferralsRowChangeEventHandler CustomDischargeReferralsRowChanging;
            
            public event CustomDischargeReferralsRowChangeEventHandler CustomDischargeReferralsRowChanged;
            
            public event CustomDischargeReferralsRowChangeEventHandler CustomDischargeReferralsRowDeleting;
            
            public event CustomDischargeReferralsRowChangeEventHandler CustomDischargeReferralsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDischargeReferralsRow(CustomDischargeReferralsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeReferralsRow AddCustomDischargeReferralsRow(string CreatedBy, System.DateTime CreatedDate, string ModifiedBy, System.DateTime ModifiedDate, string RecordDeleted, string DeletedBy, System.DateTime DeletedDate, int DocumentVersionId, int Referral, int Program, string ReferralText, string ProgramText) {
                CustomDischargeReferralsRow rowCustomDischargeReferralsRow = ((CustomDischargeReferralsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        DocumentVersionId,
                        Referral,
                        Program,
                        ReferralText,
                        ProgramText};
                rowCustomDischargeReferralsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDischargeReferralsRow);
                return rowCustomDischargeReferralsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeReferralsRow FindByDischargeReferralId(int DischargeReferralId) {
                return ((CustomDischargeReferralsRow)(this.Rows.Find(new object[] {
                            DischargeReferralId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDischargeReferralsDataTable cln = ((CustomDischargeReferralsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDischargeReferralsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDischargeReferralId = base.Columns["DischargeReferralId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnReferral = base.Columns["Referral"];
                this.columnProgram = base.Columns["Program"];
                this.columnReferralText = base.Columns["ReferralText"];
                this.columnProgramText = base.Columns["ProgramText"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDischargeReferralId = new global::System.Data.DataColumn("DischargeReferralId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeReferralId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnReferral = new global::System.Data.DataColumn("Referral", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferral);
                this.columnProgram = new global::System.Data.DataColumn("Program", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgram);
                this.columnReferralText = new global::System.Data.DataColumn("ReferralText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralText);
                this.columnProgramText = new global::System.Data.DataColumn("ProgramText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramText);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDischargeReferralId}, true));
                this.columnDischargeReferralId.AutoIncrement = true;
                this.columnDischargeReferralId.AutoIncrementSeed = -1;
                this.columnDischargeReferralId.AutoIncrementStep = -1;
                this.columnDischargeReferralId.AllowDBNull = false;
                this.columnDischargeReferralId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeReferralsRow NewCustomDischargeReferralsRow() {
                return ((CustomDischargeReferralsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDischargeReferralsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDischargeReferralsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDischargeReferralsRowChanged != null)) {
                    this.CustomDischargeReferralsRowChanged(this, new CustomDischargeReferralsRowChangeEvent(((CustomDischargeReferralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDischargeReferralsRowChanging != null)) {
                    this.CustomDischargeReferralsRowChanging(this, new CustomDischargeReferralsRowChangeEvent(((CustomDischargeReferralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDischargeReferralsRowDeleted != null)) {
                    this.CustomDischargeReferralsRowDeleted(this, new CustomDischargeReferralsRowChangeEvent(((CustomDischargeReferralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDischargeReferralsRowDeleting != null)) {
                    this.CustomDischargeReferralsRowDeleting(this, new CustomDischargeReferralsRowChangeEvent(((CustomDischargeReferralsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDischargeReferralsRow(CustomDischargeReferralsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatasetDischarge ds = new DatasetDischarge();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDischargeReferralsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientProgramsDataTable : global::System.Data.TypedTableBase<ClientProgramsRow> {
            
            private global::System.Data.DataColumn columnClientProgramId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnProgramId;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnRequestedDate;
            
            private global::System.Data.DataColumn columnEnrolledDate;
            
            private global::System.Data.DataColumn columnDischargedDate;
            
            private global::System.Data.DataColumn columnPrimaryAssignment;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnAssignedStaffId;
            
            private global::System.Data.DataColumn columnIsInitialize;
            
            private global::System.Data.DataColumn columnCurrentDocumentVersionId;
            
            private global::System.Data.DataColumn columnPriorityNumber;
            
            private global::System.Data.DataColumn columnEmergent;
            
            private global::System.Data.DataColumn columnMustBeEnrolledByDate;
            
            private global::System.Data.DataColumn columnPrerequisite;
            
            private global::System.Data.DataColumn columnWaitlistPriorityComment;
            
            private global::System.Data.DataColumn columnPriorityPopulation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientProgramsDataTable() {
                this.TableName = "ClientPrograms";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientProgramsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClientProgramsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientProgramIdColumn {
                get {
                    return this.columnClientProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProgramIdColumn {
                get {
                    return this.columnProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestedDateColumn {
                get {
                    return this.columnRequestedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnrolledDateColumn {
                get {
                    return this.columnEnrolledDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargedDateColumn {
                get {
                    return this.columnDischargedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimaryAssignmentColumn {
                get {
                    return this.columnPrimaryAssignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AssignedStaffIdColumn {
                get {
                    return this.columnAssignedStaffId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsInitializeColumn {
                get {
                    return this.columnIsInitialize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentDocumentVersionIdColumn {
                get {
                    return this.columnCurrentDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorityNumberColumn {
                get {
                    return this.columnPriorityNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmergentColumn {
                get {
                    return this.columnEmergent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MustBeEnrolledByDateColumn {
                get {
                    return this.columnMustBeEnrolledByDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrerequisiteColumn {
                get {
                    return this.columnPrerequisite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WaitlistPriorityCommentColumn {
                get {
                    return this.columnWaitlistPriorityComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriorityPopulationColumn {
                get {
                    return this.columnPriorityPopulation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientProgramsRow this[int index] {
                get {
                    return ((ClientProgramsRow)(this.Rows[index]));
                }
            }
            
            public event ClientProgramsRowChangeEventHandler ClientProgramsRowChanging;
            
            public event ClientProgramsRowChangeEventHandler ClientProgramsRowChanged;
            
            public event ClientProgramsRowChangeEventHandler ClientProgramsRowDeleting;
            
            public event ClientProgramsRowChangeEventHandler ClientProgramsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClientProgramsRow(ClientProgramsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientProgramsRow AddClientProgramsRow(
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        System.DateTime DeletedDate, 
                        string DeletedBy, 
                        int ClientId, 
                        int ProgramId, 
                        int Status, 
                        System.DateTime RequestedDate, 
                        System.DateTime EnrolledDate, 
                        System.DateTime DischargedDate, 
                        string PrimaryAssignment, 
                        string Comment, 
                        int AssignedStaffId, 
                        string IsInitialize, 
                        int CurrentDocumentVersionId, 
                        int PriorityNumber, 
                        string Emergent, 
                        System.DateTime MustBeEnrolledByDate, 
                        int Prerequisite, 
                        string WaitlistPriorityComment, 
                        string PriorityPopulation) {
                ClientProgramsRow rowClientProgramsRow = ((ClientProgramsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedDate,
                        DeletedBy,
                        ClientId,
                        ProgramId,
                        Status,
                        RequestedDate,
                        EnrolledDate,
                        DischargedDate,
                        PrimaryAssignment,
                        Comment,
                        AssignedStaffId,
                        IsInitialize,
                        CurrentDocumentVersionId,
                        PriorityNumber,
                        Emergent,
                        MustBeEnrolledByDate,
                        Prerequisite,
                        WaitlistPriorityComment,
                        PriorityPopulation};
                rowClientProgramsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientProgramsRow);
                return rowClientProgramsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientProgramsRow FindByClientProgramId(int ClientProgramId) {
                return ((ClientProgramsRow)(this.Rows.Find(new object[] {
                            ClientProgramId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ClientProgramsDataTable cln = ((ClientProgramsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientProgramsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClientProgramId = base.Columns["ClientProgramId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnClientId = base.Columns["ClientId"];
                this.columnProgramId = base.Columns["ProgramId"];
                this.columnStatus = base.Columns["Status"];
                this.columnRequestedDate = base.Columns["RequestedDate"];
                this.columnEnrolledDate = base.Columns["EnrolledDate"];
                this.columnDischargedDate = base.Columns["DischargedDate"];
                this.columnPrimaryAssignment = base.Columns["PrimaryAssignment"];
                this.columnComment = base.Columns["Comment"];
                this.columnAssignedStaffId = base.Columns["AssignedStaffId"];
                this.columnIsInitialize = base.Columns["IsInitialize"];
                this.columnCurrentDocumentVersionId = base.Columns["CurrentDocumentVersionId"];
                this.columnPriorityNumber = base.Columns["PriorityNumber"];
                this.columnEmergent = base.Columns["Emergent"];
                this.columnMustBeEnrolledByDate = base.Columns["MustBeEnrolledByDate"];
                this.columnPrerequisite = base.Columns["Prerequisite"];
                this.columnWaitlistPriorityComment = base.Columns["WaitlistPriorityComment"];
                this.columnPriorityPopulation = base.Columns["PriorityPopulation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClientProgramId = new global::System.Data.DataColumn("ClientProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientProgramId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnProgramId = new global::System.Data.DataColumn("ProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgramId);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnRequestedDate = new global::System.Data.DataColumn("RequestedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestedDate);
                this.columnEnrolledDate = new global::System.Data.DataColumn("EnrolledDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnrolledDate);
                this.columnDischargedDate = new global::System.Data.DataColumn("DischargedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargedDate);
                this.columnPrimaryAssignment = new global::System.Data.DataColumn("PrimaryAssignment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryAssignment);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnAssignedStaffId = new global::System.Data.DataColumn("AssignedStaffId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssignedStaffId);
                this.columnIsInitialize = new global::System.Data.DataColumn("IsInitialize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInitialize);
                this.columnCurrentDocumentVersionId = new global::System.Data.DataColumn("CurrentDocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDocumentVersionId);
                this.columnPriorityNumber = new global::System.Data.DataColumn("PriorityNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorityNumber);
                this.columnEmergent = new global::System.Data.DataColumn("Emergent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmergent);
                this.columnMustBeEnrolledByDate = new global::System.Data.DataColumn("MustBeEnrolledByDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMustBeEnrolledByDate);
                this.columnPrerequisite = new global::System.Data.DataColumn("Prerequisite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrerequisite);
                this.columnWaitlistPriorityComment = new global::System.Data.DataColumn("WaitlistPriorityComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitlistPriorityComment);
                this.columnPriorityPopulation = new global::System.Data.DataColumn("PriorityPopulation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorityPopulation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnClientProgramId}, true));
                this.columnClientProgramId.AutoIncrement = true;
                this.columnClientProgramId.AutoIncrementSeed = -1;
                this.columnClientProgramId.AutoIncrementStep = -1;
                this.columnClientProgramId.AllowDBNull = false;
                this.columnClientProgramId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnClientId.AllowDBNull = false;
                this.columnProgramId.AllowDBNull = false;
                this.columnPrimaryAssignment.AllowDBNull = false;
                this.columnPrimaryAssignment.MaxLength = 1;
                this.columnComment.MaxLength = 2147483647;
                this.columnIsInitialize.DefaultValue = ((string)("N"));
                this.columnPriorityPopulation.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientProgramsRow NewClientProgramsRow() {
                return ((ClientProgramsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientProgramsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ClientProgramsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientProgramsRowChanged != null)) {
                    this.ClientProgramsRowChanged(this, new ClientProgramsRowChangeEvent(((ClientProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientProgramsRowChanging != null)) {
                    this.ClientProgramsRowChanging(this, new ClientProgramsRowChangeEvent(((ClientProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientProgramsRowDeleted != null)) {
                    this.ClientProgramsRowDeleted(this, new ClientProgramsRowChangeEvent(((ClientProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientProgramsRowDeleting != null)) {
                    this.ClientProgramsRowDeleting(this, new ClientProgramsRowChangeEvent(((ClientProgramsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClientProgramsRow(ClientProgramsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatasetDischarge ds = new DatasetDischarge();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientProgramsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomDocumentDischargesDataTable : global::System.Data.TypedTableBase<CustomDocumentDischargesRow> {
            
            private global::System.Data.DataColumn columnDocumentVersionId;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnRecordDeleted;
            
            private global::System.Data.DataColumn columnDeletedBy;
            
            private global::System.Data.DataColumn columnDeletedDate;
            
            private global::System.Data.DataColumn columnNewPrimaryClientProgramId;
            
            private global::System.Data.DataColumn columnDischargeType;
            
            private global::System.Data.DataColumn columnTransitionDischarge;
            
            private global::System.Data.DataColumn columnDischargeDetails;
            
            private global::System.Data.DataColumn columnOverallProgress;
            
            private global::System.Data.DataColumn columnStatusLastContact;
            
            private global::System.Data.DataColumn columnEducationLevel;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnEducationStatus;
            
            private global::System.Data.DataColumn columnEmploymentStatus;
            
            private global::System.Data.DataColumn columnForensicCourtOrdered;
            
            private global::System.Data.DataColumn columnCurrentlyServingMilitary;
            
            private global::System.Data.DataColumn columnLegal;
            
            private global::System.Data.DataColumn columnJusticeSystem;
            
            private global::System.Data.DataColumn columnLivingArrangement;
            
            private global::System.Data.DataColumn columnArrests;
            
            private global::System.Data.DataColumn columnAdvanceDirective;
            
            private global::System.Data.DataColumn columnTobaccoUse;
            
            private global::System.Data.DataColumn columnAgeOfFirstTobaccoUse;
            
            private global::System.Data.DataColumn columnCountyResidence;
            
            private global::System.Data.DataColumn columnCountyFinancialResponsibility;
            
            private global::System.Data.DataColumn columnNoReferral;
            
            private global::System.Data.DataColumn columnSymptomsReoccur;
            
            private global::System.Data.DataColumn columnReferredTo;
            
            private global::System.Data.DataColumn columnReason;
            
            private global::System.Data.DataColumn columnDatesTimes;
            
            private global::System.Data.DataColumn columnReferralDischarge;
            
            private global::System.Data.DataColumn columnTreatmentCompletion;
            
            private global::System.Data.DataColumn columnSummaryOfServicesProvided;
            
            private global::System.Data.DataColumn columnPresentingProblems;
            
            private global::System.Data.DataColumn columnCoOccurringHealthProblem;
            
            private global::System.Data.DataColumn columnClientType;
            
            private global::System.Data.DataColumn columnHealthInsurance;
            
            private global::System.Data.DataColumn columnVocationalRehab;
            
            private global::System.Data.DataColumn columnSchoolAttendance;
            
            private global::System.Data.DataColumn columnStableHousing;
            
            private global::System.Data.DataColumn columnNumberOfMonthsEmployed;
            
            private global::System.Data.DataColumn columnNumberOfEmployers;
            
            private global::System.Data.DataColumn columnArrestsInLast12Months;
            
            private global::System.Data.DataColumn columnIncarceratedInLast12Months;
            
            private global::System.Data.DataColumn columnGrossAnnualHouseholdIncome;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesDataTable() {
                this.TableName = "CustomDocumentDischarges";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDischargesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomDocumentDischargesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocumentVersionIdColumn {
                get {
                    return this.columnDocumentVersionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecordDeletedColumn {
                get {
                    return this.columnRecordDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedByColumn {
                get {
                    return this.columnDeletedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeletedDateColumn {
                get {
                    return this.columnDeletedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewPrimaryClientProgramIdColumn {
                get {
                    return this.columnNewPrimaryClientProgramId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeTypeColumn {
                get {
                    return this.columnDischargeType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransitionDischargeColumn {
                get {
                    return this.columnTransitionDischarge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DischargeDetailsColumn {
                get {
                    return this.columnDischargeDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OverallProgressColumn {
                get {
                    return this.columnOverallProgress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusLastContactColumn {
                get {
                    return this.columnStatusLastContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducationLevelColumn {
                get {
                    return this.columnEducationLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducationStatusColumn {
                get {
                    return this.columnEducationStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmploymentStatusColumn {
                get {
                    return this.columnEmploymentStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ForensicCourtOrderedColumn {
                get {
                    return this.columnForensicCourtOrdered;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrentlyServingMilitaryColumn {
                get {
                    return this.columnCurrentlyServingMilitary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LegalColumn {
                get {
                    return this.columnLegal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JusticeSystemColumn {
                get {
                    return this.columnJusticeSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LivingArrangementColumn {
                get {
                    return this.columnLivingArrangement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrestsColumn {
                get {
                    return this.columnArrests;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvanceDirectiveColumn {
                get {
                    return this.columnAdvanceDirective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TobaccoUseColumn {
                get {
                    return this.columnTobaccoUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeOfFirstTobaccoUseColumn {
                get {
                    return this.columnAgeOfFirstTobaccoUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyResidenceColumn {
                get {
                    return this.columnCountyResidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountyFinancialResponsibilityColumn {
                get {
                    return this.columnCountyFinancialResponsibility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoReferralColumn {
                get {
                    return this.columnNoReferral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SymptomsReoccurColumn {
                get {
                    return this.columnSymptomsReoccur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferredToColumn {
                get {
                    return this.columnReferredTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonColumn {
                get {
                    return this.columnReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DatesTimesColumn {
                get {
                    return this.columnDatesTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferralDischargeColumn {
                get {
                    return this.columnReferralDischarge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TreatmentCompletionColumn {
                get {
                    return this.columnTreatmentCompletion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SummaryOfServicesProvidedColumn {
                get {
                    return this.columnSummaryOfServicesProvided;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PresentingProblemsColumn {
                get {
                    return this.columnPresentingProblems;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoOccurringHealthProblemColumn {
                get {
                    return this.columnCoOccurringHealthProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientTypeColumn {
                get {
                    return this.columnClientType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HealthInsuranceColumn {
                get {
                    return this.columnHealthInsurance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VocationalRehabColumn {
                get {
                    return this.columnVocationalRehab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolAttendanceColumn {
                get {
                    return this.columnSchoolAttendance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StableHousingColumn {
                get {
                    return this.columnStableHousing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfMonthsEmployedColumn {
                get {
                    return this.columnNumberOfMonthsEmployed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumberOfEmployersColumn {
                get {
                    return this.columnNumberOfEmployers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrestsInLast12MonthsColumn {
                get {
                    return this.columnArrestsInLast12Months;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncarceratedInLast12MonthsColumn {
                get {
                    return this.columnIncarceratedInLast12Months;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossAnnualHouseholdIncomeColumn {
                get {
                    return this.columnGrossAnnualHouseholdIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow this[int index] {
                get {
                    return ((CustomDocumentDischargesRow)(this.Rows[index]));
                }
            }
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowChanging;
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowChanged;
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowDeleting;
            
            public event CustomDocumentDischargesRowChangeEventHandler CustomDocumentDischargesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomDocumentDischargesRow(CustomDocumentDischargesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow AddCustomDocumentDischargesRow(
                        int DocumentVersionId, 
                        string CreatedBy, 
                        System.DateTime CreatedDate, 
                        string ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        string RecordDeleted, 
                        string DeletedBy, 
                        System.DateTime DeletedDate, 
                        int NewPrimaryClientProgramId, 
                        string DischargeType, 
                        int TransitionDischarge, 
                        string DischargeDetails, 
                        string OverallProgress, 
                        string StatusLastContact, 
                        int EducationLevel, 
                        int MaritalStatus, 
                        int EducationStatus, 
                        int EmploymentStatus, 
                        int ForensicCourtOrdered, 
                        int CurrentlyServingMilitary, 
                        int Legal, 
                        int JusticeSystem, 
                        int LivingArrangement, 
                        string Arrests, 
                        int AdvanceDirective, 
                        int TobaccoUse, 
                        string AgeOfFirstTobaccoUse, 
                        int CountyResidence, 
                        int CountyFinancialResponsibility, 
                        string NoReferral, 
                        string SymptomsReoccur, 
                        string ReferredTo, 
                        string Reason, 
                        string DatesTimes, 
                        int ReferralDischarge, 
                        int TreatmentCompletion, 
                        string SummaryOfServicesProvided, 
                        string PresentingProblems, 
                        string CoOccurringHealthProblem, 
                        int ClientType, 
                        string HealthInsurance, 
                        string VocationalRehab, 
                        int SchoolAttendance, 
                        int StableHousing, 
                        int NumberOfMonthsEmployed, 
                        int NumberOfEmployers, 
                        int ArrestsInLast12Months, 
                        int IncarceratedInLast12Months, 
                        decimal GrossAnnualHouseholdIncome) {
                CustomDocumentDischargesRow rowCustomDocumentDischargesRow = ((CustomDocumentDischargesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocumentVersionId,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        RecordDeleted,
                        DeletedBy,
                        DeletedDate,
                        NewPrimaryClientProgramId,
                        DischargeType,
                        TransitionDischarge,
                        DischargeDetails,
                        OverallProgress,
                        StatusLastContact,
                        EducationLevel,
                        MaritalStatus,
                        EducationStatus,
                        EmploymentStatus,
                        ForensicCourtOrdered,
                        CurrentlyServingMilitary,
                        Legal,
                        JusticeSystem,
                        LivingArrangement,
                        Arrests,
                        AdvanceDirective,
                        TobaccoUse,
                        AgeOfFirstTobaccoUse,
                        CountyResidence,
                        CountyFinancialResponsibility,
                        NoReferral,
                        SymptomsReoccur,
                        ReferredTo,
                        Reason,
                        DatesTimes,
                        ReferralDischarge,
                        TreatmentCompletion,
                        SummaryOfServicesProvided,
                        PresentingProblems,
                        CoOccurringHealthProblem,
                        ClientType,
                        HealthInsurance,
                        VocationalRehab,
                        SchoolAttendance,
                        StableHousing,
                        NumberOfMonthsEmployed,
                        NumberOfEmployers,
                        ArrestsInLast12Months,
                        IncarceratedInLast12Months,
                        GrossAnnualHouseholdIncome};
                rowCustomDocumentDischargesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomDocumentDischargesRow);
                return rowCustomDocumentDischargesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow FindByDocumentVersionId(int DocumentVersionId) {
                return ((CustomDocumentDischargesRow)(this.Rows.Find(new object[] {
                            DocumentVersionId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomDocumentDischargesDataTable cln = ((CustomDocumentDischargesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomDocumentDischargesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocumentVersionId = base.Columns["DocumentVersionId"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnRecordDeleted = base.Columns["RecordDeleted"];
                this.columnDeletedBy = base.Columns["DeletedBy"];
                this.columnDeletedDate = base.Columns["DeletedDate"];
                this.columnNewPrimaryClientProgramId = base.Columns["NewPrimaryClientProgramId"];
                this.columnDischargeType = base.Columns["DischargeType"];
                this.columnTransitionDischarge = base.Columns["TransitionDischarge"];
                this.columnDischargeDetails = base.Columns["DischargeDetails"];
                this.columnOverallProgress = base.Columns["OverallProgress"];
                this.columnStatusLastContact = base.Columns["StatusLastContact"];
                this.columnEducationLevel = base.Columns["EducationLevel"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnEducationStatus = base.Columns["EducationStatus"];
                this.columnEmploymentStatus = base.Columns["EmploymentStatus"];
                this.columnForensicCourtOrdered = base.Columns["ForensicCourtOrdered"];
                this.columnCurrentlyServingMilitary = base.Columns["CurrentlyServingMilitary"];
                this.columnLegal = base.Columns["Legal"];
                this.columnJusticeSystem = base.Columns["JusticeSystem"];
                this.columnLivingArrangement = base.Columns["LivingArrangement"];
                this.columnArrests = base.Columns["Arrests"];
                this.columnAdvanceDirective = base.Columns["AdvanceDirective"];
                this.columnTobaccoUse = base.Columns["TobaccoUse"];
                this.columnAgeOfFirstTobaccoUse = base.Columns["AgeOfFirstTobaccoUse"];
                this.columnCountyResidence = base.Columns["CountyResidence"];
                this.columnCountyFinancialResponsibility = base.Columns["CountyFinancialResponsibility"];
                this.columnNoReferral = base.Columns["NoReferral"];
                this.columnSymptomsReoccur = base.Columns["SymptomsReoccur"];
                this.columnReferredTo = base.Columns["ReferredTo"];
                this.columnReason = base.Columns["Reason"];
                this.columnDatesTimes = base.Columns["DatesTimes"];
                this.columnReferralDischarge = base.Columns["ReferralDischarge"];
                this.columnTreatmentCompletion = base.Columns["TreatmentCompletion"];
                this.columnSummaryOfServicesProvided = base.Columns["SummaryOfServicesProvided"];
                this.columnPresentingProblems = base.Columns["PresentingProblems"];
                this.columnCoOccurringHealthProblem = base.Columns["CoOccurringHealthProblem"];
                this.columnClientType = base.Columns["ClientType"];
                this.columnHealthInsurance = base.Columns["HealthInsurance"];
                this.columnVocationalRehab = base.Columns["VocationalRehab"];
                this.columnSchoolAttendance = base.Columns["SchoolAttendance"];
                this.columnStableHousing = base.Columns["StableHousing"];
                this.columnNumberOfMonthsEmployed = base.Columns["NumberOfMonthsEmployed"];
                this.columnNumberOfEmployers = base.Columns["NumberOfEmployers"];
                this.columnArrestsInLast12Months = base.Columns["ArrestsInLast12Months"];
                this.columnIncarceratedInLast12Months = base.Columns["IncarceratedInLast12Months"];
                this.columnGrossAnnualHouseholdIncome = base.Columns["GrossAnnualHouseholdIncome"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocumentVersionId = new global::System.Data.DataColumn("DocumentVersionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocumentVersionId);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnRecordDeleted = new global::System.Data.DataColumn("RecordDeleted", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecordDeleted);
                this.columnDeletedBy = new global::System.Data.DataColumn("DeletedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedBy);
                this.columnDeletedDate = new global::System.Data.DataColumn("DeletedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeletedDate);
                this.columnNewPrimaryClientProgramId = new global::System.Data.DataColumn("NewPrimaryClientProgramId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewPrimaryClientProgramId);
                this.columnDischargeType = new global::System.Data.DataColumn("DischargeType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeType);
                this.columnTransitionDischarge = new global::System.Data.DataColumn("TransitionDischarge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransitionDischarge);
                this.columnDischargeDetails = new global::System.Data.DataColumn("DischargeDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDetails);
                this.columnOverallProgress = new global::System.Data.DataColumn("OverallProgress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallProgress);
                this.columnStatusLastContact = new global::System.Data.DataColumn("StatusLastContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusLastContact);
                this.columnEducationLevel = new global::System.Data.DataColumn("EducationLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducationLevel);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnEducationStatus = new global::System.Data.DataColumn("EducationStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducationStatus);
                this.columnEmploymentStatus = new global::System.Data.DataColumn("EmploymentStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmploymentStatus);
                this.columnForensicCourtOrdered = new global::System.Data.DataColumn("ForensicCourtOrdered", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForensicCourtOrdered);
                this.columnCurrentlyServingMilitary = new global::System.Data.DataColumn("CurrentlyServingMilitary", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentlyServingMilitary);
                this.columnLegal = new global::System.Data.DataColumn("Legal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegal);
                this.columnJusticeSystem = new global::System.Data.DataColumn("JusticeSystem", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJusticeSystem);
                this.columnLivingArrangement = new global::System.Data.DataColumn("LivingArrangement", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLivingArrangement);
                this.columnArrests = new global::System.Data.DataColumn("Arrests", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrests);
                this.columnAdvanceDirective = new global::System.Data.DataColumn("AdvanceDirective", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvanceDirective);
                this.columnTobaccoUse = new global::System.Data.DataColumn("TobaccoUse", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTobaccoUse);
                this.columnAgeOfFirstTobaccoUse = new global::System.Data.DataColumn("AgeOfFirstTobaccoUse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOfFirstTobaccoUse);
                this.columnCountyResidence = new global::System.Data.DataColumn("CountyResidence", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyResidence);
                this.columnCountyFinancialResponsibility = new global::System.Data.DataColumn("CountyFinancialResponsibility", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyFinancialResponsibility);
                this.columnNoReferral = new global::System.Data.DataColumn("NoReferral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoReferral);
                this.columnSymptomsReoccur = new global::System.Data.DataColumn("SymptomsReoccur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymptomsReoccur);
                this.columnReferredTo = new global::System.Data.DataColumn("ReferredTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferredTo);
                this.columnReason = new global::System.Data.DataColumn("Reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReason);
                this.columnDatesTimes = new global::System.Data.DataColumn("DatesTimes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatesTimes);
                this.columnReferralDischarge = new global::System.Data.DataColumn("ReferralDischarge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferralDischarge);
                this.columnTreatmentCompletion = new global::System.Data.DataColumn("TreatmentCompletion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatmentCompletion);
                this.columnSummaryOfServicesProvided = new global::System.Data.DataColumn("SummaryOfServicesProvided", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSummaryOfServicesProvided);
                this.columnPresentingProblems = new global::System.Data.DataColumn("PresentingProblems", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentingProblems);
                this.columnCoOccurringHealthProblem = new global::System.Data.DataColumn("CoOccurringHealthProblem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoOccurringHealthProblem);
                this.columnClientType = new global::System.Data.DataColumn("ClientType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientType);
                this.columnHealthInsurance = new global::System.Data.DataColumn("HealthInsurance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHealthInsurance);
                this.columnVocationalRehab = new global::System.Data.DataColumn("VocationalRehab", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVocationalRehab);
                this.columnSchoolAttendance = new global::System.Data.DataColumn("SchoolAttendance", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolAttendance);
                this.columnStableHousing = new global::System.Data.DataColumn("StableHousing", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStableHousing);
                this.columnNumberOfMonthsEmployed = new global::System.Data.DataColumn("NumberOfMonthsEmployed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfMonthsEmployed);
                this.columnNumberOfEmployers = new global::System.Data.DataColumn("NumberOfEmployers", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfEmployers);
                this.columnArrestsInLast12Months = new global::System.Data.DataColumn("ArrestsInLast12Months", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrestsInLast12Months);
                this.columnIncarceratedInLast12Months = new global::System.Data.DataColumn("IncarceratedInLast12Months", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncarceratedInLast12Months);
                this.columnGrossAnnualHouseholdIncome = new global::System.Data.DataColumn("GrossAnnualHouseholdIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossAnnualHouseholdIncome);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDocumentVersionId}, true));
                this.columnDocumentVersionId.AllowDBNull = false;
                this.columnDocumentVersionId.Unique = true;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedBy.MaxLength = 30;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnModifiedBy.AllowDBNull = false;
                this.columnModifiedBy.MaxLength = 30;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnRecordDeleted.MaxLength = 1;
                this.columnDeletedBy.MaxLength = 30;
                this.columnDischargeType.MaxLength = 1;
                this.columnDischargeDetails.MaxLength = 2147483647;
                this.columnOverallProgress.MaxLength = 2147483647;
                this.columnStatusLastContact.MaxLength = 2147483647;
                this.columnArrests.MaxLength = 20;
                this.columnAgeOfFirstTobaccoUse.MaxLength = 20;
                this.columnNoReferral.MaxLength = 1;
                this.columnSymptomsReoccur.MaxLength = 2147483647;
                this.columnReferredTo.MaxLength = 2147483647;
                this.columnReason.MaxLength = 2147483647;
                this.columnDatesTimes.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow NewCustomDocumentDischargesRow() {
                return ((CustomDocumentDischargesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomDocumentDischargesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomDocumentDischargesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomDocumentDischargesRowChanged != null)) {
                    this.CustomDocumentDischargesRowChanged(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomDocumentDischargesRowChanging != null)) {
                    this.CustomDocumentDischargesRowChanging(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomDocumentDischargesRowDeleted != null)) {
                    this.CustomDocumentDischargesRowDeleted(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomDocumentDischargesRowDeleting != null)) {
                    this.CustomDocumentDischargesRowDeleting(this, new CustomDocumentDischargesRowChangeEvent(((CustomDocumentDischargesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomDocumentDischargesRow(CustomDocumentDischargesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatasetDischarge ds = new DatasetDischarge();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomDocumentDischargesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDischargeProgramsRow : global::System.Data.DataRow {
            
            private CustomDischargeProgramsDataTable tableCustomDischargePrograms;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDischargeProgramsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDischargePrograms = ((CustomDischargeProgramsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DischargeProgramId {
                get {
                    return ((int)(this[this.tableCustomDischargePrograms.DischargeProgramIdColumn]));
                }
                set {
                    this[this.tableCustomDischargePrograms.DischargeProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDischargePrograms.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDischargePrograms.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDischargePrograms.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDischargePrograms.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDischargePrograms.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDischargePrograms.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDischargePrograms.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDischargePrograms.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDischargePrograms.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDischargePrograms\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDischargePrograms.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDischargePrograms.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDischargePrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargePrograms.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDischargePrograms.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDischargePrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargePrograms.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomDischargePrograms.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomDischargePrograms\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargePrograms.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientProgramId {
                get {
                    try {
                        return ((int)(this[this.tableCustomDischargePrograms.ClientProgramIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientProgramId\' in table \'CustomDischargePrograms\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargePrograms.ClientProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDischargePrograms.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDischargePrograms.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDischargePrograms.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDischargePrograms.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDischargePrograms.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDischargePrograms.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomDischargePrograms.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomDischargePrograms.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientProgramIdNull() {
                return this.IsNull(this.tableCustomDischargePrograms.ClientProgramIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientProgramIdNull() {
                this[this.tableCustomDischargePrograms.ClientProgramIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDischargeReferralsRow : global::System.Data.DataRow {
            
            private CustomDischargeReferralsDataTable tableCustomDischargeReferrals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDischargeReferralsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDischargeReferrals = ((CustomDischargeReferralsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DischargeReferralId {
                get {
                    return ((int)(this[this.tableCustomDischargeReferrals.DischargeReferralIdColumn]));
                }
                set {
                    this[this.tableCustomDischargeReferrals.DischargeReferralIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDischargeReferrals.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDischargeReferrals.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDischargeReferrals.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDischargeReferrals.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDischargeReferrals.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDischargeReferrals.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDischargeReferrals.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDischargeReferrals.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDischargeReferrals.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDischargeReferrals\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDischargeReferrals.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDischargeReferrals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDischargeReferrals.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDischargeReferrals\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableCustomDischargeReferrals.DocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocumentVersionId\' in table \'CustomDischargeReferrals\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Referral {
                get {
                    try {
                        return ((int)(this[this.tableCustomDischargeReferrals.ReferralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Referral\' in table \'CustomDischargeReferrals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.ReferralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Program {
                get {
                    try {
                        return ((int)(this[this.tableCustomDischargeReferrals.ProgramColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Program\' in table \'CustomDischargeReferrals\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.ProgramColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferralText {
                get {
                    try {
                        return ((string)(this[this.tableCustomDischargeReferrals.ReferralTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralText\' in table \'CustomDischargeReferrals\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.ReferralTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProgramText {
                get {
                    try {
                        return ((string)(this[this.tableCustomDischargeReferrals.ProgramTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgramText\' in table \'CustomDischargeReferrals\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDischargeReferrals.ProgramTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDischargeReferrals.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDischargeReferrals.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDischargeReferrals.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocumentVersionIdNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.DocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocumentVersionIdNull() {
                this[this.tableCustomDischargeReferrals.DocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.ReferralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralNull() {
                this[this.tableCustomDischargeReferrals.ReferralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.ProgramColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramNull() {
                this[this.tableCustomDischargeReferrals.ProgramColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralTextNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.ReferralTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralTextNull() {
                this[this.tableCustomDischargeReferrals.ReferralTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProgramTextNull() {
                return this.IsNull(this.tableCustomDischargeReferrals.ProgramTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProgramTextNull() {
                this[this.tableCustomDischargeReferrals.ProgramTextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClientProgramsRow : global::System.Data.DataRow {
            
            private ClientProgramsDataTable tableClientPrograms;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClientProgramsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientPrograms = ((ClientProgramsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientProgramId {
                get {
                    return ((int)(this[this.tableClientPrograms.ClientProgramIdColumn]));
                }
                set {
                    this[this.tableClientPrograms.ClientProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableClientPrograms.CreatedByColumn]));
                }
                set {
                    this[this.tableClientPrograms.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClientPrograms.CreatedDateColumn]));
                }
                set {
                    this[this.tableClientPrograms.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableClientPrograms.ModifiedByColumn]));
                }
                set {
                    this[this.tableClientPrograms.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClientPrograms.ModifiedDateColumn]));
                }
                set {
                    this[this.tableClientPrograms.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableClientPrograms.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientPrograms.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableClientPrograms.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientId {
                get {
                    return ((int)(this[this.tableClientPrograms.ClientIdColumn]));
                }
                set {
                    this[this.tableClientPrograms.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProgramId {
                get {
                    return ((int)(this[this.tableClientPrograms.ProgramIdColumn]));
                }
                set {
                    this[this.tableClientPrograms.ProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Status {
                get {
                    try {
                        return ((int)(this[this.tableClientPrograms.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequestedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientPrograms.RequestedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestedDate\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.RequestedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EnrolledDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientPrograms.EnrolledDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnrolledDate\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.EnrolledDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DischargedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientPrograms.DischargedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargedDate\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.DischargedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimaryAssignment {
                get {
                    return ((string)(this[this.tableClientPrograms.PrimaryAssignmentColumn]));
                }
                set {
                    this[this.tableClientPrograms.PrimaryAssignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableClientPrograms.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AssignedStaffId {
                get {
                    try {
                        return ((int)(this[this.tableClientPrograms.AssignedStaffIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssignedStaffId\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.AssignedStaffIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsInitialize {
                get {
                    try {
                        return ((string)(this[this.tableClientPrograms.IsInitializeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsInitialize\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.IsInitializeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrentDocumentVersionId {
                get {
                    try {
                        return ((int)(this[this.tableClientPrograms.CurrentDocumentVersionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDocumentVersionId\' in table \'ClientPrograms\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.CurrentDocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriorityNumber {
                get {
                    try {
                        return ((int)(this[this.tableClientPrograms.PriorityNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorityNumber\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.PriorityNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Emergent {
                get {
                    try {
                        return ((string)(this[this.tableClientPrograms.EmergentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Emergent\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.EmergentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MustBeEnrolledByDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientPrograms.MustBeEnrolledByDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MustBeEnrolledByDate\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.MustBeEnrolledByDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Prerequisite {
                get {
                    try {
                        return ((int)(this[this.tableClientPrograms.PrerequisiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Prerequisite\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.PrerequisiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WaitlistPriorityComment {
                get {
                    try {
                        return ((string)(this[this.tableClientPrograms.WaitlistPriorityCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaitlistPriorityComment\' in table \'ClientPrograms\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.WaitlistPriorityCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PriorityPopulation {
                get {
                    try {
                        return ((string)(this[this.tableClientPrograms.PriorityPopulationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorityPopulation\' in table \'ClientPrograms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientPrograms.PriorityPopulationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableClientPrograms.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableClientPrograms.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableClientPrograms.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableClientPrograms.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableClientPrograms.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableClientPrograms.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableClientPrograms.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableClientPrograms.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestedDateNull() {
                return this.IsNull(this.tableClientPrograms.RequestedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestedDateNull() {
                this[this.tableClientPrograms.RequestedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnrolledDateNull() {
                return this.IsNull(this.tableClientPrograms.EnrolledDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnrolledDateNull() {
                this[this.tableClientPrograms.EnrolledDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDischargedDateNull() {
                return this.IsNull(this.tableClientPrograms.DischargedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDischargedDateNull() {
                this[this.tableClientPrograms.DischargedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableClientPrograms.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableClientPrograms.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAssignedStaffIdNull() {
                return this.IsNull(this.tableClientPrograms.AssignedStaffIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAssignedStaffIdNull() {
                this[this.tableClientPrograms.AssignedStaffIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsInitializeNull() {
                return this.IsNull(this.tableClientPrograms.IsInitializeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsInitializeNull() {
                this[this.tableClientPrograms.IsInitializeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentDocumentVersionIdNull() {
                return this.IsNull(this.tableClientPrograms.CurrentDocumentVersionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentDocumentVersionIdNull() {
                this[this.tableClientPrograms.CurrentDocumentVersionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorityNumberNull() {
                return this.IsNull(this.tableClientPrograms.PriorityNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorityNumberNull() {
                this[this.tableClientPrograms.PriorityNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmergentNull() {
                return this.IsNull(this.tableClientPrograms.EmergentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmergentNull() {
                this[this.tableClientPrograms.EmergentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMustBeEnrolledByDateNull() {
                return this.IsNull(this.tableClientPrograms.MustBeEnrolledByDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMustBeEnrolledByDateNull() {
                this[this.tableClientPrograms.MustBeEnrolledByDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrerequisiteNull() {
                return this.IsNull(this.tableClientPrograms.PrerequisiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrerequisiteNull() {
                this[this.tableClientPrograms.PrerequisiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWaitlistPriorityCommentNull() {
                return this.IsNull(this.tableClientPrograms.WaitlistPriorityCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWaitlistPriorityCommentNull() {
                this[this.tableClientPrograms.WaitlistPriorityCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriorityPopulationNull() {
                return this.IsNull(this.tableClientPrograms.PriorityPopulationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriorityPopulationNull() {
                this[this.tableClientPrograms.PriorityPopulationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomDocumentDischargesRow : global::System.Data.DataRow {
            
            private CustomDocumentDischargesDataTable tableCustomDocumentDischarges;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomDocumentDischargesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomDocumentDischarges = ((CustomDocumentDischargesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DocumentVersionId {
                get {
                    return ((int)(this[this.tableCustomDocumentDischarges.DocumentVersionIdColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.DocumentVersionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreatedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDischarges.CreatedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.CreatedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModifiedBy {
                get {
                    return ((string)(this[this.tableCustomDocumentDischarges.ModifiedByColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.ModifiedDateColumn]));
                }
                set {
                    this[this.tableCustomDocumentDischarges.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecordDeleted {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.RecordDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecordDeleted\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.RecordDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeletedBy {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DeletedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedBy\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DeletedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeletedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomDocumentDischarges.DeletedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeletedDate\' in table \'CustomDocumentDischarges\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DeletedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NewPrimaryClientProgramId {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.NewPrimaryClientProgramIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewPrimaryClientProgramId\' in table \'CustomDocumentDischarg" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.NewPrimaryClientProgramIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DischargeType {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DischargeTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeType\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DischargeTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransitionDischarge {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.TransitionDischargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransitionDischarge\' in table \'CustomDocumentDischarges\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.TransitionDischargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DischargeDetails {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DischargeDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDetails\' in table \'CustomDocumentDischarges\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DischargeDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OverallProgress {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.OverallProgressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallProgress\' in table \'CustomDocumentDischarges\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.OverallProgressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusLastContact {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.StatusLastContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusLastContact\' in table \'CustomDocumentDischarges\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.StatusLastContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EducationLevel {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.EducationLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EducationLevel\' in table \'CustomDocumentDischarges\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.EducationLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaritalStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EducationStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.EducationStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EducationStatus\' in table \'CustomDocumentDischarges\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.EducationStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EmploymentStatus {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.EmploymentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmploymentStatus\' in table \'CustomDocumentDischarges\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.EmploymentStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ForensicCourtOrdered {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ForensicCourtOrderedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForensicCourtOrdered\' in table \'CustomDocumentDischarges\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ForensicCourtOrderedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CurrentlyServingMilitary {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.CurrentlyServingMilitaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentlyServingMilitary\' in table \'CustomDocumentDischarge" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.CurrentlyServingMilitaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Legal {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.LegalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Legal\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.LegalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JusticeSystem {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.JusticeSystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JusticeSystem\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.JusticeSystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LivingArrangement {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.LivingArrangementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LivingArrangement\' in table \'CustomDocumentDischarges\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.LivingArrangementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Arrests {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ArrestsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Arrests\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ArrestsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AdvanceDirective {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.AdvanceDirectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvanceDirective\' in table \'CustomDocumentDischarges\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.AdvanceDirectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TobaccoUse {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.TobaccoUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TobaccoUse\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.TobaccoUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeOfFirstTobaccoUse {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.AgeOfFirstTobaccoUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOfFirstTobaccoUse\' in table \'CustomDocumentDischarges\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.AgeOfFirstTobaccoUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CountyResidence {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.CountyResidenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyResidence\' in table \'CustomDocumentDischarges\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.CountyResidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CountyFinancialResponsibility {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.CountyFinancialResponsibilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyFinancialResponsibility\' in table \'CustomDocumentDisc" +
                                "harges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.CountyFinancialResponsibilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoReferral {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.NoReferralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoReferral\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.NoReferralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SymptomsReoccur {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.SymptomsReoccurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SymptomsReoccur\' in table \'CustomDocumentDischarges\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.SymptomsReoccurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferredTo {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ReferredToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferredTo\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReferredToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reason {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.ReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reason\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DatesTimes {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.DatesTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DatesTimes\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.DatesTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ReferralDischarge {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ReferralDischargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferralDischarge\' in table \'CustomDocumentDischarges\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ReferralDischargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TreatmentCompletion {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.TreatmentCompletionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TreatmentCompletion\' in table \'CustomDocumentDischarges\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.TreatmentCompletionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SummaryOfServicesProvided {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.SummaryOfServicesProvidedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SummaryOfServicesProvided\' in table \'CustomDocumentDischarg" +
                                "es\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.SummaryOfServicesProvidedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PresentingProblems {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.PresentingProblemsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PresentingProblems\' in table \'CustomDocumentDischarges\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.PresentingProblemsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CoOccurringHealthProblem {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.CoOccurringHealthProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoOccurringHealthProblem\' in table \'CustomDocumentDischarge" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.CoOccurringHealthProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClientType {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ClientTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientType\' in table \'CustomDocumentDischarges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ClientTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HealthInsurance {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.HealthInsuranceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HealthInsurance\' in table \'CustomDocumentDischarges\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.HealthInsuranceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VocationalRehab {
                get {
                    try {
                        return ((string)(this[this.tableCustomDocumentDischarges.VocationalRehabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VocationalRehab\' in table \'CustomDocumentDischarges\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.VocationalRehabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SchoolAttendance {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.SchoolAttendanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolAttendance\' in table \'CustomDocumentDischarges\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.SchoolAttendanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StableHousing {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.StableHousingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StableHousing\' in table \'CustomDocumentDischarges\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.StableHousingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfMonthsEmployed {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.NumberOfMonthsEmployedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfMonthsEmployed\' in table \'CustomDocumentDischarges\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.NumberOfMonthsEmployedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumberOfEmployers {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.NumberOfEmployersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfEmployers\' in table \'CustomDocumentDischarges\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.NumberOfEmployersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ArrestsInLast12Months {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.ArrestsInLast12MonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrestsInLast12Months\' in table \'CustomDocumentDischarges\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.ArrestsInLast12MonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IncarceratedInLast12Months {
                get {
                    try {
                        return ((int)(this[this.tableCustomDocumentDischarges.IncarceratedInLast12MonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncarceratedInLast12Months\' in table \'CustomDocumentDischar" +
                                "ges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.IncarceratedInLast12MonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GrossAnnualHouseholdIncome {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomDocumentDischarges.GrossAnnualHouseholdIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossAnnualHouseholdIncome\' in table \'CustomDocumentDischar" +
                                "ges\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomDocumentDischarges.GrossAnnualHouseholdIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecordDeletedNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.RecordDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecordDeletedNull() {
                this[this.tableCustomDocumentDischarges.RecordDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedByNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DeletedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedByNull() {
                this[this.tableCustomDocumentDischarges.DeletedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeletedDateNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DeletedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeletedDateNull() {
                this[this.tableCustomDocumentDischarges.DeletedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewPrimaryClientProgramIdNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.NewPrimaryClientProgramIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewPrimaryClientProgramIdNull() {
                this[this.tableCustomDocumentDischarges.NewPrimaryClientProgramIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDischargeTypeNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DischargeTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDischargeTypeNull() {
                this[this.tableCustomDocumentDischarges.DischargeTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransitionDischargeNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.TransitionDischargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransitionDischargeNull() {
                this[this.tableCustomDocumentDischarges.TransitionDischargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDischargeDetailsNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DischargeDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDischargeDetailsNull() {
                this[this.tableCustomDocumentDischarges.DischargeDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOverallProgressNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.OverallProgressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOverallProgressNull() {
                this[this.tableCustomDocumentDischarges.OverallProgressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusLastContactNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.StatusLastContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusLastContactNull() {
                this[this.tableCustomDocumentDischarges.StatusLastContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEducationLevelNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.EducationLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEducationLevelNull() {
                this[this.tableCustomDocumentDischarges.EducationLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaritalStatusNull() {
                this[this.tableCustomDocumentDischarges.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEducationStatusNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.EducationStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEducationStatusNull() {
                this[this.tableCustomDocumentDischarges.EducationStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmploymentStatusNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.EmploymentStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmploymentStatusNull() {
                this[this.tableCustomDocumentDischarges.EmploymentStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsForensicCourtOrderedNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ForensicCourtOrderedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetForensicCourtOrderedNull() {
                this[this.tableCustomDocumentDischarges.ForensicCourtOrderedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrentlyServingMilitaryNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.CurrentlyServingMilitaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrentlyServingMilitaryNull() {
                this[this.tableCustomDocumentDischarges.CurrentlyServingMilitaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLegalNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.LegalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLegalNull() {
                this[this.tableCustomDocumentDischarges.LegalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJusticeSystemNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.JusticeSystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJusticeSystemNull() {
                this[this.tableCustomDocumentDischarges.JusticeSystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLivingArrangementNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.LivingArrangementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLivingArrangementNull() {
                this[this.tableCustomDocumentDischarges.LivingArrangementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrestsNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ArrestsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrestsNull() {
                this[this.tableCustomDocumentDischarges.ArrestsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvanceDirectiveNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.AdvanceDirectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvanceDirectiveNull() {
                this[this.tableCustomDocumentDischarges.AdvanceDirectiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTobaccoUseNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.TobaccoUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTobaccoUseNull() {
                this[this.tableCustomDocumentDischarges.TobaccoUseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeOfFirstTobaccoUseNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.AgeOfFirstTobaccoUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeOfFirstTobaccoUseNull() {
                this[this.tableCustomDocumentDischarges.AgeOfFirstTobaccoUseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyResidenceNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.CountyResidenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyResidenceNull() {
                this[this.tableCustomDocumentDischarges.CountyResidenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountyFinancialResponsibilityNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.CountyFinancialResponsibilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountyFinancialResponsibilityNull() {
                this[this.tableCustomDocumentDischarges.CountyFinancialResponsibilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoReferralNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.NoReferralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoReferralNull() {
                this[this.tableCustomDocumentDischarges.NoReferralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSymptomsReoccurNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.SymptomsReoccurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSymptomsReoccurNull() {
                this[this.tableCustomDocumentDischarges.SymptomsReoccurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferredToNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReferredToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferredToNull() {
                this[this.tableCustomDocumentDischarges.ReferredToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonNull() {
                this[this.tableCustomDocumentDischarges.ReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatesTimesNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.DatesTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatesTimesNull() {
                this[this.tableCustomDocumentDischarges.DatesTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferralDischargeNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ReferralDischargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferralDischargeNull() {
                this[this.tableCustomDocumentDischarges.ReferralDischargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTreatmentCompletionNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.TreatmentCompletionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTreatmentCompletionNull() {
                this[this.tableCustomDocumentDischarges.TreatmentCompletionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSummaryOfServicesProvidedNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.SummaryOfServicesProvidedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSummaryOfServicesProvidedNull() {
                this[this.tableCustomDocumentDischarges.SummaryOfServicesProvidedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPresentingProblemsNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.PresentingProblemsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPresentingProblemsNull() {
                this[this.tableCustomDocumentDischarges.PresentingProblemsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoOccurringHealthProblemNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.CoOccurringHealthProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoOccurringHealthProblemNull() {
                this[this.tableCustomDocumentDischarges.CoOccurringHealthProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientTypeNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ClientTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientTypeNull() {
                this[this.tableCustomDocumentDischarges.ClientTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHealthInsuranceNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.HealthInsuranceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHealthInsuranceNull() {
                this[this.tableCustomDocumentDischarges.HealthInsuranceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVocationalRehabNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.VocationalRehabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVocationalRehabNull() {
                this[this.tableCustomDocumentDischarges.VocationalRehabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolAttendanceNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.SchoolAttendanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolAttendanceNull() {
                this[this.tableCustomDocumentDischarges.SchoolAttendanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStableHousingNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.StableHousingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStableHousingNull() {
                this[this.tableCustomDocumentDischarges.StableHousingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfMonthsEmployedNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.NumberOfMonthsEmployedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfMonthsEmployedNull() {
                this[this.tableCustomDocumentDischarges.NumberOfMonthsEmployedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumberOfEmployersNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.NumberOfEmployersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumberOfEmployersNull() {
                this[this.tableCustomDocumentDischarges.NumberOfEmployersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrestsInLast12MonthsNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.ArrestsInLast12MonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrestsInLast12MonthsNull() {
                this[this.tableCustomDocumentDischarges.ArrestsInLast12MonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncarceratedInLast12MonthsNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.IncarceratedInLast12MonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncarceratedInLast12MonthsNull() {
                this[this.tableCustomDocumentDischarges.IncarceratedInLast12MonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossAnnualHouseholdIncomeNull() {
                return this.IsNull(this.tableCustomDocumentDischarges.GrossAnnualHouseholdIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossAnnualHouseholdIncomeNull() {
                this[this.tableCustomDocumentDischarges.GrossAnnualHouseholdIncomeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDischargeProgramsRowChangeEvent : global::System.EventArgs {
            
            private CustomDischargeProgramsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeProgramsRowChangeEvent(CustomDischargeProgramsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeProgramsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDischargeReferralsRowChangeEvent : global::System.EventArgs {
            
            private CustomDischargeReferralsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeReferralsRowChangeEvent(CustomDischargeReferralsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDischargeReferralsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClientProgramsRowChangeEvent : global::System.EventArgs {
            
            private ClientProgramsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientProgramsRowChangeEvent(ClientProgramsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClientProgramsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomDocumentDischargesRowChangeEvent : global::System.EventArgs {
            
            private CustomDocumentDischargesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRowChangeEvent(CustomDocumentDischargesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomDocumentDischargesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591