IF object_id('ssp_JobAutoCreate837', 'P') IS NOT NULL
	DROP PROCEDURE [dbo].[ssp_JobAutoCreate837]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[ssp_JobAutoCreate837] @User VARCHAR(30)
	/*********************************************************************
-- Stored Procedure: dbo.ssp_JobAutoCreate837P
-- Creation Date:    11/3/2016
--
-- Purpose:  Automatically Create 837s for certain payers
--
-- Updates:
--   Date   Author			Purpose
-- History
10/18/2017	MJensen, REga	Created
01/09/2017	MJensen			Modified to use ssp_WriteStringToFile	Threhsolds Enhancements #1037
*********************************************************************/
AS
BEGIN TRY
	DECLARE @PayerId INT
		,@ClaimProcessId INT
		,@ClaimFormatId INT
		,@ClaimBatchId INT
		,@StoredProcedure VARCHAR(100)
		,@FileText VARCHAR(max)
		,@FileName VARCHAR(200)
		,@OutputFolderPath VARCHAR(255)
		,@ReturnValue INT
		,@LookBackDays INT
		,@LookBackDate DATE
		,@LagTimeDays INT
		,@LagTimeDate DATE
	DECLARE @Today DATE = GETDATE()
	DECLARE @DayOfWeek INT = DATEPART(dw, @Today)

	-- generate claim batches based on payer
	CREATE TABLE #SelectedFormats (ClaimFormatId INT)

	DECLARE Payer_Cursor CURSOR
	FOR
	SELECT p.PayerId
		,cbg.OutputFolderPath
		,cbg.LookBackDays
		,cbg.LagTimeDays
	FROM Payers p
	JOIN ClaimBatchGenerationConfigurations cbg ON p.PayerId = cbg.payerid
	WHERE ISNULL(p.Active, 'Y') = 'Y'
		AND Isnull(p.RecordDeleted, 'N') = 'N'
		AND Isnull(cbg.RecordDeleted, 'N') = 'N'
		AND (
			cbg.ClaimBatchFrequency = 9485 -- Daily
			OR (
				cbg.ClaimBatchFrequency = 9486
				AND @DayOfWeek = 1
				) -- Sunday
			OR (
				cbg.ClaimBatchFrequency = 9487
				AND @DayOfWeek = 2
				) -- Monday
			OR (
				cbg.ClaimBatchFrequency = 9488
				AND @DayOfWeek = 3
				) -- Tuesday
			OR (
				cbg.ClaimBatchFrequency = 9489
				AND @DayOfWeek = 4
				) -- Wednesday
			OR (
				cbg.ClaimBatchFrequency = 9490
				AND @DayOfWeek = 5
				) -- Thursday
			OR (
				cbg.ClaimBatchFrequency = 9491
				AND @DayOfWeek = 6
				) -- Friday
			OR (
				cbg.ClaimBatchFrequency = 9492
				AND @DayOfWeek = 7
				) -- Saturday
			OR (
				cbg.ClaimBatchFrequency = 9493
				AND @DayOfWeek BETWEEN 2
					AND 6
				) -- Weekdays
			)

	OPEN Payer_Cursor

	FETCH NEXT
	FROM Payer_Cursor
	INTO @PayerId
		,@OutputFolderPath
		,@LookBackDays
		,@LagTimeDays

	WHILE @@FETCH_STATUS = 0
	BEGIN
		-- only process dates of service after look back period
		SET @LookBackDate = DATEADD(DAY, - ISNULL(@LookBackDays, 3650), GETDATE())
		-- only process dates of service before lag period
		SET @LagTimeDate = DATEADD(DAY, - ISNULL(@LagTimeDays, 0), GETDATE())

		-- a payer may have multiple claim formats
		TRUNCATE TABLE #SelectedFormats

		INSERT INTO #SelectedFormats (ClaimFormatId)
		SELECT DISTINCT cp.ElectronicClaimFormatId
		FROM OpenCharges oc
		JOIN Charges c ON c.ChargeId = oc.ChargeId
		JOIN ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
		JOIN CoveragePlans cp ON cp.CoveragePlanId = ccp.CoveragePlanId
		WHERE cp.PayerId = @PayerId
			AND Isnull(c.RecordDeleted, 'N') = 'N'
			AND Isnull(oc.RecordDeleted, 'N') = 'N'
			AND cp.ElectronicClaimFormatId IS NOT NULL
			AND cp.Active = 'Y'
			AND c.FirstBilledDate IS NULL
			AND ISNULL(c.ReadyToBill, 'N') = 'Y'

		DECLARE Format_Cursor CURSOR
		FOR
		SELECT ClaimFormatId
		FROM #SelectedFormats

		OPEN Format_Cursor

		FETCH NEXT
		FROM Format_Cursor
		INTO @ClaimFormatId

		WHILE @@FETCH_STATUS = 0
		BEGIN
			-- only process if there are claims
			IF EXISTS (
					SELECT 1
					FROM OpenCharges oc
					JOIN Charges c ON c.ChargeId = oc.ChargeId
					JOIN ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
					JOIN CoveragePlans cp ON cp.CoveragePlanId = ccp.CoveragePlanId
					JOIN Services s ON s.ServiceId = c.ServiceId
					WHERE cp.PayerId = @PayerId
						AND Isnull(c.RecordDeleted, 'N') = 'N'
						AND Isnull(oc.RecordDeleted, 'N') = 'N'
						AND cp.ElectronicClaimFormatId IS NOT NULL
						AND c.FirstBilledDate IS NULL
						AND ISNULL(c.ReadyToBill, 'N') = 'Y'
						AND cp.ElectronicClaimFormatId = @ClaimFormatId
						AND s.DateOfService >= @LookBackDate
						AND CAST(s.DateOfService AS DATE) <= @LagTimeDate
					)
			BEGIN
				INSERT INTO ClaimProcesses (
					Electronic
					,CreatedDate
					,CreatedBy
					,ModifiedDate
					,ModifiedBy
					)
				VALUES (
					'Y'
					,GETDATE()
					,@User
					,GETDATE()
					,@User
					)

				SET @ClaimProcessId = SCOPE_IDENTITY()

				INSERT INTO ClaimBatches (
					ClaimProcessId
					,STATUS
					,PayerId
					,ClaimFormatId
					,SelectedDate
					,CreatedDate
					,CreatedBy
					,ModifiedDate
					,ModifiedBy
					,AutoGenerated
					)
				SELECT @ClaimProcessId
					,4521
					,@PayerId
					,@ClaimFormatId
					,GETDATE()
					,GETDATE()
					,@User
					,GETDATE()
					,@User
					,'Y'

				SET @ClaimBatchID = SCOPE_IDENTITY()

				INSERT INTO ClaimBatchCharges (
					ClaimBatchId
					,ChargeId
					,CreatedDate
					,CreatedBy
					,ModifiedDate
					,ModifiedBy
					)
				SELECT @ClaimBatchId
					,oc.ChargeId
					,GETDATE()
					,@User
					,GETDATE()
					,@User
				FROM OpenCharges oc
				JOIN Charges c ON c.ChargeId = oc.ChargeId
				JOIN ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
				JOIN CoveragePlans cp ON cp.CoveragePlanId = ccp.CoveragePlanId
				JOIN Services s ON s.ServiceId = c.ServiceId
				WHERE cp.PayerId = @PayerId
					AND Isnull(c.RecordDeleted, 'N') = 'N'
					AND Isnull(oc.RecordDeleted, 'N') = 'N'
					AND cp.ElectronicClaimFormatId IS NOT NULL
					AND c.FirstBilledDate IS NULL
					AND ISNULL(c.ReadyToBill, 'N') = 'Y'
					AND cp.ElectronicClaimFormatId = @ClaimFormatId
					AND s.DateOfService >= @LookBackDate
					AND CAST(s.DateOfService AS DATE) <= @LagTimeDate

				-- create 837 file name
				UPDATE CM
				SET CM.[FileName] = Data.[FileName]
				FROM ClaimBatches CM
					,(
						SELECT cb.ClaimBatchId
							,-- This logic is moved from SSP_PMGetClaimBatches
							ClaimProcessId
							,CONVERT(VARCHAR, ISNULL(cb.ClaimBatchId, '')) + '-' + CASE 
								WHEN cb.CoveragePlanId IS NOT NULL
									THEN dbo.GetFormattedString(RTRIM(cp.DisplayAs))
								ELSE dbo.GetFormattedString(RTRIM(d.PayerName))
								END + '-' + CONVERT(VARCHAR, ISNULL(cf.FormatName, '')) + '.837' AS 'FileName'
						FROM ClaimBatches cb
						INNER JOIN ClaimFormats cf ON cf.ClaimFormatId = cb.ClaimFormatId
						INNER JOIN (
							SELECT ClaimBatchId
								,MAX(ChargeId) AS ChargeId
							FROM ClaimBatchCharges
							WHERE RecordDeleted = 'N'
								OR RecordDeleted IS NULL
							GROUP BY ClaimBatchId
							) cbc ON cbc.ClaimBatchId = cb.ClaimBatchId
						INNER JOIN Charges c ON c.ChargeId = cbc.ChargeId
						LEFT JOIN ClientCoveragePlans ccp ON c.ClientCoveragePlanId = ccp.ClientCoveragePlanId
						LEFT JOIN CoveragePlans cp ON cp.CoveragePlanId = ccp.CoveragePlanId
						LEFT JOIN Payers d ON d.PayerId = cb.PayerId
						WHERE (cb.ClaimBatchId = @ClaimBatchId)
							AND (
								cb.RecordDeleted = 'N'
								OR cb.RecordDeleted IS NULL
								)
						) Data
				WHERE CM.ClaimBatchId = data.ClaimBatchId
					AND CM.ClaimProcessId = data.ClaimProcessId
					AND CM.[FileName] IS NULL
					AND ISNULL(CM.RecordDeleted, 'N') = 'N'

				-- if custom claim file name is required
				IF EXISTS (
						SELECT *
						FROM sys.objects
						WHERE object_id = OBJECT_ID(N'scsp_JobAutoCreate837')
							AND type IN (
								N'P'
								,N'PC'
								)
						)
				BEGIN
					EXEC scsp_JobAutoCreate837 @ClaimProcessId
						,@ClaimBatchId
				END

				SELECT @StoredProcedure = StoredProcedure
				FROM ClaimFormats
				WHERE ClaimFormatId = @ClaimFormatId

				-- generate the claims
				EXEC @StoredProcedure @User
					,@ClaimBatchId

				-- Only create a file if there were claims processed
				IF (
						SELECT ElectronicClaimsData
						FROM ClaimBatches
						WHERE ClaimBatchId = @ClaimBatchId
						) IS NOT NULL
				BEGIN
					-- copy to folder
					SELECT @FileName = [FileName]
						,@FileText = ElectronicClaimsData
					FROM ClaimBatches
					WHERE ClaimBatchId = @ClaimBatchId

					EXEC ssp_WriteStringToFile @FileText = @FileText
						,@DirectoryPath = @OutputFolderPath
						,@Filename = @FileName

					EXEC ssp_PMClaimsMarkBatchAsBilled @CurrentUser = @User
						,@ClaimBatchId = @ClaimBatchId
						,@ClaimProcessId = @ClaimProcessId
				END
			END

			FETCH NEXT
			FROM Format_Cursor
			INTO @ClaimFormatId
		END

		CLOSE Format_Cursor

		DEALLOCATE Format_Cursor

		FETCH NEXT
		FROM Payer_Cursor
		INTO @PayerId
			,@OutputFolderPath
			,@LookBackDays
			,@LagTimeDays
	END

	CLOSE Payer_Cursor

	DEALLOCATE Payer_Cursor

	----------------- Generate claim batches based on Coverage plan
	DECLARE @CoveragePlanId INT
		,@ElectronicClaimFormatId INT

	DECLARE CoveragePlan_Cursor CURSOR
	FOR
	SELECT cp.CoveragePlanId
		,cbg.OutputFolderPath
		,cbg.LookBackDays
		,cbg.LagTimeDays
	FROM CoveragePlans cp
	JOIN ClaimBatchGenerationConfigurations cbg ON cp.CoveragePlanId = cbg.CoveragePlanid
	WHERE ISNULL(cp.Active, 'Y') = 'Y'
		AND Isnull(cp.RecordDeleted, 'N') = 'N'
		AND Isnull(cbg.RecordDeleted, 'N') = 'N'
		AND cp.ElectronicClaimFormatId IS NOT NULL
		AND (
			cbg.ClaimBatchFrequency = 9485 -- Daily
			OR (
				cbg.ClaimBatchFrequency = 9486
				AND @DayOfWeek = 1
				) -- Sunday
			OR (
				cbg.ClaimBatchFrequency = 9487
				AND @DayOfWeek = 2
				) -- Monday
			OR (
				cbg.ClaimBatchFrequency = 9488
				AND @DayOfWeek = 3
				) -- Tuesday
			OR (
				cbg.ClaimBatchFrequency = 9489
				AND @DayOfWeek = 4
				) -- Wednesday
			OR (
				cbg.ClaimBatchFrequency = 9490
				AND @DayOfWeek = 5
				) -- Thursday
			OR (
				cbg.ClaimBatchFrequency = 9491
				AND @DayOfWeek = 6
				) -- Friday
			OR (
				cbg.ClaimBatchFrequency = 9492
				AND @DayOfWeek = 7
				) -- Saturday
			OR (
				cbg.ClaimBatchFrequency = 9493
				AND @DayOfWeek BETWEEN 2
					AND 6
				) -- Weekdays
			)

	OPEN CoveragePlan_Cursor

	FETCH NEXT
	FROM CoveragePlan_Cursor
	INTO @CoveragePlanId
		,@OutputFolderPath
		,@LookBackDays
		,@LagTimeDays

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @ElectronicClaimFormatId = ElectronicClaimFormatId
		FROM CoveragePlans
		WHERE coverageplanid = @coverageplanid

		-- only process dates of service after look back period	
		SET @LookBackDate = DATEADD(DAY, - ISNULL(@LookBackDays, 3650), GETDATE())
		-- only process dates of service before lag period
		SET @LagTimeDate = DATEADD(DAY, - ISNULL(@LagTimeDays, 0), GETDATE())

		-- only process if there are claims
		IF EXISTS (
				SELECT 1
				FROM OpenCharges oc
				JOIN Charges c ON c.ChargeId = oc.ChargeId
				JOIN ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
				JOIN CoveragePlans cp ON cp.CoveragePlanId = ccp.CoveragePlanId
				JOIN Services s ON s.ServiceId = c.ServiceId
				WHERE cp.CoveragePlanId = @CoveragePlanId
					AND ISNULL(c.RecordDeleted, 'N') = 'N'
					AND ISNULL(oc.RecordDeleted, 'N') = 'N'
					AND c.FirstBilledDate IS NULL
					AND ISNULL(c.ReadyToBill, 'N') = 'Y'
					AND s.DateOfService >= @LookBackDate
					AND CAST(s.DateOfService AS DATE) <= @LagTimeDate
				)
		BEGIN
			INSERT INTO ClaimProcesses (
				Electronic
				,CreatedDate
				,CreatedBy
				,ModifiedDate
				,ModifiedBy
				)
			VALUES (
				'Y'
				,GETDATE()
				,@User
				,GETDATE()
				,@User
				)

			SET @ClaimProcessId = SCOPE_IDENTITY()

			INSERT INTO ClaimBatches (
				ClaimProcessId
				,STATUS
				,CoveragePlanId
				,ClaimFormatId
				,SelectedDate
				,CreatedDate
				,CreatedBy
				,ModifiedDate
				,ModifiedBy
				,AutoGenerated
				)
			SELECT @ClaimProcessId
				,4521
				,@CoveragePlanId
				,@ElectronicClaimFormatId
				,GETDATE()
				,GETDATE()
				,@User
				,GETDATE()
				,@User
				,'Y'

			SET @ClaimBatchID = SCOPE_IDENTITY()

			INSERT INTO ClaimBatchCharges (
				ClaimBatchId
				,ChargeId
				,CreatedDate
				,CreatedBy
				,ModifiedDate
				,ModifiedBy
				)
			SELECT @ClaimBatchId
				,oc.ChargeId
				,GETDATE()
				,@User
				,GETDATE()
				,@User
			FROM OpenCharges oc
			JOIN Charges c ON c.ChargeId = oc.ChargeId
			JOIN ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
			JOIN CoveragePlans cp ON cp.CoveragePlanId = ccp.CoveragePlanId
			JOIN Services s ON s.ServiceId = c.ServiceId
			WHERE cp.CoveragePlanId = @CoveragePlanId
				AND Isnull(c.RecordDeleted, 'N') = 'N'
				AND Isnull(oc.RecordDeleted, 'N') = 'N'
				AND c.FirstBilledDate IS NULL
				AND ISNULL(c.ReadyToBill, 'N') = 'Y'
				AND s.DateOfService >= @LookBackDate
				AND CAST(s.DateOfService AS DATE) <= @LagTimeDate

			-- create 837 file name
			UPDATE CM
			SET CM.[FileName] = Data.[FileName]
			FROM ClaimBatches CM
				,(
					SELECT cb.ClaimBatchId
						,-- This logic is moved from SSP_PMGetClaimBatches
						ClaimProcessId
						,CONVERT(VARCHAR, ISNULL(cb.ClaimBatchId, '')) + '-' + CASE 
							WHEN cb.CoveragePlanId IS NOT NULL
								THEN dbo.GetFormattedString(RTRIM(cp.DisplayAs))
							END + '-' + CONVERT(VARCHAR, ISNULL(cf.FormatName, '')) + '.837' AS 'FileName'
					FROM ClaimBatches cb
					INNER JOIN ClaimFormats cf ON cf.ClaimFormatId = cb.ClaimFormatId
					INNER JOIN (
						SELECT ClaimBatchId
							,MAX(ChargeId) AS ChargeId
						FROM ClaimBatchCharges
						WHERE RecordDeleted = 'N'
							OR RecordDeleted IS NULL
						GROUP BY ClaimBatchId
						) cbc ON cbc.ClaimBatchId = cb.ClaimBatchId
					INNER JOIN Charges c ON c.ChargeId = cbc.ChargeId
					LEFT JOIN ClientCoveragePlans ccp ON c.ClientCoveragePlanId = ccp.ClientCoveragePlanId
					LEFT JOIN CoveragePlans cp ON cp.CoveragePlanId = ccp.CoveragePlanId
					WHERE (cb.ClaimBatchId = @ClaimBatchId)
						AND (
							cb.RecordDeleted = 'N'
							OR cb.RecordDeleted IS NULL
							)
					) Data
			WHERE CM.ClaimBatchId = data.ClaimBatchId
				AND CM.ClaimProcessId = data.ClaimProcessId
				AND CM.[FileName] IS NULL
				AND ISNULL(CM.RecordDeleted, 'N') = 'N'

			-- if custom claim file name is required
			IF EXISTS (
					SELECT *
					FROM sys.objects
					WHERE object_id = OBJECT_ID(N'scsp_JobAutoCreate837')
						AND type IN (
							N'P'
							,N'PC'
							)
					)
			BEGIN
				EXEC scsp_JobAutoCreate837 @ClaimProcessId
					,@ClaimBatchId
			END

			SELECT @StoredProcedure = StoredProcedure
			FROM ClaimFormats
			WHERE ClaimFormatId = @ElectronicClaimFormatId

			-- generate the claims
			EXEC @StoredProcedure @User
				,@ClaimBatchId

			-- Only create file if claims were processed
			IF (
					SELECT ElectronicClaimsData
					FROM ClaimBatches
					WHERE ClaimBatchId = @ClaimBatchId
					) IS NOT NULL
			BEGIN
				-- copy to folder
				SELECT @FileName = [FileName]
					,@FileText = ElectronicClaimsData
				FROM ClaimBatches
				WHERE ClaimBatchId = @ClaimBatchId

				EXEC ssp_WriteStringToFile @FileText = @FileText
					,@DirectoryPath = @OutputFolderPath
					,@Filename = @FileName

				EXEC ssp_PMClaimsMarkBatchAsBilled @CurrentUser = @User
					,@ClaimBatchId = @ClaimBatchId
					,@ClaimProcessId = @ClaimProcessId
			END
		END

		FETCH NEXT
		FROM CoveragePlan_Cursor
		INTO @CoveragePlanId
			,@OutputFolderPath
			,@LookBackDays
			,@LagTimeDays
	END

	CLOSE CoveragePlan_Cursor

	DEALLOCATE CoveragePlan_Cursor
END TRY

BEGIN CATCH
	DECLARE @Error VARCHAR(8000)

	SET @Error = CONVERT(VARCHAR, ERROR_NUMBER()) + '*****' + CONVERT(VARCHAR(4000), ERROR_MESSAGE()) + '*****' + ISNULL(CONVERT(VARCHAR, ERROR_PROCEDURE()), 'ssp_JobAutoCreate837 ') + '*****' + CONVERT(VARCHAR, ERROR_LINE()) + '*****' + CONVERT(VARCHAR, ERROR_SEVERITY()) + '*****' + CONVERT(VARCHAR, ERROR_STATE())

	RAISERROR (
			@Error
			,-- Message text.                                          
			16
			,-- Severity.                                          
			1 -- State.                                          
			);
END CATCH
GO

