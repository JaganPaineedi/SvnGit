SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF EXISTS (SELECT   1
             FROM   sys.objects
             WHERE
                object_id = OBJECT_ID(N'[dbo].[ssp_PMClaims837Institutional]')
                AND type IN ( N'P'
                            , N'PC' ))
    DROP PROCEDURE dbo.ssp_PMClaims837Institutional
GO

CREATE PROCEDURE dbo.ssp_PMClaims837Institutional
    @CurrentUser  VARCHAR(30)
  , @ClaimBatchId INT
AS /********************************************************************************
-- Stored Procedure: dbo.ssp_PMClaims837Institutional 
--
-- Copyright: 2006 Streamline Healthcare Solutions
--
-- Purpose: Generates electronic claims
--
-- Updates:                                                             
-- Date        Author           Purpose
-- 10.20.2006  JHB                Created
-- 12.03.2007  SFarber          Modified to handle clients with multiple home addresses and phones
-- 09/27/2011  dharvey            Added condition for EndDateOfService when ProcedureCodes.EndDateEqualsStartDate='Y'
-- 10.17.2011  dharvey            Modified Registration/Discharge dates to pull from the active ClientEpisode
                                at the time of the Service.
-- 10.18.2011  dharvey            Replaced "M" ReleaseCode with "I" - Informed Consent per A.Wickham
-- 01.03.2012  MSuma            Updating the ClaimBatch Status to Selected, in case status is ProcessLAter
-- 15/06/2012  Shruthi.S        Added select ErrorMessage instead of Raise error
-- 23.06.2012  MSuma            Removed CustomTables
--             SWAPAN MOHAN     For Implementing Message code Functionality.
-- 23.06.2012  MSuma       Removed CustomTables
-- 18.10.2012 Shruthi.S     Added DiagnosisCode4,DiagnosisCode5,DiagnosisCode6,DiagnosisCode7,DiagnosisCode8
-- 10/22/2013  apoole            Changed to aggregate by Revenue Code instead of Procedure Code.
--                                Diagnosis Join Bug fixed
--                                Updated to 5010
-- 10/23/2013  apoole            Change in SV2 rtrim(ISNULL(BillingCode, '')) to handle BillingCode being Null
-- 11/04/2013  apoole            Other various changes
--                                Grouping code added
--                                Code to get Admitting, Principal Diagnosis from diagnosis documents
-- 11/07/2013                    Code to calculate Statement Start / End Date
-- 11/11/2013                    Integrate JHB changes re: ProcedureCodeId
--                                Diagnosis Grouping
-- 11/14/2013                    Admission Source Code based on Registration Document
-- 11/15/2013                    Added support for up to 12 secondary diagnoses
-- 11/18/2013                    Attending Provider only uses NPI now
--                                Additional Changes
--                                Added support for Attending Provider state license number
-- 12/04/2013                    Added Claim Frequency Code support for 7,8 Replacement, Void
--                                Additional Changes
-- 01/07/2014                    Updated ClaimLimit 5000 to use XClaim instead of ClaimLines
-- 01/15/2014                   Updated to exec ssp_PMClaimsUpdateClaimsTablesInstitutional from ssp_PMClaimsUpdateClaimsTables
-- 01/16/2014                    Various minor formatting changes
                                Added Try Catch, removed if @@error <> 0 goto
-- 01/30/2014 NJain                Added logic to track XClaimIds included in a given file
                                Get Admission Type Code from ClientInPatientVisits
-- 02/04/2014                    Combined the logic for Electronic and Paper Institutional Claims in one stored                    
--                              procedure
-- 03/05/2014                    Added New Fields for Value, Occurence, Occurence Span and Condition codes    
-- 03/27/2014                    Updated Diagnosis Code logic for outpatient charges to get DiagnosisCode1 as Principal Diagnosis
--                                Updated joins in populating #837Claims to avoid dropping clients    
-- 07/10/2014 NJain                Added new grouping logic    
-- 07/15/2014    NJain        Added logic for Voids & Rebills    
-- 08/08/2014    NJain        Updated data types for BillingProviderIdGroup and RenderingProviderIdGroup fields to VARCHAR(35)        
--    DEC-17-2014    dharvey        Created new Institutional version SPs due to DM differences
                            scsp_PMClaims837InstitutionalUpdateDrugIdentificationSegment
                            scsp_PMClaims837InstitutionalUpdateSegmentData
--  JAN-7-2015    dharvey        Updated logic to include Subscriber segment N3,N4,DMG if the Subscriber is the patient
                            Updated the ReceiverLastName to BCBSM 
--    JAN-29-2015    dharvey        Corrected conversion for timepart on RelatedHospitalAdmitDate
                            Modified SUM to MAX on TotalAmount insert to #837Claims as the SUM 
                            is already performed in #XClaims
-- 6/2/2015        njain        Merged Dan's changes with the latest core changes        
-- 6/10/2015    njain        Updated for Service Diagnosis Changes
-- 07/22/2015    NJain        Updated to use Allowed Amounts when required by the plan
-- 08/04/2015    njain        Updated to get Admission Source from Inpatient Visits 
                            Removed Diagnosis from #LineGrouper calculation 
                            Get Plan Name from CoveragePlans in NM1 40 
                            For inpatient, get diagnoses from the Inpatient Coding Document
-- 08/22/2015    njain        Updated logic for Inpatient Coding Document based on StatementEndDate and DischargedDate
-- 08/24/2015    njain        Updated to set Statement End Date in all tables
-- 08/25/2015    njain        Moved Claim Frequency and Patient Status code calculation after XClaims calculation
-- 08/26/2015    njain        Updated logic for Patient Status Code based on Discharged Date and Statement End Date        
-- 09/18/2015    njain        ICD-10 Changes            
-- 09/29/2015    NJain        Updated to not send Agency Tax Id in Rendering NPI field
-- 09/30/2015    NJain        Added RecordDeleted check on ServiceDiagnosis
-- 10/6/2015    NJain        Added Present on Admission logic
-- 10/7/2015    NJain        Added Specific Logic for bed procedures when grouping such that Date of Service is ignored when its a bed procedure
                            Added logic TO bundle multiple claim lines in a single claim
-- 10/8/2015    NJain        Removed POA from Admitting Diagnosis        
-- 10/15/2015    NJain        Added order by date of service when inserting into #837Services                
--                            Added LEFT JOIN TO Bed Assignments WHEN inserting INTO #Charges to get ProgramId
-- 10/20/2015    NJain        Updated logic for ClaimFrequencyCode for IP claims
-- 11/3/2015    NJain        Updated logic for ClaimFrequencyCode for IP Claims to match Patient Status Code logic
                            Added Specific Logic for IP AND Residential
                            Added DRG Code
-- 11/12/2015    NJain        Updated ClientGroupId logic to generate one per XCLaimId, instead of one per ClaimLineId            
-- 11/18/2015    NJain        Updated to use ClaimUnits in Paper Claims instead of ServiceUnits    
                            Updated to set Payer address IN Field80, Remarks
-- 12/23/2015    NJain        Added fields for Secondary Payers to the paper format    
-- 05/20/2016    NJain        Removed Program, Location, Clinician from Line Grouper logic    
                            Added scsp UB04 at the end                    
-- 05/24/2016    NJain        Updated Field66DiagnosisVersion to default to 0                            
                            Removed PAGE Number JOIN FROM Total Charge (Field47TotalChargesWhole23) calculation logic
                            Updated TO ONLY PRINT Field47TotalChargesWhole23 ON the LAST PAGE
-- 05/26/2016    NJain        Added Billing Taxonomy segment            
-- 06/29/2016    NJain        Replaced CTEs with Temp Tables in the Voids & Rebills logic
-- 07/11/2016    NJain        Added Field for Medication Procedure Code in temp tables
                            UPDATED INSERT INTO #837BillingProviders TO GROUP BY BillingProviderNPI INSTEAD OF BillingProviderId
-- 07/12/2016    NJain        Added segments for Procedure Codes                
-- 07/27/2016    NJain        Updated to not execute expected payments ssp. That calculation needs to be done by the allowed amounts process            
-- 8/23/2016    NJain        Ignore rendering, set fields to null. This is not reported in institutional claims, only attending gets reported. 
-- 10/11/2016    NJain        Added InsuranceCommissionersCode to match Professional claims format Woods SGL #255
-- 10/24/2016    NJain        Added segments for Condition, Occurence, Occurence Span & Value Codes to 837 generation
-- 10/27/2016    NJain        Removed RecordDeletd Check for Staff, causes charges to drop from the claims processing
-- 01/09/2017    NJain        Added Tom's Changes for Parameter sniffing
-- 01/24/2017    NJain        Updated to not send out automatic corrected/voided claims. Corrected claims will be sent out only when To Be Resubmitted is checked. No new Voids logic                                for now. 
                            Updated to use a single Payer Claim Number & Same ClaimFrequencyCode for the entire admission
                            Corrected claims will only go out with the Payer Claim Number specified in ClaimLineItemGroups. The value in ERClaimLineItems will be overwritten by                                ClaimLineItemGroups.
-- 02/01/2017  NJain        Added Jacob's changes for Value Code segment to not print twice and Payer Claim Number segment position change    
-- 05/05/2017  NJain        Updated to not send Attending Provider REF segment if Attending NPI is missing. Woods SGL #611            
-- 05/23/2017  NJain        Updated to default ICD10CodeType to "CM" in #ServiceDiagnosis table. Woods SGL #634
-- 07/10/2017  NJain        Updated to remove duplicate entries from #Charges when one is linked to a ClientInpatientvisitId and the other one is not. Woods SGL #675
-- 02/14/2018  VSinha        Added the column 'Field67POA' in temp '#ClaimUB04', and updating these columns from #XClaims.DiagnosisCodePOA. The #XClaims.DiagnosisCodePOA are updating from #ClaimLines.DiagnosisCodePOA. Philhaven-Support #330
-- 02/25/2018  jwheeler     Added NTE segment for Philhave 5.x
-- 06/11/2018  Dknewtson    Setting @FormatType to 'I' in all cases. No reason not to. AC - Support Go Live 103
-- 06/11/2018  tchen		What: added condition to check inpatient coding document ICD9Code is NULL to prevent diagnosis missing error
							Why: Renaissance - Current Project Tasks #17
-- 05/02/2018	tchen		What: Added MedicalRecordNumberRefSegment
							Why: PSS - Implementation #17895
-- 05/04/2018	tchen		What: Changed PatientReasonForVisitHISegment to use 'APR' as qualifier
							Why: PSS - Implementation #17895
-- 10/23/2018	wbutt		TxAce - Environment Issues Tracking > Tasks #225 > Charges/Claims - Institutional Claim Resulting in error Invalid Column Name 'ClaimLineId'
							Added ClaimLineId to #837Claims temp table as scsp_PMClaims837UpdateSegments uses it in the Join condition and it was missing in case of Insitituonal claims.
-- 12/3/2018    Ranveer		Fixed the UB04 Inpatient fields 58 to print correctly respective with the fields 50. Philhaven Support #412							 
-- 11/26/2018	Vsinha		If the OverrideClaim for client coverage plan is checked then address and ElectronicClaimsPayerId will display from client plans else the address will display from cverage plan on paper claims.  Westbridge-Customizations #3
-- 2/4/2019		Ranveer		Further changes to Fixed the UB04 Inpatient fields 58 to print correctly respective with the fields 50. Philhaven Support #412
*********************************************************************************/

    SET ANSI_WARNINGS OFF

    BEGIN
        DECLARE @ErrorMessage VARCHAR(MAX) = ''
        DECLARE @Bookmark VARCHAR(MAX) = 'Procedure Entry' -- New!!!  --#EH!INFO!ADD!@Bookmark!
        DECLARE @SaveTranCount INTEGER = @@Trancount
        DECLARE @CRLF CHAR(2) = CHAR(13) + CHAR(10)
        DECLARE @ThisProc VARCHAR(MAX) = ISNULL(OBJECT_NAME(@@PROCID), 'Testin')
        DECLARE @CreatedBy VARCHAR(30) = CASE
                                             WHEN LEN(@ThisProc) >= 30 THEN SUBSTRING(@ThisProc, 1, 13) + '...' + SUBSTRING(@ThisProc, LEN(@ThisProc) - 13, 13)
                                             ELSE @ThisProc
                                         END

        BEGIN TRY
            DECLARE @ParmCurrentUser VARCHAR(30)
            DECLARE @ParmClaimBatchId INT

            SET @ParmCurrentUser = @CurrentUser
            SET @ParmClaimBatchId = @ClaimBatchId

            DECLARE @ICD10StartDate DATETIME

            IF 0 = (SELECT  COUNT(*)
                      FROM  ClaimBatches AS cb
                      WHERE
                        cb.ClaimBatchId = @ParmClaimBatchId
                        AND cb.CoveragePlanId IS NOT NULL)
                BEGIN
                    SELECT  @ICD10StartDate = MIN(cp.ICD10StartDate)
                      FROM  CoveragePlans AS cp
                          JOIN ClaimBatches AS cb ON cb.PayerId = cp.PayerId
                      WHERE
                        cb.ClaimBatchId = @ParmClaimBatchId
                END
            ELSE
                BEGIN
                    SELECT  @ICD10StartDate = cp.ICD10StartDate
                      FROM  CoveragePlans AS cp
                          JOIN ClaimBatches AS cb ON cb.CoveragePlanId = cp.CoveragePlanId
                      WHERE
                        cb.ClaimBatchId = @ParmClaimBatchId
                END

            --Updating the ClaimBatch Status to Selected, in case status is ProcessLAter

            UPDATE  a
              SET   Status = 4521
              FROM  ClaimBatches a
              WHERE
                a.ClaimBatchId = @ParmClaimBatchId
                AND a.Status = 4525

            CREATE TABLE #Charges (
                ClaimLineId                      INT           NULL
              , ChargeId                         INT           NOT NULL
              , ClientId                         INT           NULL
              , ClientLastName                   VARCHAR(30)   NULL
              , ClientFirstName                  VARCHAR(20)   NULL
              , ClientMiddleName                 VARCHAR(20)   NULL
              , ClientSSN                        CHAR(11)      NULL
              , ClientSuffix                     VARCHAR(10)   NULL
              , ClientAddress1                   VARCHAR(30)   NULL
              , ClientAddress2                   VARCHAR(30)   NULL
              , ClientCity                       VARCHAR(30)   NULL
              , ClientState                      CHAR(2)       NULL
              , ClientZip                        CHAR(25)      NULL
              , ClientHomePhone                  CHAR(10)      NULL
              , ClientDOB                        DATETIME      NULL
              , ClientSex                        CHAR(1)       NULL
              , ClientIsSubscriber               CHAR(1)       NULL
              , SubscriberContactId              INT           NULL
              , StudentStatus                    INT           NULL
              , MaritalStatus                    INT           NULL
              , EmploymentStatus                 INT           NULL
              , EmploymentRelated                CHAR(1)       NULL
              , AutoRelated                      CHAR(1)       NULL
              , OtherAccidentRelated             CHAR(1)       NULL
              , RegistrationDate                 DATETIME      NULL
              , DischargeDate                    DATETIME      NULL
              , RelatedHospitalAdmitDate         DATETIME      NULL
              , ClientCoveragePlanId             INT           NULL
              , InsuredId                        VARCHAR(25)   NULL
              , GroupNumber                      VARCHAR(25)   NULL
              , GroupName                        VARCHAR(100)  NULL
              , InsuredLastName                  VARCHAR(30)   NULL
              , InsuredFirstName                 VARCHAR(20)   NULL
              , InsuredMiddleName                VARCHAR(20)   NULL
              , InsuredSuffix                    VARCHAR(10)   NULL
              , InsuredRelation                  INT           NULL
              , InsuredRelationCode              VARCHAR(20)   NULL
              , InsuredAddress1                  VARCHAR(30)   NULL
              , InsuredAddress2                  VARCHAR(30)   NULL
              , InsuredCity                      VARCHAR(30)   NULL
              , InsuredState                     CHAR(2)       NULL
              , InsuredZip                       VARCHAR(25)   NULL
              , InsuredHomePhone                 CHAR(10)      NULL
              , InsuredSex                       CHAR(1)       NULL
              , InsuredSSN                       VARCHAR(9)    NULL
              , InsuredDOB                       DATETIME      NULL
              , ServiceId                        INT           NULL
              , GroupServiceId                   INT           NULL
              , GroupId                          INT           NULL
              , DateOfService                    DATETIME      NULL
              , EndDateOfService                 DATETIME      NULL
              , TimeofService                    CHAR(4)       NULL
              , ProcedureCodeId                  INT           NULL
              , ServiceUnits                     DECIMAL(7, 2) NULL
              , ServiceUnitType                  INT           NULL
              , ProgramId                        INT           NULL
              , LocationId                       INT           NULL
              , PlaceOfService                   INT           NULL
              , PlaceOfServiceCode               CHAR(2)       NULL
              , TypeOfServiceCode                CHAR(2)       NULL
              , InsuranceCommissionersCode       CHAR(10)      NULL
              , ProviderCommercialNumber         VARCHAR(100)  NULL
              , DiagnosisCodeQualifier1          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier2          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier3          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier4          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier5          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier6          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier7          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier8          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier9          VARCHAR(3)    NULL
              , DiagnosisCodeQualifier10         VARCHAR(3)    NULL
              , DiagnosisCodeQualifier11         VARCHAR(3)    NULL
              , DiagnosisCodeQualifier12         VARCHAR(3)    NULL
              , DiagnosisCodeQualifier13         VARCHAR(3)    NULL
              , DiagnosisCode1                   VARCHAR(10)   NULL
              , DiagnosisCode2                   VARCHAR(10)   NULL
              , DiagnosisCode3                   VARCHAR(10)   NULL
              , DiagnosisCode4                   VARCHAR(10)   NULL
              , DiagnosisCode5                   VARCHAR(10)   NULL
              , DiagnosisCode6                   VARCHAR(10)   NULL
              , DiagnosisCode7                   VARCHAR(10)   NULL
              , DiagnosisCode8                   VARCHAR(10)   NULL
              , DiagnosisCode9                   VARCHAR(10)   NULL
              , DiagnosisCode10                  VARCHAR(10)   NULL
              , DiagnosisCode11                  VARCHAR(10)   NULL
              , DiagnosisCode12                  VARCHAR(10)   NULL
              , DiagnosisCode13                  VARCHAR(10)   NULL
              , DiagnosisCodePOA1                VARCHAR(1)    NULL
              , DiagnosisCodePOA2                VARCHAR(1)    NULL
              , DiagnosisCodePOA3                VARCHAR(1)    NULL
              , DiagnosisCodePOA4                VARCHAR(1)    NULL
              , DiagnosisCodePOA5                VARCHAR(1)    NULL
              , DiagnosisCodePOA6                VARCHAR(1)    NULL
              , DiagnosisCodePOA7                VARCHAR(1)    NULL
              , DiagnosisCodePOA8                VARCHAR(1)    NULL
              , DiagnosisCodePOA9                VARCHAR(1)    NULL
              , DiagnosisCodePOA10               VARCHAR(1)    NULL
              , DiagnosisCodePOA11               VARCHAR(1)    NULL
              , DiagnosisCodePOA12               VARCHAR(1)    NULL
              , DiagnosisCodePOA13               VARCHAR(1)    NULL
              , ProcedureCodeQualifier1          VARCHAR(3)    NULL
              , ProcedureCodeQualifier2          VARCHAR(3)    NULL
              , ProcedureCodeQualifier3          VARCHAR(3)    NULL
              , ProcedureCodeQualifier4          VARCHAR(3)    NULL
              , ProcedureCodeQualifier5          VARCHAR(3)    NULL
              , ProcedureCodeQualifier6          VARCHAR(3)    NULL
              , ProcedureCodeQualifier7          VARCHAR(3)    NULL
              , ProcedureCodeQualifier8          VARCHAR(3)    NULL
              , ProcedureCodeQualifier9          VARCHAR(3)    NULL
              , ProcedureCodeQualifier10         VARCHAR(3)    NULL
              , ProcedureCodeQualifier11         VARCHAR(3)    NULL
              , ProcedureCodeQualifier12         VARCHAR(3)    NULL
              , ProcedureCode1                   VARCHAR(10)   NULL
              , ProcedureCode2                   VARCHAR(10)   NULL
              , ProcedureCode3                   VARCHAR(10)   NULL
              , ProcedureCode4                   VARCHAR(10)   NULL
              , ProcedureCode5                   VARCHAR(10)   NULL
              , ProcedureCode6                   VARCHAR(10)   NULL
              , ProcedureCode7                   VARCHAR(10)   NULL
              , ProcedureCode8                   VARCHAR(10)   NULL
              , ProcedureCode9                   VARCHAR(10)   NULL
              , ProcedureCode10                  VARCHAR(10)   NULL
              , ProcedureCode11                  VARCHAR(10)   NULL
              , ProcedureCode12                  VARCHAR(10)   NULL
              , ProcedureCodeDate1               VARCHAR(10)   NULL
              , ProcedureCodeDate2               VARCHAR(10)   NULL
              , ProcedureCodeDate3               VARCHAR(10)   NULL
              , ProcedureCodeDate4               VARCHAR(10)   NULL
              , ProcedureCodeDate5               VARCHAR(10)   NULL
              , ProcedureCodeDate6               VARCHAR(10)   NULL
              , ProcedureCodeDate7               VARCHAR(10)   NULL
              , ProcedureCodeDate8               VARCHAR(10)   NULL
              , ProcedureCodeDate9               VARCHAR(10)   NULL
              , ProcedureCodeDate10              VARCHAR(10)   NULL
              , ProcedureCodeDate11              VARCHAR(10)   NULL
              , ProcedureCodeDate12              VARCHAR(10)   NULL
              , AuthorizationId                  INT           NULL
              , AuthorizationNumber              VARCHAR(35)   NULL
              , SubmissionReasonCode             CHAR(1)       NULL
              , PayerClaimControlNumber          VARCHAR(80)   NULL
              , EmergencyIndicator               CHAR(1)       NULL
              , ClinicianId                      INT           NULL
              , ClinicianLastName                VARCHAR(30)   NULL
              , ClinicianFirstName               VARCHAR(20)   NULL
              , ClinicianMiddleName              VARCHAR(20)   NULL
              , ClinicianSex                     CHAR(1)       NULL
              , AttendingProviderTaxIdType       VARCHAR(2)    NULL
              , AttendingProviderTaxId           VARCHAR(9)    NULL
              , AttendingProviderTaxonomyCode    VARCHAR(20)   NULL
              , AttendingId                      INT           NULL
              , AttendingProviderEntityQualifier VARCHAR(1)    NULL
              , AttendingProviderEntityCode      VARCHAR(10)   NULL
              , AttendingProviderIdType          VARCHAR(2)    NULL
              , AttendingProviderId              VARCHAR(35)   NULL
              , AttendingProviderLastName        VARCHAR(35)   NULL
              , AttendingProviderFirstName       VARCHAR(25)   NULL
              , AttendingProviderMiddleName      VARCHAR(25)   NULL
              , AttendingProviderLicenseNumber   VARCHAR(35)   NULL
              , Priority                         INT           NULL
              , CoveragePlanId                   INT           NULL
              , MedicaidPayer                    CHAR(1)       NULL
              , MedicarePayer                    CHAR(1)       NULL
              , PayerName                        VARCHAR(100)  NULL
              , PayerAddressHeading              VARCHAR(100)  NULL
              , PayerAddress1                    VARCHAR(60)   NULL
              , PayerAddress2                    VARCHAR(60)   NULL
              , PayerCity                        VARCHAR(30)   NULL
              , PayerState                       CHAR(2)       NULL
              , PayerZip                         CHAR(25)      NULL
              , MedicareInsuranceTypeCode        CHAR(2)       NULL
              , ClaimFilingIndicatorCode         CHAR(2)       NULL
              , ElectronicClaimsPayerId          VARCHAR(20)   NULL
              , ClaimOfficeNumber                VARCHAR(20)   NULL
              , ChargeAmount                     MONEY         NULL
              , PaidAmount                       MONEY         NULL
              , BalanceAmount                    MONEY         NULL
              , ApprovedAmount                   MONEY         NULL
              , ClientPayment                    MONEY         NULL
              , ExpectedPayment                  MONEY         NULL
              , ExpectedAdjustment               MONEY         NULL
              , AgencyName                       VARCHAR(100)  NULL
              , BillingProviderTaxIdType         VARCHAR(2)    NULL
              , BillingProviderTaxId             VARCHAR(9)    NULL
              , BillingProviderIdType            VARCHAR(2)    NULL
              , BillingProviderId                VARCHAR(35)   NULL
              , BillingTaxonomyCode              VARCHAR(30)   NULL
              , BillingProviderLastName          VARCHAR(35)   NULL
              , BillingProviderFirstName         VARCHAR(25)   NULL
              , BillingProviderMiddleName        VARCHAR(25)   NULL
              , BillingProviderNPI               CHAR(10)      NULL
              , PayToProviderTaxIdType           VARCHAR(2)    NULL
              , PayToProviderTaxId               VARCHAR(9)    NULL
              , PayToProviderIdType              VARCHAR(2)    NULL
              , PayToProviderId                  VARCHAR(35)   NULL
              , PayToProviderLastName            VARCHAR(35)   NULL
              , PayToProviderFirstName           VARCHAR(25)   NULL
              , PayToProviderMiddleName          VARCHAR(25)   NULL
              , PayToProviderNPI                 CHAR(10)      NULL
              , RenderingProviderTaxIdType       VARCHAR(2)    NULL
              , RenderingProviderTaxId           VARCHAR(9)    NULL
              , RenderingProviderIdType          VARCHAR(2)    NULL
              , RenderingProviderId              VARCHAR(35)   NULL
              , RenderingProviderLastName        VARCHAR(35)   NULL
              , RenderingProviderFirstName       VARCHAR(25)   NULL
              , RenderingProviderMiddleName      VARCHAR(25)   NULL
              , RenderingProviderTaxonomyCode    VARCHAR(20)   NULL
              , RenderingProviderNPI             CHAR(10)      NULL
              , ReferringProviderTaxIdType       VARCHAR(2)    NULL
              , ReferringProviderTaxId           VARCHAR(9)    NULL
              , ReferringProviderIdType          VARCHAR(2)    NULL
              , ReferringProviderId              VARCHAR(35)   NULL
              , ReferringProviderLastName        VARCHAR(35)   NULL
              , ReferringProviderFirstName       VARCHAR(25)   NULL
              , ReferringProviderMiddleName      VARCHAR(25)   NULL
              , ReferringProviderNPI             CHAR(10)      NULL
              , FacilityEntityCode               VARCHAR(2)    NULL
              , FacilityName                     VARCHAR(35)   NULL
              , FacilityTaxIdType                VARCHAR(2)    NULL
              , FacilityTaxId                    VARCHAR(9)    NULL
              , FacilityProviderIdType           VARCHAR(2)    NULL
              , FacilityProviderId               VARCHAR(35)   NULL
              , FacilityAddress1                 VARCHAR(30)   NULL
              , FacilityAddress2                 VARCHAR(30)   NULL
              , FacilityCity                     VARCHAR(30)   NULL
              , FacilityState                    CHAR(2)       NULL
              , FacilityZip                      VARCHAR(25)   NULL
              , FacilityPhone                    VARCHAR(10)   NULL
              , FacilityNPI                      CHAR(10)      NULL
          ,SupervisingProvider2310DLastName VARCHAR(60) NULL 
          ,SupervisingProvider2310DFirstName VARCHAR(35) NULL 
          ,SupervisingProvider2310DMiddleName VARCHAR(25) NULL 
          ,SupervisingProvider2310DIdType VARCHAR(2) NULL 
          ,SupervisingProvider2310DId VARCHAR(80) NULL 
          ,SupervisingProvider2310DSecondaryIdType1 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId1 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType2 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId2 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType3 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId3 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType4 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId4 VARCHAR(50)           
          ,ClaimNoteReferenceCode VARCHAR(80) NULL 
          ,ClaimNote VARCHAR(MAX) NULL 
          ,ServiceNoteReferenceCode VARCHAR(15) NULL 
          ,ServiceNote VARCHAR(MAX) NULL
              
              , PaymentAddress1                  VARCHAR(30)   NULL
              , PaymentAddress2                  VARCHAR(30)   NULL
              , PaymentCity                      VARCHAR(30)   NULL
              , PaymentState                     CHAR(2)       NULL
              , PaymentZip                       VARCHAR(25)   NULL
              , PaymentPhone                     VARCHAR(10)   NULL
              , ReferringId                      INT           NULL -- Not tracked in application
              , BillingCode                      VARCHAR(15)   NULL
              , Modifier1                        CHAR(2)       NULL
              , Modifier2                        CHAR(2)       NULL
              , Modifier3                        CHAR(2)       NULL
              , Modifier4                        CHAR(2)       NULL
              , RevenueCode                      VARCHAR(15)   NULL
              , RevenueCodeDescription           VARCHAR(100)  NULL
              , ClaimUnits                       INT           NULL
              , HCFAReservedValue                VARCHAR(15)   NULL
              , AdmittingDiagnosisCode           VARCHAR(10)   NULL
              , AdmittingDiagnosisQualifier      VARCHAR(3)    NULL
              , AdmittingDiagnosisPOA            VARCHAR(1)    NULL
              , InpatientAdmitDate               DATETIME      NULL
              , InpatientDischargedDate          DATETIME      NULL
              , VoidedClaimLineItemId            INT           NULL
              , IsICD10Service                   CHAR(1)       NULL
              , ClientInpatientVisitId           INT           NULL
              , BedProcedure                     CHAR(1)       NULL
              , MedicationProcedure              CHAR(1)       NULL
              , InpatientProgram                 CHAR(1)       NULL
              , DRGCode                          VARCHAR(10)
			  , MedicalRecordNumber				 VARCHAR(30)   NULL 
            )



            CREATE INDEX temp_Charges_PK
                ON #Charges(ChargeId)



            CREATE TABLE #ClaimLines (
                XClaimId                                INT           NULL  --New apoole 10/30
              , ClaimLineId                             INT           IDENTITY NOT NULL
              , ChargeId                                INT           NOT NULL
              , ClientId                                INT           NULL
              , ClientLastName                          VARCHAR(30)   NULL
              , ClientFirstName                         VARCHAR(20)   NULL
              , ClientMiddleName                        VARCHAR(20)   NULL
              , ClientSSN                               CHAR(11)      NULL
              , ClientSuffix                            VARCHAR(10)   NULL
              , ClientAddress1                          VARCHAR(30)   NULL
              , ClientAddress2                          VARCHAR(30)   NULL
              , ClientCity                              VARCHAR(30)   NULL
              , ClientState                             CHAR(2)       NULL
              , ClientZip                               CHAR(25)      NULL
              , ClientHomePhone                         CHAR(10)      NULL
              , ClientDOB                               DATETIME      NULL
              , ClientSex                               CHAR(1)       NULL
              , ClientIsSubscriber                      CHAR(1)       NULL
              , SubscriberContactId                     INT           NULL
              , StudentStatus                           INT           NULL
              , MaritalStatus                           INT           NULL
              , EmploymentStatus                        INT           NULL
              , EmploymentRelated                       CHAR(1)       NULL
              , AutoRelated                             CHAR(1)       NULL
              , OtherAccidentRelated                    CHAR(1)       NULL
              , RegistrationDate                        DATETIME      NULL
              , DischargeDate                           DATETIME      NULL
              , RelatedHospitalAdmitDate                DATETIME      NULL
              , RelatedHospitalDischargeDate            VARCHAR(35)   NULL
              , ClientCoveragePlanId                    INT           NULL
              , InsuredId                               VARCHAR(25)   NULL
              , GroupNumber                             VARCHAR(25)   NULL
              , GroupName                               VARCHAR(100)  NULL
              , InsuredLastName                         VARCHAR(30)   NULL
              , InsuredFirstName                        VARCHAR(20)   NULL
              , InsuredMiddleName                       VARCHAR(20)   NULL
              , InsuredSuffix                           VARCHAR(10)   NULL
              , InsuredRelation                         INT           NULL
              , InsuredRelationCode                     VARCHAR(20)   NULL
              , InsuredAddress1                         VARCHAR(30)   NULL
              , InsuredAddress2                         VARCHAR(30)   NULL
              , InsuredCity                             VARCHAR(30)   NULL
              , InsuredState                            CHAR(2)       NULL
              , InsuredZip                              VARCHAR(25)   NULL
              , InsuredHomePhone                        CHAR(10)      NULL
              , InsuredSex                              CHAR(1)       NULL
              , InsuredSSN                              VARCHAR(9)    NULL
              , InsuredDOB                              DATETIME      NULL
              , ServiceId                               INT           NULL
              , GroupServiceId                          INT           NULL
              , GroupId                                 INT           NULL
              , DateOfService                           DATETIME      NULL
              , EndDateOfService                        DATETIME      NULL
              , ProcedureCodeId                         INT           NULL
              , ServiceUnits                            DECIMAL(7, 2) NULL
              , ServiceUnitType                         INT           NULL
              , ProgramId                               INT           NULL
              , LocationId                              INT           NULL
              , PlaceOfService                          INT           NULL
              , PlaceOfServiceCode                      CHAR(2)       NULL
              , TypeOfServiceCode                       CHAR(2)       NULL
              , InsuranceCommissionersCode              CHAR(10)      NULL
              , ProviderCommercialNumber                VARCHAR(100)  NULL
              , DiagnosisCodeQualifier1                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier2                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier3                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier4                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier5                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier6                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier7                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier8                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier9                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier10                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier11                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier12                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier13                VARCHAR(3)    NULL
              , DiagnosisCode1                          VARCHAR(10)   NULL
              , DiagnosisCode2                          VARCHAR(10)   NULL
              , DiagnosisCode3                          VARCHAR(10)   NULL
              , DiagnosisCode4                          VARCHAR(10)   NULL
              , DiagnosisCode5                          VARCHAR(10)   NULL
              , DiagnosisCode6                          VARCHAR(10)   NULL
              , DiagnosisCode7                          VARCHAR(10)   NULL
              , DiagnosisCode8                          VARCHAR(10)   NULL
              , DiagnosisCode9                          VARCHAR(10)   NULL
              , DiagnosisCode10                         VARCHAR(10)   NULL
              , DiagnosisCode11                         VARCHAR(10)   NULL
              , DiagnosisCode12                         VARCHAR(10)   NULL
              , DiagnosisCode13                         VARCHAR(10)   NULL
              , DiagnosisCodePOA1                       VARCHAR(1)    NULL
              , DiagnosisCodePOA2                       VARCHAR(1)    NULL
              , DiagnosisCodePOA3                       VARCHAR(1)    NULL
              , DiagnosisCodePOA4                       VARCHAR(1)    NULL
              , DiagnosisCodePOA5                       VARCHAR(1)    NULL
              , DiagnosisCodePOA6                       VARCHAR(1)    NULL
              , DiagnosisCodePOA7                       VARCHAR(1)    NULL
              , DiagnosisCodePOA8                       VARCHAR(1)    NULL
              , DiagnosisCodePOA9                       VARCHAR(1)    NULL
              , DiagnosisCodePOA10                      VARCHAR(1)    NULL
              , DiagnosisCodePOA11                      VARCHAR(1)    NULL
              , DiagnosisCodePOA12                      VARCHAR(1)    NULL
              , DiagnosisCodePOA13                      VARCHAR(1)    NULL
              , ProcedureCodeQualifier1                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier2                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier3                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier4                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier5                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier6                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier7                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier8                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier9                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier10                VARCHAR(3)    NULL
              , ProcedureCodeQualifier11                VARCHAR(3)    NULL
              , ProcedureCodeQualifier12                VARCHAR(3)    NULL
              , ProcedureCode1                          VARCHAR(10)   NULL
              , ProcedureCode2                          VARCHAR(10)   NULL
              , ProcedureCode3                          VARCHAR(10)   NULL
              , ProcedureCode4                          VARCHAR(10)   NULL
              , ProcedureCode5                          VARCHAR(10)   NULL
              , ProcedureCode6                          VARCHAR(10)   NULL
              , ProcedureCode7                          VARCHAR(10)   NULL
              , ProcedureCode8                          VARCHAR(10)   NULL
              , ProcedureCode9                          VARCHAR(10)   NULL
              , ProcedureCode10                         VARCHAR(10)   NULL
              , ProcedureCode11                         VARCHAR(10)   NULL
              , ProcedureCode12                         VARCHAR(10)   NULL
              , ProcedureCodeDate1                      VARCHAR(10)   NULL
              , ProcedureCodeDate2                      VARCHAR(10)   NULL
              , ProcedureCodeDate3                      VARCHAR(10)   NULL
              , ProcedureCodeDate4                      VARCHAR(10)   NULL
              , ProcedureCodeDate5                      VARCHAR(10)   NULL
              , ProcedureCodeDate6                      VARCHAR(10)   NULL
              , ProcedureCodeDate7                      VARCHAR(10)   NULL
              , ProcedureCodeDate8                      VARCHAR(10)   NULL
              , ProcedureCodeDate9                      VARCHAR(10)   NULL
              , ProcedureCodeDate10                     VARCHAR(10)   NULL
              , ProcedureCodeDate11                     VARCHAR(10)   NULL
              , ProcedureCodeDate12                     VARCHAR(10)   NULL
              , AuthorizationId                         INT           NULL
              , AuthorizationNumber                     VARCHAR(35)   NULL
              , SubmissionReasonCode                    CHAR(1)       NULL
              , PayerClaimControlNumber                 VARCHAR(80)   NULL
              , EmergencyIndicator                      CHAR(1)       NULL
              , ClinicianId                             INT           NULL
              , ClinicianLastName                       VARCHAR(30)   NULL
              , ClinicianFirstName                      VARCHAR(20)   NULL
              , ClinicianMiddleName                     VARCHAR(20)   NULL
              , ClinicianSex                            CHAR(1)       NULL
              , AttendingProviderTaxIdType              VARCHAR(2)    NULL
              , AttendingProviderTaxId                  VARCHAR(9)    NULL
              , AttendingProviderTaxonomyCode           VARCHAR(20)   NULL
              , AttendingId                             INT           NULL
              , AttendingProviderEntityQualifier        VARCHAR(1)    NULL
              , AttendingProviderEntityCode             VARCHAR(10)   NULL
              , AttendingProviderIdType                 VARCHAR(2)    NULL
              , AttendingProviderId                     VARCHAR(35)   NULL
              , AttendingProviderLastName               VARCHAR(35)   NULL
              , AttendingProviderFirstName              VARCHAR(25)   NULL
              , AttendingProviderMiddleName             VARCHAR(25)   NULL
              , AttendingProviderLicenseNumber          VARCHAR(35)   NULL
              , Priority                                INT           NULL
              , CoveragePlanId                          INT           NULL
              , MedicaidPayer                           CHAR(1)       NULL
              , MedicarePayer                           CHAR(1)       NULL
              , PayerName                               VARCHAR(100)  NULL
              , PayerAddressHeading                     VARCHAR(100)  NULL
              , PayerAddress1                           VARCHAR(60)   NULL
              , PayerAddress2                           VARCHAR(60)   NULL
              , PayerCity                               VARCHAR(30)   NULL
              , PayerState                              CHAR(2)       NULL
              , PayerZip                                CHAR(25)      NULL
              , MedicareInsuranceTypeCode               CHAR(2)       NULL
              , ClaimFilingIndicatorCode                CHAR(2)       NULL
              , ElectronicClaimsPayerId                 VARCHAR(20)   NULL
              , ClaimOfficeNumber                       VARCHAR(20)   NULL
              , ChargeAmount                            MONEY         NULL
              , PaidAmount                              MONEY         NULL
              , Adjustments                             MONEY         NULL
              , BalanceAmount                           MONEY         NULL
              , ApprovedAmount                          MONEY         NULL
              , ClientPayment                           MONEY         NULL
              , ExpectedPayment                         MONEY         NULL
              , ExpectedAdjustment                      MONEY         NULL
              , AgencyName                              VARCHAR(100)  NULL
              , BillingProviderTaxIdType                VARCHAR(2)    NULL
              , BillingProviderTaxId                    VARCHAR(9)    NULL
              , BillingProviderIdType                   VARCHAR(2)    NULL
              , BillingProviderId                       VARCHAR(35)   NULL
              , BillingTaxonomyCode                     VARCHAR(30)   NULL
              , BillingProviderLastName                 VARCHAR(35)   NULL
              , BillingProviderFirstName                VARCHAR(25)   NULL
              , BillingProviderMiddleName               VARCHAR(25)   NULL
              , BillingProviderNPI                      CHAR(10)      NULL
              , PayToProviderTaxIdType                  VARCHAR(2)    NULL
              , PayToProviderTaxId                      VARCHAR(9)    NULL
              , PayToProviderIdType                     VARCHAR(2)    NULL
              , PayToProviderId                         VARCHAR(35)   NULL
              , PayToProviderLastName                   VARCHAR(35)   NULL
              , PayToProviderFirstName                  VARCHAR(25)   NULL
              , PayToProviderMiddleName                 VARCHAR(25)   NULL
              , PayToProviderNPI                        CHAR(10)      NULL
              , RenderingProviderTaxIdType              VARCHAR(2)    NULL
              , RenderingProviderTaxId                  VARCHAR(9)    NULL
              , RenderingProviderIdType                 VARCHAR(2)    NULL
              , RenderingProviderId                     VARCHAR(35)   NULL
              , RenderingProviderLastName               VARCHAR(35)   NULL
              , RenderingProviderFirstName              VARCHAR(25)   NULL
              , RenderingProviderMiddleName             VARCHAR(25)   NULL
              , RenderingProviderTaxonomyCode           VARCHAR(20)   NULL
              , RenderingProviderNPI                    CHAR(10)      NULL
              , ReferringProviderTaxIdType              VARCHAR(2)    NULL
              , ReferringProviderTaxId                  VARCHAR(9)    NULL
              , ReferringProviderIdType                 VARCHAR(2)    NULL
              , ReferringProviderId                     VARCHAR(35)   NULL
              , ReferringProviderLastName               VARCHAR(35)   NULL
              , ReferringProviderFirstName              VARCHAR(25)   NULL
              , ReferringProviderMiddleName             VARCHAR(25)   NULL
              , ReferringProviderNPI                    CHAR(10)      NULL
              , FacilityEntityCode                      VARCHAR(2)    NULL
              , FacilityName                            VARCHAR(35)   NULL
              , FacilityTaxIdType                       VARCHAR(2)    NULL
              , FacilityTaxId                           VARCHAR(9)    NULL
              , FacilityProviderIdType                  VARCHAR(2)    NULL
              , FacilityProviderId                      VARCHAR(35)   NULL
              , FacilityAddress1                        VARCHAR(30)   NULL
              , FacilityAddress2                        VARCHAR(30)   NULL
              , FacilityCity                            VARCHAR(30)   NULL
              , FacilityState                           CHAR(2)       NULL
              , FacilityZip                             VARCHAR(25)   NULL
              , FacilityPhone                           VARCHAR(10)   NULL
              , FacilityNPI                             CHAR(10)      NULL
       ,SupervisingProvider2310DLastName VARCHAR(60) NULL 
          ,SupervisingProvider2310DFirstName VARCHAR(35) NULL 
          ,SupervisingProvider2310DMiddleName VARCHAR(25) NULL 
          ,SupervisingProvider2310DIdType VARCHAR(2) NULL 
          ,SupervisingProvider2310DId VARCHAR(80) NULL 
          ,SupervisingProvider2310DSecondaryIdType1 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId1 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType2 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId2 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType3 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId3 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType4 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId4 VARCHAR(50)           
          ,ClaimNoteReferenceCode VARCHAR(80) NULL 
          ,ClaimNote VARCHAR(MAX) NULL 
          ,ServiceNoteReferenceCode VARCHAR(15) NULL 
          ,ServiceNote VARCHAR(MAX) NULL
              , PaymentAddress1                         VARCHAR(30)   NULL
              , PaymentAddress2                         VARCHAR(30)   NULL
              , PaymentCity                             VARCHAR(30)   NULL
              , PaymentState                            CHAR(2)       NULL
              , PaymentZip                              VARCHAR(25)   NULL
              , PaymentPhone                            VARCHAR(10)   NULL
              , ReferringId                             INT           NULL  -- Not tracked in application
              , BillingCode                             VARCHAR(15)   NULL
              , Modifier1                               CHAR(2)       NULL
              , Modifier2                               CHAR(2)       NULL
              , Modifier3                               CHAR(2)       NULL
              , Modifier4                               CHAR(2)       NULL
              , RevenueCode                             VARCHAR(15)   NULL
              , RevenueCodeDescription                  VARCHAR(100)  NULL
              , ClaimUnits                              INT           NULL
              , HCFAReservedValue                       VARCHAR(15)   NULL
              , DiagnosisPointer1                       CHAR(1)       NULL
              , DiagnosisPointer2                       CHAR(1)       NULL
              , DiagnosisPointer3                       CHAR(1)       NULL
              , DiagnosisPointer4                       CHAR(1)       NULL
              , DiagnosisPointer5                       CHAR(1)       NULL
              , DiagnosisPointer6                       CHAR(1)       NULL
              , DiagnosisPointer7                       CHAR(1)       NULL
              , DiagnosisPointer8                       CHAR(1)       NULL
              , DiagnosisPointer9                       CHAR(1)       NULL
              , DiagnosisPointer10                      CHAR(2)       NULL
              , DiagnosisPointer11                      CHAR(2)       NULL
              , DiagnosisPointer12                      CHAR(2)       NULL
              , LineItemControlNumber                   INT           NULL
              , ClientGroupId                           INT           NULL
              , ClaimFrequencyCode                      CHAR(1)       NULL
              , AdmissionTypeCode                       VARCHAR(2)    NULL
              , AdmissionSourceCode                     VARCHAR(2)    NULL
              , PatientStatusCode                       VARCHAR(2)    NULL
              , StatementStartDate                      DATETIME      NULL
              , StatementEndDate                        DATETIME      NULL
                                                                            -- Custom Fields
              , CustomField1                            VARCHAR(100)  NULL
              , CustomField2                            VARCHAR(100)  NULL
              , CustomField3                            VARCHAR(100)  NULL
              , CustomField4                            VARCHAR(100)  NULL
              , CustomField5                            VARCHAR(100)  NULL
              , CustomField6                            VARCHAR(100)  NULL
              , CustomField7                            VARCHAR(100)  NULL
              , CustomField8                            VARCHAR(100)  NULL
              , CustomField9                            VARCHAR(100)  NULL
              , CustomField10                           VARCHAR(100)  NULL
              , AdmittingDiagnosisCode                  VARCHAR(10)   NULL
              , AdmittingDiagnosisQualifier             VARCHAR(3)    NULL
              , AdmittingDiagnosisPOA                   VARCHAR(1)    NULL
              , InpatientAdmitDate                      DATETIME      NULL
              , InpatientDischargedDate                 DATETIME      NULL
              , VoidedClaimLineItemId                   INT           NULL
              , ConditionCode1                          VARCHAR(10)   NULL
              , ConditionCode2                          VARCHAR(10)   NULL
              , ConditionCode3                          VARCHAR(10)   NULL
              , ConditionCode4                          VARCHAR(10)   NULL
              , ConditionCode5                          VARCHAR(10)   NULL
              , ConditionCode6                          VARCHAR(10)   NULL
              , ConditionCode7                          VARCHAR(10)   NULL
              , ConditionCode8                          VARCHAR(10)   NULL
              , ConditionCode9                          VARCHAR(10)   NULL
              , ConditionCode10                         VARCHAR(10)   NULL
              , ConditionCode11                         VARCHAR(10)   NULL
              , ConditionCode12                         VARCHAR(10)   NULL
              , ValueCode1                              VARCHAR(10)   NULL
              , ValueCodeValue1                         VARCHAR(10)   NULL
              , ValueCode2                              VARCHAR(10)   NULL
              , ValueCodeValue2                         VARCHAR(10)   NULL
              , ValueCode3                              VARCHAR(10)   NULL
              , ValueCodeValue3                         VARCHAR(10)   NULL
              , ValueCode4                              VARCHAR(10)   NULL
              , ValueCodeValue4                         VARCHAR(10)   NULL
              , ValueCode5                              VARCHAR(10)   NULL
              , ValueCodeValue5                         VARCHAR(10)   NULL
              , ValueCode6                              VARCHAR(10)   NULL
              , ValueCodeValue6                         VARCHAR(10)   NULL
              , ValueCode7                              VARCHAR(10)   NULL
              , ValueCodeValue7                         VARCHAR(10)   NULL
              , ValueCode8                              VARCHAR(10)   NULL
              , ValueCodeValue8                         VARCHAR(10)   NULL
              , ValueCode9                              VARCHAR(10)   NULL
              , ValueCodeValue9                         VARCHAR(10)   NULL
              , ValueCode10                             VARCHAR(10)   NULL
              , ValueCodeValue10                        VARCHAR(10)   NULL
              , ValueCode11                             VARCHAR(10)   NULL
              , ValueCodeValue11                        VARCHAR(10)   NULL
              , ValueCode12                             VARCHAR(10)   NULL
              , ValueCodeValue12                        VARCHAR(10)   NULL
              , OccurenceCode1                          VARCHAR(10)   NULL
              , OccurenceCodeDate1                      VARCHAR(10)   NULL
              , OccurenceCode2                          VARCHAR(10)   NULL
              , OccurenceCodeDate2                      VARCHAR(10)   NULL
              , OccurenceCode3                          VARCHAR(10)   NULL
              , OccurenceCodeDate3                      VARCHAR(10)   NULL
              , OccurenceCode4                          VARCHAR(10)   NULL
              , OccurenceCodeDate4                      VARCHAR(10)   NULL
              , OccurenceCode5                          VARCHAR(10)   NULL
              , OccurenceCodeDate5                      VARCHAR(10)   NULL
              , OccurenceCode6                          VARCHAR(10)   NULL
              , OccurenceCodeDate6                      VARCHAR(10)   NULL
              , OccurenceCode7                          VARCHAR(10)   NULL
              , OccurenceCodeDate7                      VARCHAR(10)   NULL
              , OccurenceCode8                          VARCHAR(10)   NULL
              , OccurenceCodeDate8                      VARCHAR(10)   NULL
              , OccurenceCode9                          VARCHAR(10)   NULL
              , OccurenceCodeDate9                      VARCHAR(10)   NULL
              , OccurenceCode10                         VARCHAR(10)   NULL
              , OccurenceCodeDate10                     VARCHAR(10)   NULL
              , OccurenceCode11                         VARCHAR(10)   NULL
              , OccurenceCodeDate11                     VARCHAR(10)   NULL
              , OccurenceCode12                         VARCHAR(10)   NULL
              , OccurenceCodeDate12                     VARCHAR(10)   NULL
              , OccurenceSpanCode1                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom1                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough1               VARCHAR(10)   NULL
              , OccurenceSpanCode2                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom2                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough2               VARCHAR(10)   NULL
              , OccurenceSpanCode3                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom3                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough3               VARCHAR(10)   NULL
              , OccurenceSpanCode4                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom4                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough4               VARCHAR(10)   NULL
              , OccurenceSpanCode5                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom5                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough5               VARCHAR(10)   NULL
              , OccurenceSpanCode6                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom6                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough6               VARCHAR(10)   NULL
              , OccurenceSpanCode7                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom7                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough7               VARCHAR(10)   NULL
              , OccurenceSpanCode8                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom8                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough8               VARCHAR(10)   NULL
              , OccurenceSpanCode9                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom9                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough9               VARCHAR(10)   NULL
              , OccurenceSpanCode10                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom10                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough10              VARCHAR(10)   NULL
              , OccurenceSpanCode11                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom11                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough11              VARCHAR(10)   NULL
              , OccurenceSpanCode12                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom12                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough12              VARCHAR(10)   NULL
              , IsICD10Service                          CHAR(1)       NULL
              , ClientInpatientVisitId                  INT           NULL
              , BedProcedure                            CHAR(1)       NULL
              , MedicationProcedure                     CHAR(1)       NULL
              , InpatientProgram                        CHAR(1)       NULL
              , DRGCode                                 VARCHAR(10)
			  , MedicalRecordNumber						VARCHAR(30)	  NULL 
            )


            CREATE INDEX temp_ClaimLines_PK
                ON #ClaimLines(ClaimLineId)



            CREATE TABLE #ClaimLines_Temp (
                XClaimId                                INT           NULL  --New apoole 10/30
              , ClaimLineId                             INT           NOT NULL
              , ChargeId                                INT           NOT NULL
              , ClientId                                INT           NULL
              , ClientLastName                          VARCHAR(30)   NULL
              , ClientFirstName                         VARCHAR(20)   NULL
              , ClientMiddleName                        VARCHAR(20)   NULL
              , ClientSSN                               CHAR(11)      NULL
              , ClientSuffix                            VARCHAR(10)   NULL
              , ClientAddress1                          VARCHAR(30)   NULL
              , ClientAddress2                          VARCHAR(30)   NULL
              , ClientCity                              VARCHAR(30)   NULL
              , ClientState                             CHAR(2)       NULL
              , ClientZip                               CHAR(25)      NULL
              , ClientHomePhone                         CHAR(10)      NULL
              , ClientDOB                               DATETIME      NULL
              , ClientSex                               CHAR(1)       NULL
              , ClientIsSubscriber                      CHAR(1)       NULL
              , SubscriberContactId                     INT           NULL
              , StudentStatus                           INT           NULL
              , MaritalStatus                           INT           NULL
              , EmploymentStatus                        INT           NULL
              , EmploymentRelated                       CHAR(1)       NULL
              , AutoRelated                             CHAR(1)       NULL
              , OtherAccidentRelated                    CHAR(1)       NULL
              , RegistrationDate                        DATETIME      NULL
              , DischargeDate                           DATETIME      NULL
              , RelatedHospitalAdmitDate                DATETIME      NULL
              , RelatedHospitalDischargeDate            VARCHAR(35)   NULL
              , ClientCoveragePlanId                    INT           NULL
              , InsuredId                               VARCHAR(25)   NULL
              , GroupNumber                             VARCHAR(25)   NULL
              , GroupName                               VARCHAR(100)  NULL
              , InsuredLastName                         VARCHAR(30)   NULL
              , InsuredFirstName                        VARCHAR(20)   NULL
              , InsuredMiddleName                       VARCHAR(20)   NULL
              , InsuredSuffix                           VARCHAR(10)   NULL
              , InsuredRelation                         INT           NULL
              , InsuredRelationCode                     VARCHAR(20)   NULL
              , InsuredAddress1                         VARCHAR(30)   NULL
              , InsuredAddress2                         VARCHAR(30)   NULL
              , InsuredCity                             VARCHAR(30)   NULL
              , InsuredState                            CHAR(2)       NULL
              , InsuredZip                              VARCHAR(25)   NULL
              , InsuredHomePhone                        CHAR(10)      NULL
              , InsuredSex                              CHAR(1)       NULL
              , InsuredSSN                              VARCHAR(9)    NULL
              , InsuredDOB                              DATETIME      NULL
              , ServiceId                               INT           NULL
              , GroupServiceId                          INT           NULL
              , GroupId                                 INT           NULL
              , DateOfService                           DATETIME      NULL
              , EndDateOfService                        DATETIME      NULL
              , ProcedureCodeId                         INT           NULL
              , ServiceUnits                            DECIMAL(7, 2) NULL
              , ServiceUnitType                         INT           NULL
              , ProgramId                               INT           NULL
              , LocationId                              INT           NULL
              , PlaceOfService                          INT           NULL
              , PlaceOfServiceCode                      CHAR(2)       NULL
              , TypeOfServiceCode                       CHAR(2)       NULL
              , InsuranceCommissionersCode              CHAR(10)      NULL
              , ProviderCommercialNumber                VARCHAR(100)  NULL
              , DiagnosisCodeQualifier1                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier2                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier3                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier4                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier5                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier6                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier7                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier8                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier9                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier10                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier11                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier12                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier13                VARCHAR(3)    NULL
              , DiagnosisCode1                          VARCHAR(10)   NULL
              , DiagnosisCode2                          VARCHAR(10)   NULL
              , DiagnosisCode3                          VARCHAR(10)   NULL
              , DiagnosisCode4                          VARCHAR(10)   NULL
              , DiagnosisCode5                          VARCHAR(10)   NULL
              , DiagnosisCode6                          VARCHAR(10)   NULL
              , DiagnosisCode7                          VARCHAR(10)   NULL
              , DiagnosisCode8                          VARCHAR(10)   NULL
              , DiagnosisCode9                          VARCHAR(10)   NULL
              , DiagnosisCode10                         VARCHAR(10)   NULL
              , DiagnosisCode11                         VARCHAR(10)   NULL
              , DiagnosisCode12                         VARCHAR(10)   NULL
              , DiagnosisCode13                         VARCHAR(10)   NULL
              , DiagnosisCodePOA1                       VARCHAR(1)    NULL
              , DiagnosisCodePOA2                       VARCHAR(1)    NULL
              , DiagnosisCodePOA3                       VARCHAR(1)    NULL
              , DiagnosisCodePOA4                       VARCHAR(1)    NULL
              , DiagnosisCodePOA5                       VARCHAR(1)    NULL
              , DiagnosisCodePOA6                       VARCHAR(1)    NULL
              , DiagnosisCodePOA7                       VARCHAR(1)    NULL
              , DiagnosisCodePOA8                       VARCHAR(1)    NULL
              , DiagnosisCodePOA9                       VARCHAR(1)    NULL
              , DiagnosisCodePOA10                      VARCHAR(1)    NULL
              , DiagnosisCodePOA11                      VARCHAR(1)    NULL
              , DiagnosisCodePOA12                      VARCHAR(1)    NULL
              , DiagnosisCodePOA13                      VARCHAR(1)    NULL
              , ProcedureCodeQualifier1                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier2                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier3                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier4                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier5                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier6                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier7                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier8                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier9                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier10                VARCHAR(3)    NULL
              , ProcedureCodeQualifier11                VARCHAR(3)    NULL
              , ProcedureCodeQualifier12                VARCHAR(3)    NULL
              , ProcedureCode1                          VARCHAR(10)   NULL
              , ProcedureCode2                          VARCHAR(10)   NULL
              , ProcedureCode3                          VARCHAR(10)   NULL
              , ProcedureCode4                          VARCHAR(10)   NULL
              , ProcedureCode5                          VARCHAR(10)   NULL
              , ProcedureCode6                          VARCHAR(10)   NULL
              , ProcedureCode7                          VARCHAR(10)   NULL
              , ProcedureCode8                          VARCHAR(10)   NULL
              , ProcedureCode9                          VARCHAR(10)   NULL
              , ProcedureCode10                         VARCHAR(10)   NULL
              , ProcedureCode11                         VARCHAR(10)   NULL
              , ProcedureCode12                         VARCHAR(10)   NULL
              , ProcedureCodeDate1                      VARCHAR(10)   NULL
              , ProcedureCodeDate2                      VARCHAR(10)   NULL
              , ProcedureCodeDate3                      VARCHAR(10)   NULL
              , ProcedureCodeDate4                      VARCHAR(10)   NULL
              , ProcedureCodeDate5                      VARCHAR(10)   NULL
              , ProcedureCodeDate6                      VARCHAR(10)   NULL
              , ProcedureCodeDate7                      VARCHAR(10)   NULL
              , ProcedureCodeDate8                      VARCHAR(10)   NULL
              , ProcedureCodeDate9                      VARCHAR(10)   NULL
              , ProcedureCodeDate10                     VARCHAR(10)   NULL
              , ProcedureCodeDate11                     VARCHAR(10)   NULL
              , ProcedureCodeDate12                     VARCHAR(10)   NULL
              , AuthorizationId                         INT           NULL
              , AuthorizationNumber                     VARCHAR(35)   NULL
              , SubmissionReasonCode                    CHAR(1)       NULL
              , PayerClaimControlNumber                 VARCHAR(80)   NULL
              , EmergencyIndicator                      CHAR(1)       NULL
              , ClinicianId                             INT           NULL
              , ClinicianLastName                       VARCHAR(30)   NULL
              , ClinicianFirstName                      VARCHAR(20)   NULL
              , ClinicianMiddleName                     VARCHAR(20)   NULL
              , ClinicianSex                            CHAR(1)       NULL
              , AttendingProviderTaxIdType              VARCHAR(2)    NULL
              , AttendingProviderTaxId                  VARCHAR(9)    NULL
              , AttendingProviderTaxonomyCode           VARCHAR(20)   NULL
              , AttendingId                             INT           NULL
              , AttendingProviderEntityQualifier        VARCHAR(1)    NULL
              , AttendingProviderEntityCode             VARCHAR(10)   NULL
              , AttendingProviderIdType                 VARCHAR(2)    NULL
              , AttendingProviderId                     VARCHAR(35)   NULL
              , AttendingProviderLastName               VARCHAR(35)   NULL
              , AttendingProviderFirstName              VARCHAR(25)   NULL
              , AttendingProviderMiddleName             VARCHAR(25)   NULL
              , AttendingProviderLicenseNumber          VARCHAR(35)   NULL
                                                                            -- apoole 11/18 AttendingProviderNPI char(10) null,
              , Priority                                INT           NULL
              , CoveragePlanId                          INT           NULL
              , MedicaidPayer                           CHAR(1)       NULL
              , MedicarePayer                           CHAR(1)       NULL
              , PayerName                               VARCHAR(100)  NULL
              , PayerAddressHeading                     VARCHAR(100)  NULL
              , PayerAddress1                           VARCHAR(60)   NULL
              , PayerAddress2                           VARCHAR(60)   NULL
              , PayerCity                               VARCHAR(30)   NULL
              , PayerState                              CHAR(2)       NULL
              , PayerZip                                CHAR(25)      NULL
              , MedicareInsuranceTypeCode               CHAR(2)       NULL
              , ClaimFilingIndicatorCode                CHAR(2)       NULL
              , ElectronicClaimsPayerId                 VARCHAR(20)   NULL
              , ClaimOfficeNumber                       VARCHAR(20)   NULL
              , ChargeAmount                            MONEY         NULL
              , PaidAmount                              MONEY         NULL
              , Adjustments                             MONEY         NULL
              , BalanceAmount                           MONEY         NULL
              , ApprovedAmount                          MONEY         NULL
              , ClientPayment                           MONEY         NULL
              , ExpectedPayment                         MONEY         NULL
              , ExpectedAdjustment                      MONEY         NULL
              , AgencyName                              VARCHAR(100)  NULL
              , BillingProviderTaxIdType                VARCHAR(2)    NULL
              , BillingProviderTaxId                    VARCHAR(9)    NULL
              , BillingProviderIdType                   VARCHAR(2)    NULL
              , BillingProviderId                       VARCHAR(35)   NULL
              , BillingTaxonomyCode                     VARCHAR(30)   NULL
              , BillingProviderLastName                 VARCHAR(35)   NULL
              , BillingProviderFirstName                VARCHAR(25)   NULL
              , BillingProviderMiddleName               VARCHAR(25)   NULL
              , BillingProviderNPI                      CHAR(10)      NULL
              , PayToProviderTaxIdType                  VARCHAR(2)    NULL
              , PayToProviderTaxId                      VARCHAR(9)    NULL
              , PayToProviderIdType                     VARCHAR(2)    NULL
              , PayToProviderId                         VARCHAR(35)   NULL
              , PayToProviderLastName                   VARCHAR(35)   NULL
              , PayToProviderFirstName                  VARCHAR(25)   NULL
              , PayToProviderMiddleName                 VARCHAR(25)   NULL
              , PayToProviderNPI                        CHAR(10)      NULL
              , RenderingProviderTaxIdType              VARCHAR(2)    NULL
              , RenderingProviderTaxId                  VARCHAR(9)    NULL
              , RenderingProviderIdType                 VARCHAR(2)    NULL
              , RenderingProviderId                     VARCHAR(35)   NULL
              , RenderingProviderLastName               VARCHAR(35)   NULL
              , RenderingProviderFirstName              VARCHAR(25)   NULL
              , RenderingProviderMiddleName             VARCHAR(25)   NULL
              , RenderingProviderTaxonomyCode           VARCHAR(20)   NULL
              , RenderingProviderNPI                    CHAR(10)      NULL
              , ReferringProviderTaxIdType              VARCHAR(2)    NULL
              , ReferringProviderTaxId                  VARCHAR(9)    NULL
              , ReferringProviderIdType                 VARCHAR(2)    NULL
              , ReferringProviderId                     VARCHAR(35)   NULL
              , ReferringProviderLastName               VARCHAR(35)   NULL
              , ReferringProviderFirstName              VARCHAR(25)   NULL
              , ReferringProviderMiddleName             VARCHAR(25)   NULL
              , ReferringProviderNPI                    CHAR(10)      NULL
              , FacilityEntityCode                      VARCHAR(2)    NULL
              , FacilityName                            VARCHAR(35)   NULL
              , FacilityTaxIdType                       VARCHAR(2)    NULL
              , FacilityTaxId                           VARCHAR(9)    NULL
              , FacilityProviderIdType                  VARCHAR(2)    NULL
              , FacilityProviderId                      VARCHAR(35)   NULL
              , FacilityAddress1                        VARCHAR(30)   NULL
              , FacilityAddress2                        VARCHAR(30)   NULL
              , FacilityCity                            VARCHAR(30)   NULL
              , FacilityState                           CHAR(2)       NULL
              , FacilityZip                             VARCHAR(25)   NULL
              , FacilityPhone                           VARCHAR(10)   NULL
              , FacilityNPI                             CHAR(10)      NULL
      ,SupervisingProvider2310DLastName VARCHAR(60) NULL 
          ,SupervisingProvider2310DFirstName VARCHAR(35) NULL 
          ,SupervisingProvider2310DMiddleName VARCHAR(25) NULL 
          ,SupervisingProvider2310DIdType VARCHAR(2) NULL 
          ,SupervisingProvider2310DId VARCHAR(80) NULL 
          ,SupervisingProvider2310DSecondaryIdType1 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId1 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType2 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId2 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType3 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId3 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType4 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId4 VARCHAR(50)           
          ,ClaimNoteReferenceCode VARCHAR(80) NULL 
          ,ClaimNote VARCHAR(MAX) NULL 
          ,ServiceNoteReferenceCode VARCHAR(15) NULL 
          ,ServiceNote VARCHAR(MAX) NULL
              , PaymentAddress1                         VARCHAR(30)   NULL
              , PaymentAddress2                         VARCHAR(30)   NULL
              , PaymentCity                             VARCHAR(30)   NULL
              , PaymentState                            CHAR(2)       NULL
              , PaymentZip                              VARCHAR(25)   NULL
              , PaymentPhone                            VARCHAR(10)   NULL
              , ReferringId                             INT           NULL  -- Not tracked in application
              , BillingCode                             VARCHAR(15)   NULL
              , Modifier1                               CHAR(2)       NULL
              , Modifier2                               CHAR(2)       NULL
              , Modifier3                               CHAR(2)       NULL
              , Modifier4                               CHAR(2)       NULL
              , RevenueCode                             VARCHAR(15)   NULL
              , RevenueCodeDescription                  VARCHAR(100)  NULL
              , ClaimUnits                              INT           NULL
              , HCFAReservedValue                       VARCHAR(15)   NULL
                                                                            -- 11/19 removed Diagnosis Pointer unused apoole
              , DiagnosisPointer1                       CHAR(1)       NULL
              , DiagnosisPointer2                       CHAR(1)       NULL
              , DiagnosisPointer3                       CHAR(1)       NULL
              , DiagnosisPointer4                       CHAR(1)       NULL
              , DiagnosisPointer5                       CHAR(1)       NULL
              , DiagnosisPointer6                       CHAR(1)       NULL
              , DiagnosisPointer7                       CHAR(1)       NULL
              , DiagnosisPointer8                       CHAR(1)       NULL
              , DiagnosisPointer9                       CHAR(1)       NULL
              , DiagnosisPointer10                      CHAR(2)       NULL
              , DiagnosisPointer11                      CHAR(2)       NULL
              , DiagnosisPointer12                      CHAR(2)       NULL
              , LineItemControlNumber                   INT           NULL
              , ClientGroupId                           INT           NULL
              , ClaimFrequencyCode                      CHAR(1)       NULL
              , AdmissionTypeCode                       VARCHAR(2)    NULL
              , AdmissionSourceCode                     VARCHAR(2)    NULL
              , PatientStatusCode                       VARCHAR(2)    NULL
              , StatementStartDate                      DATETIME      NULL
              , StatementEndDate                        DATETIME      NULL
              , CustomField1                            VARCHAR(100)  NULL
              , CustomField2                            VARCHAR(100)  NULL
              , CustomField3                            VARCHAR(100)  NULL
              , CustomField4                            VARCHAR(100)  NULL
              , CustomField5                            VARCHAR(100)  NULL
              , CustomField6                            VARCHAR(100)  NULL
              , CustomField7                            VARCHAR(100)  NULL
              , CustomField8                            VARCHAR(100)  NULL
              , CustomField9                            VARCHAR(100)  NULL
              , CustomField10                           VARCHAR(100)  NULL
              , AdmittingDiagnosisCode                  VARCHAR(10)   NULL
              , AdmittingDiagnosisQualifier             VARCHAR(3)    NULL
              , AdmittingDiagnosisPOA                   VARCHAR(1)    NULL
              , InpatientAdmitDate                      DATETIME      NULL
              , InpatientDischargedDate                 DATETIME      NULL
              , VoidedClaimLineItemId                   INT           NULL
                                                                            --Added 03/05/2014
              , ConditionCode1                          VARCHAR(10)   NULL
              , ConditionCode2                          VARCHAR(10)   NULL
              , ConditionCode3                          VARCHAR(10)   NULL
              , ConditionCode4                          VARCHAR(10)   NULL
              , ConditionCode5                          VARCHAR(10)   NULL
              , ConditionCode6                          VARCHAR(10)   NULL
              , ConditionCode7                          VARCHAR(10)   NULL
              , ConditionCode8                          VARCHAR(10)   NULL
              , ConditionCode9                          VARCHAR(10)   NULL
              , ConditionCode10                         VARCHAR(10)   NULL
              , ConditionCode11                         VARCHAR(10)   NULL
              , ConditionCode12                         VARCHAR(10)   NULL
              , ValueCode1                              VARCHAR(10)   NULL
              , ValueCodeValue1                         VARCHAR(10)   NULL
              , ValueCode2                              VARCHAR(10)   NULL
              , ValueCodeValue2                         VARCHAR(10)   NULL
              , ValueCode3                              VARCHAR(10)   NULL
              , ValueCodeValue3                         VARCHAR(10)   NULL
              , ValueCode4                              VARCHAR(10)   NULL
              , ValueCodeValue4                         VARCHAR(10)   NULL
              , ValueCode5                              VARCHAR(10)   NULL
              , ValueCodeValue5                         VARCHAR(10)   NULL
              , ValueCode6                              VARCHAR(10)   NULL
              , ValueCodeValue6                         VARCHAR(10)   NULL
              , ValueCode7                              VARCHAR(10)   NULL
              , ValueCodeValue7                         VARCHAR(10)   NULL
              , ValueCode8                              VARCHAR(10)   NULL
              , ValueCodeValue8                         VARCHAR(10)   NULL
              , ValueCode9                              VARCHAR(10)   NULL
              , ValueCodeValue9                         VARCHAR(10)   NULL
              , ValueCode10                             VARCHAR(10)   NULL
              , ValueCodeValue10                        VARCHAR(10)   NULL
              , ValueCode11                             VARCHAR(10)   NULL
              , ValueCodeValue11                        VARCHAR(10)   NULL
              , ValueCode12                             VARCHAR(10)   NULL
              , ValueCodeValue12                        VARCHAR(10)   NULL
              , OccurenceCode1                          VARCHAR(10)   NULL
              , OccurenceCodeDate1                      VARCHAR(10)   NULL
              , OccurenceCode2                          VARCHAR(10)   NULL
              , OccurenceCodeDate2                      VARCHAR(10)   NULL
              , OccurenceCode3                          VARCHAR(10)   NULL
              , OccurenceCodeDate3                      VARCHAR(10)   NULL
              , OccurenceCode4                          VARCHAR(10)   NULL
              , OccurenceCodeDate4                      VARCHAR(10)   NULL
              , OccurenceCode5                          VARCHAR(10)   NULL
              , OccurenceCodeDate5                      VARCHAR(10)   NULL
              , OccurenceCode6                          VARCHAR(10)   NULL
              , OccurenceCodeDate6                      VARCHAR(10)   NULL
              , OccurenceCode7                          VARCHAR(10)   NULL
              , OccurenceCodeDate7                      VARCHAR(10)   NULL
              , OccurenceCode8                          VARCHAR(10)   NULL
              , OccurenceCodeDate8                      VARCHAR(10)   NULL
              , OccurenceCode9                          VARCHAR(10)   NULL
              , OccurenceCodeDate9                      VARCHAR(10)   NULL
              , OccurenceCode10                         VARCHAR(10)   NULL
              , OccurenceCodeDate10                     VARCHAR(10)   NULL
              , OccurenceCode11                         VARCHAR(10)   NULL
              , OccurenceCodeDate11                     VARCHAR(10)   NULL
              , OccurenceCode12                         VARCHAR(10)   NULL
              , OccurenceCodeDate12                     VARCHAR(10)   NULL
              , OccurenceSpanCode1                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom1                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough1               VARCHAR(10)   NULL
              , OccurenceSpanCode2                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom2                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough2               VARCHAR(10)   NULL
              , OccurenceSpanCode3                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom3                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough3               VARCHAR(10)   NULL
              , OccurenceSpanCode4                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom4                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough4               VARCHAR(10)   NULL
              , OccurenceSpanCode5                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom5                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough5               VARCHAR(10)   NULL
              , OccurenceSpanCode6                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom6                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough6               VARCHAR(10)   NULL
              , OccurenceSpanCode7                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom7                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough7               VARCHAR(10)   NULL
              , OccurenceSpanCode8                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom8                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough8               VARCHAR(10)   NULL
              , OccurenceSpanCode9                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom9                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough9               VARCHAR(10)   NULL
              , OccurenceSpanCode10                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom10                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough10              VARCHAR(10)   NULL
              , OccurenceSpanCode11                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom11                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough11              VARCHAR(10)   NULL
              , OccurenceSpanCode12                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom12                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough12              VARCHAR(10)   NULL
              , IsICD10Service                          CHAR(1)       NULL
              , ClientInpatientVisitId                  INT           NULL
              , BedProcedure                            CHAR(1)       NULL
              , MedicationProcedure                     CHAR(1)       NULL
              , InpatientProgram                        CHAR(1)       NULL
              , DRGCode                                 VARCHAR(10)
			  ,	MedicalRecordNumber						VARCHAR(30)	  NULL
            )



            CREATE INDEX temp_ClaimLines_Temp_PK
                ON #ClaimLines_Temp(ClaimLineId)


            --New apoole 10/30
            CREATE TABLE #LineGrouper (
                XClaimId                                INT           NULL
              , ClientId                                INT           NULL
              , ClientLastName                          VARCHAR(30)   NULL
              , ClientFirstName                         VARCHAR(20)   NULL
              , ClientMiddleName                        VARCHAR(20)   NULL
              , ClientSSN                               CHAR(11)      NULL
              , ClientSuffix                            VARCHAR(10)   NULL
              , ClientAddress1                          VARCHAR(30)   NULL
              , ClientAddress2                          VARCHAR(30)   NULL
              , ClientCity                              VARCHAR(30)   NULL
              , ClientState                             CHAR(2)       NULL
              , ClientZip                               CHAR(25)      NULL
              , ClientHomePhone                         CHAR(10)      NULL
              , ClientDOB                               DATETIME      NULL
              , ClientSex                               CHAR(1)       NULL
              , ClientIsSubscriber                      CHAR(1)       NULL
              , SubscriberContactId                     INT           NULL
              , StudentStatus                           INT           NULL
              , MaritalStatus                           INT           NULL
              , EmploymentStatus                        INT           NULL
              , EmploymentRelated                       CHAR(1)       NULL
              , AutoRelated                             CHAR(1)       NULL
              , OtherAccidentRelated                    CHAR(1)       NULL
              , RegistrationDate                        DATETIME      NULL
              , DischargeDate                           DATETIME      NULL
              , RelatedHospitalAdmitDate                DATETIME      NULL
              , ClientCoveragePlanId                    INT           NULL
              , InsuredId                               VARCHAR(25)   NULL
              , GroupNumber                             VARCHAR(25)   NULL
              , GroupName                               VARCHAR(100)  NULL
              , InsuredLastName                         VARCHAR(30)   NULL
              , InsuredFirstName                        VARCHAR(20)   NULL
              , InsuredMiddleName                       VARCHAR(20)   NULL
              , InsuredSuffix                           VARCHAR(10)   NULL
              , InsuredRelation                         INT           NULL
              , InsuredRelationCode                     VARCHAR(20)   NULL
              , InsuredAddress1                         VARCHAR(30)   NULL
              , InsuredAddress2                         VARCHAR(30)   NULL
              , InsuredCity                             VARCHAR(30)   NULL
              , InsuredState                            CHAR(2)       NULL
              , InsuredZip                              VARCHAR(25)   NULL
              , InsuredHomePhone                        CHAR(10)      NULL
              , InsuredSex                              CHAR(1)       NULL
              , InsuredSSN                              VARCHAR(9)    NULL
              , InsuredDOB                              DATETIME      NULL
              , DateOfService                           DATETIME      NULL
              , EndDateOfService                        DATETIME      NULL
              , ProgramId                               INT           NULL
              , LocationId                              INT           NULL
              , PlaceOfService                          INT           NULL
              , PlaceOfServiceCode                      CHAR(2)       NULL
              , TypeOfServiceCode                       CHAR(2)       NULL
              , DiagnosisCodeQualifier1                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier2                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier3                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier4                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier5                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier6                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier7                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier8                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier9                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier10                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier11                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier12                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier13                VARCHAR(3)    NULL
              , DiagnosisCode1                          VARCHAR(10)   NULL
              , DiagnosisCode2                          VARCHAR(10)   NULL
              , DiagnosisCode3                          VARCHAR(10)   NULL
              , DiagnosisCode4                          VARCHAR(10)   NULL
              , DiagnosisCode5                          VARCHAR(10)   NULL
              , DiagnosisCode6                          VARCHAR(10)   NULL
              , DiagnosisCode7                          VARCHAR(10)   NULL
              , DiagnosisCode8                          VARCHAR(10)   NULL
              , DiagnosisCode9                          VARCHAR(10)   NULL
              , DiagnosisCode10                         VARCHAR(10)   NULL
              , DiagnosisCode11                         VARCHAR(10)   NULL
              , DiagnosisCode12                         VARCHAR(10)   NULL
              , DiagnosisCode13                         VARCHAR(10)   NULL
              , DiagnosisCodePOA1                       VARCHAR(1)    NULL
              , DiagnosisCodePOA2                       VARCHAR(1)    NULL
              , DiagnosisCodePOA3                       VARCHAR(1)    NULL
              , DiagnosisCodePOA4                       VARCHAR(1)    NULL
              , DiagnosisCodePOA5                       VARCHAR(1)    NULL
              , DiagnosisCodePOA6                       VARCHAR(1)    NULL
              , DiagnosisCodePOA7                       VARCHAR(1)    NULL
              , DiagnosisCodePOA8                       VARCHAR(1)    NULL
              , DiagnosisCodePOA9                       VARCHAR(1)    NULL
              , DiagnosisCodePOA10                      VARCHAR(1)    NULL
              , DiagnosisCodePOA11                      VARCHAR(1)    NULL
              , DiagnosisCodePOA12                      VARCHAR(1)    NULL
              , DiagnosisCodePOA13                      VARCHAR(1)    NULL
              , ProcedureCodeQualifier1                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier2                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier3                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier4                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier5                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier6                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier7                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier8                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier9                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier10                VARCHAR(3)    NULL
              , ProcedureCodeQualifier11                VARCHAR(3)    NULL
              , ProcedureCodeQualifier12                VARCHAR(3)    NULL
              , ProcedureCode1                          VARCHAR(10)   NULL
              , ProcedureCode2                          VARCHAR(10)   NULL
              , ProcedureCode3                          VARCHAR(10)   NULL
              , ProcedureCode4                          VARCHAR(10)   NULL
              , ProcedureCode5                          VARCHAR(10)   NULL
              , ProcedureCode6                          VARCHAR(10)   NULL
              , ProcedureCode7                          VARCHAR(10)   NULL
              , ProcedureCode8                          VARCHAR(10)   NULL
              , ProcedureCode9                          VARCHAR(10)   NULL
              , ProcedureCode10                         VARCHAR(10)   NULL
              , ProcedureCode11                         VARCHAR(10)   NULL
              , ProcedureCode12                         VARCHAR(10)   NULL
              , ProcedureCodeDate1                      VARCHAR(10)   NULL
              , ProcedureCodeDate2                      VARCHAR(10)   NULL
              , ProcedureCodeDate3                      VARCHAR(10)   NULL
              , ProcedureCodeDate4                      VARCHAR(10)   NULL
              , ProcedureCodeDate5                      VARCHAR(10)   NULL
              , ProcedureCodeDate6                      VARCHAR(10)   NULL
              , ProcedureCodeDate7                      VARCHAR(10)   NULL
              , ProcedureCodeDate8                      VARCHAR(10)   NULL
              , ProcedureCodeDate9                      VARCHAR(10)   NULL
              , ProcedureCodeDate10                     VARCHAR(10)   NULL
              , ProcedureCodeDate11                     VARCHAR(10)   NULL
              , ProcedureCodeDate12                     VARCHAR(10)   NULL
              , AuthorizationId                         INT           NULL
              , AuthorizationNumber                     VARCHAR(35)   NULL
              , SubmissionReasonCode                    CHAR(1)       NULL
              , PayerClaimControlNumber                 VARCHAR(80)   NULL
              , EmergencyIndicator                      CHAR(1)       NULL
              , ClinicianId                             INT           NULL
              , ClinicianLastName                       VARCHAR(30)   NULL
              , ClinicianFirstName                      VARCHAR(20)   NULL
              , ClinicianMiddleName                     VARCHAR(20)   NULL
              , ClinicianSex                            CHAR(1)       NULL
              , AttendingProviderTaxIdType              VARCHAR(2)    NULL
              , AttendingProviderTaxId                  VARCHAR(9)    NULL
              , AttendingProviderTaxonomyCode           VARCHAR(20)   NULL
              , AttendingId                             INT           NULL
              , AttendingProviderEntityQualifier        VARCHAR(1)    NULL
              , AttendingProviderEntityCode             VARCHAR(10)   NULL
              , AttendingProviderIdType                 VARCHAR(2)    NULL
              , AttendingProviderId                     VARCHAR(35)   NULL
              , AttendingProviderLastName               VARCHAR(35)   NULL
              , AttendingProviderFirstName              VARCHAR(25)   NULL
              , AttendingProviderMiddleName             VARCHAR(25)   NULL
              , AttendingProviderLicenseNumber          VARCHAR(35)   NULL
                -- apoole 11/18 AttendingProviderNPI char(10) null,
              , Priority                                INT           NULL
              , CoveragePlanId                          INT           NULL
              , MedicaidPayer                           CHAR(1)       NULL
              , MedicarePayer                           CHAR(1)       NULL
              , PayerName                               VARCHAR(100)  NULL
              , PayerAddressHeading                     VARCHAR(100)  NULL
              , PayerAddress1                           VARCHAR(60)   NULL
              , PayerAddress2                           VARCHAR(60)   NULL
              , PayerCity                               VARCHAR(30)   NULL
              , PayerState                              CHAR(2)       NULL
              , PayerZip                                CHAR(25)      NULL
              , MedicareInsuranceTypeCode               CHAR(2)       NULL
              , ClaimFilingIndicatorCode                CHAR(2)       NULL
              , ElectronicClaimsPayerId                 VARCHAR(20)   NULL
              , ClaimOfficeNumber                       VARCHAR(20)   NULL
              , AgencyName                              VARCHAR(100)  NULL
              , BillingProviderTaxIdType                VARCHAR(2)    NULL
              , BillingProviderTaxId                    VARCHAR(9)    NULL
              , BillingProviderIdType                   VARCHAR(2)    NULL
              , BillingProviderId                       VARCHAR(35)   NULL
              , BillingTaxonomyCode                     VARCHAR(30)   NULL
              , BillingProviderLastName                 VARCHAR(35)   NULL
              , BillingProviderFirstName                VARCHAR(25)   NULL
              , BillingProviderMiddleName               VARCHAR(25)   NULL
              , BillingProviderNPI                      CHAR(10)      NULL
              , PayToProviderTaxIdType                  VARCHAR(2)    NULL
              , PayToProviderTaxId                      VARCHAR(9)    NULL
              , PayToProviderIdType                     VARCHAR(2)    NULL
              , PayToProviderId                         VARCHAR(35)   NULL
              , PayToProviderLastName                   VARCHAR(35)   NULL
              , PayToProviderFirstName                  VARCHAR(25)   NULL
              , PayToProviderMiddleName                 VARCHAR(25)   NULL
              , PayToProviderNPI                        CHAR(10)      NULL
              , RenderingProviderTaxIdType              VARCHAR(2)    NULL
              , RenderingProviderTaxId                  VARCHAR(9)    NULL
              , RenderingProviderIdType                 VARCHAR(2)    NULL
              , RenderingProviderId                     VARCHAR(35)   NULL
              , RenderingProviderLastName               VARCHAR(35)   NULL
              , RenderingProviderFirstName              VARCHAR(25)   NULL
              , RenderingProviderMiddleName             VARCHAR(25)   NULL
              , RenderingProviderTaxonomyCode           VARCHAR(20)   NULL
              , RenderingProviderNPI                    CHAR(10)      NULL
              , ReferringProviderTaxIdType              VARCHAR(2)    NULL
              , ReferringProviderTaxId                  VARCHAR(9)    NULL
              , ReferringProviderIdType                 VARCHAR(2)    NULL
              , ReferringProviderId                     VARCHAR(35)   NULL
              , ReferringProviderLastName               VARCHAR(35)   NULL
              , ReferringProviderFirstName              VARCHAR(25)   NULL
              , ReferringProviderMiddleName             VARCHAR(25)   NULL
              , ReferringProviderNPI                    CHAR(10)      NULL
              , FacilityEntityCode                      VARCHAR(2)    NULL
              , FacilityName                            VARCHAR(35)   NULL
              , FacilityTaxIdType                       VARCHAR(2)    NULL
              , FacilityTaxId                           VARCHAR(9)    NULL
              , FacilityProviderIdType                  VARCHAR(2)    NULL
              , FacilityProviderId                      VARCHAR(35)   NULL
              , FacilityAddress1                        VARCHAR(30)   NULL
              , FacilityAddress2                        VARCHAR(30)   NULL
              , FacilityCity                            VARCHAR(30)   NULL
              , FacilityState                           CHAR(2)       NULL
              , FacilityZip                             VARCHAR(25)   NULL
              , FacilityPhone                           VARCHAR(10)   NULL
              , FacilityNPI                             CHAR(10)      NULL
              , PaymentAddress1                         VARCHAR(30)   NULL
              , PaymentAddress2                         VARCHAR(30)   NULL
              , PaymentCity                             VARCHAR(30)   NULL
              , PaymentState                            CHAR(2)       NULL
              , PaymentZip                              VARCHAR(25)   NULL
              , PaymentPhone                            VARCHAR(10)   NULL
              , ReferringId                             INT           NULL
              , HCFAReservedValue                       VARCHAR(15)   NULL
              , ClientGroupId                           INT           NULL
              , ClaimFrequencyCode                      CHAR(1)       NULL
              , AdmissionTypeCode                       VARCHAR(2)    NULL
              , AdmissionSourceCode                     VARCHAR(2)    NULL
              , PatientStatusCode                       VARCHAR(2)    NULL
              , StatementStartDate                      DATETIME      NULL
              , StatementEndDate                        DATETIME      NULL
              , CustomField1                            VARCHAR(100)  NULL
              , CustomField2                            VARCHAR(100)  NULL
              , CustomField3                            VARCHAR(100)  NULL
              , CustomField4                            VARCHAR(100)  NULL
              , CustomField5                            VARCHAR(100)  NULL
              , CustomField6                            VARCHAR(100)  NULL
              , CustomField7                            VARCHAR(100)  NULL
              , CustomField8                            VARCHAR(100)  NULL
              , CustomField9                            VARCHAR(100)  NULL
              , CustomField10                           VARCHAR(100)  NULL
              , InpatientAdmitDate                      DATETIME      NULL
              , IsICD10Service                          CHAR(1)       NULL
              , ClientInpatientVisitId                  INT
              , InpatientProgram                        CHAR(1)       NULL
              , DRGCode                                 VARCHAR(10)
			  , MedicalRecordNumber						VARCHAR(30)	  NULL
            )



            CREATE TABLE #XClaims (
                XClaimId                                INT           NOT NULL
              , StatementStartDate                      DATETIME      NULL
              , StatementEndDate                        DATETIME      NULL
              , TotalAmount                             MONEY         NULL
              , PlaceOfService                          VARCHAR(2)    NULL
              , ClaimFrequencyCode                      CHAR(1)       NULL
              , SubmissionReasonCode                    VARCHAR(1)    NULL
              , SignatureIndicator                      VARCHAR(1)    NULL
              , MedicareAssignCode                      VARCHAR(1)    NULL
              , BenefitsAssignCertificationIndicator    VARCHAR(1)    NULL
              , ReleaseCode                             VARCHAR(1)    NULL
              , PatientSignatureCode                    VARCHAR(1)    NULL
              , RelatedCauses1Code                      VARCHAR(3)    NULL
              , RelatedCauses2Code                      VARCHAR(3)    NULL
              , RelatedCauses3Code                      VARCHAR(3)    NULL
              , AutoAccidentStateCode                   VARCHAR(2)    NULL
              , SpecialProgramIndicator                 VARCHAR(3)    NULL
              , ParticipationAgreement                  VARCHAR(1)    NULL
              , DelayReasonCode                         VARCHAR(2)    NULL
              , AdmissionTypeCode                       VARCHAR(2)    NULL
              , AdmissionSourceCode                     VARCHAR(2)    NULL
              , PatientStatusCode                       VARCHAR(2)    NULL
              , OrderDate                               VARCHAR(35)   NULL
              , InitialTreatmentDate                    VARCHAR(35)   NULL
              , ReferralDate                            VARCHAR(35)   NULL
              , LastSeenDate                            VARCHAR(35)   NULL
              , CurrentIllnessDate                      VARCHAR(35)   NULL
              , AcuteManifestationDate                  VARCHAR(185)  NULL
              , SimilarSymptomDate                      VARCHAR(375)  NULL
              , AccidentDate                            VARCHAR(375)  NULL
              , EstimatedBirthDate                      VARCHAR(35)   NULL
              , PrescriptionDate                        VARCHAR(35)   NULL
              , DisabilityFromDate                      VARCHAR(185)  NULL
              , DisabilityToDate                        VARCHAR(185)  NULL
              , LastWorkedDate                          VARCHAR(35)   NULL
              , WorkReturnDate                          VARCHAR(35)   NULL
              , RelatedHospitalAdmitDate                VARCHAR(35)   NULL
              , RelatedHospitalDischargeDate            VARCHAR(35)   NULL
              , PatientAmountPaid                       MONEY         NULL
              , TotalPurchasedServiceAmount             MONEY         NULL
              , ServiceAuthorizationExceptionCode       VARCHAR(30)   NULL
              , PriorAuthorizationNumber                VARCHAR(65)   NULL
 ,SupervisingProvider2310DLastName VARCHAR(60) NULL 
          ,SupervisingProvider2310DFirstName VARCHAR(35) NULL 
          ,SupervisingProvider2310DMiddleName VARCHAR(25) NULL 
          ,SupervisingProvider2310DIdType VARCHAR(2) NULL 
          ,SupervisingProvider2310DId VARCHAR(80) NULL 
          ,SupervisingProvider2310DSecondaryIdType1 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId1 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType2 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId2 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType3 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId3 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType4 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId4 VARCHAR(50)           
          ,ClaimNoteReferenceCode VARCHAR(80) NULL 
          ,ClaimNote VARCHAR(MAX) NULL 
          ,ServiceNoteReferenceCode VARCHAR(15) NULL 
          ,ServiceNote VARCHAR(MAX) NULL              , PayerClaimControlNumber                 VARCHAR(80)   NULL
              , MedicalRecordNumber                     VARCHAR(30)   NULL
              , DiagnosisCodeQualifier1                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier2                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier3                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier4                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier5                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier6                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier7                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier8                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier9                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier10                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier11                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier12                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier13                VARCHAR(3)    NULL
              , DiagnosisCode1                          VARCHAR(10)   NULL
              , DiagnosisCode2                          VARCHAR(10)   NULL
              , DiagnosisCode3                          VARCHAR(10)   NULL
              , DiagnosisCode4                          VARCHAR(10)   NULL
              , DiagnosisCode5                          VARCHAR(10)   NULL
              , DiagnosisCode6                          VARCHAR(10)   NULL
              , DiagnosisCode7                          VARCHAR(10)   NULL
              , DiagnosisCode8                          VARCHAR(10)   NULL
              , DiagnosisCode9                          VARCHAR(10)   NULL
              , DiagnosisCode10                         VARCHAR(10)   NULL
              , DiagnosisCode11                         VARCHAR(10)   NULL
              , DiagnosisCode12                         VARCHAR(10)   NULL
              , DiagnosisCode13                         VARCHAR(10)   NULL
              , DiagnosisCodePOA1                       VARCHAR(1)    NULL
              , DiagnosisCodePOA2                       VARCHAR(1)    NULL
              , DiagnosisCodePOA3                       VARCHAR(1)    NULL
              , DiagnosisCodePOA4                       VARCHAR(1)    NULL
              , DiagnosisCodePOA5                       VARCHAR(1)    NULL
              , DiagnosisCodePOA6                       VARCHAR(1)    NULL
              , DiagnosisCodePOA7                       VARCHAR(1)    NULL
              , DiagnosisCodePOA8                       VARCHAR(1)    NULL
              , DiagnosisCodePOA9                       VARCHAR(1)    NULL
              , DiagnosisCodePOA10                      VARCHAR(1)    NULL
              , DiagnosisCodePOA11                      VARCHAR(1)    NULL
              , DiagnosisCodePOA12                      VARCHAR(1)    NULL
              , DiagnosisCodePOA13                      VARCHAR(1)    NULL
              , ProcedureCodeQualifier1                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier2                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier3                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier4                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier5                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier6                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier7                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier8                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier9                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier10                VARCHAR(3)    NULL
              , ProcedureCodeQualifier11                VARCHAR(3)    NULL
              , ProcedureCodeQualifier12                VARCHAR(3)    NULL
              , ProcedureCode1                          VARCHAR(10)   NULL
              , ProcedureCode2                          VARCHAR(10)   NULL
              , ProcedureCode3                          VARCHAR(10)   NULL
              , ProcedureCode4                          VARCHAR(10)   NULL
              , ProcedureCode5                          VARCHAR(10)   NULL
              , ProcedureCode6                          VARCHAR(10)   NULL
              , ProcedureCode7                          VARCHAR(10)   NULL
              , ProcedureCode8                          VARCHAR(10)   NULL
              , ProcedureCode9                          VARCHAR(10)   NULL
              , ProcedureCode10                         VARCHAR(10)   NULL
              , ProcedureCode11                         VARCHAR(10)   NULL
              , ProcedureCode12                         VARCHAR(10)   NULL
              , ProcedureCodeDate1                      VARCHAR(10)   NULL
              , ProcedureCodeDate2                      VARCHAR(10)   NULL
              , ProcedureCodeDate3                      VARCHAR(10)   NULL
              , ProcedureCodeDate4                      VARCHAR(10)   NULL
              , ProcedureCodeDate5                      VARCHAR(10)   NULL
              , ProcedureCodeDate6                      VARCHAR(10)   NULL
              , ProcedureCodeDate7                      VARCHAR(10)   NULL
              , ProcedureCodeDate8                      VARCHAR(10)   NULL
              , ProcedureCodeDate9                      VARCHAR(10)   NULL
              , ProcedureCodeDate10                     VARCHAR(10)   NULL
              , ProcedureCodeDate11                     VARCHAR(10)   NULL
              , ProcedureCodeDate12                     VARCHAR(10)   NULL
              , ReferringEntityCode                     VARCHAR(10)   NULL
              , ReferringEntityQualifier                VARCHAR(5)    NULL
              , ReferringLastName                       VARCHAR(75)   NULL
              , ReferringFirstName                      VARCHAR(55)   NULL
              , ReferringMiddleName                     VARCHAR(55)   NULL
              , ReferringSuffix                         VARCHAR(25)   NULL
              , ReferringIdQualifier                    VARCHAR(5)    NULL
              , ReferringId                             VARCHAR(165)  NULL
              , ReferringTaxonomyCode                   VARCHAR(65)   NULL
              , ReferringSecondaryQualifier             VARCHAR(10)   NULL
              , ReferringSecondaryId                    VARCHAR(65)   NULL
              , ReferringSecondaryQualifier2            VARCHAR(10)   NULL
              , ReferringSecondaryId2                   VARCHAR(65)   NULL
              , ReferringSecondaryQualifier3            VARCHAR(10)   NULL
              , ReferringSecondaryId3                   VARCHAR(65)   NULL
              , RenderingEntityQualifier                VARCHAR(1)    NULL
              , RenderingLastName                       VARCHAR(35)   NULL
              , RenderingFirstName                      VARCHAR(25)   NULL
              , RenderingMiddleName                     VARCHAR(25)   NULL
              , RenderingSuffix                         VARCHAR(10)   NULL
              , RenderingEntityCode                     VARCHAR(2)    NULL
              , RenderingIdQualifier                    VARCHAR(2)    NULL
              , RenderingId                             VARCHAR(80)   NULL
              , RenderingTaxonomyCode                   VARCHAR(30)   NULL
              , RenderingSecondaryQualifier             VARCHAR(20)   NULL
              , RenderingSecondaryId                    VARCHAR(160)  NULL
              , RenderingSecondaryQualifier2            VARCHAR(20)   NULL
              , RenderingSecondaryId2                   VARCHAR(160)  NULL
              , RenderingSecondaryQualifier3            VARCHAR(20)   NULL
              , RenderingSecondaryId3                   VARCHAR(160)  NULL
              , ServicesEntityQualifier                 VARCHAR(1)    NULL
              , ServicesIdQualifier                     VARCHAR(2)    NULL
              , ServicesId                              VARCHAR(80)   NULL
              , servicesSecondaryQualifier              VARCHAR(20)   NULL
              , servicesSecondaryId                     VARCHAR(160)  NULL
              , FacilityEntityCode                      VARCHAR(2)    NULL
              , FacilityName                            VARCHAR(35)   NULL
              , FacilityIdQualifier                     VARCHAR(2)    NULL
              , FacilityId                              VARCHAR(80)   NULL
              , FacilityAddress1                        VARCHAR(55)   NULL
              , FacilityAddress2                        VARCHAR(55)   NULL
              , FacilityCity                            VARCHAR(30)   NULL
              , FacilityState                           VARCHAR(2)    NULL
              , FacilityZip                             VARCHAR(15)   NULL
              , FacilityCountryCode                     VARCHAR(3)    NULL
              , FacilitySecondaryQualifier              VARCHAR(3)    NULL
              , FacilitySecondaryId                     VARCHAR(30)   NULL
              , FacilitySecondaryQualifier2             VARCHAR(3)    NULL
              , FacilitySecondaryId2                    VARCHAR(30)   NULL
              , FacilitySecondaryQualifier3             VARCHAR(3)    NULL
              , FacilitySecondaryId3                    VARCHAR(30)   NULL
              , SupervisorLastName                      VARCHAR(35)   NULL
              , SupervisorFirstName                     VARCHAR(25)   NULL
              , SupervisorMiddleName                    VARCHAR(25)   NULL
              , SupervisorSuffix                        VARCHAR(10)   NULL
              , SupervisorQualifier                     VARCHAR(2)    NULL
              , SupervisorId                            VARCHAR(80)   NULL
              , CoveragePlanId                          INT           NULL
              , AttendingProviderTaxIdType              VARCHAR(2)    NULL
              , AttendingProviderTaxId                  VARCHAR(9)    NULL
              , AttendingProviderTaxonomyCode           VARCHAR(20)   NULL
              , AttendingId                             INT           NULL
              , AttendingProviderEntityQualifier        VARCHAR(1)    NULL
              , AttendingProviderEntityCode             VARCHAR(10)   NULL
              , AttendingProviderIdType                 VARCHAR(2)    NULL
              , AttendingProviderId                     VARCHAR(35)   NULL
              , AttendingProviderIdQualifier            VARCHAR(35)   NULL
              , AttendingProviderLastName               VARCHAR(35)   NULL
              , AttendingProviderFirstName              VARCHAR(25)   NULL
              , AttendingProviderMiddleName             VARCHAR(25)   NULL
              , AttendingProviderLicenseNumber          VARCHAR(35)   NULL
              , AdmittingDiagnosisCode                  VARCHAR(10)   NULL
              , AdmittingDiagnosisQualifier             VARCHAR(3)    NULL
              , AdmittingDiagnosisPOA                   VARCHAR(1)    NULL
              , DischargeHour                           VARCHAR(4)    NULL
              , InpatientAdmitDate                      DATETIME      NULL
              , InpatientDischargedDate                 DATETIME      NULL
              , ClientGroupId                           INT           NULL
              , ClientId                                INT           NULL
              , InsuredId                               VARCHAR(25)   NULL
              , Priority                                INT           NULL
              , BillingProviderId                       VARCHAR(35)   NULL
              , ConditionCode1                          VARCHAR(10)   NULL
              , ConditionCode2                          VARCHAR(10)   NULL
              , ConditionCode3                          VARCHAR(10)   NULL
              , ConditionCode4                          VARCHAR(10)   NULL
              , ConditionCode5                          VARCHAR(10)   NULL
              , ConditionCode6                          VARCHAR(10)   NULL
              , ConditionCode7                          VARCHAR(10)   NULL
              , ConditionCode8                          VARCHAR(10)   NULL
              , ConditionCode9                          VARCHAR(10)   NULL
              , ConditionCode10                         VARCHAR(10)   NULL
              , ConditionCode11                         VARCHAR(10)   NULL
              , ConditionCode12                         VARCHAR(10)   NULL
              , ValueCode1                              VARCHAR(10)   NULL
              , ValueCodeValue1                         VARCHAR(10)   NULL
              , ValueCode2                              VARCHAR(10)   NULL
              , ValueCodeValue2                         VARCHAR(10)   NULL
              , ValueCode3                              VARCHAR(10)   NULL
              , ValueCodeValue3                         VARCHAR(10)   NULL
              , ValueCode4                              VARCHAR(10)   NULL
              , ValueCodeValue4                         VARCHAR(10)   NULL
              , ValueCode5                              VARCHAR(10)   NULL
              , ValueCodeValue5                         VARCHAR(10)   NULL
              , ValueCode6                              VARCHAR(10)   NULL
              , ValueCodeValue6                         VARCHAR(10)   NULL
              , ValueCode7                              VARCHAR(10)   NULL
              , ValueCodeValue7                         VARCHAR(10)   NULL
              , ValueCode8                              VARCHAR(10)   NULL
              , ValueCodeValue8                         VARCHAR(10)   NULL
              , ValueCode9                              VARCHAR(10)   NULL
              , ValueCodeValue9                         VARCHAR(10)   NULL
              , ValueCode10                             VARCHAR(10)   NULL
              , ValueCodeValue10                        VARCHAR(10)   NULL
              , ValueCode11                             VARCHAR(10)   NULL
              , ValueCodeValue11                        VARCHAR(10)   NULL
              , ValueCode12                             VARCHAR(10)   NULL
              , ValueCodeValue12                        VARCHAR(10)   NULL
              , OccurenceCode1                          VARCHAR(10)   NULL
              , OccurenceCodeDate1                      VARCHAR(10)   NULL
              , OccurenceCode2                          VARCHAR(10)   NULL
              , OccurenceCodeDate2                      VARCHAR(10)   NULL
              , OccurenceCode3                          VARCHAR(10)   NULL
              , OccurenceCodeDate3                      VARCHAR(10)   NULL
              , OccurenceCode4                          VARCHAR(10)   NULL
              , OccurenceCodeDate4                      VARCHAR(10)   NULL
              , OccurenceCode5                          VARCHAR(10)   NULL
              , OccurenceCodeDate5                      VARCHAR(10)   NULL
              , OccurenceCode6                          VARCHAR(10)   NULL
              , OccurenceCodeDate6                      VARCHAR(10)   NULL
              , OccurenceCode7                          VARCHAR(10)   NULL
              , OccurenceCodeDate7                      VARCHAR(10)   NULL
              , OccurenceCode8                          VARCHAR(10)   NULL
              , OccurenceCodeDate8                      VARCHAR(10)   NULL
              , OccurenceCode9                          VARCHAR(10)   NULL
              , OccurenceCodeDate9                      VARCHAR(10)   NULL
              , OccurenceCode10                         VARCHAR(10)   NULL
              , OccurenceCodeDate10                     VARCHAR(10)   NULL
              , OccurenceCode11                         VARCHAR(10)   NULL
              , OccurenceCodeDate11                     VARCHAR(10)   NULL
              , OccurenceCode12                         VARCHAR(10)   NULL
              , OccurenceCodeDate12                     VARCHAR(10)   NULL
              , OccurenceSpanCode1                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom1                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough1               VARCHAR(10)   NULL
              , OccurenceSpanCode2                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom2                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough2               VARCHAR(10)   NULL
              , OccurenceSpanCode3                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom3                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough3               VARCHAR(10)   NULL
              , OccurenceSpanCode4                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom4                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough4               VARCHAR(10)   NULL
              , OccurenceSpanCode5                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom5                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough5               VARCHAR(10)   NULL
              , OccurenceSpanCode6                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom6                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough6               VARCHAR(10)   NULL
              , OccurenceSpanCode7                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom7                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough7               VARCHAR(10)   NULL
              , OccurenceSpanCode8                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom8                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough8               VARCHAR(10)   NULL
              , OccurenceSpanCode9                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom9                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough9               VARCHAR(10)   NULL
              , OccurenceSpanCode10                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom10                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough10              VARCHAR(10)   NULL
              , OccurenceSpanCode11                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom11                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough11              VARCHAR(10)   NULL
              , OccurenceSpanCode12                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom12                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough12              VARCHAR(10)   NULL
              , IsICD10Service                          CHAR(1)       NULL
              , ClientInpatientVisitId                  INT
              , InpatientProgram                        CHAR(1)       NULL
              , DRGCode                                 VARCHAR(10)
            )



            CREATE TABLE #OtherInsured (
                OtherInsuredId           INT          IDENTITY NOT NULL
              , ClaimLineId              INT          NOT NULL
              , ChargeId                 INT          NOT NULL
              , Priority                 INT          NOT NULL
              , ClientCoveragePlanId     INT          NOT NULL
              , CoveragePlanId           INT          NOT NULL
              , InsuranceTypeCode        CHAR(2)      NULL
              , ClaimFilingIndicatorCode CHAR(2)      NULL
              , PayerName                VARCHAR(100) NULL
              , InsuredId                VARCHAR(25)  NULL
              , GroupNumber              VARCHAR(25)  NULL
              , GroupName                VARCHAR(50)  NULL
              , PaidAmount               MONEY        NULL
              , Adjustments              MONEY        NULL
              , AllowedAmount            MONEY        NULL
              , PreviousPaidAmount       MONEY        NULL
              , ClientResponsibility     MONEY        NULL
              , PaidDate                 DATETIME     NULL
              , InsuredLastName          VARCHAR(20)  NULL
              , InsuredFirstName         VARCHAR(20)  NULL
              , InsuredMiddleName        VARCHAR(20)  NULL
              , InsuredSuffix            VARCHAR(10)  NULL
              , InsuredSex               CHAR(1)      NULL
              , InsuredDOB               DATETIME     NULL
              , InsuredRelation          INT          NULL
              , InsuredRelationCode      VARCHAR(10)  NULL
              , DenialCode               VARCHAR(10)  NULL
              , PayerType                VARCHAR(10)  NULL
              , HIPAACOBCode             CHAR(1)      NULL
              , ElectronicClaimsPayerId  VARCHAR(20)  NULL
              , BillingCode              VARCHAR(15)  NULL
              , Modifier1                CHAR(2)      NULL
              , Modifier2                CHAR(2)      NULL
              , Modifier3                CHAR(2)      NULL
              , Modifier4                CHAR(2)      NULL
              , RevenueCode              VARCHAR(15)  NULL
              , RevenueCodeDescription   VARCHAR(100) NULL
              , ClaimUnits               INT          NULL,
            )



            CREATE INDEX temp_otherinsured
                ON #OtherInsured(ClaimLineId)



            CREATE TABLE #OtherInsuredPaid (
                OtherInsuredId     INT         NOT NULL
              , PaidAmount         MONEY       NULL
              , Adjustments        MONEY       NULL
              , AllowedAmount      MONEY       NULL
              , PreviousPaidAmount MONEY       NULL
              , PaidDate           DATETIME    NULL
              , DenialCode         VARCHAR(10) NULL
            )



            CREATE TABLE #OtherInsuredAdjustment (
                OtherInsuredId CHAR(10)    NOT NULL
              , ARLedgerId     INT         NULL
              , DenialCode     INT         NULL
              , HIPAAGroupCode VARCHAR(10) NULL
              , HIPAACode      VARCHAR(10) NULL
              , LedgerType     INT         NULL
              , Amount         MONEY       NULL
            )



            CREATE TABLE #OtherInsuredAdjustment2 (
                OtherInsuredId CHAR(10)    NOT NULL
              , HIPAAGroupCode VARCHAR(10) NULL
              , HIPAACode      VARCHAR(10) NULL
              , Amount         MONEY       NULL
            )



            CREATE TABLE #OtherInsuredAdjustment3 (
                OtherInsuredId CHAR(10)    NOT NULL
              , HIPAAGroupCode VARCHAR(10) NULL
              , HIPAACode1     VARCHAR(10) NULL
              , Amount1        MONEY       NULL
              , HIPAACode2     VARCHAR(10) NULL
              , Amount2        MONEY       NULL
              , HIPAACode3     VARCHAR(10) NULL
              , Amount3        MONEY       NULL
              , HIPAACode4     VARCHAR(10) NULL
              , Amount4        MONEY       NULL
              , HIPAACode5     VARCHAR(10) NULL
              , Amount5        MONEY       NULL
              , HIPAACode6     VARCHAR(10) NULL
              , Amount6        MONEY       NULL,
            )



            CREATE TABLE #OtherInsuredAdjustment3Grouped (
                XClaimId       INT         NOT NULL
              , HIPAAGroupCode VARCHAR(10) NULL
              , HIPAACode1     VARCHAR(10) NULL
              , Amount1        MONEY       NULL
              , HIPAACode2     VARCHAR(10) NULL
              , Amount2        MONEY       NULL
              , HIPAACode3     VARCHAR(10) NULL
              , Amount3        MONEY       NULL
              , HIPAACode4     VARCHAR(10) NULL
              , Amount4        MONEY       NULL
              , HIPAACode5     VARCHAR(10) NULL
              , Amount5        MONEY       NULL
              , HIPAACode6     VARCHAR(10) NULL
              , Amount6        MONEY       NULL,
            )


            --#PriorPayment unused? apoole 11/15
            --create table #PriorPayment
            --(ClaimLineId int null,
            --PaidAmout money null,
            --BalanceAmount money null,
            --ClientPayment money null,
            --)

            --837 tables
            CREATE TABLE #837BillingProviders (
                UniqueId                               INT          IDENTITY NOT NULL
              , BillingId                              CHAR(10)     NULL
              , HierId                                 INT          NULL
              , BillingProviderLastName                VARCHAR(35)  NULL
              , BillingProviderFirstName               VARCHAR(35)  NULL
              , BillingProviderMiddleName              VARCHAR(35)  NULL
              , BillingProviderSuffix                  VARCHAR(35)  NULL
              , BillingProviderIdQualifier             VARCHAR(2)   NULL
              , BillingProviderId                      VARCHAR(80)  NOT NULL
              , BillingProviderAddress1                VARCHAR(55)  NULL
              , BillingProviderAddress2                VARCHAR(55)  NULL
              , BillingProviderCity                    VARCHAR(30)  NULL
              , BillingProviderState                   VARCHAR(2)   NULL
              , BillingProviderZip                     VARCHAR(15)  NULL
              , BillingProviderAdditionalIdQualifier   VARCHAR(35)  NULL
              , BillingProviderAdditionalId            VARCHAR(250) NULL
              , BillingProviderAdditionalIdQualifier2  VARCHAR(35)  NULL
              , BillingProviderAdditionalId2           VARCHAR(250) NULL
              , BillingProviderAdditionalIdQualifier3  VARCHAR(35)  NULL
              , BillingProviderAdditionalId3           VARCHAR(250) NULL
              , BillingProviderContactName             VARCHAR(125) NULL
              , BillingProviderContactNumber1Qualifier VARCHAR(5)   NULL
              , BillingProviderContactNumber1          VARCHAR(165) NULL
              , BillingProviderTaxonomyCode            VARCHAR(100) NULL
              , PayToProviderLastName                  VARCHAR(35)  NULL
              , PayToProviderFirstName                 VARCHAR(35)  NULL
              , PayToProviderMiddleName                VARCHAR(35)  NULL
              , PayToProviderSuffix                    VARCHAR(35)  NULL
              , PayToProviderIdQualifier               VARCHAR(2)   NULL
              , PayToProviderId                        VARCHAR(80)  NULL
              , PayToProviderAddress1                  VARCHAR(55)  NULL
              , PayToProviderAddress2                  VARCHAR(55)  NULL
              , PayToProviderCity                      VARCHAR(30)  NULL
              , PayToProviderState                     VARCHAR(2)   NULL
              , PayToProviderZip                       VARCHAR(15)  NULL
              , PayToProviderSecondaryQualifier        VARCHAR(3)   NULL
              , PayToProviderSecondaryId               VARCHAR(30)  NULL
              , PayToProviderSecondaryQualifier2       VARCHAR(3)   NULL
              , PayToProviderSecondaryId2              VARCHAR(30)  NULL
              , PayToProviderSecondaryQualifier3       VARCHAR(3)   NULL
              , PayToProviderSecondaryId3              VARCHAR(30)  NULL
              , HLSegment                              TEXT         NULL
              , BillingProviderNM1Segment              TEXT         NULL
              , BillingProviderN3Segment               TEXT         NULL
              , BillingProviderN4Segment               TEXT         NULL
              , BillingProviderRefSegment              TEXT         NULL
              , BillingProviderRef2Segment             TEXT         NULL
              , BillingProviderRef3Segment             TEXT         NULL
              , BillingProviderPerSegment              TEXT         NULL
              , PayToProviderNM1Segment                TEXT         NULL
              , PayToProviderN3Segment                 TEXT         NULL
              , PayToProviderN4Segment                 TEXT         NULL
              , PayToProviderRefSegment                TEXT         NULL
              , PayToProviderRef2Segment               TEXT         NULL
              , PayToProviderRef3Segment               TEXT         NULL
              , BillingPRVSegment                      TEXT         NULL
            )



            CREATE TABLE #837SubscriberClients (
                UniqueId                   INT          IDENTITY NOT NULL
              , RefBillingProviderId       INT          NOT NULL
              , ClientGroupId              INT          NOT NULL
              , ClientId                   INT          NOT NULL
              , CoveragePlanId             INT          NOT NULL
              , InsuredId                  VARCHAR(25)  NULL
              , Priority                   INT          NULL
              , GroupNumber                VARCHAR(25)  NULL
              , GroupName                  VARCHAR(60)  NULL
              , MedicareInsuranceTypeCode  VARCHAR(2)   NULL
              , HierId                     INT          NULL
              , HierParentId               INT          NULL
              , HierChildCode              VARCHAR(1)   NULL
              , RelationCode               VARCHAR(2)   NULL
              , ClaimFilingIndicatorCode   VARCHAR(2)   NULL
              , SubscriberEntityQualifier  VARCHAR(1)   NULL
              , SubscriberLastName         VARCHAR(35)  NULL
              , SubscriberFirstName        VARCHAR(25)  NULL
              , SubscriberMiddleName       VARCHAR(25)  NULL
              , SubscriberSuffix           VARCHAR(10)  NULL
              , SubscriberIdQualifier      VARCHAR(2)   NULL
              , SubscriberIdInsuredId      VARCHAR(80)  NULL
              , SubscriberAddress1         VARCHAR(55)  NULL
              , SubscriberAddress2         VARCHAR(55)  NULL
              , SubscriberCity             VARCHAR(30)  NULL
              , SubscriberState            VARCHAR(2)   NULL
              , SubscriberZip              VARCHAR(15)  NULL
              , SubscriberDOB              VARCHAR(35)  NULL
              , SubscriberSex              VARCHAR(1)   NULL
              , SubscriberSSN              VARCHAR(9)   NULL
              , PayerName                  VARCHAR(35)  NULL
              , PayerIdQualifier           VARCHAR(2)   NULL
              , ElectronicClaimsPayerId    VARCHAR(80)  NULL
              , ClaimOfficeNumber          VARCHAR(80)  NULL
              , PayerAddress1              VARCHAR(55)  NULL
              , PayerAddress2              VARCHAR(55)  NULL
              , PayerCity                  VARCHAR(30)  NULL
              , PayerState                 VARCHAR(2)   NULL
              , PayerZip                   VARCHAR(15)  NULL
              , PayerCountryCode           VARCHAR(3)   NULL
              , PayerAdditionalIdQualifier VARCHAR(10)  NULL
              , PayerAdditionalId          VARCHAR(95)  NULL
              , ResponsibleQualifier       VARCHAR(3)   NULL
              , ResponsibleLastName        VARCHAR(35)  NULL
              , ResponsibleFirstName       VARCHAR(25)  NULL
              , ResponsibleMiddleName      VARCHAR(25)  NULL
              , ResponsibleSuffix          VARCHAR(10)  NULL
              , ResponsibleAddress1        VARCHAR(55)  NULL
              , ResponsibleAddress2        VARCHAR(55)  NULL
              , ResponsibleCity            VARCHAR(30)  NULL
              , ResponsibleState           VARCHAR(2)   NULL
              , ResponsibleZip             VARCHAR(15)  NULL
              , ResponsibleCountryCode     VARCHAR(3)   NULL
              , ClientRelationship         VARCHAR(3)   NULL
              , ClientDateOfDeath          VARCHAR(35)  NULL
              , ClientPregnancyIndicator   VARCHAR(1)   NULL
              , ClientLastName             VARCHAR(35)  NULL
              , ClientFirstName            VARCHAR(25)  NULL
              , ClientMiddleName           VARCHAR(25)  NULL
              , ClientSuffix               VARCHAR(10)  NULL
              , InsuredIdQualifier         VARCHAR(2)   NULL
              , ClientInsuredId            VARCHAR(80)  NULL
              , ClientAddress1             VARCHAR(55)  NULL
              , ClientAddress2             VARCHAR(55)  NULL
              , ClientCity                 VARCHAR(30)  NULL
              , ClientState                VARCHAR(2)   NULL
              , ClientZip                  VARCHAR(15)  NULL
              , ClientCountryCode          VARCHAR(3)   NULL
              , ClientDOB                  VARCHAR(35)  NULL
              , ClientSex                  VARCHAR(1)   NULL
              , ClientIdQualifier          VARCHAR(20)  NULL
              , ClientSecondaryId          VARCHAR(155) NULL
              , SubscriberHLSegment        TEXT         NULL
              , SubscriberSegment          TEXT         NULL
              , SubscriberPatientSegment   TEXT         NULL
              , SubscriberNM1Segment       TEXT         NULL
              , SubscriberN3Segment        TEXT         NULL
              , SubscriberN4Segment        TEXT         NULL
              , SubscriberDMGSegment       TEXT         NULL
              , SubscriberRefSegment       TEXT         NULL
              , PayerNM1Segment            TEXT         NULL
              , PayerN3Segment             TEXT         NULL
              , PayerN4Segment             TEXT         NULL
              , PayerRefSegment            TEXT         NULL
              , ResponsibleNM1Segment      TEXT         NULL
              , ResponsibleN3Segment       TEXT         NULL
              , ResponsibleN4Segment       TEXT         NULL
              , PatientHLSegment           TEXT         NULL
              , PatientPatSegment          TEXT         NULL
              , PatientNM1Segment          TEXT         NULL
              , PatientN3Segment           TEXT         NULL
              , PatientN4Segment           TEXT         NULL
              , PatientDMGSegment          TEXT         NULL,
            )



            CREATE TABLE #837Claims (
                UniqueId                                INT           IDENTITY NOT NULL
              , ClaimLineId								INT			  NULL
              , RefSubscriberClientId                   INT           NOT NULL
              , XClaimId                                INT           NOT NULL
              , ClaimId                                 VARCHAR(30)   NULL
              , HierParentId                            INT           NULL
              , StatementStartDate                      DATETIME      NULL
              , StatementEndDate                        DATETIME      NULL
              , TotalAmount                             MONEY         NULL
              , PlaceOfService                          VARCHAR(2)    NULL
              , ClaimFrequencyCode                      CHAR(1)       NULL
              , SubmissionReasonCode                    VARCHAR(1)    NULL
              , SignatureIndicator                      VARCHAR(1)    NULL
              , MedicareAssignCode                      VARCHAR(1)    NULL
              , BenefitsAssignCertificationIndicator    VARCHAR(1)    NULL
              , ReleaseCode                             VARCHAR(1)    NULL
              , PatientSignatureCode                    VARCHAR(1)    NULL
              , RelatedCauses1Code                      VARCHAR(3)    NULL
              , RelatedCauses2Code                      VARCHAR(3)    NULL
              , RelatedCauses3Code                      VARCHAR(3)    NULL
              , AutoAccidentStateCode                   VARCHAR(2)    NULL
              , SpecialProgramIndicator                 VARCHAR(3)    NULL
              , ParticipationAgreement                  VARCHAR(1)    NULL
              , DelayReasonCode                         VARCHAR(2)    NULL
              , AdmissionTypeCode                       VARCHAR(2)    NULL
              , AdmissionSourceCode                     VARCHAR(2)    NULL
              , PatientStatusCode                       VARCHAR(2)    NULL
              , OrderDate                               VARCHAR(35)   NULL
              , InitialTreatmentDate                    VARCHAR(35)   NULL
              , ReferralDate                            VARCHAR(35)   NULL
              , LastSeenDate                            VARCHAR(35)   NULL
              , CurrentIllnessDate                      VARCHAR(35)   NULL
              , AcuteManifestationDate                  VARCHAR(185)  NULL
              , SimilarSymptomDate                      VARCHAR(375)  NULL
              , AccidentDate                            VARCHAR(375)  NULL
              , EstimatedBirthDate                      VARCHAR(35)   NULL
              , PrescriptionDate                        VARCHAR(35)   NULL
              , DisabilityFromDate                      VARCHAR(185)  NULL
              , DisabilityToDate                        VARCHAR(185)  NULL
              , LastWorkedDate                          VARCHAR(35)   NULL
              , WorkReturnDate                          VARCHAR(35)   NULL
              , RelatedHospitalAdmitDate                VARCHAR(35)   NULL
              , RelatedHospitalDischargeDate            VARCHAR(35)   NULL
              , PatientAmountPaid                       MONEY         NULL
              , TotalPurchasedServiceAmount             MONEY         NULL
              , ServiceAuthorizationExceptionCode       VARCHAR(30)   NULL
              , PriorAuthorizationNumber                VARCHAR(65)   NULL
              , PayerClaimControlNumber                 VARCHAR(80)   NULL
              , MedicalRecordNumber                     VARCHAR(30)   NULL
              , DiagnosisCodeQualifier1                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier2                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier3                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier4                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier5                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier6                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier7                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier8                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier9                 VARCHAR(3)    NULL
              , DiagnosisCodeQualifier10                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier11                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier12                VARCHAR(3)    NULL
              , DiagnosisCodeQualifier13                VARCHAR(3)    NULL
              , DiagnosisCode1                          VARCHAR(10)   NULL
              , DiagnosisCode2                          VARCHAR(10)   NULL
              , DiagnosisCode3                          VARCHAR(10)   NULL
              , DiagnosisCode4                          VARCHAR(10)   NULL
              , DiagnosisCode5                          VARCHAR(10)   NULL
              , DiagnosisCode6                          VARCHAR(10)   NULL
              , DiagnosisCode7                          VARCHAR(10)   NULL
              , DiagnosisCode8                          VARCHAR(10)   NULL
              , DiagnosisCode9                          VARCHAR(10)   NULL
              , DiagnosisCode10                         VARCHAR(10)   NULL
              , DiagnosisCode11                         VARCHAR(10)   NULL
              , DiagnosisCode12                         VARCHAR(10)   NULL
              , DiagnosisCode13                         VARCHAR(10)   NULL
              , DiagnosisCodePOA1                       VARCHAR(1)    NULL
              , DiagnosisCodePOA2                       VARCHAR(1)    NULL
              , DiagnosisCodePOA3                       VARCHAR(1)    NULL
              , DiagnosisCodePOA4                       VARCHAR(1)    NULL
              , DiagnosisCodePOA5                       VARCHAR(1)    NULL
              , DiagnosisCodePOA6                       VARCHAR(1)    NULL
              , DiagnosisCodePOA7                       VARCHAR(1)    NULL
              , DiagnosisCodePOA8                       VARCHAR(1)    NULL
              , DiagnosisCodePOA9                       VARCHAR(1)    NULL
              , DiagnosisCodePOA10                      VARCHAR(1)    NULL
              , DiagnosisCodePOA11                      VARCHAR(1)    NULL
              , DiagnosisCodePOA12                      VARCHAR(1)    NULL
              , DiagnosisCodePOA13                      VARCHAR(1)    NULL
              , ProcedureCodeQualifier1                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier2                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier3                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier4                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier5                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier6                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier7                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier8                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier9                 VARCHAR(3)    NULL
              , ProcedureCodeQualifier10                VARCHAR(3)    NULL
              , ProcedureCodeQualifier11                VARCHAR(3)    NULL
              , ProcedureCodeQualifier12                VARCHAR(3)    NULL
              , ProcedureCode1                          VARCHAR(10)   NULL
              , ProcedureCode2                          VARCHAR(10)   NULL
              , ProcedureCode3                          VARCHAR(10)   NULL
              , ProcedureCode4                          VARCHAR(10)   NULL
              , ProcedureCode5                          VARCHAR(10)   NULL
              , ProcedureCode6                          VARCHAR(10)   NULL
              , ProcedureCode7                          VARCHAR(10)   NULL
              , ProcedureCode8                          VARCHAR(10)   NULL
              , ProcedureCode9                          VARCHAR(10)   NULL
              , ProcedureCode10                         VARCHAR(10)   NULL
              , ProcedureCode11                         VARCHAR(10)   NULL
              , ProcedureCode12                         VARCHAR(10)   NULL
              , ProcedureCodeDate1                      VARCHAR(10)   NULL
              , ProcedureCodeDate2                      VARCHAR(10)   NULL
              , ProcedureCodeDate3                      VARCHAR(10)   NULL
              , ProcedureCodeDate4                      VARCHAR(10)   NULL
              , ProcedureCodeDate5                      VARCHAR(10)   NULL
              , ProcedureCodeDate6                      VARCHAR(10)   NULL
              , ProcedureCodeDate7                      VARCHAR(10)   NULL
              , ProcedureCodeDate8                      VARCHAR(10)   NULL
              , ProcedureCodeDate9                      VARCHAR(10)   NULL
              , ProcedureCodeDate10                     VARCHAR(10)   NULL
              , ProcedureCodeDate11                     VARCHAR(10)   NULL
              , ProcedureCodeDate12                     VARCHAR(10)   NULL
              , DRGCode                                 VARCHAR(10)   NULL
              , ReferringEntityCode                     VARCHAR(10)   NULL
              , ReferringEntityQualifier                VARCHAR(5)    NULL
              , ReferringLastName                       VARCHAR(75)   NULL
              , ReferringFirstName                      VARCHAR(55)   NULL
              , ReferringMiddleName                     VARCHAR(55)   NULL
              , ReferringSuffix                         VARCHAR(25)   NULL
              , ReferringIdQualifier                    VARCHAR(5)    NULL
              , ReferringId                             VARCHAR(165)  NULL
              , ReferringTaxonomyCode                   VARCHAR(65)   NULL
              , ReferringSecondaryQualifier             VARCHAR(10)   NULL
              , ReferringSecondaryId                    VARCHAR(65)   NULL
              , ReferringSecondaryQualifier2            VARCHAR(10)   NULL
              , ReferringSecondaryId2                   VARCHAR(65)   NULL
              , ReferringSecondaryQualifier3            VARCHAR(10)   NULL
              , ReferringSecondaryId3                   VARCHAR(65)   NULL
              , RenderingEntityQualifier                VARCHAR(1)    NULL
              , RenderingLastName                       VARCHAR(35)   NULL
              , RenderingFirstName                      VARCHAR(25)   NULL
              , RenderingMiddleName                     VARCHAR(25)   NULL
              , RenderingSuffix                         VARCHAR(10)   NULL
              , RenderingEntityCode                     VARCHAR(2)    NULL
              , RenderingIdQualifier                    VARCHAR(2)    NULL
              , RenderingId                             VARCHAR(80)   NULL
              , RenderingTaxonomyCode                   VARCHAR(30)   NULL
              , RenderingSecondaryQualifier             VARCHAR(20)   NULL
              , RenderingSecondaryId                    VARCHAR(160)  NULL
              , RenderingSecondaryQualifier2            VARCHAR(20)   NULL
              , RenderingSecondaryId2                   VARCHAR(160)  NULL
              , RenderingSecondaryQualifier3            VARCHAR(20)   NULL
              , RenderingSecondaryId3                   VARCHAR(160)  NULL
              , ServicesEntityQualifier                 VARCHAR(1)    NULL
              , ServicesIdQualifier                     VARCHAR(2)    NULL
              , ServicesId                              VARCHAR(80)   NULL
              , servicesSecondaryQualifier              VARCHAR(20)   NULL
              , servicesSecondaryId                     VARCHAR(160)  NULL
              , FacilityEntityCode                      VARCHAR(2)    NULL
              , FacilityName                            VARCHAR(35)   NULL
              , FacilityIdQualifier                     VARCHAR(2)    NULL
              , FacilityId                              VARCHAR(80)   NULL
    ,SupervisingProvider2310DLastName VARCHAR(60) NULL 
          ,SupervisingProvider2310DFirstName VARCHAR(35) NULL 
          ,SupervisingProvider2310DMiddleName VARCHAR(25) NULL 
          ,SupervisingProvider2310DIdType VARCHAR(2) NULL 
          ,SupervisingProvider2310DId VARCHAR(80) NULL 
          ,SupervisingProvider2310DSecondaryIdType1 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId1 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType2 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId2 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType3 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId3 VARCHAR(50) 
          ,SupervisingProvider2310DSecondaryIdType4 VARCHAR(3) NULL 
          ,SupervisingProvider2310DSecondaryId4 VARCHAR(50)           
          ,ClaimNoteReferenceCode VARCHAR(80) NULL 
          ,ClaimNote VARCHAR(MAX) NULL 
          ,ServiceNoteReferenceCode VARCHAR(15) NULL 
          ,ServiceNote VARCHAR(MAX) NULL
              , FacilityAddress1                        VARCHAR(55)   NULL
              , FacilityAddress2                        VARCHAR(55)   NULL
              , FacilityCity                            VARCHAR(30)   NULL
              , FacilityState                           VARCHAR(2)    NULL
              , FacilityZip                             VARCHAR(15)   NULL
              , FacilityCountryCode                     VARCHAR(3)    NULL
              , FacilitySecondaryQualifier              VARCHAR(3)    NULL
              , FacilitySecondaryId                     VARCHAR(30)   NULL
              , FacilitySecondaryQualifier2             VARCHAR(3)    NULL
              , FacilitySecondaryId2                    VARCHAR(30)   NULL
              , FacilitySecondaryQualifier3             VARCHAR(3)    NULL
              , FacilitySecondaryId3                    VARCHAR(30)   NULL
              , SupervisorLastName                      VARCHAR(35)   NULL
              , SupervisorFirstName                     VARCHAR(25)   NULL
              , SupervisorMiddleName                    VARCHAR(25)   NULL
              , SupervisorSuffix                        VARCHAR(10)   NULL
              , SupervisorQualifier                     VARCHAR(2)    NULL
              , SupervisorId                            VARCHAR(80)   NULL
              , CLMSegment                              TEXT          NULL
              , StatementDateDTPSegment                 TEXT          NULL
              , ReferralDateDTPSegment                  TEXT          NULL
              , AdmissionDateDTPSegment                 TEXT          NULL
              , DischargeDateDTPSegment                 TEXT          NULL
              , CL1Segment                              TEXT          NULL
              , PatientAmountPaidSegment                TEXT          NULL
              , AuthorizationNumberRefSegment           TEXT          NULL
              , NTESegment                VARCHAR(8000) NULL
              , PayerClaimControlNumberRefSegment       TEXT          NULL
              , HIPRSegment                             TEXT          NULL
			  , MedicalRecordNumberRefSegment			TEXT		  NULL
              , HISegment                               TEXT          NULL
              , HIResponsibilitySegment                 TEXT          NULL
              , ReferringNM1Segment                     TEXT          NULL
              , ReferringRefSegment                     TEXT          NULL
              , ReferringRef2Segment                    TEXT          NULL
              , ReferringRef3Segment                    TEXT          NULL
              , RenderingNM1Segment                     TEXT          NULL
              , RenderingPRVSegment                     TEXT          NULL
              , RenderingRefSegment                     TEXT          NULL
              , RenderingRef2Segment                    TEXT          NULL
              , RenderingRef3Segment                    TEXT          NULL
              , FacilityNM1Segment                      TEXT          NULL
              , FacilityN3Segment                       TEXT          NULL
              , FacilityN4Segment                       TEXT          NULL
              , FacilityRefSegment                      TEXT          NULL
              , FacilityRef2Segment                     TEXT          NULL
              , FacilityRef3Segment                     TEXT          NULL
              , CoveragePlanId                          INT           NULL
              , AttendingProviderTaxIdType              VARCHAR(2)    NULL
              , AttendingProviderTaxId                  VARCHAR(9)    NULL
              , AttendingProviderTaxonomyCode           VARCHAR(20)   NULL
              , AttendingId                             INT           NULL
              , AttendingProviderEntityQualifier        VARCHAR(1)    NULL
              , AttendingProviderEntityCode             VARCHAR(10)   NULL
              , AttendingProviderIdType                 VARCHAR(2)    NULL
              , AttendingProviderId                     VARCHAR(35)   NULL
              , AttendingProviderIdQualifier            VARCHAR(35)   NULL
              , AttendingProviderLastName               VARCHAR(35)   NULL
              , AttendingProviderFirstName              VARCHAR(25)   NULL
              , AttendingProviderMiddleName             VARCHAR(25)   NULL
              , AttendingProviderLicenseNumber          VARCHAR(35)   NULL
                -- apoole 11/18 AttendingProviderNPI char(10) null,
              , AttendingNM1Segment                     TEXT          NULL
              , AttendingPRVSegment                     TEXT          NULL
              , AdmittingDiagnosisCode                  VARCHAR(10)   NULL
              , AdmittingDiagnosisQualifier             VARCHAR(3)    NULL
              , AdmittingDiagnosisPOA                   VARCHAR(1)    NULL
              , AdmittingDiagnosisHISegment             TEXT          NULL
              , PrincipalDiagnosisHISegment             TEXT          NULL
              , PrincipalProcedureHISegment             TEXT          NULL
              , OtherProcedureHISegment                 TEXT          NULL
              , PatientReasonForVisitHISegment          TEXT          NULL
              , DiagnosisRelatedGroupSegment            TEXT          NULL
              , DischargeHour                           VARCHAR(4)    NULL
              , AttendingREFSegment                     TEXT          NULL
              , InpatientAdmitDate                      DATETIME      NULL
              , ConditionCodeHISegment                  TEXT          NULL
              , ConditionCode1                          VARCHAR(10)   NULL
              , ConditionCode2                          VARCHAR(10)   NULL
              , ConditionCode3                          VARCHAR(10)   NULL
              , ConditionCode4                          VARCHAR(10)   NULL
              , ConditionCode5                          VARCHAR(10)   NULL
              , ConditionCode6                          VARCHAR(10)   NULL
              , ConditionCode7                          VARCHAR(10)   NULL
              , ConditionCode8                          VARCHAR(10)   NULL
              , ConditionCode9                          VARCHAR(10)   NULL
              , ConditionCode10                         VARCHAR(10)   NULL
              , ConditionCode11                         VARCHAR(10)   NULL
              , ConditionCode12                         VARCHAR(10)   NULL
              , ValueCodeHISegment                      TEXT          NULL
              , ValueCode1                              VARCHAR(10)   NULL
              , ValueCodeValue1                         VARCHAR(10)   NULL
              , ValueCode2                              VARCHAR(10)   NULL
              , ValueCodeValue2                         VARCHAR(10)   NULL
              , ValueCode3                              VARCHAR(10)   NULL
              , ValueCodeValue3                         VARCHAR(10)   NULL
              , ValueCode4                              VARCHAR(10)   NULL
              , ValueCodeValue4                         VARCHAR(10)   NULL
              , ValueCode5                              VARCHAR(10)   NULL
              , ValueCodeValue5                         VARCHAR(10)   NULL
              , ValueCode6                              VARCHAR(10)   NULL
              , ValueCodeValue6                         VARCHAR(10)   NULL
              , ValueCode7                              VARCHAR(10)   NULL
              , ValueCodeValue7                         VARCHAR(10)   NULL
              , ValueCode8                              VARCHAR(10)   NULL
              , ValueCodeValue8                         VARCHAR(10)   NULL
              , ValueCode9                              VARCHAR(10)   NULL
              , ValueCodeValue9                         VARCHAR(10)   NULL
              , ValueCode10                             VARCHAR(10)   NULL
              , ValueCodeValue10                        VARCHAR(10)   NULL
              , ValueCode11                             VARCHAR(10)   NULL
              , ValueCodeValue11                        VARCHAR(10)   NULL
              , ValueCode12                             VARCHAR(10)   NULL
              , ValueCodeValue12                        VARCHAR(10)   NULL
              , OccurenceCodeHISegment                  TEXT          NULL
              , OccurenceCode1                          VARCHAR(10)   NULL
              , OccurenceCodeDate1                      VARCHAR(10)   NULL
              , OccurenceCode2                          VARCHAR(10)   NULL
              , OccurenceCodeDate2                      VARCHAR(10)   NULL
              , OccurenceCode3                          VARCHAR(10)   NULL
              , OccurenceCodeDate3                      VARCHAR(10)   NULL
              , OccurenceCode4                          VARCHAR(10)   NULL
              , OccurenceCodeDate4                      VARCHAR(10)   NULL
              , OccurenceCode5                          VARCHAR(10)   NULL
              , OccurenceCodeDate5                      VARCHAR(10)   NULL
              , OccurenceCode6                          VARCHAR(10)   NULL
              , OccurenceCodeDate6                      VARCHAR(10)   NULL
              , OccurenceCode7                          VARCHAR(10)   NULL
              , OccurenceCodeDate7                      VARCHAR(10)   NULL
              , OccurenceCode8                          VARCHAR(10)   NULL
              , OccurenceCodeDate8                      VARCHAR(10)   NULL
              , OccurenceCode9                          VARCHAR(10)   NULL
              , OccurenceCodeDate9                      VARCHAR(10)   NULL
              , OccurenceCode10                         VARCHAR(10)   NULL
              , OccurenceCodeDate10                     VARCHAR(10)   NULL
              , OccurenceCode11                         VARCHAR(10)   NULL
              , OccurenceCodeDate11                     VARCHAR(10)   NULL
              , OccurenceCode12                         VARCHAR(10)   NULL
              , OccurenceCodeDate12                     VARCHAR(10)   NULL
              , OccurenceSpanCodeHISegment              TEXT          NULL
              , OccurenceSpanCode1                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom1                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough1               VARCHAR(10)   NULL
              , OccurenceSpanCode2                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom2                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough2               VARCHAR(10)   NULL
              , OccurenceSpanCode3                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom3                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough3               VARCHAR(10)   NULL
              , OccurenceSpanCode4                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom4                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough4               VARCHAR(10)   NULL
              , OccurenceSpanCode5                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom5                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough5               VARCHAR(10)   NULL
              , OccurenceSpanCode6                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom6                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough6               VARCHAR(10)   NULL
              , OccurenceSpanCode7                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom7                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough7               VARCHAR(10)   NULL
              , OccurenceSpanCode8                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom8                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough8               VARCHAR(10)   NULL
              , OccurenceSpanCode9                      VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom9                  VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough9               VARCHAR(10)   NULL
              , OccurenceSpanCode10                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom10                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough10              VARCHAR(10)   NULL
              , OccurenceSpanCode11                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom11                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough11              VARCHAR(10)   NULL
              , OccurenceSpanCode12                     VARCHAR(10)   NULL
              , OccurenceSpanCodeFrom12                 VARCHAR(10)   NULL
              , OccurenceSpanCodeThrough12              VARCHAR(10)   NULL
            )



            CREATE TABLE #837OtherInsuredsNeedsGroup (
                UniqueId                             INT         IDENTITY NOT NULL
              , RefClaimId                           INT         NOT NULL
              , ClaimLineId                          INT         NULL
              , Priority                             INT         NULL
              , PayerSequenceNumber                  VARCHAR(1)  NULL
              , SubscriberRelationshipCode           VARCHAR(2)  NULL
              , GroupNumber                          VARCHAR(30) NULL
              , GroupName                            VARCHAR(60) NULL
              , InsuranceTypeCode                    VARCHAR(3)  NULL
              , ClaimFilingIndicatorCode             VARCHAR(2)  NULL
                --[AdjustmentGroupCode] [varchar] (15) NULL ,
                --[AdjustmentReasonCode1] [varchar] (30) NULL ,
                --[AdjustmentAmount1] [varchar] (100) NULL ,
                --[AdjustmentQuantity1] [varchar] (80) NULL ,
                --[AdjustmentReasonCode2] [varchar] (30) NULL ,
                --[AdjustmentAmount2] [varchar] (100) NULL ,
                --[AdjustmentQuantity2] [varchar] (80) NULL ,
                --[AdjustmentReasonCode3] [varchar] (30) NULL ,
                --[AdjustmentAmount3] [varchar] (100) NULL ,
                --[AdjustmentQuantity3] [varchar] (80) NULL ,
                --[AdjustmentReasonCode4] [varchar] (30) NULL ,
                --[AdjustmentAmount4] [varchar] (100) NULL ,
                --[AdjustmentQuantity4] [varchar] (80) NULL ,
                --[AdjustmentReasonCode5] [varchar] (30) NULL ,
                --[AdjustmentAmount5] [varchar] (100) NULL ,
                --[AdjustmentQuantity5] [varchar] (80) NULL ,
                --[AdjustmentReasonCode6] [varchar] (30) NULL ,
                --[AdjustmentAmount6] [varchar] (100) NULL ,
                --[AdjustmentQuantity6] [varchar] (80) NULL ,
              , PayerPaidAmount                      MONEY       NULL
              , PayerAllowedAmount                   MONEY       NULL
              , PatientResponsibilityAmount          MONEY       NULL
              , InsuredDOB                           VARCHAR(35) NULL
              , InsuredSex                           VARCHAR(1)  NULL
              , BenefitsAssignCertificationIndicator VARCHAR(1)  NULL
              , PatientSignatureSourceCode           VARCHAR(1)  NULL
              , InformationReleaseCode               VARCHAR(1)  NULL
              , InsuredQualifier                     VARCHAR(2)  NULL
              , InsuredLastName                      VARCHAR(35) NULL
              , InsuredFirstName                     VARCHAR(25) NULL
              , InsuredMiddleName                    VARCHAR(25) NULL
              , InsuredSuffix                        VARCHAR(10) NULL
              , InsuredIdQualifier                   VARCHAR(2)  NULL
              , InsuredId                            VARCHAR(80) NULL
              , InsuredAddress1                      VARCHAR(55) NULL
              , InsuredAddress2                      VARCHAR(55) NULL
              , InsuredCity                          VARCHAR(30) NULL
              , InsuredState                         VARCHAR(2)  NULL
              , InsuredZip                           VARCHAR(25) NULL
              , InsuredSecondaryQualifier            VARCHAR(3)  NULL
              , InsuredSecondaryId                   VARCHAR(30) NULL
              , PayerName                            VARCHAR(35) NULL
              , PayerQualifier                       VARCHAR(2)  NULL
              , PayerId                              VARCHAR(80) NULL
              , PaymentDate                          VARCHAR(35) NULL
              , PayerSecondaryQualifier              VARCHAR(10) NULL
              , PayerSecondaryId                     VARCHAR(65) NULL
              , PayerAuthorizationQualifier          VARCHAR(10) NULL
              , PayerAuthorizationNumber             VARCHAR(65) NULL,
            --[SubscriberSegment] [text] NULL,
            --[PayerPaidAmountSegment] [text] NULL,
            --[PayerAllowedAmountSegment] [text] NULL,
            --[PatientResponsibilityAmountSegment] [text] NULL,
            --[DMGSegment] [text] NULL,
            --[OISegment] [text] NULL,
            --[OINM1Segment] [text] NULL,
            --[OIN3Segment] [text] NULL,
            --[OIN4Segment] [text] NULL,
            --[OIRefSegment] [text] NULL,
            --[PayerNM1Segment] [text] NULL,
            --[PayerPaymentDTPSegment] [text] NULL,
            --[AuthorizationNumberRefSegment] [text] NULL,
            --[SVDSegment] [text] NULL,
            --[CAS1Segment] [text] NULL,
            --[CAS2Segment] [text] NULL,
            --[CAS3Segment] [text] NULL,
            --[ServiceAdjudicationDTPSegment] [text] NULL,
            )



            CREATE TABLE #837OtherInsureds (
                UniqueId                             INT         IDENTITY NOT NULL
              , RefClaimId                           INT         NOT NULL
              , Priority                             INT         NULL
              , PayerSequenceNumber                  VARCHAR(1)  NULL
              , SubscriberRelationshipCode           VARCHAR(2)  NULL
              , GroupNumber                          VARCHAR(30) NULL
              , GroupName                            VARCHAR(60) NULL
              , InsuranceTypeCode                    VARCHAR(3)  NULL
              , ClaimFilingIndicatorCode             VARCHAR(2)  NULL
                --[AdjustmentGroupCode] [varchar] (15) NULL ,
                --[AdjustmentReasonCode1] [varchar] (30) NULL ,
                --[AdjustmentAmount1] [varchar] (100) NULL ,
                --[AdjustmentQuantity1] [varchar] (80) NULL ,
                --[AdjustmentReasonCode2] [varchar] (30) NULL ,
                --[AdjustmentAmount2] [varchar] (100) NULL ,
                --[AdjustmentQuantity2] [varchar] (80) NULL ,
                --[AdjustmentReasonCode3] [varchar] (30) NULL ,
                --[AdjustmentAmount3] [varchar] (100) NULL ,
                --[AdjustmentQuantity3] [varchar] (80) NULL ,
                --[AdjustmentReasonCode4] [varchar] (30) NULL ,
                --[AdjustmentAmount4] [varchar] (100) NULL ,
                --[AdjustmentQuantity4] [varchar] (80) NULL ,
                --[AdjustmentReasonCode5] [varchar] (30) NULL ,
                --[AdjustmentAmount5] [varchar] (100) NULL ,
                --[AdjustmentQuantity5] [varchar] (80) NULL ,
                --[AdjustmentReasonCode6] [varchar] (30) NULL ,
                --[AdjustmentAmount6] [varchar] (100) NULL ,
                --[AdjustmentQuantity6] [varchar] (80) NULL ,
              , PayerPaidAmount                      MONEY       NULL
              , PayerAllowedAmount                   MONEY       NULL
              , PatientResponsibilityAmount          MONEY       NULL
              , InsuredDOB                           VARCHAR(35) NULL
              , InsuredSex                           VARCHAR(1)  NULL
              , BenefitsAssignCertificationIndicator VARCHAR(1)  NULL
              , PatientSignatureSourceCode           VARCHAR(1)  NULL
              , InformationReleaseCode               VARCHAR(1)  NULL
              , InsuredQualifier                     VARCHAR(2)  NULL
              , InsuredLastName                      VARCHAR(35) NULL
              , InsuredFirstName                     VARCHAR(25) NULL
              , InsuredMiddleName                    VARCHAR(25) NULL
              , InsuredSuffix                        VARCHAR(10) NULL
              , InsuredIdQualifier                   VARCHAR(2)  NULL
              , InsuredId                            VARCHAR(80) NULL
              , InsuredAddress1                      VARCHAR(55) NULL
              , InsuredAddress2                      VARCHAR(55) NULL
              , InsuredCity                          VARCHAR(30) NULL
              , InsuredState                         VARCHAR(2)  NULL
              , InsuredZip                           VARCHAR(25) NULL
              , InsuredSecondaryQualifier            VARCHAR(3)  NULL
              , InsuredSecondaryId                   VARCHAR(30) NULL
              , PayerName                            VARCHAR(35) NULL
              , PayerQualifier                       VARCHAR(2)  NULL
              , PayerId                              VARCHAR(80) NULL
              , PaymentDate                          VARCHAR(35) NULL
              , PayerSecondaryQualifier              VARCHAR(10) NULL
              , PayerSecondaryId                     VARCHAR(65) NULL
              , PayerAuthorizationQualifier          VARCHAR(10) NULL
              , PayerAuthorizationNumber             VARCHAR(65) NULL
              , SubscriberSegment                    TEXT        NULL
              , PayerPaidAmountSegment               TEXT        NULL
              , PayerAllowedAmountSegment            TEXT        NULL
              , PatientResponsibilityAmountSegment   TEXT        NULL
              , DMGSegment                           TEXT        NULL
              , OISegment                            TEXT        NULL
              , OINM1Segment                         TEXT        NULL
              , OIN3Segment                          TEXT        NULL
              , OIN4Segment                          TEXT        NULL
              , OIRefSegment                         TEXT        NULL
              , PayerNM1Segment                      TEXT        NULL
              , PayerPaymentDTPSegment               TEXT        NULL
              , AuthorizationNumberRefSegment        TEXT        NULL
              , SVDSegment                           TEXT        NULL
              , CAS1Segment                          TEXT        NULL
              , CAS2Segment                          TEXT        NULL
              , CAS3Segment                          TEXT        NULL
              , ServiceAdjudicationDTPSegment        TEXT        NULL,
            )


            CREATE TABLE #837OtherInsuredLineItems (
                UniqueId                      INT            IDENTITY NOT NULL
              , XClaimId                      INT            NOT NULL
              , OtherPayerPrimaryId           VARCHAR(80)    NOT NULL
              , LinePaidAmount                MONEY          NOT NULL
              , ServiceIdQualifier            VARCHAR(2)     NOT NULL
              , BillingCode                   VARCHAR(48)    NOT NULL
              , Modifier1                     VARCHAR(2)     NULL
              , Modifier2                     VARCHAR(2)     NULL
              , Modifier3                     VARCHAR(2)     NULL
              , Modifier4                     VARCHAR(2)     NULL
              , ProcedureDescription          VARCHAR(80)    NULL
              , PaidUnitCount                 DECIMAL(10, 2) NOT NULL
              , BundledLineNumber             VARCHAR(6)     NOT NULL
              , AdjustmentGroupCode1          VARCHAR(2)     NULL
              , AdjustmentReasonCode1_1       VARCHAR(5)     NULL
              , AdjustmentAmount1_1           MONEY          NULL
              , AdjustmentQuantity1_1         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode1_1 VARCHAR(5)     NULL
              , AdjustmentReasonCode1_2       VARCHAR(5)     NULL
              , AdjustmentAmount1_2           MONEY          NULL
              , AdjustmentQuantity1_2         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode1_2 VARCHAR(5)     NULL
              , AdjustmentReasonCode1_3       VARCHAR(5)     NULL
              , AdjustmentAmount1_3           MONEY          NULL
              , AdjustmentQuantity1_3         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode1_3 VARCHAR(5)     NULL
              , AdjustmentReasonCode1_4       VARCHAR(5)     NULL
              , AdjustmentAmount1_4           MONEY          NULL
              , AdjustmentQuantity1_4         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode1_4 VARCHAR(5)     NULL
              , AdjustmentReasonCode1_5       VARCHAR(5)     NULL
              , AdjustmentAmount1_5           MONEY          NULL
              , AdjustmentQuantity1_5         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode1_5 VARCHAR(5)     NULL
              , AdjustmentReasonCode1_6       VARCHAR(5)     NULL
              , AdjustmentAmount1_6           MONEY          NULL
              , AdjustmentQuantity1_6         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode1_6 VARCHAR(5)     NULL
              , AdjustmentGroupCode2          VARCHAR(2)     NULL
              , AdjustmentReasonCode2_1       VARCHAR(5)     NULL
              , AdjustmentAmount2_1           MONEY          NULL
              , AdjustmentQuantity2_1         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode2_1 VARCHAR(5)     NULL
              , AdjustmentReasonCode2_2       VARCHAR(5)     NULL
              , AdjustmentAmount2_2           MONEY          NULL
              , AdjustmentQuantity2_2         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode2_2 VARCHAR(5)     NULL
              , AdjustmentReasonCode2_3       VARCHAR(5)     NULL
              , AdjustmentAmount2_3           MONEY          NULL
              , AdjustmentQuantity2_3         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode2_3 VARCHAR(5)     NULL
              , AdjustmentReasonCode2_4       VARCHAR(5)     NULL
              , AdjustmentAmount2_4           MONEY          NULL
              , AdjustmentQuantity2_4         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode2_4 VARCHAR(5)     NULL
              , AdjustmentReasonCode2_5       VARCHAR(5)     NULL
              , AdjustmentAmount2_5           MONEY          NULL
              , AdjustmentQuantity2_5         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode2_5 VARCHAR(5)     NULL
              , AdjustmentReasonCode2_6       VARCHAR(5)     NULL
              , AdjustmentAmount2_6           MONEY          NULL
              , AdjustmentQuantity2_6         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode2_6 VARCHAR(5)     NULL
              , AdjustmentGroupCode3          VARCHAR(2)     NULL
              , AdjustmentReasonCode3_1       VARCHAR(5)     NULL
              , AdjustmentAmount3_1           MONEY          NULL
              , AdjustmentQuantity3_1         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode3_1 VARCHAR(5)     NULL
              , AdjustmentReasonCode3_2       VARCHAR(5)     NULL
              , AdjustmentAmount3_2           MONEY          NULL
              , AdjustmentQuantity3_2         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode3_2 VARCHAR(5)     NULL
              , AdjustmentReasonCode3_3       VARCHAR(5)     NULL
              , AdjustmentAmount3_3           MONEY          NULL
              , AdjustmentQuantity3_3         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode3_3 VARCHAR(5)     NULL
              , AdjustmentReasonCode3_4       VARCHAR(5)     NULL
              , AdjustmentAmount3_4           MONEY          NULL
              , AdjustmentQuantity3_4         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode3_4 VARCHAR(5)     NULL
              , AdjustmentReasonCode3_5       VARCHAR(5)     NULL
              , AdjustmentAmount3_5           MONEY          NULL
              , AdjustmentQuantity3_5         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode3_5 VARCHAR(5)     NULL
              , AdjustmentReasonCode3_6       VARCHAR(5)     NULL
              , AdjustmentAmount3_6           MONEY          NULL
              , AdjustmentQuantity3_6         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode3_6 VARCHAR(5)     NULL
              , AdjustmentGroupCode4          VARCHAR(2)     NULL
              , AdjustmentReasonCode4_1       VARCHAR(5)     NULL
              , AdjustmentAmount4_1           MONEY          NULL
              , AdjustmentQuantity4_1         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode4_1 VARCHAR(5)     NULL
              , AdjustmentReasonCode4_2       VARCHAR(5)     NULL
              , AdjustmentAmount4_2           MONEY          NULL
              , AdjustmentQuantity4_2         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode4_2 VARCHAR(5)     NULL
              , AdjustmentReasonCode4_3       VARCHAR(5)     NULL
              , AdjustmentAmount4_3           MONEY          NULL
              , AdjustmentQuantity4_3         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode4_3 VARCHAR(5)     NULL
              , AdjustmentReasonCode4_4       VARCHAR(5)     NULL
              , AdjustmentAmount4_4           MONEY          NULL
              , AdjustmentQuantity4_4         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode4_4 VARCHAR(5)     NULL
              , AdjustmentReasonCode4_5       VARCHAR(5)     NULL
              , AdjustmentAmount4_5           MONEY          NULL
              , AdjustmentQuantity4_5         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode4_5 VARCHAR(5)     NULL
              , AdjustmentReasonCode4_6       VARCHAR(5)     NULL
              , AdjustmentAmount4_6           MONEY          NULL
              , AdjustmentQuantity4_6         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode4_6 VARCHAR(5)     NULL
              , AdjustmentGroupCode5          VARCHAR(2)     NULL
              , AdjustmentReasonCode5_1       VARCHAR(5)     NULL
              , AdjustmentAmount5_1           MONEY          NULL
              , AdjustmentQuantity5_1         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode5_1 VARCHAR(5)     NULL
              , AdjustmentReasonCode5_2       VARCHAR(5)     NULL
              , AdjustmentAmount5_2           MONEY          NULL
              , AdjustmentQuantity5_2         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode5_2 VARCHAR(5)     NULL
              , AdjustmentReasonCode5_3       VARCHAR(5)     NULL
              , AdjustmentAmount5_3           MONEY          NULL
              , AdjustmentQuantity5_3         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode5_3 VARCHAR(5)     NULL
              , AdjustmentReasonCode5_4       VARCHAR(5)     NULL
              , AdjustmentAmount5_4           MONEY          NULL
              , AdjustmentQuantity5_4         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode5_4 VARCHAR(5)     NULL
              , AdjustmentReasonCode5_5       VARCHAR(5)     NULL
              , AdjustmentAmount5_5           MONEY          NULL
              , AdjustmentQuantity5_5         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode5_5 VARCHAR(5)     NULL
              , AdjustmentReasonCode5_6       VARCHAR(5)     NULL
              , AdjustmentAmount5_6           MONEY          NULL
              , AdjustmentQuantity5_6         VARCHAR(15)    NULL
              , SecondAdjustmentReasonCode5_6 VARCHAR(5)     NULL
              , AdjudicationDate              VARCHAR(35)    NULL
              , RemainingPatientAmount        MONEY          NULL
              , SVDSegment                    TEXT           NULL
              , CAS1Segment                   TEXT           NULL
              , CAS2Segment                   TEXT           NULL
              , CAS3Segment                   TEXT           NULL
              , CAS4Segment                   TEXT           NULL
              , CAS5Segment                   TEXT           NULL
              , ServiceAdjudicationDTPSegment TEXT           NULL
              , RemainingPatientAMTSegment    TEXT           NULL
            )


            CREATE TABLE #837Services (
                UniqueId                             INT          IDENTITY NOT NULL
              , ClaimLineId							 int		  NULL
              , RefClaimId                           INT          NOT NULL
              , ServiceLineCounter                   INT          NULL
              , ServiceIdQualifier                   VARCHAR(2)   NULL
              , RevenueCode                          VARCHAR(48)  NULL
              , BillingCode                          VARCHAR(48)  NULL
              , Modifier1                            VARCHAR(2)   NULL
              , Modifier2                            VARCHAR(2)   NULL
              , Modifier3                            VARCHAR(2)   NULL
              , Modifier4                            VARCHAR(2)   NULL
              , LineItemChargeAmount                 MONEY        NULL
              , UnitOfMeasure                        VARCHAR(2)   NULL
              , ServiceUnitCount                     VARCHAR(15)  NULL
              , PlaceOfService                       VARCHAR(2)   NULL
                -- 11/19 DiagnosisCodePointer not used apoole
                --[DiagnosisCodePointer1] [varchar] (2) NULL ,
                --[DiagnosisCodePointer2] [varchar] (2) NULL ,
                --[DiagnosisCodePointer3] [varchar] (2) NULL ,
                --[DiagnosisCodePointer4] [varchar] (2) NULL ,
                --[DiagnosisCodePointer5] [varchar] (2) NULL ,
                --[DiagnosisCodePointer6] [varchar] (2) NULL ,
                --[DiagnosisCodePointer7] [varchar] (2) NULL ,
                --[DiagnosisCodePointer8] [varchar] (2) NULL ,
              , EmergencyIndicator                   VARCHAR(1)   NULL
              , CopayStatusCode                      VARCHAR(1)   NULL
              , ServiceDateQualifier                 VARCHAR(3)   NULL
              , ServiceDate                          VARCHAR(35)  NULL
              , ReferralDate                         VARCHAR(35)  NULL
              , CurrentIllnessDate                   VARCHAR(35)  NULL
              , PriorAuthorizationReferenceQualifier VARCHAR(10)  NULL
              , PriorAuthorizationReferenceNumber    VARCHAR(65)  NULL
              , LineItemControlNumber                VARCHAR(10)  NULL
              , RenderingEntityQualifier             VARCHAR(1)   NULL
              , RenderingLastName                    VARCHAR(35)  NULL
              , RenderingFirstName                   VARCHAR(25)  NULL
              , RenderingMiddleName                  VARCHAR(25)  NULL
              , RenderingSuffix                      VARCHAR(10)  NULL
              , RenderingIdQualifier                 VARCHAR(2)   NULL
              , RenderingId                          VARCHAR(80)  NULL
              , RenderingTaxonomyCode                VARCHAR(30)  NULL
              , RenderingSecondaryQualifier          VARCHAR(20)  NULL
              , RenderingSecondaryId                 VARCHAR(160) NULL
              , ServicesEntityQualifier              VARCHAR(1)   NULL
              , ServicesIdQualifier                  VARCHAR(2)   NULL
              , ServicesId                           VARCHAR(80)  NULL
              , ServicesSecondaryQualifier           VARCHAR(20)  NULL
              , ServicesSecondaryId                  VARCHAR(160) NULL
              , FacilityEntityCode                   VARCHAR(2)   NULL
              , FacilityName                         VARCHAR(35)  NULL
              , FacilityIdQualifier                  VARCHAR(2)   NULL
              , FacilityId                           VARCHAR(80)  NULL
              , FacilityAddress1                     VARCHAR(55)  NULL
              , FacilityAddress2                     VARCHAR(55)  NULL
              , FacilityCity                         VARCHAR(30)  NULL
              , FacilityState                        VARCHAR(2)   NULL
              , FacilityZip                          VARCHAR(15)  NULL
              , FacilityCountryCode                  VARCHAR(3)   NULL
              , FacilitySecondaryQualifier           VARCHAR(3)   NULL
              , FacilitySecondaryId                  VARCHAR(30)  NULL
              , SupervisorLastName                   VARCHAR(35)  NULL
              , SupervisorFirstName                  VARCHAR(25)  NULL
              , SupervisorMiddleName                 VARCHAR(25)  NULL
              , SupervisorSuffix                     VARCHAR(10)  NULL
              , SupervisorQualifier                  VARCHAR(2)   NULL
              , SupervisorId                         VARCHAR(80)  NULL
              , ReferringEntityCode                  VARCHAR(3)   NULL
              , ReferringEntityQualifier             VARCHAR(1)   NULL
              , ReferringLastName                    VARCHAR(35)  NULL
              , ReferringFirstName                   VARCHAR(25)  NULL
              , ReferringMiddleName                  VARCHAR(25)  NULL
              , ReferringSuffix                      VARCHAR(10)  NULL
              , ReferringIdQualifier                 VARCHAR(2)   NULL
              , ReferringId                          VARCHAR(80)  NULL
              , ReferringTaxonomyCode                VARCHAR(30)  NULL
              , ReferringSecondaryQualifier          VARCHAR(3)   NULL
              , ReferringSecondaryId                 VARCHAR(30)  NULL
              , PayerName                            VARCHAR(150) NULL
              , PayerIdQualifier                     VARCHAR(15)  NULL
              , PayerId                              VARCHAR(325) NULL
              , PayerReferenceIdQualifier            VARCHAR(20)  NULL
              , PayerPriorAuthorizationNumber        VARCHAR(125) NULL
              , ApprovedAmount                       MONEY        NULL
              , LXSegment                            TEXT         NULL
              , SV2Segment                           TEXT         NULL
              , ServiceDateDTPSegment                TEXT         NULL
              , ReferralDateDTPSegment               TEXT         NULL
              , LineItemControlRefSegment            TEXT         NULL
              , ProviderAuthorizationRefSegment      TEXT         NULL
              , SupervisorNM1Segment                 TEXT         NULL
              , ReferringNM1Segment                  TEXT         NULL
              , PayerNM1Segment                      TEXT         NULL
              , ApprovedAmountSegment                TEXT         NULL,
            )



            --NEW**
            CREATE TABLE #837DrugIdentification (
                UniqueId                  INT         IDENTITY NOT NULL
              , RefServiceId              INT         NOT NULL
              , NationalDrugCodeQualifier VARCHAR(2)  NULL
              , NationalDrugCode          VARCHAR(30) NULL
              , DrugUnitPrice             MONEY       NULL
              , DrugCodeUnitCount         VARCHAR(15) NULL
              , DrugUnitOfMeasure         VARCHAR(15) NULL
              , LINSegment                TEXT        NULL
              , CTPSegment                TEXT        NULL
            )



            CREATE TABLE #837HeaderTrailer (
                TransactionSetControlNumberHeader  VARCHAR(9)   NULL
              , TransactionSetPurposeCode          VARCHAR(2)   NULL
              , ApplicationTransactionId           VARCHAR(30)  NULL
              , CreationDate                       VARCHAR(8)   NULL
              , CreationTime                       VARCHAR(4)   NULL
              , EncounterId                        VARCHAR(2)   NULL
              , TransactionTypeCode                VARCHAR(30)  NULL
              , SubmitterEntityQualifier           VARCHAR(1)   NULL
              , SubmitterLastName                  VARCHAR(35)  NULL
              , SubmitterFirstName                 VARCHAR(25)  NULL
              , SubmitterMiddleName                VARCHAR(25)  NULL
              , SubmitterId                        VARCHAR(80)  NULL
              , SubmitterContactName               VARCHAR(125) NULL
              , SubmitterCommNumber1Qualifier      VARCHAR(5)   NULL
              , SubmitterCommNumber1               VARCHAR(165) NULL
              , SubmitterCommNumber2Qualifier      VARCHAR(5)   NULL
              , SubmitterCommNumber2               VARCHAR(165) NULL
              , SubmitterCommNumber3Qualifier      VARCHAR(5)   NULL
              , SubmitterCommNumber3               VARCHAR(165) NULL
              , ReceiverLastName                   VARCHAR(35)  NULL
              , ReceiverPrimaryId                  VARCHAR(80)  NULL
              , TransactionSegmentCount            VARCHAR(20)  NULL
              , TransactionSetControlNumberTrailer VARCHAR(9)   NULL
              , STSegment                          TEXT         NULL
              , BHTSegment                         TEXT         NULL
              , TransactionTypeRefSegment          TEXT         NULL
              , SubmitterNM1Segment                TEXT         NULL
              , SubmitterPerSegment                TEXT         NULL
              , ReceiverNm1Segment                 TEXT         NULL
              , SESegment                          TEXT         NULL,
            )



            CREATE TABLE #HIPAAHeaderTrailer (
                AuthorizationIdQualifier        VARCHAR(2)  NULL
              , AuthorizationId                 VARCHAR(10) NULL
              , SecurityIdQualifier             VARCHAR(2)  NULL
              , SecurityId                      VARCHAR(10) NULL
              , InterchangeSenderQualifier      VARCHAR(2)  NULL
              , InterchangeSenderId             VARCHAR(15) NULL
              , InterchangeReceiverQualifier    VARCHAR(2)  NULL
              , InterchangeReceiverId           VARCHAR(15) NULL
              , InterchangeDate                 VARCHAR(6)  NULL
              , InterchangeTime                 VARCHAR(4)  NULL
              , InterchangeControlStandardsId   VARCHAR(1)  NULL
              , InterchangeControlVersionNumber VARCHAR(5)  NULL
              , InterchangeControlNumberHeader  VARCHAR(9)  NULL
              , AcknowledgeRequested            VARCHAR(1)  NULL
              , UsageIndicator                  VARCHAR(1)  NULL
              , ComponentSeparator              VARCHAR(10) NULL
              , FunctionalIdCode                VARCHAR(2)  NULL
              , ApplicationSenderCode           VARCHAR(15) NULL
              , ApplicationReceiverCode         VARCHAR(15) NULL
              , FunctionalDate                  VARCHAR(8)  NULL
              , FunctionalTime                  VARCHAR(4)  NULL
              , GroupControlNumberHeader        VARCHAR(9)  NULL
              , ResponsibleAgencyCode           VARCHAR(2)  NULL
              , VersionCode                     VARCHAR(12) NULL
              , NumberOfTransactions            VARCHAR(6)  NULL
              , GroupControlNumberTrailer       VARCHAR(9)  NULL
              , NumberOfGroups                  VARCHAR(6)  NULL
              , InterchangeControlNumberTrailer VARCHAR(9)  NULL
              , InterchangeHeaderSegment        TEXT        NULL
              , FunctionalHeaderSegment         TEXT        NULL
              , FunctionalTrailerSegment        TEXT        NULL
              , InterchangeTrailerSegment       TEXT        NULL,
            )



            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 0
              WHERE
                ClaimBatchId = @ParmClaimBatchId



            DECLARE @CurrentDate DATETIME
            DECLARE @ErrorNumber INT

            DECLARE @ClaimFormatId INT
            DECLARE @Electronic CHAR(1) --- Y or N
            DECLARE @FormatType CHAR(1)
            --- I or P

            --#EH!INFO!ADD!@Electronic!
            --#EH!INFO!ADD!@FormatType!
            --#EH!INFO!ADD!@ClaimFormatId!
            SET @CurrentDate = GETDATE()


            SELECT  @ClaimFormatId = a.ClaimFormatId
                  , @Electronic    = b.Electronic
                  , @FormatType    = 'I'
              FROM  ClaimBatches a
                  JOIN ClaimFormats b ON(a.ClaimFormatId = b.ClaimFormatId)
                  LEFT JOIN GlobalCodes gc ON(b.FormatType = gc.GlobalCodeId)
              WHERE
                a.ClaimBatchId = @ParmClaimBatchId





            -- Validate Claim Formats and Agency information for electronic claims
            IF @Electronic = 'Y'
                BEGIN
                    IF EXISTS (SELECT   *
                                 FROM   Agency
                                 WHERE
                                    AgencyName IS NULL
                                    OR  BillingContact IS NULL
                                    OR  BillingPhone IS NULL)
                        BEGIN
                            SET @ErrorMessage = (
                                SELECT  dbo.Ssf_GetMesageByMessageCode(
                                            29, 'ABBMISSINGFROMAGENCY_SSP'
                                          , 'Agency Name, Billing Contact and Billing Contact Phone are missing from Agency. Please set values and rerun claims'))
                            RAISERROR(@ErrorMessage, 16, 1)
                        END

                    IF EXISTS (SELECT   *
                                 FROM   ClaimFormats
                                 WHERE
                                    ClaimFormatId = @ClaimFormatId
                                    AND (BillingLocationCode IS NULL
                                         OR ReceiverCode IS NULL
                                         OR ReceiverPrimaryId IS NULL
                                         OR ProductionOrTest IS NULL
                                         OR Version IS NULL))
                        BEGIN
                            SET @ErrorMessage = (
                                SELECT  dbo.Ssf_GetMesageByMessageCode(
                                            29, 'BRRPVREQ_SSP'
                                          , 'Billing Location Code, Receiver Code, Receiver Primary Id, Production or Test and Version are required in Claim Formats for electronic claims. Please set values and rerun claims'))
                            RAISERROR(@ErrorMessage, 16, 1)
                        END
                END


            -- Voids & Rebills with Temp Tables
            -- 1
            SELECT DISTINCT
                ccp.CoveragePlanId
            INTO    #ClaimBatchCoveragePlans
              FROM  ClaimBatchCharges cbc
                  JOIN Charges c ON c.ChargeId = cbc.ChargeId
                                    AND ISNULL(c.RecordDeleted, 'N') <> 'Y'
                  JOIN ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
                                                  AND   ISNULL(ccp.RecordDeleted, 'N') <> 'Y'
              WHERE
                cbc.ClaimBatchId = @ClaimBatchId
                AND ISNULL(cbc.RecordDeleted, 'N') <> 'Y'


            -- 2
            --Select all deleted services that have not been sent for this coverageplan 
            SELECT  NULL AS ChargeId
                  , NULL AS SubmissionReasonCode
                  , NULL AS VoidedClaimLineItemId   --+ '00'
            INTO    #DeletedCharges

            DELETE  FROM #DeletedCharges
              WHERE
                ChargeId IS NULL


            -- Commenting out the following code for now, creating a blank table - 1/24/2017      
            --      SELECT  c.ChargeId ,

            --              '8' AS SubmissionReasonCode ,
            --              MAX(er.ClaimLineItemId) AS VoidedClaimLineItemId --+ '00'
            --      INTO    #DeletedCharges
            --      FROM    ServicesDeleted s
            --              JOIN Charges c ON c.ServiceId = s.ServiceId
            --                                AND ISNULL(c.RecordDeleted, 'N') = 'N'
            --              JOIN ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
            --                                              AND ISNULL(ccp.RecordDeleted, 'N') = 'N'
            --              JOIN #ClaimBatchCoveragePlans cbcp ON cbcp.CoveragePlanId = ccp.CoveragePlanId
            --              JOIN ClaimLineItemCharges clic ON clic.ChargeId = c.ChargeId
            --                                                AND ISNULL(clic.RecordDeleted, 'N') = 'N'  
            --   -- Claim was previously sent but not as a void
            --              JOIN ClaimLineItems cli ON cli.ClaimLineItemId = clic.ClaimLineItemId
            --                                         AND ISNULL(cli.VoidedClaim, 'N') = 'N'
            --                                         AND ISNULL(cli.RecordDeleted, 'N') = 'N'  
            --   -- Claim came back from 835
            --              JOIN ERClaimLineItems er ON er.ClaimLineItemId = cli.ClaimLineItemId
            --                                          AND ISNULL(er.RecordDeleted, 'N') = 'N'
            --      WHERE   ISNULL(s.RecordDeleted, 'N') = 'N'  
            ---- Make sure that voided claim was not sent out before
            --              AND NOT EXISTS ( SELECT *
            --                               FROM   ClaimLineItemCharges clic2
            --                                      JOIN ClaimLineItems cli2 ON cli2.ClaimLineItemId = clic2.ClaimLineItemId
            --                                      JOIN ClaimLineItemGroups clig ON cli2.ClaimLineItemGroupId = clig.ClaimLineItemGroupId
            --                                                                       AND ISNULL(clig.RecordDeleted, 'N') = 'N'
            --                                      JOIN ClaimBatches cb ON cb.ClaimBatchId = clig.ClaimBatchId
            --                                                              AND ISNULL(clig.RecordDeleted, 'N') = 'N'
            --                               WHERE  clic2.ChargeId = c.ChargeId
            --                                      AND ISNULL(cli2.VoidedClaim, 'N') = 'Y'
            --                                      AND cb.status = 4524 -- Processed
            --                                      )
            --      GROUP BY c.ChargeId        


            -- 3
            SELECT  clic.ChargeId
                  , CASE
                        WHEN cp.PlanDoesNotAllowClaimResubmission = 'Y' THEN '8'
                        ELSE '7'
                    END                      AS SubmissionReasonCode
                  , dc.VoidedClaimLineItemId AS VoidedClaimLineItemId   -- USE THIS TO GET OTHER CHARGES
            INTO    #DeletedChargesSubmitAsVoidOrRebill
              FROM  #DeletedCharges dc
                  JOIN ClaimLineItemCharges clic ON dc.VoidedClaimLineItemId = clic.ClaimLineItemId
                  JOIN Charges c ON dc.ChargeId = c.ChargeId
                  JOIN dbo.ClientCoveragePlans ccp ON ccp.ClientCoveragePlanId = c.ClientCoveragePlanId
                  JOIN CoveragePlans cp ON ccp.CoveragePlanId = cp.CoveragePlanId
              WHERE
                ISNULL(c.RecordDeleted, 'N') = 'N'
                AND ISNULL(clic.RecordDeleted, 'N') = 'N'
                AND ISNULL(ccp.RecordDeleted, 'N') = 'N'
                AND ISNULL(cp.RecordDeleted, 'N') = 'N'
                -- Make Sure the VoidedClaimLineItemId <> OriginalClaimLineItemId
                AND NOT EXISTS (SELECT  *
                                  FROM  ClaimLineItems clic3
                                  WHERE
                                    clic3.OriginalClaimLineItemId = VoidedClaimLineItemId)


            DELETE  FROM #DeletedChargesSubmitAsVoidOrRebill
              WHERE
                ChargeId IS NULL


            -- 4
            --Select all rebill charges  

            -- Commenting out this code -- 1/24/2017
            SELECT  NULL AS ChargeId
                  , NULL AS SubmissionReasonCode
                  , NULL AS VoidedClaimLineItemId   --+ '00'  
            INTO    #RebillCharges


            DELETE  FROM #RebillCharges
              WHERE
                ChargeId IS NULL


            --      SELECT  cbc.ChargeId ,
            --              '7' AS SubmissionReasonCode ,
            --              MAX(er.ClaimLineItemId) AS VoidedClaimLineItemId  --+ '00'  
            --      INTO    #RebillCharges
            --      FROM    ClaimBatchCharges cbc
            --              JOIN Charges ch ON cbc.ChargeId = ch.ChargeId
            --              JOIN Charges ch2 ON ch.ChargeId = ch2.ChargeId
            --                                  AND ch.ClientCoveragePlanId = ch2.ClientCoveragePlanId
            --              JOIN ClaimLineItemCharges clic ON clic.ChargeId = ch2.ChargeId
            --                                                AND ISNULL(clic.RecordDeleted, 'N') = 'N'    
            ---- Charge was previously sent  
            --              JOIN ClaimLineItems cli ON cli.ClaimLineItemId = clic.ClaimLineItemId
            --                                         AND ISNULL(cli.VoidedClaim, 'N') = 'N'
            --                                         AND ISNULL(cli.RecordDeleted, 'N') = 'N'    
            ---- 835 was received for the charge  
            --              JOIN ERClaimLineItems er ON er.ClaimLineItemId = cli.ClaimLineItemId
            --                                          AND ISNULL(er.RecordDeleted, 'N') = 'N'
            --      WHERE   cbc.ClaimBatchId = @ClaimBatchId
            --              AND ISNULL(cbc.RecordDeleted, 'N') = 'N'
            --              AND cbc.ChargeId NOT IN ( SELECT    ChargeId
            --                                        FROM      #DeletedCharges )
            --      GROUP BY cbc.ChargeId                         

            INSERT INTO #RebillCharges
              SELECT    cbc.ChargeId
                      , '7'
                      , MAX(cli.ClaimLineItemId)    --+ '00'  
              FROM  dbo.ClaimBatchCharges cbc
                  JOIN dbo.Charges ch ON cbc.ChargeId = ch.ChargeId
                  JOIN dbo.Charges ch2 ON ch.ChargeId = ch2.ChargeId
                                          AND   ch.ClientCoveragePlanId = ch2.ClientCoveragePlanId
                  JOIN dbo.ClaimLineItemCharges AS clic ON clic.ChargeId = ch.ChargeId
                                                           AND  ISNULL(clic.RecordDeleted, 'N') <> 'Y'
                  JOIN dbo.ClaimLineItems AS cli ON cli.ClaimLineItemId = clic.ClaimLineItemId
                                                    AND ISNULL(cli.VoidedClaim, 'N') <> 'Y'
                                                    AND ISNULL(cli.ToBeVoided, 'N') <> 'Y'
                                                    AND ISNULL(cli.RecordDeleted, 'N') <> 'Y'
                                                    AND ISNULL(cli.ToBeResubmitted, 'N') = 'Y' -- to be resubmitted is required.
                                                    AND ISNULL(cli.ResubmittedClaim, 'N') <> 'Y'
                  JOIN dbo.ClaimLineItemGroups AS clig ON clig.ClaimLineItemGroupId = cli.ClaimLineItemGroupId
                                                          AND   ISNULL(clig.RecordDeleted, 'N') <> 'Y'
                  -- this might be redundant because we're already checking to be voided on claim lines
                  --AND NOT EXISTS ( SELECT 1
                  --                 FROM   #ClaimBatchVoids cbv
                  --                 WHERE  cbv.ClaimLineItemGroupId = clig.ClaimLineItemGroupId )
                  JOIN dbo.ClaimBatches AS cb ON cb.ClaimBatchId = clig.ClaimBatchId
                                                 AND ISNULL(cb.RecordDeleted, 'N') <> 'Y'
                                                 AND cb.BilledDate IS NOT NULL
              WHERE
                    cbc.ClaimBatchId = @ClaimBatchId
                    AND ISNULL(cbc.RecordDeleted, 'N') = 'N'
                    AND NOT EXISTS (SELECT  1
                                      FROM  #DeletedCharges AS dc2
                                      WHERE
                                        cbc.ChargeId = dc2.ChargeId)
                    AND NOT EXISTS (SELECT  1
                                      FROM  #RebillCharges AS rc
                                      WHERE
                                        cbc.ChargeId = rc.ChargeId)
              GROUP BY
                  cbc.ChargeId


            DELETE  FROM #RebillCharges
              WHERE
                ChargeId IS NULL



            -- --Select All Charges for this ClaimBatchId  
            SELECT  ChargeId
                  , '1'  AS SubmissionReasonCode
                  , NULL AS PayerClaimControlNumber
                  , NULL AS VoidedClaimLineItemId
            INTO    #a
              FROM  ClaimBatchCharges
              WHERE
                ClaimBatchId = @ClaimBatchId
                AND ISNULL(RecordDeleted, 'N') = 'N'
                AND ChargeId NOT IN(SELECT DISTINCT
                                        ChargeId
                                      FROM  #DeletedChargesSubmitAsVoidOrRebill
                                    UNION ALL
                                    SELECT DISTINCT
                                        ChargeId
                                      FROM  #RebillCharges)
            UNION ALL
            SELECT  a.ChargeId
                  , a.SubmissionReasonCode
                  , NULL AS PayerClaimControlNumber
                  , a.VoidedClaimLineItemId
              FROM  #DeletedChargesSubmitAsVoidOrRebill a
                  JOIN #DeletedCharges b ON a.ChargeId = b.ChargeId
              WHERE
                a.SubmissionReasonCode = '8' --- This creates a void claim with the deleted charge and the associated ClaimLineItemId 
            UNION ALL
            SELECT  ChargeId
                  , SubmissionReasonCode
                  , NULL                 AS PayerClaimControlNumber
                  , VoidedClaimLineItemId
              FROM  #DeletedChargesSubmitAsVoidOrRebill a
              WHERE
                SubmissionReasonCode = '7' --- This creates a Resubmit claim with all the charges in ClaimLineItemId of Deleted charge, except the deleted charge
                AND a.ChargeId NOT IN(SELECT    b.ChargeId
                                        FROM    #DeletedCharges b)
            UNION ALL
            SELECT  ChargeId
                  , '1'                  AS SubmissionReasonCode
                  , NULL                 AS PayerClaimControlNumber
                  , VoidedClaimLineItemId
              FROM  #DeletedChargesSubmitAsVoidOrRebill a
              WHERE
                SubmissionReasonCode = '8' --- This creates a new claim for the charges being sent as void, excluding the deleted charge
                AND a.ChargeId NOT IN(SELECT    b.ChargeId
                                        FROM    #DeletedCharges b)
            UNION ALL
            SELECT  ChargeId
                  , SubmissionReasonCode
                  , NULL                 AS PayerClaimControlNumber
                  , VoidedClaimLineItemId
              FROM  #RebillCharges





            INSERT INTO #Charges(ChargeId
                               , ClientId
                               , ClientLastName
                               , ClientFirstName
                               , ClientMiddleName
                               , ClientSSN
                               , ClientSuffix
                               , ClientDOB
                               , ClientSex
                               , ClientIsSubscriber
                               , SubscriberContactId
                               , MaritalStatus
                               , EmploymentStatus
                                --RegistrationDate, DischargeDate, 
                               , ClientCoveragePlanId
                               , InsuredId
                               , GroupNumber
                               , GroupName
                               , InsuredLastName
                               , InsuredFirstName
                               , InsuredMiddleName
                               , InsuredSuffix
                               , InsuredRelation
                               , InsuredSex
                               , InsuredSSN
                               , InsuredDOB
                               , ServiceId
                               , DateOfService
                               , ProcedureCodeId
                               , ServiceUnits
                               , ServiceUnitType
                               , ProgramId
                               , LocationId
                                --DiagnosisCode1 ,
                                --DiagnosisCode2 ,
                                --DiagnosisCode3 ,
                               , ClinicianId
                               , ClinicianLastName
                               , ClinicianFirstName
                               , ClinicianMiddleName
                               , ClinicianSex
                               , AttendingId
                               , Priority
                               , CoveragePlanId
                               , MedicaidPayer
                               , MedicarePayer
                               , PayerName
                               , PayerAddressHeading
                               , PayerAddress1
                               , PayerAddress2
                               , PayerCity
                               , PayerState
                               , PayerZip
                               , MedicareInsuranceTypeCode
                               , ClaimFilingIndicatorCode
                               , ElectronicClaimsPayerId
                               , ClaimOfficeNumber
                               , SubmissionReasonCode
                               , PayerClaimControlNumber
                               , VoidedClaimLineItemId
                               , ChargeAmount
                               , ReferringId
                               , RevenueCode
                               , InpatientAdmitDate
                               , InpatientDischargedDate
                               , IsICD10Service
                               , ClientInpatientVisitId
                               , BedProcedure
                               , MedicationProcedure
                               , InpatientProgram)
              SELECT DISTINCT
                    a.ChargeId
                  , e.ClientId
                  , e.LastName
                  , e.FirstName
                  , e.MiddleName
                  , e.SSN
                  , e.Suffix
                  , e.DOB
                  , e.Sex
                  , d.ClientIsSubscriber
                  , d.SubscriberContactId
                  , e.MaritalStatus
                  , e.EmploymentStatus
                            --isnull(i.RegistrationDate, i.InitialRequestDate), i.DischargeDate, 
                  , d.ClientCoveragePlanId
                  , REPLACE(REPLACE(d.InsuredId, '-', RTRIM('')), ' ', RTRIM(''))
                  , d.GroupNumber
                  , d.GroupName
                  , CASE
                        WHEN ISNULL(d.ClientIsSubscriber, 'N') = 'N' THEN NULL
                        ELSE e.LastName
                    END
                  , CASE
                        WHEN ISNULL(d.ClientIsSubscriber, 'N') = 'N' THEN NULL
                        ELSE e.FirstName
                    END
                  , CASE
                        WHEN ISNULL(d.ClientIsSubscriber, 'N') = 'N' THEN NULL
                        ELSE e.MiddleName
                    END
                  , CASE
                        WHEN ISNULL(d.ClientIsSubscriber, 'N') = 'N' THEN NULL
                        ELSE e.Suffix
                    END
                  , NULL
                  , CASE
                        WHEN ISNULL(d.ClientIsSubscriber, 'N') = 'N' THEN NULL
                        ELSE e.Sex
                    END
                  , CASE
                        WHEN ISNULL(d.ClientIsSubscriber, 'N') = 'N' THEN NULL
                        ELSE e.SSN
                    END
                  , CASE
                        WHEN ISNULL(d.ClientIsSubscriber, 'N') = 'N' THEN NULL
                        ELSE e.DOB
                    END
                  , c.ServiceId
                  , c.DateOfService
                  , c.ProcedureCodeId
                  , c.Unit
                  , c.UnitType
                  , c.ProgramId
                  , c.LocationId
                            --c.DiagnosisCode1 ,
                            --c.DiagnosisCode2 ,
                            --c.DiagnosisCode3 ,
                  , c.ClinicianId
                  , f.LastName
                  , f.FirstName
                  , f.MiddleName
                  , f.Sex
                  , c.AttendingId
                  , b.Priority
                  , g.CoveragePlanId
                  , g.MedicaidPlan
                  , g.MedicarePlan
                  , g.CoveragePlanName
                  , g.CoveragePlanName
                   , CASE when ISNULL(d.OverrideClaim, 'N') = 'Y' then   
                                CASE WHEN CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress) = 0 THEN d.ClaimAddress    
                                    ELSE SUBSTRING(d.ClaimAddress, 1, CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress) - 1)    
                                    END  
					  else  
					   case when ISNULL(d.OverrideClaim, 'N') = 'N' then   
									CASE WHEN CHARINDEX(CHAR(13) + CHAR(10), g.Address) = 0 THEN g.Address  
										 ELSE SUBSTRING(g.Address, 1, CHARINDEX(CHAR(13) + CHAR(10), g.Address) - 1)  
												 end  
											end  
					END 
                  , CASE when ISNULL(d.OverrideClaim, 'N') = 'Y' then   
							CASE WHEN CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress) = 0 THEN NULL 
							     WHEN CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress, 1 + CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress)) = 0 THEN  
                                      RIGHT(d.ClaimAddress, LEN(d.ClaimAddress) - CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress) - 1)
								ELSE 
								SUBSTRING(  
                                d.ClaimAddress, CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress) + 2  
                              , CHARINDEX(CHAR(13) + CHAR(10), RIGHT(d.ClaimAddress, LEN(d.ClaimAddress) - CHARINDEX(CHAR(13) + CHAR(10), d.ClaimAddress) - 1)) - 1)    
								END  
						  else  
						   case when ISNULL(d.OverrideClaim, 'N') = 'N' then   
								CASE WHEN CHARINDEX(CHAR(13) + CHAR(10), g.Address) = 0 THEN NULL  
									 WHEN CHARINDEX(CHAR(13) + CHAR(10), g.Address, 1 + CHARINDEX(CHAR(13) + CHAR(10), g.Address)) = 0 THEN  
										RIGHT(g.Address, LEN(g.Address) - CHARINDEX(CHAR(13) + CHAR(10), g.Address) - 1)
									 ELSE 
									 SUBSTRING(  
											g.Address, CHARINDEX(CHAR(13) + CHAR(10), g.Address) + 2  
										  , CHARINDEX(CHAR(13) + CHAR(10), RIGHT(g.Address, LEN(g.Address) - CHARINDEX(CHAR(13) + CHAR(10), g.Address) - 1)) - 1)  
											   END  
							  end  
                    END 
                  ,CASE WHEN ISNULL(d.OverrideClaim, 'N') = 'Y' THEN d.ClaimCity ELSE g.City end  
                  , CASE WHEN ISNULL(d.OverrideClaim, 'N') = 'Y' THEN d.ClaimState ELSE g.State end  
                  , CASE WHEN ISNULL(d.OverrideClaim, 'N') = 'Y' THEN d.ClaimZipCode ELSE g.ZipCode end
                  , NULL    /*d.MedicareInsuranceTypg1eCode*/
                  , k.ExternalCode1
                  , CASE WHEN ISNULL(d.OverrideClaim, 'N') = 'Y' THEN d.ElectronicClaimsPayerId ELSE g.ElectronicClaimsPayerId end
                  , CASE
                        WHEN k.ExternalCode1 <> 'CI' THEN NULL
                        ELSE CASE
                                 WHEN RTRIM(g.ElectronicClaimsOfficeNumber) IN ( ''
                                                                               , '0000' ) THEN NULL
                                 ELSE g.ElectronicClaimsOfficeNumber
                             END
                    END
                  , a.SubmissionReasonCode
                  , a.PayerClaimControlNumber
                  , a.VoidedClaimLineItemId
                  , c.Charge
                  , c.ReferringId
                  , b.RevenueCode
                  , CASE
                        WHEN c.ProgramId = m.ProgramId
                             AND CAST(c.DateOfService AS DATE)
                             BETWEEN CAST(l.AdmitDate AS DATE) AND CAST(ISNULL(l.DischargedDate, '12/31/9999') AS DATE) THEN l.AdmitDate
                        ELSE NULL
                    END
                  , CASE
                        WHEN c.ProgramId = m.ProgramId
                             AND CAST(c.DateOfService AS DATE)
                             BETWEEN CAST(l.AdmitDate AS DATE) AND CAST(ISNULL(l.DischargedDate, '12/31/9999') AS DATE) THEN l.DischargedDate
                        ELSE NULL
                    END
                  , CASE
                        WHEN DATEDIFF(DAY, @ICD10StartDate, c.DateOfService) >= 0 THEN 'Y'
                        ELSE 'N'
                    END
                  , CASE
                        WHEN c.ProgramId = m.ProgramId
                             AND CAST(c.DateOfService AS DATE)
                             BETWEEN CAST(l.AdmitDate AS DATE) AND CAST(ISNULL(l.DischargedDate, '12/31/9999') AS DATE) THEN l.ClientInpatientVisitId
                        ELSE NULL
                    END
                  , ISNULL(c2.BedProcedureCode, 'N')
                  , ISNULL(c2.MedicationProcedureCode, 'N')
                  , ISNULL(c1.InpatientProgram, 'N')
              FROM  #a a --ClaimBatchCharges a
                  JOIN Charges b ON(a.ChargeId = b.ChargeId)
                  JOIN Services c ON(b.ServiceId = c.ServiceId)
                  JOIN dbo.Programs c1 ON c1.ProgramId = c.ProgramId
                  JOIN ProcedureCodes c2 ON c2.ProcedureCodeId = c.ProcedureCodeId
                  JOIN ClientCoveragePlans d ON(b.ClientCoveragePlanId = d.ClientCoveragePlanId)
                  JOIN Clients e ON(c.ClientId = e.ClientId)
                  JOIN Staff f ON(c.ClinicianId = f.StaffId)
                  JOIN CoveragePlans g ON(d.CoveragePlanId = g.CoveragePlanId)
                  --LEFT JOIN ClientEpisodes i ON (e.ClientId = i.ClientId and e.CurrentEpisodeNumber = i.EpisodeNumber and isnull(i.RecordDeleted,'N') = 'N')
                  LEFT JOIN GlobalCodes k ON( g.ClaimFilingIndicatorCode = k.GlobalCodeId
                                              AND   ISNULL(k.RecordDeleted, 'N') = 'N')
                  LEFT JOIN ClientInpatientVisits l ON c.ClientId = l.ClientId
                                                       AND  CAST(c.DateOfService AS DATE) >= CAST(l.AdmitDate AS DATE)
                                                       AND  CAST(c.DateOfService AS DATE) <= CAST(ISNULL(l.DischargedDate, '12/31/9999') AS DATE)
                                                       AND  ISNULL(l.RecordDeleted, 'N') = 'N'
                                                       AND  CAST(l.AdmitDate AS DATE) <> CAST(ISNULL(l.DischargedDate, '12/31/9999') AS DATE)
                  LEFT JOIN dbo.BedAssignments m ON m.ClientInpatientVisitId = l.ClientInpatientVisitId
                                                    AND ISNULL(m.RecordDeleted, 'N') = 'N'
                                                    AND m.ProgramId = c.ProgramId
              WHERE --a.ClaimBatchId = @ParmClaimBatchId
                    --AND ISNULL(a.RecordDeleted, 'N') = 'N'
                    ISNULL(b.RecordDeleted, 'N') = 'N'
                    AND ISNULL(c.RecordDeleted, 'N') = 'N'
            --AND ISNULL(c1.RecordDeleted, 'N') = 'N'
            --AND ISNULL(d.RecordDeleted, 'N') = 'N'
            --AND ISNULL(e.RecordDeleted, 'N') = 'N'
            --AND ISNULL(f.RecordDeleted, 'N') = 'N'
            --AND ISNULL(g.RecordDeleted, 'N') = 'N'


            --  SELECT * FROM #Charges

            -- Remove Duplicate entries created due to overlapping inpatient visits
            DELETE a
                FROM    #Charges a
              WHERE
                a.ClientInpatientVisitId IS NULL
                AND EXISTS (SELECT  1
                              FROM  #Charges b
                              WHERE
                                b.ChargeId = a.ChargeId
                                AND b.ClientInpatientVisitId IS NOT NULL)


            -- 7/15/2014 Added logic for Voids and Rebills
            -- Delete any duplicate voided claims  
            DELETE a
                FROM    #Charges a
                    JOIN #Charges b ON a.VoidedClaimLineItemId = b.VoidedClaimLineItemId
              WHERE
                a.SubmissionReasonCode = '8'
                AND b.SubmissionReasonCode = '8'
                AND a.ChargeId > b.ChargeId

            -- For Voided Claims, update Charge Amount to that of the entire voided claim
            UPDATE  a
              SET   a.ChargeAmount = b.ChargeAmount
              FROM  #Charges a
                  JOIN ClaimLineItems b ON a.VoidedClaimLineItemId = b.ClaimLineItemId
              WHERE
                a.SubmissionReasonCode = '8'


            -- Update the Payer Claim Number  
            UPDATE  a
              SET   PayerClaimControlNumber = b.PayerClaimNumber
              FROM  #Charges a
                  JOIN ERClaimLineItems b ON a.VoidedClaimLineItemId = b.ClaimLineItemId
              WHERE
                a.SubmissionReasonCode IN ( '7'
                                          , '8' )



            -- Overwrite the Payer Claim Number from ClaimLineItemGroups
            UPDATE  a
              SET   PayerClaimControlNumber = c.PayerClaimNumber
              FROM  #Charges a
                  JOIN ClaimLineItems b ON a.VoidedClaimLineItemId = b.ClaimLineItemId
                  JOIN dbo.ClaimLineItemGroups c ON c.ClaimLineItemGroupId = b.ClaimLineItemGroupId
              WHERE
                a.SubmissionReasonCode IN ( '7'
                                          , '8' )




            -- Set Registration and Discharge from ClientEpisodes
            UPDATE  ch
              SET   ch.RegistrationDate = ISNULL(ce.RegistrationDate, ce.InitialRequestDate)
                  , ch.DischargeDate = ce.DischargeDate
              FROM  ClientEpisodes ce
                  JOIN #Charges ch ON ch.ClientId = ce.ClientId
              WHERE
                ce.RegistrationDate <= ch.DateOfService
                AND (ce.DischargeDate IS NULL
                     OR DATEADD(dd, 1, ce.DischargeDate) > ch.DateOfService)
                AND ISNULL(ce.RecordDeleted, 'N') = 'N'


            -- Get home address
            UPDATE  ch
              SET   ClientAddress1 = CASE
                                         WHEN CHARINDEX(CHAR(13) + CHAR(10), ca.Address) = 0 THEN ca.Address
                                         ELSE SUBSTRING(ca.Address, 1, CHARINDEX(CHAR(13) + CHAR(10), ca.Address) - 1)
                                     END
                  , ClientAddress2 = CASE
                                         WHEN CHARINDEX(CHAR(13) + CHAR(10), ca.Address) = 0 THEN NULL
                                         ELSE RIGHT(ca.Address, LEN(ca.Address) - CHARINDEX(CHAR(13) + CHAR(10), ca.Address) - 1)
                                     END
                  , ClientCity = ca.City
                  , ClientState = ca.State
                  , ClientZip = ca.Zip
                  , InsuredAddress1 = CASE
                                          WHEN CHARINDEX(CHAR(13) + CHAR(10), ca.Address) = 0 THEN ca.Address
                                          ELSE SUBSTRING(ca.Address, 1, CHARINDEX(CHAR(13) + CHAR(10), ca.Address) - 1)
                                      END
                  , InsuredAddress2 = CASE
                                          WHEN CHARINDEX(CHAR(13) + CHAR(10), ca.Address) = 0 THEN NULL
                                          ELSE RIGHT(ca.Address, LEN(ca.Address) - CHARINDEX(CHAR(13) + CHAR(10), ca.Address) - 1)
                                      END
                  , InsuredCity = ca.City
                  , InsuredState = ca.State
                  , InsuredZip = ca.Zip
              FROM  #Charges ch
                  JOIN ClientAddresses ca ON ca.ClientId = ch.ClientId
              WHERE
                ca.AddressType = 90
                AND ISNULL(ca.RecordDeleted, 'N') = 'N'



            -- Get home phone
            UPDATE  ch
              SET   ClientHomePhone = SUBSTRING(
                                          REPLACE(REPLACE(REPLACE(REPLACE(cp.PhoneNumberText, ' ', RTRIM('')), '(', RTRIM('')), ')', RTRIM('')), '-', RTRIM(''))
                                        , 1, 10)
                  , InsuredHomePhone = SUBSTRING(
                                           REPLACE(
                                               REPLACE(REPLACE(REPLACE(cp.PhoneNumberText, ' ', RTRIM('')), '(', RTRIM('')), ')', RTRIM('')), '-', RTRIM(''))
                                         , 1, 10)
              FROM  #Charges ch
                  JOIN ClientPhones cp ON cp.ClientId = ch.ClientId
              WHERE
                cp.PhoneType = 30
                AND cp.IsPrimary = 'Y'
                AND ISNULL(cp.RecordDeleted, 'N') = 'N'



            UPDATE  ch
              SET   ClientHomePhone = SUBSTRING(
                                          REPLACE(REPLACE(REPLACE(REPLACE(cp.PhoneNumberText, ' ', RTRIM('')), '(', RTRIM('')), ')', RTRIM('')), '-', RTRIM(''))
                                        , 1, 10)
                  , InsuredHomePhone = SUBSTRING(
                                           REPLACE(
                                               REPLACE(REPLACE(REPLACE(cp.PhoneNumberText, ' ', RTRIM('')), '(', RTRIM('')), ')', RTRIM('')), '-', RTRIM(''))
                                         , 1, 10)
              FROM  #Charges ch
                  JOIN ClientPhones cp ON cp.ClientId = ch.ClientId
              WHERE
                ch.ClientHomePhone IS NULL
                AND cp.PhoneType = 30
                AND ISNULL(cp.RecordDeleted, 'N') = 'N'



            -- Get insured information, 
            UPDATE  a
              SET   InsuredLastName = b.LastName
                  , InsuredFirstName = b.FirstName
                  , InsuredMiddleName = b.MiddleName
                  , InsuredSuffix = b.Suffix
                  , InsuredRelation = b.Relationship
                  , InsuredAddress1 = CASE
                                          WHEN CHARINDEX(CHAR(13) + CHAR(10), c.Address) = 0 THEN c.Address
                                          ELSE SUBSTRING(c.Address, 1, CHARINDEX(CHAR(13) + CHAR(10), c.Address) - 1)
                                      END
                  , InsuredAddress2 = CASE
                                          WHEN CHARINDEX(CHAR(13) + CHAR(10), c.Address) = 0 THEN NULL
                                          ELSE RIGHT(c.Address, LEN(c.Address) - CHARINDEX(CHAR(13) + CHAR(10), c.Address) - 1)
                                      END
                  , InsuredCity = c.City
                  , InsuredState = c.State
                  , InsuredZip = c.Zip
                  , InsuredHomePhone = SUBSTRING(
                                           REPLACE(REPLACE(REPLACE(REPLACE(d.PhoneNumberText, ' ', RTRIM('')), '(', RTRIM('')), ')', RTRIM('')), '-', RTRIM(''))
                                         , 1, 10)
                  , InsuredSex = b.Sex
                  , InsuredSSN = b.SSN
                  , InsuredDOB = b.DOB
              FROM  #Charges a
                  JOIN ClientContacts b ON(a.SubscriberContactId = b.ClientContactId)
                  LEFT JOIN ClientContactAddresses c ON( b.ClientContactId = c.ClientContactId
                                                         AND c.AddressType = 90
                                                         AND ISNULL(c.RecordDeleted, 'N') <> 'Y')
                  LEFT JOIN ClientContactPhones d ON( b.ClientContactId = d.ClientContactId
                                                      AND   d.PhoneType = 30
                                                      AND   ISNULL(d.RecordDeleted, 'N') <> 'Y')
              WHERE
                ISNULL(b.RecordDeleted, 'N') <> 'Y'
            --LEFT JOIN CustomClientContacts e ON (b.ClientContactId = e.ClientContactId)



            -- Get Place Of Service
            UPDATE  a
              SET   PlaceOfService = ISNULL(s.PlaceOfServiceId, b.PlaceOfService)
                  , PlaceOfServiceCode = ISNULL(t.ExternalCode2, c.ExternalCode1)
              FROM  #Charges a
                  LEFT JOIN Services s ON(a.ServiceId = s.ServiceId)
                  LEFT JOIN GlobalCodes t ON(s.PlaceOfServiceId = t.GlobalCodeId)
                  LEFT JOIN Locations b ON(a.LocationId = b.LocationId)
                  LEFT JOIN GlobalCodes c ON(b.PlaceOfService = c.GlobalCodeId)

            -- Update Authorization Number for Service
            UPDATE  a
              SET   AuthorizationId = c.AuthorizationId
                  , AuthorizationNumber = c.AuthorizationNumber
              FROM  #Charges a
                  JOIN ServiceAuthorizations b ON( a.ServiceId = b.ServiceId
                                                   AND  a.ClientCoveragePlanId = b.ClientCoveragePlanId)
                  JOIN Authorizations c ON(b.AuthorizationId = c.AuthorizationId)



            -- determine tax id, billing provider id, rendering provider id
            UPDATE  a
              SET   AgencyName = b.AgencyName
                  , PaymentAddress1 = CASE
                                          WHEN CHARINDEX(CHAR(13) + CHAR(10), b.PaymentAddress) = 0 THEN b.PaymentAddress
                                          ELSE SUBSTRING(b.PaymentAddress, 1, CHARINDEX(CHAR(13) + CHAR(10), b.PaymentAddress) - 1)
                                      END
                  , PaymentAddress2 = CASE
                                          WHEN CHARINDEX(CHAR(13) + CHAR(10), b.PaymentAddress) = 0 THEN NULL
                                          ELSE RIGHT(b.PaymentAddress, LEN(b.PaymentAddress) - CHARINDEX(CHAR(13) + CHAR(10), b.PaymentAddress) - 1)
                                      END
                  , PaymentCity = b.PaymentCity
                  , PaymentState = b.PaymentState
                  , PaymentZip = b.PaymentZip
                    --PaymentPhone = SUBSTRING(REPLACE(REPLACE(b.BillingPhone, ' ', RTRIM('')), '-', RTRIM('')), 1, 10)
                  , PaymentPhone = SUBSTRING(
                                       REPLACE(REPLACE(REPLACE(REPLACE(b.BillingPhone, ' ', RTRIM('')), '-', RTRIM('')), '(', RTRIM('')), ')', RTRIM('')), 1
                                     , 10)
              FROM  #Charges a
                  CROSS JOIN Agency b


            -- Custom Updates
            SELECT  @Bookmark = 'EXEC scsp_PMClaims837UpdateCharges'
            EXEC scsp_PMClaims837UpdateCharges @CurrentUser = @ParmCurrentUser
                                             , @ClaimBatchId = @ParmClaimBatchId
                                             , @FormatType = @FormatType


            /* relocated from above */
            --NJain Added 2/4, 
            UPDATE  a
              SET   PlaceOfService = ISNULL(b.FacilityType, a.PlaceOfService)
                  , PlaceOfServiceCode = ISNULL(gc.ExternalCode1, a.PlaceOfServiceCode)
              FROM  #Charges a
                  LEFT JOIN Programs b ON( a.ProgramId = b.ProgramId
                                           AND  a.InpatientAdmitDate IS NOT NULL
                                           AND  ISNULL(b.RecordDeleted, 'N') = 'N')
                  LEFT JOIN GlobalCodes gc ON(b.FacilityType = gc.GlobalCodeId)


            UPDATE  a
              SET   PlaceOfService = 0
                  , PlaceOfServiceCode = '21'
              FROM  #Charges a
              WHERE
                PlaceOfService IS NULL


            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 10
              WHERE
                ClaimBatchId = @ParmClaimBatchId



            -- Determine Billing and  Rendering Provider Ids
            SELECT  @Bookmark = 'EXEC ssp_PMClaimsGetProviderIds'
            EXEC ssp_PMClaimsGetProviderIds


            UPDATE  a
              SET   RenderingProviderTaxonomyCode = c.ExternalCode1
              FROM  #Charges a
                  JOIN Staff b ON(a.ClinicianId = b.StaffId)
                  JOIN GlobalCodes c ON(b.TaxonomyCode = c.GlobalCodeId)
              WHERE
                RenderingProviderId IS NOT NULL


            -- Added 8/19/2015 -- Removed 10/1/2015 .. Get From IP Coding Document
            --UPDATE  a
            --SET     AttendingId = b.PrimaryPhysicianId
            --FROM    #Charges a
            --        JOIN Clients b ON b.ClientId = a.ClientId


            UPDATE  a
              SET   AttendingProviderTaxonomyCode = c.ExternalCode1
              FROM  #Charges a
                  JOIN Staff b ON(a.AttendingId = b.StaffId)
                  JOIN GlobalCodes c ON(b.TaxonomyCode = c.GlobalCodeId)
              WHERE
                AttendingProviderId IS NOT NULL

            --SELECT * FROM #Charges

            -- determine expected payment
            --EXEC ssp_PMClaimsGetExpectedPayments



            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 20
              WHERE
                ClaimBatchId = @ParmClaimBatchId



            -- 7/22/2015 Allowed Amount Update
            UPDATE  a
              SET   ChargeAmount = a.ChargeAmount - (CASE
                                                         WHEN ISNULL(b.ExpectedAdjustment, 0) > a.ChargeAmount THEN a.ChargeAmount
                                                         ELSE ISNULL(b.ExpectedAdjustment, 0)
                                                     END)
              FROM  #Charges a
                  JOIN dbo.Charges b ON b.ChargeId = a.ChargeId
                  JOIN CoveragePlans c ON c.CoveragePlanId = a.CoveragePlanId
              WHERE
                ISNULL(c.SendAllowedAmountOnClaims, 'N') = 'Y'



            -- Move Billing Code Calculation logic to before grouping of claims

            SET IDENTITY_INSERT #ClaimLines ON



            INSERT INTO #ClaimLines(ClaimLineId
                                  , ServiceId
                                  , ServiceUnits
                                  , ChargeId
                                  , CoveragePlanId)
              SELECT    ChargeId
                      , ServiceId
                      , ServiceUnits
                      , ChargeId
                      , CoveragePlanId
              FROM  #Charges



            SET IDENTITY_INSERT #ClaimLines OFF


            -- Get Billing Codes
            SELECT  @Bookmark = 'EXEC ssp_PMClaimsGetBillingCodes'
            EXEC ssp_PMClaimsGetBillingCodes

            UPDATE  a
              SET   BillingCode = b.BillingCode
                  , Modifier1 = b.Modifier1
                  , Modifier2 = b.Modifier2
                  , Modifier3 = b.Modifier3
                  , Modifier4 = b.Modifier4
                  , RevenueCode = b.RevenueCode
                  , RevenueCodeDescription = b.RevenueCodeDescription
                  , ClaimUnits = b.ClaimUnits
              FROM  #Charges a
                  JOIN #ClaimLines b ON(a.ChargeId = b.ClaimLineId)



            DELETE  FROM #ClaimLines


            -- Added 7/15/2014 Voids & Rebills logic
            -- Override Billing Code/Modifier on charges where we are sending voids  
            UPDATE  a
              SET   BillingCode = b.BillingCode
                  , Modifier1 = b.Modifier1
                  , Modifier2 = b.Modifier2
                  , Modifier3 = b.Modifier3
                  , Modifier4 = b.Modifier4
                  , RevenueCode = b.RevenueCode
                  , RevenueCodeDescription = b.RevenueCodeDescription
                  , ClaimUnits = b.Units
                  , ChargeAmount = b.ChargeAmount
              FROM  #Charges a
                  JOIN ClaimLineItems b ON a.VoidedClaimLineItemId = b.ClaimLineItemId
              WHERE
                a.SubmissionReasonCode = '8'






            -- Combine charges logic
            DECLARE @ExecuteCombineChargesSCSP CHAR(1) = 'N'
            IF EXISTS (SELECT   *
                         FROM   sys.objects
                         WHERE
                            name = 'scsp_PMClaims837CombineCharges'
                            AND type = 'P')
                BEGIN
                    EXEC scsp_PMClaims837CombineCharges @CurrentUser = @ParmCurrentUser
                                                      , @ClaimFormatId = @ClaimFormatId
                                                      , @ClaimBatchId = @ParmClaimBatchId
                                                      , @FormatType = @FormatType
                                                      , @ExecuteCombineChargesSCSP = @ExecuteCombineChargesSCSP OUTPUT
                END
            --#EH!INFO!ADD!@ExecuteCombineChargesSCSP!
            IF @ExecuteCombineChargesSCSP = 'N'
                BEGIN


                    -- Adding following 2 updates in this scsp loop, can be overwritten with custom logic                
                    -- For the same IP Admission, set ClaimFrequencyCode & PayerClaimNumber value to same
                    UPDATE  a
                      SET   PayerClaimControlNumber = b.PayerClaimControlNumber
                          , SubmissionReasonCode = b.SubmissionReasonCode
                      FROM  #Charges a
                          JOIN #Charges b ON b.ClientInpatientVisitId = a.ClientInpatientVisitId
                      WHERE
                        a.SubmissionReasonCode NOT IN ( '7'
                                                      , '8' )
                        AND b.SubmissionReasonCode IN ( '7' )
                        AND a.ClientInpatientVisitId IS NOT NULL

                    -- For the same IP Admission, if there is more than one record due to Payer Claim Number
                    UPDATE  a
                      SET   PayerClaimControlNumber = b.PayerClaimControlNumber
                      FROM  #Charges a
                          JOIN #Charges b ON b.ClientInpatientVisitId = a.ClientInpatientVisitId
                      WHERE
                        ISNULL(a.PayerClaimControlNumber, '') = ''
                        AND ISNULL(b.PayerClaimControlNumber, '') <> ''
                        AND a.ClientInpatientVisitId IS NOT NULL


                    -- Identify Continuous days, by default bundle together until new column is added

                    SELECT DISTINCT
                        ClientId
                      , ClientInpatientVisitId
                      , RevenueCode
                      , RevenueCodeDescription
                      , BillingCode
                      , Modifier1
                      , Modifier2
                      , Modifier3
                      , Modifier4
                      , MIN(DateOfService)       AS MinDateOfService
                      , MAX(DateOfService)       AS MaxDateOfService
                      , COUNT(DISTINCT ChargeId) AS ChargeCount
                    INTO    #CountIPDays
                      FROM  #Charges
                      WHERE
                        InpatientAdmitDate IS NOT NULL
                      GROUP BY
                        ClientId
                      , ClientInpatientVisitId
                      , RevenueCode
                      , RevenueCodeDescription
                      , BillingCode
                      , Modifier1
                      , Modifier2
                      , Modifier3
                      , Modifier4



                    CREATE TABLE #Groups (
                        ChargeId                    INT
                      , ClaimFormatId               INT
                      , CoveragePlanId              INT
                      , BillingProviderIdGroup      VARCHAR(35)
                      , RenderingProviderIdGroup    VARCHAR(35)
                      , ClinicianIdGroup            INT
                      , ProcedureCodeIdGroup        INT
                      , ClientIdGroup               INT
                      , AuthorizationIdGroup        VARCHAR(100)
                      , DateOfServiceGroup          DATETIME
                      , ClientCoveragePlanIdGroup   INT
                      , PlaceOfServiceGroup         INT
                      , SubmissionReasonCodeGroup   CHAR(1)
                      , BillingCodeGroup            VARCHAR(15)
                      , Modifier1Group              VARCHAR(2)
                      , Modifier2Group              VARCHAR(2)
                      , Modifier3Group              VARCHAR(2)
                      , Modifier4Group              VARCHAR(2)
                      , GroupIdGroup                INT
                      , RevenueCodeGroup            VARCHAR(15)
                      , RevenueCodeDescriptionGroup VARCHAR(15)
                      , InpatientAdmitDateGroup     DATETIME
                      , IsICD10Service              CHAR(1)
                      , BedProcedure                CHAR(1)
                      , MedicationProcedure         CHAR(1)
                      , ClientInpatientVisitId      INT
                      , InpatientProgram            CHAR(1)
                      , NonConsecutiveDaysExist     CHAR(1)
					  , MedicalRecordNumberGroup	VARCHAR(30)
                    )

                    INSERT INTO #Groups(ChargeId
                                      , ClaimFormatId
                                      , CoveragePlanId
                                      , BillingProviderIdGroup
                                      , RenderingProviderIdGroup
                                      , ClinicianIdGroup
                                      , ProcedureCodeIdGroup
                                      , ClientIdGroup
                                      , AuthorizationIdGroup
                                      , DateOfServiceGroup
                                      , ClientCoveragePlanIdGroup
                                      , PlaceOfServiceGroup
                                      , SubmissionReasonCodeGroup
                                      , BillingCodeGroup
                                      , Modifier1Group
                                      , Modifier2Group
                                      , Modifier3Group
                                      , Modifier4Group
                                      , GroupIdGroup
                                      , RevenueCodeGroup
                                      , RevenueCodeDescriptionGroup
                                      , InpatientAdmitDateGroup
                                      , IsICD10Service
                                      , BedProcedure
                                      , MedicationProcedure
                                      , ClientInpatientVisitId
                                      , InpatientProgram
                                      , NonConsecutiveDaysExist
									  , MedicalRecordNumberGroup)
                      SELECT DISTINCT
                            a.ChargeId
                          , @ClaimFormatId
                          , a.CoveragePlanId
                          , a.BillingProviderId
                          , a.RenderingProviderId
                          , a.ClinicianId
                          , a.ProcedureCodeId
                          , a.ClientId
                          , a.AuthorizationNumber
                          , a.DateOfService
                          , a.ClientCoveragePlanId
                          , a.PlaceOfService
                          , a.SubmissionReasonCode
                          , a.BillingCode
                          , a.Modifier1
                          , a.Modifier2
                          , a.Modifier3
                          , a.Modifier4
                          , a.GroupId
                          , a.RevenueCode
                          , a.RevenueCodeDescription
                          , a.InpatientAdmitDate
                          , a.IsICD10Service
                          , ISNULL(b.BedProcedureCode, 'N')
                          , ISNULL(b.MedicationProcedureCode, 'N')
                          , a.ClientInpatientVisitId
                          , a.InpatientProgram
                          , 'N'
						  , a.MedicalRecordNumber
                        --CASE WHEN ISNULL(DATEDIFF(dd, c.MinDateOfService, c.MaxDateOfService) + 1, 0) <> ISNULL(c.ChargeCount, 0) THEN 'Y'
                      --     ELSE 'N'
                      --END
                      FROM  #Charges a
                          LEFT JOIN dbo.ProcedureCodes b ON b.ProcedureCodeId = a.ProcedureCodeId
                          LEFT JOIN #CountIPDays c ON c.ClientInpatientVisitId = a.ClientInpatientVisitId
                                                      AND   ISNULL(c.RevenueCode, '') = ISNULL(a.RevenueCode, '')
                                                      AND   ISNULL(c.RevenueCodeDescription, '') = ISNULL(a.RevenueCodeDescription, '')
                                                      AND   ISNULL(c.BillingCode, '') = ISNULL(a.BillingCode, '')
                                                      AND   ISNULL(c.Modifier1, '') = ISNULL(a.Modifier1, '')
                                                      AND   ISNULL(c.Modifier2, '') = ISNULL(a.Modifier2, '')
                                                      AND   ISNULL(c.Modifier3, '') = ISNULL(a.Modifier3, '')
                                                      AND   ISNULL(c.Modifier4, '') = ISNULL(a.Modifier4, '')

                    -- If Group by DOS = N and its a Bed Procedure, then ignore Date Of Service, else consider it                    

                    --SELECT * FROM #Groups ORDER BY ClientIdGroup

                    UPDATE  a
                      SET   a.BillingProviderIdGroup = CASE
                                                           WHEN ISNULL(b.BillingProviderId, 'N') = 'N' THEN NULL
                                                           ELSE a.BillingProviderIdGroup
                                                       END
                          , a.RenderingProviderIdGroup = CASE
                                                             WHEN ISNULL(b.RenderingProviderId, 'N') = 'N' THEN NULL
                                                             ELSE a.RenderingProviderIdGroup
                                                         END
                          , a.ClinicianIdGroup = CASE
                                                     WHEN ISNULL(b.ClinicianId, 'N') = 'N' THEN NULL
                                                     ELSE a.ClinicianIdGroup
                                                 END
                          , a.ProcedureCodeIdGroup = CASE
                                                         WHEN ISNULL(b.ProcedureCodeId, 'N') = 'N' THEN NULL
                                                         ELSE a.ProcedureCodeIdGroup
                                                     END
                          , a.ClientIdGroup = CASE
                                                  WHEN ISNULL(b.ClientId, 'N') = 'N' THEN NULL
                                                  ELSE a.ClientIdGroup
                                              END
                          , a.AuthorizationIdGroup = CASE
                                                         WHEN ISNULL(b.AuthorizationId, 'N') = 'N' THEN NULL
                                                         ELSE a.AuthorizationIdGroup
                                                     END
                          , a.DateOfServiceGroup = CASE
                                                       WHEN a.InpatientProgram = 'Y'
                                                            AND ClientInpatientVisitId IS NOT NULL THEN NULL
                                                       WHEN a.InpatientProgram = 'N'
                                                            AND ClientInpatientVisitId IS NOT NULL
                                                            AND (a.BedProcedure = 'Y'
                                                                 OR a.MedicationProcedure = 'Y')
                                                            AND a.NonConsecutiveDaysExist = 'N' THEN NULL
                                                       ELSE a.DateOfServiceGroup
                                                   END
                          , a.ClientCoveragePlanIdGroup = CASE
                                                              WHEN ISNULL(b.ClientCoveragePlanId, 'N') = 'N' THEN NULL
                                                              ELSE a.ClientCoveragePlanIdGroup
                                                          END
                          , a.PlaceOfServiceGroup = CASE
                                                        WHEN ISNULL(b.PlaceOfService, 'N') = 'N' THEN NULL
                                                        ELSE a.PlaceOfServiceGroup
                                                    END
                          , a.SubmissionReasonCodeGroup = CASE
                                                              WHEN ISNULL(b.SubmissionReasonCode, 'N') = 'N' THEN NULL
                                                              ELSE a.SubmissionReasonCodeGroup
                                                          END
                          , a.BillingCodeGroup = CASE
                                                     WHEN ISNULL(b.BillingCode, 'N') = 'N' THEN NULL
                                                     ELSE a.BillingCodeGroup
                                                 END
                          , a.Modifier1Group = CASE
                                                   WHEN ISNULL(b.Modifier1, 'N') = 'N' THEN NULL
                                                   ELSE a.Modifier1Group
                                               END
                          , a.Modifier2Group = CASE
                                                   WHEN ISNULL(b.Modifier2, 'N') = 'N' THEN NULL
                                                   ELSE a.Modifier2Group
                                               END
                          , a.Modifier3Group = CASE
                                                   WHEN ISNULL(b.Modifier3, 'N') = 'N' THEN NULL
                                                   ELSE a.Modifier3Group
                                               END
                          , a.Modifier4Group = CASE
                                                   WHEN ISNULL(b.Modifier4, 'N') = 'N' THEN NULL
                                                   ELSE a.Modifier4Group
                                               END
                          , a.GroupIdGroup = CASE
                                                 WHEN ISNULL(b.GroupId, 'N') = 'N' THEN NULL
                                                 ELSE a.GroupIdGroup
                                             END
                          , a.RevenueCodeGroup = CASE
                                                     WHEN ISNULL(b.RevenueCode, 'N') = 'N' THEN NULL
                                                     ELSE a.RevenueCodeGroup
                                                 END
                          , a.RevenueCodeDescriptionGroup = CASE
                                                                WHEN ISNULL(b.RevenueCodeDescription, 'N') = 'N' THEN NULL
                                                                ELSE a.RevenueCodeDescriptionGroup
                                                            END
                          , a.InpatientAdmitDateGroup = CASE
                                                            WHEN ISNULL(b.InpatientAdmitDate, 'N') = 'N' THEN NULL
                                                            ELSE a.InpatientAdmitDateGroup
                                                        END
                          , a.IsICD10Service = a.IsICD10Service
                      FROM  #Groups a
                          JOIN CoveragePlanClaimGroupingCriteria b ON a.ClaimFormatId = b.ClaimFormatId
                                                                      AND   a.CoveragePlanId = b.CoveragePlanId
                      WHERE
                        ISNULL(b.RecordDeleted, 'N') = 'N'



                    INSERT INTO #ClaimLines(BillingProviderId
                                          , RenderingProviderId
                                          , ClientId
                                          , ClinicianId
                                          , AuthorizationNumber
                                          , ProcedureCodeId
                                          , DateOfService
                                          , ClientCoveragePlanId
                                          , PlaceOfService
                                          , ServiceUnits
                                          , ChargeAmount
                                          , ChargeId
                                          , SubmissionReasonCode
                                          , BillingCode
                                          , Modifier1
                                          , Modifier2
                                          , Modifier3
                                          , Modifier4
                                          , GroupId
                                          , RevenueCode
                                          , RevenueCodeDescription
                                          , ClaimUnits
                                          , InpatientAdmitDate
                                          , IsICD10Service
										  , MedicalRecordNumber)
                      SELECT    b.BillingProviderIdGroup
                              , b.RenderingProviderIdGroup
                              , b.ClientIdGroup
                              , b.ClinicianIdGroup
                              , b.AuthorizationIdGroup
                              , b.ProcedureCodeIdGroup
                              , CONVERT(DATETIME, CONVERT(VARCHAR, b.DateOfServiceGroup, 101))
                              , b.ClientCoveragePlanIdGroup
                              , b.PlaceOfServiceGroup
                              , SUM(a.ServiceUnits)
                              , SUM(a.ChargeAmount)
                              , MAX(a.ChargeId)
                              , b.SubmissionReasonCodeGroup
                              , b.BillingCodeGroup
                              , b.Modifier1Group
                              , b.Modifier2Group
                              , b.Modifier3Group
                              , b.Modifier4Group
                              , b.GroupIdGroup
                              , b.RevenueCodeGroup
                              , b.RevenueCodeDescriptionGroup
                              , SUM(a.ClaimUnits)
                              , b.InpatientAdmitDateGroup
                              , b.IsICD10Service
							  , b.MedicalRecordNumberGroup
                      FROM  #Charges a
                          JOIN #Groups b ON a.ChargeId = b.ChargeId
                      GROUP BY
                          b.BillingProviderIdGroup
                        , b.RenderingProviderIdGroup
                        , b.ClientIdGroup
                        , b.ClinicianIdGroup
                        , b.AuthorizationIdGroup
                        , b.ProcedureCodeIdGroup
                        , b.ClientCoveragePlanIdGroup
                        , b.PlaceOfServiceGroup
                        , b.SubmissionReasonCodeGroup
                        , b.BillingCodeGroup
                        , b.Modifier1Group
                        , b.Modifier2Group
                        , b.Modifier3Group
                        , b.Modifier4Group
                        , b.GroupIdGroup
                        , CONVERT(DATETIME, CONVERT(VARCHAR, b.DateOfServiceGroup, 101))
                        , b.RevenueCodeGroup
                        , b.RevenueCodeDescriptionGroup
                        , b.InpatientAdmitDateGroup
                        , b.IsICD10Service
						, b.MedicalRecordNumberGroup

                    --SELECT * FROM #ClaimLines ORDER BY ClientId

                    UPDATE  a
                      SET   ClaimLineId = b.ClaimLineId
                      FROM  #Charges a
                          JOIN #Groups g ON(a.ChargeId = g.ChargeId)
                          JOIN #ClaimLines b ON ISNULL(b.BillingProviderId, '') = ISNULL(g.BillingProviderIdGroup, '')
                                                AND ISNULL(b.RenderingProviderId, '') = ISNULL(g.RenderingProviderIdGroup, '')
                                                AND ISNULL(b.ClientId, '') = ISNULL(g.ClientIdGroup, '')
                                                AND ISNULL(b.ClinicianId, '') = ISNULL(g.ClinicianIdGroup, '')
                                                AND ISNULL(b.AuthorizationNumber, '') = ISNULL(g.AuthorizationIdGroup, '')
                                                AND ISNULL(b.ProcedureCodeId, '') = ISNULL(g.ProcedureCodeIdGroup, '')
                                                AND ISNULL(CONVERT(DATETIME, CONVERT(VARCHAR, b.DateOfService, 101)), '') = ISNULL(
                                                                                                                                CONVERT(
                                                                                                                                    DATETIME
                                                                                                                                  , CONVERT(
                                                                                                                                        VARCHAR
                                                                                                                                      , g.DateOfServiceGroup
                                                                                                                                      , 101)), '')
                                                AND ISNULL(b.ClientCoveragePlanId, '') = ISNULL(g.ClientCoveragePlanIdGroup, '')
                                                AND ISNULL(b.PlaceOfService, '') = ISNULL(g.PlaceOfServiceGroup, '')
                                                AND ISNULL(b.SubmissionReasonCode, '') = ISNULL(g.SubmissionReasonCodeGroup, '')
                                                AND ISNULL(b.BillingCode, '') = ISNULL(g.BillingCodeGroup, '')
                                                AND ISNULL(b.Modifier1, '') = ISNULL(g.Modifier1Group, '')
                                                AND ISNULL(b.Modifier2, '') = ISNULL(g.Modifier2Group, '')
                                                AND ISNULL(b.Modifier3, '') = ISNULL(g.Modifier3Group, '')
                                                AND ISNULL(b.Modifier4, '') = ISNULL(g.Modifier4Group, '')
                                                AND ISNULL(b.GroupId, '') = ISNULL(g.GroupIdGroup, '')
                                                AND ISNULL(b.RevenueCode, '') = ISNULL(g.RevenueCodeGroup, '')
                                                AND ISNULL(b.RevenueCodeDescription, '') = ISNULL(g.RevenueCodeDescriptionGroup, '')
                                                AND ISNULL(b.InpatientAdmitDate, '') = ISNULL(g.InpatientAdmitDateGroup, '')
                                                AND ISNULL(b.IsICD10Service, '') = ISNULL(g.IsICD10Service, '')
												AND ISNULL(b.MedicalRecordNumber, '') = ISNULL(g.MedicalRecordNumberGroup, '') 

                END

            UPDATE  a
              SET   ClientId = b.ClientId
                  , ClientLastName = b.ClientLastName
                  , ClientFirstName = b.ClientFirstName
                  , ClientMiddleName = b.ClientMiddleName
                  , ClientSSN = b.ClientSSN
                  , ClientSuffix = b.ClientSuffix
                  , ClientAddress1 = b.ClientAddress1
                  , ClientAddress2 = b.ClientAddress2
                  , ClientCity = b.ClientCity
                  , ClientState = b.ClientState
                  , ClientZip = b.ClientZip
                  , ClientHomePhone = b.ClientHomePhone
                  , ClientDOB = b.ClientDOB
                  , ClientSex = b.ClientSex
                  , ClientIsSubscriber = b.ClientIsSubscriber
                  , SubscriberContactId = b.SubscriberContactId
                  , MaritalStatus = b.MaritalStatus
                  , EmploymentStatus = b.EmploymentStatus
                  , RegistrationDate = b.RegistrationDate
                  , DischargeDate = b.DischargeDate
                  , InsuredId = b.InsuredId
                  , GroupNumber = b.GroupNumber
                  , GroupName = b.GroupName
                  , InsuredLastName = b.InsuredLastName
                  , InsuredFirstName = b.InsuredFirstName
                  , InsuredMiddleName = b.InsuredMiddleName
                  , InsuredSuffix = b.InsuredSuffix
                  , InsuredRelation = b.InsuredRelation
                  , InsuredAddress1 = b.InsuredAddress1
                  , InsuredAddress2 = b.InsuredAddress2
                  , InsuredCity = b.InsuredCity
                  , InsuredState = b.InsuredState
                  , InsuredZip = b.InsuredZip
                  , InsuredHomePhone = b.InsuredHomePhone
                  , InsuredSex = b.InsuredSex
                  , InsuredSSN = b.InsuredSSN
                  , InsuredDOB = b.InsuredDOB
                  , ServiceId = b.ServiceId
                  , ServiceUnitType = b.ServiceUnitType
                  , ProgramId = b.ProgramId
                  , LocationId = b.LocationId
                  , PayerClaimControlNumber = b.PayerClaimControlNumber
                  , ClinicianId = b.ClinicianId
                  , ClinicianLastName = b.ClinicianLastName
                  , ClinicianFirstName = b.ClinicianFirstName
                  , ClinicianMiddleName = b.ClinicianMiddleName
                  , ClinicianSex = b.ClinicianSex
                  , AttendingId = b.AttendingId
                  , Priority = b.Priority
                  , CoveragePlanId = b.CoveragePlanId
                  , MedicaidPayer = b.MedicaidPayer
                  , MedicarePayer = b.MedicarePayer
                  , PayerName = b.PayerName
                  , PayerAddressHeading = b.PayerAddressHeading
                  , PayerAddress1 = b.PayerAddress1
                  , PayerAddress2 = b.PayerAddress2
                  , PayerCity = b.PayerCity
                  , PayerState = b.PayerState
                  , PayerZip = b.PayerZip
                  , MedicareInsuranceTypeCode = b.MedicareInsuranceTypeCode
                  , ClaimFilingIndicatorCode = b.ClaimFilingIndicatorCode
                  , ElectronicClaimsPayerId = b.ElectronicClaimsPayerId
                  , ClaimOfficeNumber = b.ClaimOfficeNumber
                  , AuthorizationId = b.AuthorizationId
                  , PlaceOfServiceCode = b.PlaceOfServiceCode
                  , AgencyName = b.AgencyName
                  , PaymentAddress1 = b.PaymentAddress1
                  , PaymentAddress2 = b.PaymentAddress2
                  , PaymentCity = b.PaymentCity
                  , PaymentState = b.PaymentState
                  , PaymentZip = b.PaymentZip
                  , PaymentPhone = b.PaymentPhone
                  , BillingProviderTaxIdType = b.BillingProviderTaxIdType
                  , BillingProviderTaxId = b.BillingProviderTaxId
                  , BillingProviderIdType = b.BillingProviderIdType
                    --BillingProviderId = b.BillingProviderId ,
                  , BillingTaxonomyCode = b.BillingTaxonomyCode
                  , BillingProviderLastName = b.BillingProviderLastName
                  , BillingProviderFirstName = b.BillingProviderFirstName
                  , BillingProviderMiddleName = b.BillingProviderMiddleName
                  , BillingProviderNPI = b.BillingProviderNPI
                  , PayToProviderTaxIdType = b.PayToProviderTaxIdType
                  , PayToProviderTaxId = b.PayToProviderTaxId
                  , PayToProviderIdType = b.PayToProviderIdType
                  , PayToProviderId = b.PayToProviderId
                  , PayToProviderLastName = b.PayToProviderLastName
                  , PayToProviderFirstName = b.PayToProviderFirstName
                  , PayToProviderMiddleName = b.PayToProviderMiddleName
                  , PayToProviderNPI = b.PayToProviderNPI
                  , RenderingProviderTaxIdType = b.RenderingProviderTaxIdType
                  , RenderingProviderTaxId = b.RenderingProviderTaxId
                  , RenderingProviderIdType = b.RenderingProviderIdType
                    --RenderingProviderId = b.RenderingProviderId ,
                  , RenderingProviderLastName = b.RenderingProviderLastName
                  , RenderingProviderFirstName = b.RenderingProviderFirstName
                  , RenderingProviderMiddleName = b.RenderingProviderMiddleName
                  , RenderingProviderTaxonomyCode = b.RenderingProviderTaxonomyCode
                  , RenderingProviderNPI = b.RenderingProviderNPI
                  , ReferringId = b.ReferringId
                  , ReferringProviderNPI = b.ReferringProviderNPI
                  , FacilityNPI = b.FacilityNPI
                    -- JHB Added ProcedureCodeId 
                  , ProcedureCodeId = CASE
                                          WHEN a.ProcedureCodeId IS NULL THEN b.ProcedureCodeId
                                          ELSE a.ProcedureCodeId
                                      END
                  , AuthorizationNumber = CASE
                                              WHEN a.AuthorizationNumber IS NULL THEN b.AuthorizationNumber
                                              ELSE a.AuthorizationNumber
                                          END
                  , DateOfService = CASE
                                        WHEN a.DateOfService IS NULL THEN b.DateOfService
                                        ELSE a.DateOfService
                                    END
                  , ClientCoveragePlanId = CASE
                                               WHEN a.ClientCoveragePlanId IS NULL THEN b.ClientCoveragePlanId
                                               ELSE a.ClientCoveragePlanId
                                           END
                  , PlaceOfService = CASE
                                         WHEN a.PlaceOfService IS NULL THEN b.PlaceOfService
                                         ELSE a.PlaceOfService
                                     END
                  , SubmissionReasonCode = CASE
                                               WHEN a.SubmissionReasonCode IS NULL THEN b.SubmissionReasonCode
                                               ELSE a.SubmissionReasonCode
                                           END
                  , BillingCode = CASE
                                      WHEN a.BillingCode IS NULL THEN b.BillingCode
                                      ELSE a.BillingCode
                                  END
                  , Modifier1 = CASE
                                    WHEN a.Modifier1 IS NULL THEN b.Modifier1
                                    ELSE a.Modifier1
                                END
                  , Modifier2 = CASE
                                    WHEN a.Modifier2 IS NULL THEN b.Modifier2
                                    ELSE a.Modifier2
                                END
                  , Modifier3 = CASE
                                    WHEN a.Modifier3 IS NULL THEN b.Modifier3
                                    ELSE a.Modifier3
                                END
                  , Modifier4 = CASE
                                    WHEN a.Modifier4 IS NULL THEN b.Modifier4
                                    ELSE a.Modifier4
                                END
                  , GroupId = CASE
                                  WHEN a.GroupId IS NULL THEN b.GroupId
                                  ELSE a.GroupId
                              END
                  , RevenueCode = CASE
                                      WHEN a.RevenueCode IS NULL THEN b.RevenueCode
                                      ELSE a.RevenueCode
                                  END
                  , RevenueCodeDescription = CASE
                                                 WHEN a.RevenueCodeDescription IS NULL THEN b.RevenueCodeDescription
                                                 ELSE a.RevenueCodeDescription
                                             END
                  , InpatientAdmitDate = CASE
                                             WHEN a.InpatientAdmitDate IS NULL THEN b.InpatientAdmitDate
                                             ELSE a.InpatientAdmitDate
                                         END
                  , InpatientDischargedDate = b.InpatientDischargedDate
                  , IsICD10Service = a.IsICD10Service
                  , ClientInpatientVisitId = b.ClientInpatientVisitId
                  , BedProcedure = b.BedProcedure
                  , MedicationProcedure = b.MedicationProcedure
                  , InpatientProgram = b.InpatientProgram
              FROM  #ClaimLines a
                  JOIN #Charges b ON(a.ChargeId = b.ChargeId)

            --SELECT * FROM #ClaimLines

            -- Added 5/21/2014 Update EndDateOfService in #Charge as well
            UPDATE  a
              SET   EndDateOfService = CASE
                                           WHEN b.EndDateEqualsStartDate = 'Y' THEN a.DateOfService
                                           WHEN b.EnteredAs = 110 THEN DATEADD(mi, a.ServiceUnits, a.DateOfService)
                                           WHEN b.EnteredAs = 111 THEN DATEADD(hh, a.ServiceUnits, a.DateOfService)
                                           WHEN b.EnteredAs = 112 THEN DATEADD(dd, (a.ServiceUnits - 1), a.DateOfService)
                                           ELSE a.DateOfService
                                       END
              FROM  #Charges a
                  JOIN ProcedureCodes b ON(a.ProcedureCodeId = b.ProcedureCodeId)

            UPDATE  a
              SET   EndDateOfService = CASE
                                           WHEN b.EndDateEqualsStartDate = 'Y' THEN a.DateOfService
                                           WHEN b.EnteredAs = 110 THEN DATEADD(mi, a.ServiceUnits, a.DateOfService)
                                           WHEN b.EnteredAs = 111 THEN DATEADD(hh, a.ServiceUnits, a.DateOfService)
                                           WHEN b.EnteredAs = 112 THEN DATEADD(dd, (a.ServiceUnits - 1), a.DateOfService)
                                           ELSE a.DateOfService
                                       END
              FROM  #ClaimLines a
                  JOIN ProcedureCodes b ON(a.ProcedureCodeId = b.ProcedureCodeId)

            UPDATE  a
              SET   ReferringProviderLastName = LTRIM(RTRIM(SUBSTRING(b.CodeName, 1, CHARINDEX(',', b.CodeName) - 1)))
                  , ReferringProviderFirstName = LTRIM(RTRIM(SUBSTRING(b.CodeName, CHARINDEX(',', b.CodeName) + 1, LEN(b.CodeName))))
                  , ReferringProviderTaxIdType = PayToProviderTaxIdType
                  , ReferringProviderTaxId = a.PayToProviderTaxId
                  , ReferringProviderIdType = '1G'
                  , ReferringProviderId = LTRIM(RTRIM(b.ExternalCode1))
                  , ReferringProviderNPI = LTRIM(RTRIM(b.ExternalCode2))
              FROM  #ClaimLines a
                  JOIN GlobalCodes b ON(a.ReferringId = b.GlobalCodeId)
              WHERE
                CHARINDEX(',', b.CodeName) > 0
                AND a.ReferringId IS NOT NULL


            -- 1/30 NJain get admission type code from ClientInPatientVisits

            UPDATE  a
              SET   a.AdmissionTypeCode = RTRIM(gc.ExternalCode1)
                  , a.AdmissionSourceCode = RTRIM(gc2.ExternalCode1)
              FROM  #ClaimLines a
                  JOIN ClientInpatientVisits b ON a.ClientId = b.ClientId
                                                  AND   b.ClientInpatientVisitId = a.ClientInpatientVisitId
                  --AND CONVERT(DATE, a.InpatientAdmitDate) = CONVERT(DATE, b.AdmitDate)
                  --AND ( a.InpatientAdmitDate IS NOT NULL
                  --      OR a.InpatientAdmitDate <> ''
                  --    )
                  LEFT JOIN GlobalCodes gc ON gc.GlobalCodeId = b.AdmissionType
                  LEFT JOIN GlobalCodes gc2 ON gc2.GlobalCodeId = b.AdmissionSource
              WHERE
                ISNULL(b.RecordDeleted, 'N') = 'N'


            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 30
              WHERE
                ClaimBatchId = @ParmClaimBatchId


            -- 8/23/2016 Ignore rendering
            UPDATE  #ClaimLines
              SET   ClinicianId = NULL
                  , ClinicianFirstName = NULL
                  , ClinicianLastName = NULL
                  , ClinicianMiddleName = NULL
                  , RenderingProviderLastName = NULL
                  , RenderingProviderFirstName = NULL
                  , RenderingProviderMiddleName = NULL
                  , RenderingProviderNPI = NULL
                  , RenderingProviderTaxonomyCode = NULL
                  , RenderingProviderIdType = NULL
                  , RenderingProviderId = NULL


            UPDATE  #Charges
              SET   ClinicianId = NULL
                  , ClinicianFirstName = NULL
                  , ClinicianLastName = NULL
                  , ClinicianMiddleName = NULL
                  , RenderingProviderLastName = NULL
                  , RenderingProviderFirstName = NULL
                  , RenderingProviderMiddleName = NULL
                  , RenderingProviderNPI = NULL
                  , RenderingProviderTaxonomyCode = NULL
                  , RenderingProviderIdType = NULL
                  , RenderingProviderId = NULL





            --SELECT * FROM #ClaimLines

            -- Get Other Insured Information
            DECLARE @ExecuteOtherInsuredSCSP CHAR(1) = 'N'

            IF EXISTS (SELECT   *
                         FROM   sys.objects
                         WHERE
                            name = 'scsp_PMClaims837OtherInsuredInformation'
                            AND type = 'P')
                BEGIN
                    SELECT  @Bookmark = 'EXEC scsp_PMClaims837OtherInsuredInformation'
                    EXEC scsp_PMClaims837OtherInsuredInformation @CurrentUser = @ParmCurrentUser
                                                               , @ClaimFormatId = @ClaimFormatId
                                                               , @ClaimBatchId = @ParmClaimBatchId
                                                               , @FormatType = @FormatType
                                                               , @ExecuteOtherInsuredSCSP = @ExecuteOtherInsuredSCSP OUTPUT
                END

            IF @ExecuteOtherInsuredSCSP = 'N' --#EH!INFO!ADD!@ExecuteOtherInsuredSCSP!
                BEGIN

                    -- Determine other insured information
                    INSERT INTO #OtherInsured(ClaimLineId
                                            , ChargeId
                                            , Priority
                                            , ClientCoveragePlanId
                                            , CoveragePlanId
                                            , InsuranceTypeCode
                                            , ClaimFilingIndicatorCode
                                            , PayerName
                                            , InsuredId
                                            , GroupNumber
                                            , GroupName
                                            , InsuredLastName
                                            , InsuredFirstName
                                            , InsuredMiddleName
                                            , InsuredSuffix
                                            , InsuredSex
                                            , InsuredDOB
                                            , InsuredRelation
                                            , InsuredRelationCode
                                            , PayerType
                                            , ElectronicClaimsPayerId)
                      SELECT    a.ClaimLineId
                              , c.ChargeId
                              , c.Priority
                              , c.ClientCoveragePlanId
                              , d.CoveragePlanId
                              , CASE k.ExternalCode1
                                    WHEN 'MB' THEN 'MB'
                                    WHEN 'MC' THEN 'MC'
                                    WHEN 'CI' THEN 'C1'
                                    WHEN 'BL' THEN 'C1'
                                    WHEN 'HM' THEN 'C1'
                                    ELSE 'OT'
                                END
                              , k.ExternalCode1
                              , f.CoveragePlanName
                              , REPLACE(REPLACE(d.InsuredId, '-', RTRIM('')), ' ', RTRIM(''))
                              , d.GroupNumber
                              , d.GroupName
                              , CASE
                                    WHEN d.SubscriberContactId IS NULL THEN a.ClientLastName
                                    ELSE e.LastName
                                END
                              , CASE
                                    WHEN d.SubscriberContactId IS NULL THEN a.ClientFirstName
                                    ELSE e.FirstName
                                END
                              , CASE
                                    WHEN d.SubscriberContactId IS NULL THEN a.ClientMiddleName
                                    ELSE e.MiddleName
                                END
                              , CASE
                                    WHEN d.SubscriberContactId IS NULL THEN a.ClientSuffix
                                    ELSE e.Suffix
                                END
                              , CASE
                                    WHEN d.SubscriberContactId IS NULL THEN a.ClientSex
                                    ELSE e.Sex
                                END
                              , CASE
                                    WHEN d.SubscriberContactId IS NULL THEN a.ClientDOB
                                    ELSE e.DOB
                                END
                              , e.Relationship
                              , g.ExternalCode1
                              , i.ExternalCode1
                              , f.ElectronicClaimsPayerId
                      FROM  #ClaimLines a
                          JOIN Charges b ON(a.ChargeId = b.ChargeId)
                          JOIN Charges c ON( b.ServiceId = c.ServiceId
                                             AND c.Priority <> 0
                                             AND c.Priority < b.Priority)
                          JOIN ClientCoveragePlans d ON(c.ClientCoveragePlanId = d.ClientCoveragePlanId)
                          LEFT JOIN ClientContacts e ON(d.SubscriberContactId = e.ClientContactId)
                          JOIN CoveragePlans f ON( d.CoveragePlanId = f.CoveragePlanId
                                                   AND  ISNULL(f.Capitated, 'N') = 'N')
                          LEFT JOIN GlobalCodes g ON(e.Relationship = g.GlobalCodeId)
                          JOIN Payers h ON f.PayerId = h.PayerId
                          LEFT JOIN GlobalCodes i ON(h.PayerType = i.GlobalCodeId)
                          --LEFT JOIN CustomClientContacts j ON (e.ClientContactId = j.ClientContactId)
                          LEFT JOIN GlobalCodes k ON(f.ClaimFilingIndicatorCode = k.GlobalCodeId)
                      WHERE
                            ISNULL(e.RecordDeleted, 'N') <> 'Y'
                      ORDER BY
                          a.ClaimLineId
                        , c.Priority



                    INSERT INTO #OtherInsuredPaid(OtherInsuredId
                                                , PaidAmount
                                                , AllowedAmount
                                                , PreviousPaidAmount
                                                , PaidDate
                                                , DenialCode)
                      SELECT    a.OtherInsuredId
                              , SUM(CASE
                                        WHEN d.ClientCoveragePlanId = a.ClientCoveragePlanId
                                             AND   e.LedgerType = 4202 THEN -e.Amount
                                        ELSE 0
                                    END)
                              , SUM(CASE
                                        WHEN e.LedgerType = 4201 THEN e.Amount
                                        WHEN e.LedgerType = 4203
                                             AND   d.Priority <> 0
                                             AND   d.Priority < a.Priority THEN e.Amount
                                        ELSE 0
                                    END)
                              , SUM(CASE
                                        WHEN e.LedgerType = 4202
                                             AND   d.Priority <> 0
                                             AND   d.Priority < a.Priority THEN -e.Amount
                                        ELSE 0
                                    END)
                              , MAX(CASE
                                        WHEN e.LedgerType = 4202
                                             AND   d.ClientCoveragePlanId = a.ClientCoveragePlanId THEN e.PostedDate
                                        ELSE NULL
                                    END)
                              , MAX(CASE
                                        WHEN e.LedgerType = 4204
                                             AND   d.ClientCoveragePlanId = a.ClientCoveragePlanId THEN f.ExternalCode1
                                        ELSE NULL
                                    END)
                      FROM  #OtherInsured a
                          JOIN #Charges b ON(a.ClaimLineId = b.ClaimLineId)
                          JOIN Charges c ON(b.ChargeId = c.ChargeId)
                          JOIN Charges d ON(d.ServiceId = c.ServiceId)
                          JOIN ARLedger e ON( d.ChargeId = e.ChargeId
                                              AND   ISNULL(e.MarkedAsError, 'N') = 'N'
                                              AND   ISNULL(e.ErrorCorrection, 'N') = 'N')
                          LEFT JOIN GlobalCodes f ON(e.AdjustmentCode = f.GlobalCodeId)
                      GROUP BY
                          a.OtherInsuredId



                    -- Update Paid Date to last activity date in case there is no payment
                    UPDATE  a
                      SET   PaidDate = (SELECT  MAX(PostedDate)
                                          FROM  ARLedger c
                                          WHERE
                                            c.ChargeId = b.ChargeId
                                            AND ISNULL(c.MarkedAsError, 'N') = 'N'
                                            AND ISNULL(c.ErrorCorrection, 'N') = 'N')
                      FROM  #OtherInsuredPaid a
                          JOIN #OtherInsured b ON(a.OtherInsuredId = b.OtherInsuredId)
                      WHERE
                        a.PaidDate IS NULL



                    UPDATE  a
                      SET   PaidAmount = b.PaidAmount
                          , AllowedAmount = b.AllowedAmount
                          , PreviousPaidAmount = b.PreviousPaidAmount
                          , PaidDate = b.PaidDate
                          , DenialCode = b.DenialCode
                      FROM  #OtherInsured a
                          JOIN #OtherInsuredPaid b ON(a.OtherInsuredId = b.OtherInsuredId)



                    UPDATE  a
                      SET   ApprovedAmount = b.AllowedAmount
                      FROM  #ClaimLines a
                          JOIN #OtherInsured b ON(a.ClaimLineId = b.ClaimLineId)
                      WHERE
                        NOT EXISTS (SELECT  *
                                      FROM  #OtherInsured c
                                      WHERE
                                        a.ClaimLineId = c.ClaimLineId
                                        AND c.AllowedAmount > b.AllowedAmount)



                    -- Get Billing Codes for Other Insurances
                    DELETE  FROM ClaimProcessingClaimLinesTemp
                      WHERE
                        SPID = @@SPID



                    INSERT INTO ClaimProcessingClaimLinesTemp(SPID
                                                            , ClaimLineId
                                                            , ChargeId
                                                            , ServiceUnits)
                      SELECT    @@SPID
                              , a.OtherInsuredId
                              , a.ChargeId
                              , b.ServiceUnits
                      FROM  #OtherInsured a
                          JOIN #ClaimLines b ON(a.ClaimLineId = b.ClaimLineId)



                    --exec ssp_PMClaimsGetBillingCodes



                    UPDATE  a
                      SET   BillingCode = b.BillingCode
                          , Modifier1 = b.Modifier1
                          , Modifier2 = b.Modifier2
                          , Modifier3 = b.Modifier3
                          , Modifier4 = b.Modifier4
                          , RevenueCode = b.RevenueCode
                          , RevenueCodeDescription = b.RevenueCodeDescription
                          , ClaimUnits = b.ClaimUnits
                      FROM  #OtherInsured a
                          JOIN ClaimProcessingClaimLinesTemp b ON(a.OtherInsuredId = b.ClaimLineId)
                      WHERE
                        b.SPID = @@SPID



                    -- Update values from current claim if they cannot be determined
                    UPDATE  a
                      SET   BillingCode = b.BillingCode
                          , Modifier1 = b.Modifier1
                          , Modifier2 = b.Modifier2
                          , Modifier3 = b.Modifier3
                          , Modifier4 = b.Modifier4
                          , RevenueCode = b.RevenueCode
                          , RevenueCodeDescription = b.RevenueCodeDescription
                          , ClaimUnits = b.ClaimUnits
                      FROM  #OtherInsured a
                          JOIN #ClaimLines b ON(a.ClaimLineId = b.ClaimLineId)
                      WHERE
                        ( a.BillingCode IS NULL
                          AND   a.RevenueCode IS NULL)
                        OR  a.ClaimUnits IS NULL



                    -- Calculate adjustments for the payor
                    INSERT INTO #OtherInsuredAdjustment(OtherInsuredId
                                                      , ARLedgerId
                                                      , HIPAACode
                                                      , HIPAAGroupCode
                                                      , LedgerType
                                                      , Amount)
                      SELECT    a.OtherInsuredId
                              , e.ARLedgerId
                              , f.ExternalCode1
                              , f.ExternalCode2
                              , e.LedgerType
                              , e.Amount
                      FROM  #OtherInsured a
                          JOIN #Charges b ON(a.ClaimLineId = b.ClaimLineId)
                          JOIN Charges d ON( b.ServiceId = d.ServiceId
                                             AND d.ClientCoveragePlanId = a.ClientCoveragePlanId)
                          JOIN ARLedger e ON( d.ChargeId = e.ChargeId
                                              AND   ISNULL(e.MarkedAsError, 'N') = 'N'
                                              AND   ISNULL(e.ErrorCorrection, 'N') = 'N')
                          LEFT JOIN GlobalCodes f ON(e.AdjustmentCode = f.GlobalCodeId)
                      WHERE (e.LedgerType = 4203
                             OR (e.LedgerType = 4204
                                 AND e.Amount < 0))
                    --e.LedgerType IN ( 4203, 4204 )



                    -- For Secondary Payers subtract Charge Amount
                    INSERT INTO #OtherInsuredAdjustment(OtherInsuredId
                                                      , ARLedgerId
                                                      , HIPAACode
                                                      , HIPAAGroupCode
                                                      , LedgerType
                                                      , Amount)
                      SELECT    a.OtherInsuredId
                              , NULL
                              , f.ExternalCode1
                              , f.ExternalCode2
                              , 4204
                              , -b.ChargeAmount
                      FROM  #OtherInsured a
                          JOIN #Charges b ON(a.ClaimLineId = b.ClaimLineId)
                          JOIN Charges d ON( b.ServiceId = d.ServiceId
                                             AND d.ClientCoveragePlanId = a.ClientCoveragePlanId)
                          JOIN ARLedger e ON( d.ChargeId = e.ChargeId
                                              AND   ISNULL(e.MarkedAsError, 'N') = 'N'
                                              AND   ISNULL(e.ErrorCorrection, 'N') = 'N')
                          LEFT JOIN GlobalCodes f ON(e.AdjustmentCode = f.GlobalCodeId)
                      WHERE
                            a.Priority > 1



                    -- Summarize 
                    INSERT INTO #OtherInsuredAdjustment2(OtherInsuredId
                                                       , HIPAAGroupCode
                                                       , HIPAACode
                                                       , Amount)
                      SELECT    OtherInsuredId
                              , HIPAAGroupCode
                              , HIPAACode
                              , SUM(-Amount)
                      FROM  #OtherInsuredAdjustment
                      GROUP BY
                          OtherInsuredId
                        , HIPAAGroupCode
                        , HIPAACode



                    -- If there is a subsequent payer, set patient responsibility to zero

                    UPDATE  a
                      SET   Amount = 0
                      FROM  #OtherInsuredAdjustment2 a
                          JOIN #OtherInsured b ON(a.OtherInsuredId = b.OtherInsuredId)
                      WHERE
                        a.HIPAAGroupCode = 'PR'
                        AND EXISTS (SELECT  *
                                      FROM  #OtherInsured c
                                      WHERE
                                        b.ClaimLineId = c.ClaimLineId
                                        AND b.Priority > c.Priority)




                    -- If there is a previous payer subtract 
                    UPDATE  a
                      SET   Amount = b.AllowedAmount - b.PaidAmount - b.PreviousPaidAmount
                      FROM  #OtherInsuredAdjustment2 a
                          JOIN #OtherInsured b ON(a.OtherInsuredId = b.OtherInsuredId)
                          JOIN #OtherInsured c ON( b.ClaimLineId = c.ClaimLineId
                                                   AND  c.Priority = b.Priority - 1)
                      WHERE
                        a.HIPAAGroupCode = 'PR'



                    -- Convert from rows to columns
                    INSERT INTO #OtherInsuredAdjustment3(OtherInsuredId
                                                       , HIPAAGroupCode
                                                       , HIPAACode1)
                      SELECT    OtherInsuredId
                              , HIPAAGroupCode
                              , MAX(HIPAACode)
                      FROM  #OtherInsuredAdjustment2
                      GROUP BY
                          OtherInsuredId
                        , HIPAAGroupCode



                    UPDATE  a
                      SET   Amount1 = b.Amount
                      FROM  #OtherInsuredAdjustment3 a
                          JOIN #OtherInsuredAdjustment2 b ON( a.OtherInsuredId = b.OtherInsuredId
                                                              AND   a.HIPAAGroupCode = b.HIPAAGroupCode
                                                              AND   a.HIPAACode1 = b.HIPAACode)



                    UPDATE  a
                      SET   HIPAACode2 = b.HIPAACode
                          , Amount2 = b.Amount
                      FROM  #OtherInsuredAdjustment3 a
                          JOIN #OtherInsuredAdjustment2 b ON( a.OtherInsuredId = b.OtherInsuredId
                                                              AND   a.HIPAAGroupCode = b.HIPAAGroupCode
                                                              AND   a.HIPAACode1 <> b.HIPAACode)



                    UPDATE  a
                      SET   HIPAACode3 = b.HIPAACode
                          , Amount3 = b.Amount
                      FROM  #OtherInsuredAdjustment3 a
                          JOIN #OtherInsuredAdjustment2 b ON( a.OtherInsuredId = b.OtherInsuredId
                                                              AND   a.HIPAAGroupCode = b.HIPAAGroupCode
                                                              AND   a.HIPAACode1 <> b.HIPAACode
                                                              AND   a.HIPAACode2 <> b.HIPAACode)



                    UPDATE  a
                      SET   HIPAACode4 = b.HIPAACode
                          , Amount4 = b.Amount
                      FROM  #OtherInsuredAdjustment3 a
                          JOIN #OtherInsuredAdjustment2 b ON( a.OtherInsuredId = b.OtherInsuredId
                                                              AND   a.HIPAAGroupCode = b.HIPAAGroupCode
                                                              AND   a.HIPAACode1 <> b.HIPAACode
                                                              AND   a.HIPAACode2 <> b.HIPAACode
                                                              AND   a.HIPAACode3 <> b.HIPAACode)



                    UPDATE  a
                      SET   HIPAACode5 = b.HIPAACode
                          , Amount5 = b.Amount
                      FROM  #OtherInsuredAdjustment3 a
                          JOIN #OtherInsuredAdjustment2 b ON( a.OtherInsuredId = b.OtherInsuredId
                                                              AND   a.HIPAAGroupCode = b.HIPAAGroupCode
                                                              AND   a.HIPAACode1 <> b.HIPAACode
                                                              AND   a.HIPAACode2 <> b.HIPAACode
                                                              AND   a.HIPAACode3 <> b.HIPAACode
                                                              AND   a.HIPAACode4 <> b.HIPAACode)



                    UPDATE  a
                      SET   HIPAACode6 = b.HIPAACode
                          , Amount6 = b.Amount
                      FROM  #OtherInsuredAdjustment3 a
                          JOIN #OtherInsuredAdjustment2 b ON( a.OtherInsuredId = b.OtherInsuredId
                                                              AND   a.HIPAAGroupCode = b.HIPAAGroupCode
                                                              AND   a.HIPAACode1 <> b.HIPAACode
                                                              AND   a.HIPAACode2 <> b.HIPAACode
                                                              AND   a.HIPAACode3 <> b.HIPAACode
                                                              AND   a.HIPAACode4 <> b.HIPAACode
                                                              AND   a.HIPAACode5 <> b.HIPAACode)



                    -- Update patient responsibility amount
                    UPDATE  a
                      SET   ClientResponsibility = ISNULL(b.Amount1, 0) + ISNULL(b.Amount2, 0) + ISNULL(b.Amount3, 0) + ISNULL(b.Amount4, 0)
                                                   + ISNULL(b.Amount5, 0) + ISNULL(b.Amount6, 0)
                      FROM  #OtherInsured a
                          JOIN #OtherInsuredAdjustment3 b ON( a.OtherInsuredId = b.OtherInsuredId
                                                              AND   b.HIPAAGroupCode = 'PR')

                -- Update allowed amount
                --update a
                --set AllowedAmount = a.PaidAmount + a.ClientResponsibility
                --from #OtherInsured a

                END



            -- Default Values and Hipaa Codes
            UPDATE  #ClaimLines
              SET   ClientSex = CASE
                                    WHEN ClientSex NOT IN ( 'M'
                                                          , 'F' ) THEN NULL
                                    ELSE ClientSex
                                END
                  , InsuredSex = CASE
                                     WHEN InsuredSex NOT IN ( 'M'
                                                            , 'F' ) THEN NULL
                                     ELSE InsuredSex
                                 END
                  , MedicareInsuranceTypeCode = CASE
                                                    WHEN MedicareInsuranceTypeCode IS NULL
                                                         AND Priority > 1
                                                         AND MedicarePayer = 'Y' THEN '47'
                                                    ELSE MedicareInsuranceTypeCode
                                                END
            /* 11/26 apoole removed PlaceOfServiceCode default ,
PlaceOfServiceCode = case when PlaceOfServiceCode is null then '76' else PlaceOfServiceCode end
*/


            UPDATE  a
              SET   InsuredRelationCode = CASE
                                              WHEN a.InsuredRelation IS NULL THEN '18'
                                              WHEN b.ExternalCode1 = '32'
                                                   AND  a.ClientSex = 'M' THEN '33'
                                              ELSE b.ExternalCode1
                                          END
              FROM  #ClaimLines a
                  LEFT JOIN GlobalCodes b ON(a.InsuredRelation = b.GlobalCodeId)



            UPDATE  #OtherInsured
              SET   InsuredSex = CASE
                                     WHEN InsuredSex NOT IN ( 'M'
                                                            , 'F' ) THEN NULL
                                     ELSE InsuredSex
                                 END



            UPDATE  a
              SET   InsuredRelationCode = CASE
                                              WHEN a.InsuredRelation IS NULL THEN '18'
                                              WHEN b.ExternalCode1 = '32'
                                                   AND  a2.ClientSex = 'M' THEN '33'
                                              ELSE b.ExternalCode1
                                          END
              FROM  #OtherInsured a
                  JOIN #ClaimLines a2 ON(a.ClaimLineId = a2.ClaimLineId)
                  LEFT JOIN GlobalCodes b ON(a.InsuredRelation = b.GlobalCodeId)



            -- Set Admit Date
            UPDATE  #ClaimLines
              SET   RelatedHospitalAdmitDate = RegistrationDate
              --WHERE   PlaceOfServiceCode IN ( '76', '11', '12', '21', '22' ) 
              /** dharvey - reverted to previous place of service codes - Pines #260 **/
              WHERE
                PlaceOfServiceCode IN ( '21'
                                      , '31'
                                      , '51'
                                      , '52'
                                      , '62' )



            -- Set Related Hospital Admit and Discharge Dates
            UPDATE  #ClaimLines
              SET   RelatedHospitalAdmitDate = InpatientAdmitDate
                  , RelatedHospitalDischargeDate = InpatientDischargedDate
              WHERE
                InpatientAdmitDate IS NOT NULL



            -- Update zip codes for electronic claims
            IF @Electronic = 'Y'
                BEGIN
                    UPDATE  #ClaimLines
                      SET   ClientZip = LEFT(REPLACE(ClientZip, '-', '') + '9999', 9)
                          , InsuredZip = LEFT(REPLACE(InsuredZip, '-', '') + '9999', 9)
                          , PaymentZip = (SELECT    LEFT(REPLACE(ZipCode, '-', '') + '9999', 9)
                                            FROM    Agency)
                          , FacilityZip = (SELECT   LEFT(REPLACE(ZipCode, '-', '') + '9999', 9)
                                             FROM   Agency)
                          , PayerZip = LEFT(REPLACE(PayerZip, '-', '') + '9999', 9)
                END


            --SELECT ClientZip, InsuredZip, PaymentZip, FacilityZip, PayerZip FROM #ClaimLines


            -- Set Diagnoses
            CREATE TABLE #ClaimLineDiagnoses837 (
                DiagnosisId      INT        IDENTITY NOT NULL
              , ClaimLineId      INT        NOT NULL
              , DiagnosisCode    VARCHAR(6) NULL
              , PrimaryDiagnosis CHAR(1)    NULL
            )



            CREATE TABLE #ClaimLineDiagnoses837Columns (
                ClaimLineId   INT NOT NULL
              , DiagnosisId1  INT NULL
              , DiagnosisId2  INT NULL
              , DiagnosisId3  INT NULL
              , DiagnosisId4  INT NULL
              , DiagnosisId5  INT NULL
              , DiagnosisId6  INT NULL
              , DiagnosisId7  INT NULL
              , DiagnosisId8  INT NULL
              , DiagnosisId9  INT NULL
              , DiagnosisId10 INT NULL
              , DiagnosisId11 INT NULL
              , DiagnosisId12 INT NULL
              , DiagnosisId13 INT NULL
            )


            CREATE TABLE #Services (
                ClaimLineId   INT NOT NULL
              , ServiceId     INT NULL
              , DateOfService DATETIME
            )


            CREATE TABLE #ServiceDiagnosis (
                ClaimLineId   INT     NOT NULL
              , IsICD10Code   CHAR(1) NULL
              , DiagnosisCode VARCHAR(20)
              , [Order]       INT
              , Rnk           INT
              , ICD10CodeType CHAR(3)
            )





            -- Added 01/15/2014 Common logic for populating #ServiceDiagnosis for Electronic and Paper

            INSERT INTO #Services(ClaimLineId
                                , ServiceId
                                , DateOfService)
              SELECT DISTINCT
                    ClaimLineId
                  , ServiceId
                  , DateOfService
              FROM  #Charges





            -- Get Diagnoses from ServiceDiagnosis
            INSERT INTO #ServiceDiagnosis(ClaimLineId
                                        , [Order]
                                        , IsICD10Code
                                        , DiagnosisCode)
              SELECT    z.ClaimLineId
                      , ROW_NUMBER() OVER (ORDER BY
                                               z.[Order] ASC
                                             , z.DiagnosisCode ASC)
                      , z.IsICD10Code
                      , z.DiagnosisCode
              FROM
                (   SELECT DISTINCT
                        a.ClaimLineId
                      , b.[Order] AS [Order]
                      , CASE
                            WHEN DATEDIFF(DAY, @ICD10StartDate, a.DateOfService) >= 0 THEN 'Y'
                            ELSE 'N'
                        END       AS IsICD10Code
                        -- I noticed the asterisk character getting saved in ServiceDiagnosis.ICD10 so removing it here
                      , CASE
                            WHEN DATEDIFF(DAY, @ICD10StartDate, a.DateOfService) >= 0 THEN REPLACE(ICD10Code, '*', '')
                            ELSE ISNULL(b.DSMCode, b.ICD9Code)
                        END       AS DiagnosisCode
                      FROM  #Services a
                          JOIN dbo.ServiceDiagnosis b ON b.ServiceId = a.ServiceId
                                                         AND   ISNULL(b.RecordDeleted, 'N') = 'N'
                      WHERE(((  @ICD10StartDate IS NULL
                                OR DATEDIFF(DAY, @ICD10StartDate, a.DateOfService) < 0)
                             AND   (b.DSMCode IS NOT NULL
                                    OR b.ICD9Code IS NOT NULL))
                            OR (DATEDIFF(DAY, @ICD10StartDate, a.DateOfService) >= 0
                                AND b.ICD10Code IS NOT NULL))) AS z


            -- Update ICD 10 Code Type
            UPDATE  a
              SET   ICD10CodeType = ISNULL(b.ICD10CodeType, 'CM')
              FROM  #ServiceDiagnosis a
                  JOIN dbo.DiagnosisICD10Codes b ON b.ICD10Code = a.DiagnosisCode
              WHERE
                a.IsICD10Code = 'Y'

            UPDATE  #ServiceDiagnosis
              SET   ICD10CodeType = 'CM'
              WHERE
                ISNULL(ICD10CodeType, '') = ''


            -- Remove duplicate diagnoses having different orders, remove the one with the higher order
            UPDATE  a
              SET   DiagnosisCode = NULL
              FROM  #ServiceDiagnosis a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
                                              AND   b.DiagnosisCode = a.DiagnosisCode
              WHERE
                a.[Order] > b.[Order]

            DELETE  FROM #ServiceDiagnosis
              WHERE
                DiagnosisCode IS NULL
                OR  DiagnosisCode = '799.9'



            -- Convert to ICD Codes
            UPDATE  a
              SET   DiagnosisCode = d.ICDCode
              FROM  #ServiceDiagnosis a
                  JOIN #ClaimLines b ON(a.ClaimLineId = b.ClaimLineId)
                  JOIN CoveragePlans c ON(b.CoveragePlanId = c.CoveragePlanId)
                  JOIN DiagnosisDSMCodes d ON(a.DiagnosisCode = d.DSMCode)
              WHERE
                ISNULL(c.BillingDiagnosisType, 'I') = 'I'
                AND d.ICDCode IS NOT NULL
                AND a.IsICD10Code = 'N'




            -- Order Diagnosis
            ;
            WITH OrderingDiagnosis
              AS (SELECT DISTINCT
                        ClaimLineId
                      , DiagnosisCode
                      , ROW_NUMBER() OVER (PARTITION BY ClaimLineId
                                                      , ICD10CodeType
                                           ORDER BY
                                               [Order] ASC
                                             , DiagnosisCode ASC) AS Rnk
                    FROM    #ServiceDiagnosis)
            UPDATE  a
              SET   Rnk = b.Rnk
              FROM  #ServiceDiagnosis a
                  JOIN OrderingDiagnosis b ON b.ClaimLineId = a.ClaimLineId
                                              AND   b.DiagnosisCode = a.DiagnosisCode



            -- Update #ClaimLines
            -- Diag Codes
            UPDATE  a
              SET   DiagnosisCodeQualifier1 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABK'
                                                  ELSE 'BK'
                                              END
                  , DiagnosisCode1 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 1
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier2 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode2 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 2
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier3 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode3 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 3
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier4 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode4 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 4
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier5 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode5 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 5
                AND b.ICD10CodeType = 'CM'

            UPDATE  a
              SET   DiagnosisCodeQualifier6 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode6 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 6
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier7 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode7 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 7
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier8 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode8 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 8
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier9 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                  ELSE 'BF'
                                              END
                  , DiagnosisCode9 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 9
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier10 = CASE
                                                   WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                   ELSE 'BF'
                                               END
                  , DiagnosisCode10 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 10
                AND b.ICD10CodeType = 'CM'

            UPDATE  a
              SET   DiagnosisCodeQualifier11 = CASE
                                                   WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                   ELSE 'BF'
                                               END
                  , DiagnosisCode11 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 11
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier12 = CASE
                                                   WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                   ELSE 'BF'
                                               END
                  , DiagnosisCode12 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 12
                AND b.ICD10CodeType = 'CM'


            UPDATE  a
              SET   DiagnosisCodeQualifier13 = CASE
                                                   WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'ABF'
                                                   ELSE 'BF'
                                               END
                  , DiagnosisCode13 = b.DiagnosisCode
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 13
                AND b.ICD10CodeType = 'CM'




            -- Proc Codes
            UPDATE  a
              SET   ProcedureCodeQualifier1 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBR'
                                                  ELSE NULL
                                              END
                  , ProcedureCode1 = b.DiagnosisCode
                  , ProcedureCodeDate1 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 1
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier2 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode2 = b.DiagnosisCode
                  , ProcedureCodeDate2 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 2
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier3 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode3 = b.DiagnosisCode
                  , ProcedureCodeDate3 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 3
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier4 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode4 = b.DiagnosisCode
                  , ProcedureCodeDate4 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 4
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier5 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode5 = b.DiagnosisCode
                  , ProcedureCodeDate5 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 5
                AND b.ICD10CodeType = 'PCS'

            UPDATE  a
              SET   ProcedureCodeQualifier6 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode6 = b.DiagnosisCode
                  , ProcedureCodeDate6 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 6
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier7 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode7 = b.DiagnosisCode
                  , ProcedureCodeDate7 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 7
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier8 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode8 = b.DiagnosisCode
                  , ProcedureCodeDate8 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 8
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier9 = CASE
                                                  WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                  ELSE NULL
                                              END
                  , ProcedureCode9 = b.DiagnosisCode
                  , ProcedureCodeDate9 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 9
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier10 = CASE
                                                   WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                   ELSE NULL
                                               END
                  , ProcedureCode10 = b.DiagnosisCode
                  , ProcedureCodeDate10 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 10
                AND b.ICD10CodeType = 'PCS'

            UPDATE  a
              SET   ProcedureCodeQualifier11 = CASE
                                                   WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                   ELSE NULL
                                               END
                  , ProcedureCode11 = b.DiagnosisCode
                  , ProcedureCodeDate11 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 11
                AND b.ICD10CodeType = 'PCS'


            UPDATE  a
              SET   ProcedureCodeQualifier12 = CASE
                                                   WHEN ISNULL(b.IsICD10Code, 'N') = 'Y' THEN 'BBQ'
                                                   ELSE NULL
                                               END
                  , ProcedureCode12 = b.DiagnosisCode
                  , ProcedureCodeDate12 = CONVERT(VARCHAR, a.DateOfService, 112)
              FROM  #ClaimLines a
                  JOIN #ServiceDiagnosis b ON b.ClaimLineId = a.ClaimLineId
              WHERE
                b.Rnk = 12
                AND b.ICD10CodeType = 'PCS'






            UPDATE  #ClaimLines
              SET   DiagnosisCode1 = CASE
                                         WHEN ISNULL(DiagnosisCode1, '') = '' THEN NULL
                                         ELSE DiagnosisCode1
                                     END
                  , DiagnosisCode2 = CASE
                                         WHEN ISNULL(DiagnosisCode2, '') = '' THEN NULL
                                         ELSE DiagnosisCode2
                                     END
                  , DiagnosisCode3 = CASE
                                         WHEN ISNULL(DiagnosisCode3, '') = '' THEN NULL
                                         ELSE DiagnosisCode3
                                     END
                  , DiagnosisCode4 = CASE
                                         WHEN ISNULL(DiagnosisCode4, '') = '' THEN NULL
                                         ELSE DiagnosisCode4
                                     END
                  , DiagnosisCode5 = CASE
                                         WHEN ISNULL(DiagnosisCode5, '') = '' THEN NULL
                                         ELSE DiagnosisCode5
                                     END
                  , DiagnosisCode6 = CASE
                                         WHEN ISNULL(DiagnosisCode6, '') = '' THEN NULL
                                         ELSE DiagnosisCode6
                                     END
                  , DiagnosisCode7 = CASE
                                         WHEN ISNULL(DiagnosisCode7, '') = '' THEN NULL
                                         ELSE DiagnosisCode7
                                     END
                  , DiagnosisCode8 = CASE
                                         WHEN ISNULL(DiagnosisCode8, '') = '' THEN NULL
                                         ELSE DiagnosisCode8
                                     END
                  , DiagnosisCode9 = CASE
                                         WHEN ISNULL(DiagnosisCode9, '') = '' THEN NULL
                                         ELSE DiagnosisCode9
                                     END
                  , DiagnosisCode10 = CASE
                                          WHEN ISNULL(DiagnosisCode10, '') = '' THEN NULL
                                          ELSE DiagnosisCode10
                                      END
                  , DiagnosisCode11 = CASE
                                          WHEN ISNULL(DiagnosisCode11, '') = '' THEN NULL
                                          ELSE DiagnosisCode11
                                      END
                  , DiagnosisCode12 = CASE
                                          WHEN ISNULL(DiagnosisCode12, '') = '' THEN NULL
                                          ELSE DiagnosisCode12
                                      END
                  , DiagnosisCode13 = CASE
                                          WHEN ISNULL(DiagnosisCode13, '') = '' THEN NULL
                                          ELSE DiagnosisCode13
                                      END
                  , ProcedureCode1 = CASE
                                         WHEN ISNULL(ProcedureCode1, '') = '' THEN NULL
                                         ELSE ProcedureCode1
                                     END
                  , ProcedureCode2 = CASE
                                         WHEN ISNULL(ProcedureCode2, '') = '' THEN NULL
                                         ELSE ProcedureCode2
                                     END
                  , ProcedureCode3 = CASE
                                         WHEN ISNULL(ProcedureCode3, '') = '' THEN NULL
                                         ELSE ProcedureCode3
                                     END
                  , ProcedureCode4 = CASE
                                         WHEN ISNULL(ProcedureCode4, '') = '' THEN NULL
                                         ELSE ProcedureCode4
                                     END
                  , ProcedureCode5 = CASE
                                         WHEN ISNULL(ProcedureCode5, '') = '' THEN NULL
                                         ELSE ProcedureCode5
                                     END
                  , ProcedureCode6 = CASE
                                         WHEN ISNULL(ProcedureCode6, '') = '' THEN NULL
                                         ELSE ProcedureCode6
                                     END
                  , ProcedureCode7 = CASE
                                         WHEN ISNULL(ProcedureCode7, '') = '' THEN NULL
                                         ELSE ProcedureCode7
                                     END
                  , ProcedureCode8 = CASE
                                         WHEN ISNULL(ProcedureCode8, '') = '' THEN NULL
                                         ELSE ProcedureCode8
                                     END
                  , ProcedureCode9 = CASE
                                         WHEN ISNULL(ProcedureCode9, '') = '' THEN NULL
                                         ELSE ProcedureCode9
                                     END
                  , ProcedureCode10 = CASE
                                          WHEN ISNULL(ProcedureCode10, '') = '' THEN NULL
                                          ELSE ProcedureCode10
                                      END
                  , ProcedureCode11 = CASE
                                          WHEN ISNULL(ProcedureCode11, '') = '' THEN NULL
                                          ELSE ProcedureCode11
                                      END
                  , ProcedureCode12 = CASE
                                          WHEN ISNULL(ProcedureCode12, '') = '' THEN NULL
                                          ELSE ProcedureCode12
                                      END


            UPDATE  a
              SET   DiagnosisCode1 = b.DiagnosisCode1
                  , DiagnosisCode2 = b.DiagnosisCode2
                  , DiagnosisCode3 = b.DiagnosisCode3
                  , DiagnosisCode4 = b.DiagnosisCode4
                  , DiagnosisCode5 = b.DiagnosisCode5
                  , DiagnosisCode6 = b.DiagnosisCode6
                  , DiagnosisCode7 = b.DiagnosisCode7
                  , DiagnosisCode8 = b.DiagnosisCode8
                  , DiagnosisCode9 = b.DiagnosisCode9
                  , DiagnosisCode10 = b.DiagnosisCode10
                  , DiagnosisCode11 = b.DiagnosisCode11
                  , DiagnosisCode12 = b.DiagnosisCode12
                  , DiagnosisCode13 = b.DiagnosisCode13
                  , DiagnosisCodeQualifier1 = b.DiagnosisCodeQualifier1
                  , DiagnosisCodeQualifier2 = b.DiagnosisCodeQualifier2
                  , DiagnosisCodeQualifier3 = b.DiagnosisCodeQualifier3
                  , DiagnosisCodeQualifier4 = b.DiagnosisCodeQualifier4
                  , DiagnosisCodeQualifier5 = b.DiagnosisCodeQualifier5
                  , DiagnosisCodeQualifier6 = b.DiagnosisCodeQualifier6
                  , DiagnosisCodeQualifier7 = b.DiagnosisCodeQualifier7
                  , DiagnosisCodeQualifier8 = b.DiagnosisCodeQualifier8
                  , DiagnosisCodeQualifier9 = b.DiagnosisCodeQualifier9
                  , DiagnosisCodeQualifier10 = b.DiagnosisCodeQualifier10
                  , DiagnosisCodeQualifier11 = b.DiagnosisCodeQualifier11
                  , DiagnosisCodeQualifier12 = b.DiagnosisCodeQualifier12
                  , DiagnosisCodeQualifier13 = b.DiagnosisCodeQualifier13
                  , ProcedureCode1 = b.ProcedureCode1
                  , ProcedureCode2 = b.ProcedureCode2
                  , ProcedureCode3 = b.ProcedureCode3
                  , ProcedureCode4 = b.ProcedureCode4
                  , ProcedureCode5 = b.ProcedureCode5
                  , ProcedureCode6 = b.ProcedureCode6
                  , ProcedureCode7 = b.ProcedureCode7
                  , ProcedureCode8 = b.ProcedureCode8
                  , ProcedureCode9 = b.ProcedureCode9
                  , ProcedureCode10 = b.ProcedureCode10
                  , ProcedureCode11 = b.ProcedureCode11
                  , ProcedureCode12 = b.ProcedureCode12
                  , ProcedureCodeQualifier1 = b.ProcedureCodeQualifier1
                  , ProcedureCodeQualifier2 = b.ProcedureCodeQualifier2
                  , ProcedureCodeQualifier3 = b.ProcedureCodeQualifier3
                  , ProcedureCodeQualifier4 = b.ProcedureCodeQualifier4
                  , ProcedureCodeQualifier5 = b.ProcedureCodeQualifier5
                  , ProcedureCodeQualifier6 = b.ProcedureCodeQualifier6
                  , ProcedureCodeQualifier7 = b.ProcedureCodeQualifier7
                  , ProcedureCodeQualifier8 = b.ProcedureCodeQualifier8
                  , ProcedureCodeQualifier9 = b.ProcedureCodeQualifier9
                  , ProcedureCodeQualifier10 = b.ProcedureCodeQualifier10
                  , ProcedureCodeQualifier11 = b.ProcedureCodeQualifier11
                  , ProcedureCodeQualifier12 = b.ProcedureCodeQualifier12
                  , ProcedureCodeDate1 = b.ProcedureCodeDate1
                  , ProcedureCodeDate2 = b.ProcedureCodeDate2
                  , ProcedureCodeDate3 = b.ProcedureCodeDate3
                  , ProcedureCodeDate4 = b.ProcedureCodeDate4
                  , ProcedureCodeDate5 = b.ProcedureCodeDate5
                  , ProcedureCodeDate6 = b.ProcedureCodeDate6
                  , ProcedureCodeDate7 = b.ProcedureCodeDate7
                  , ProcedureCodeDate8 = b.ProcedureCodeDate8
                  , ProcedureCodeDate9 = b.ProcedureCodeDate9
                  , ProcedureCodeDate10 = b.ProcedureCodeDate10
                  , ProcedureCodeDate11 = b.ProcedureCodeDate11
                  , ProcedureCodeDate12 = b.ProcedureCodeDate12
              FROM  #Charges a
                  JOIN #ClaimLines b ON b.ClaimLineId = a.ClaimLineId


            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 50
              WHERE
                ClaimBatchId = @ParmClaimBatchId


            -- Determine Claim Frequency Code
            CREATE TABLE #ClaimLineServiceCount (
                ClaimLineId  INT NULL
              , ClientId     INT NULL
              , ServiceCount INT NULL
            )



            -- Check if any institutional claims were sent for the clientcoverageplanid
            INSERT INTO #ClaimLineServiceCount(ClaimLineId
                                             , ClientId
                                             , ServiceCount)
              SELECT    a.ClaimLineId
                      , a.ClientId
                      , COUNT(*)
              FROM  #Charges a
                  JOIN Services b ON( a.ClientId = b.ClientId
                                      AND   b.DateOfService >= a.RegistrationDate
                                      AND   b.DateOfService < a.DateOfService
                                      AND   ISNULL(b.RecordDeleted, 'N') = 'N')
                  --JOIN CustomInstitutionalPrograms c ON (b.ProgramId = c.ProgramId)
                  JOIN Charges d ON( b.ServiceId = d.ServiceId
                                     AND a.ClientCoveragePlanId = d.ClientCoveragePlanId
                                     AND d.LastBilledDate IS NOT NULL
                                     AND d.ChargeId NOT IN(SELECT   a3.ChargeId
                                                             FROM   #Charges a3
                                                             WHERE
                                                                a3.ClientId = a.ClientId))
              GROUP BY
                  a.ClaimLineId
                , a.ClientId



            --12/4 apoole take into account Voids, Resubmissions
            UPDATE  a
              SET   ClaimFrequencyCode = SubmissionReasonCode -- Voids, Resubmits
              FROM  #ClaimLines a
              WHERE
                SubmissionReasonCode IN ( '7'
                                        , '8' )



            -- Default to 1 where InpatientAdmitDate IS NULL
            UPDATE  #ClaimLines
              SET   ClaimFrequencyCode = '1'
              WHERE
                InpatientAdmitDate IS NULL
                AND ISNULL(ClaimFrequencyCode, '0') NOT IN ( '7'
                                                           , '8' )


            -- For IP, the calculation is done after #XClaims logic        
            UPDATE  #ClaimLines
              SET   ClaimFrequencyCode = NULL
              WHERE
                InpatientAdmitDate IS NOT NULL
                AND ISNULL(ClaimFrequencyCode, '0') NOT IN ( '7'
                                                           , '8' )


            -- Custom Updates
            SELECT  @Bookmark = 'EXEC scsp_PMClaims837UpdateClaimLines'

            EXEC scsp_PMClaims837UpdateClaimLines @CurrentUser = @ParmCurrentUser
                                                , @ClaimBatchId = @ParmClaimBatchId
                                                , @FormatType = @FormatType



            -- Set Facility Address to null if it is same as Billing address
            /*
update #ClaimLines
set FacilityAddress1 = null, FacilityAddress2 = null,
FacilityCity = null, FacilityState = null, FacilityZip = null
where isnull(PaymentAddress1,'') = isnull(FacilityAddress1,'')
and  isnull(PaymentAddress2,'') = isnull(FacilityAddress2,'')
and  isnull(PaymentCity,'') = isnull(FacilityCity,'')
and  isnull(PaymentState,'') = isnull(FacilityState,'')
and  isnull(PaymentZip,'') = isnull(FacilityZip,'')


*/

            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 55
              WHERE
                ClaimBatchId = @ParmClaimBatchId




            -- Delete Old ChargeErrors
            DELETE c
                FROM    #ClaimLines a
                    JOIN #Charges b ON(a.ClaimLineId = b.ClaimLineId)
                    JOIN ChargeErrors c ON(b.ChargeId = c.ChargeId)


            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 60
              WHERE
                ClaimBatchId = @ParmClaimBatchId


            --SELECT * FROM #ClaimLines

            -- Declare all temp tables here
            SELECT  @Bookmark = 'Temp Table Declaration'
            CREATE TABLE #DiagnosisDocumentErrors (
                XClaimId     INT NULL
              , ClientId     INT NULL
              , ErrorMessage VARCHAR(250)
            )
            --
            DECLARE @AuthGrouping CHAR(1)
            --#EH!INFO!ADD!@AuthGrouping!

            SELECT  @AuthGrouping = AuthorizationId
              FROM  dbo.CoveragePlanClaimGroupingCriteria a
                  JOIN dbo.ClaimBatches b ON b.ClaimFormatId = a.ClaimFormatId
                  JOIN dbo.CoveragePlans c ON( c.CoveragePlanId = b.CoveragePlanId
                                               OR   c.PayerId = b.PayerId)
              WHERE
                b.ClaimBatchId = @ParmClaimBatchId
                AND c.CoveragePlanId = a.CoveragePlanId
            PRINT @AuthGrouping

            -- XClaim
            INSERT INTO #LineGrouper(XClaimId
                                   , ClientId
                                   , ClientLastName
                                   , ClientFirstName
                                   , ClientMiddleName
                                   , ClientSSN
                                   , ClientSuffix
                                   , ClientAddress1
                                   , ClientAddress2
                                   , ClientCity
                                   , ClientState
                                   , ClientZip
                                   , ClientHomePhone
                                   , ClientDOB
                                   , ClientSex
                                   , ClientIsSubscriber
                                   , SubscriberContactId
                                   , StudentStatus
                                   , MaritalStatus
                                   , EmploymentStatus
                                   , EmploymentRelated
                                   , AutoRelated
                                   , OtherAccidentRelated
                                   , RegistrationDate
                                   , DischargeDate
                                   , RelatedHospitalAdmitDate
                                   , ClientCoveragePlanId
                                   , InsuredId
                                   , GroupNumber
                                   , GroupName
                                   , InsuredLastName
                                   , InsuredFirstName
                                   , InsuredMiddleName
                                   , InsuredSuffix
                                   , InsuredRelation
                                   , InsuredRelationCode
                                   , InsuredAddress1
                                   , InsuredAddress2
                                   , InsuredCity
                                   , InsuredState
                                   , InsuredZip
                                   , InsuredHomePhone
                                   , InsuredSex
                                   , InsuredSSN
                                   , InsuredDOB
                                    --DateOfService ,
                                    --EndDateOfService ,
                                    --ProgramId ,
                                    --LocationId ,
                                   , PlaceOfService
                                   , PlaceOfServiceCode
                                   , TypeOfServiceCode
                                    --DiagnosisCode1 ,
                                    --DiagnosisCode2 ,
                                    --DiagnosisCode3 ,
                                    --DiagnosisCode4 ,
                                    --DiagnosisCode5 ,
                                    --DiagnosisCode6 ,
                                    --DiagnosisCode7 ,
                                    --DiagnosisCode8 ,
                                    --DiagnosisCode9 ,
                                    --DiagnosisCode10 ,
                                    --DiagnosisCode11 ,
                                    --DiagnosisCode12 ,
                                    --DiagnosisCode13 ,
                                    --AuthorizationId ,
                                   , AuthorizationNumber
                                   , SubmissionReasonCode
                                   , PayerClaimControlNumber
                                   , EmergencyIndicator
                                    --ClinicianId ,
                                    --ClinicianLastName ,
                                    --ClinicianFirstName ,
                                    --ClinicianMiddleName ,
                                    --ClinicianSex ,
                                   , AttendingProviderTaxIdType
                                   , AttendingProviderTaxId
                                   , AttendingProviderTaxonomyCode
                                   , AttendingId
                                   , AttendingProviderEntityQualifier
                                   , AttendingProviderEntityCode
                                   , AttendingProviderIdType
                                   , AttendingProviderId
                                   , AttendingProviderLastName
                                   , AttendingProviderFirstName
                                   , AttendingProviderMiddleName
                                   , AttendingProviderLicenseNumber
                                   , Priority
                                   , CoveragePlanId
                                   , MedicaidPayer
                                   , MedicarePayer
                                   , PayerName
                                   , PayerAddressHeading
                                   , PayerAddress1
                                   , PayerAddress2
                                   , PayerCity
                                   , PayerState
                                   , PayerZip
                                   , MedicareInsuranceTypeCode
                                   , ClaimFilingIndicatorCode
                                   , ElectronicClaimsPayerId
                                   , ClaimOfficeNumber
                                   , AgencyName
                                   , BillingProviderTaxIdType
                                   , BillingProviderTaxId
                                   , BillingProviderIdType
                                   , BillingProviderId
                                   , BillingTaxonomyCode
                                   , BillingProviderLastName
                                   , BillingProviderFirstName
                                   , BillingProviderMiddleName
                                   , BillingProviderNPI
                                   , PayToProviderTaxIdType
                                   , PayToProviderTaxId
                                   , PayToProviderIdType
                                   , PayToProviderId
                                   , PayToProviderLastName
                                   , PayToProviderFirstName
                                   , PayToProviderMiddleName
                                   , PayToProviderNPI
                                   , RenderingProviderTaxIdType
                                   , RenderingProviderTaxId
                                   , RenderingProviderIdType
                                   , RenderingProviderId
                                   , RenderingProviderLastName
                                   , RenderingProviderFirstName
                                   , RenderingProviderMiddleName
                                   , RenderingProviderTaxonomyCode
                                   , RenderingProviderNPI
                                   , ReferringProviderTaxIdType
                                   , ReferringProviderTaxId
                                   , ReferringProviderIdType
                                   , ReferringProviderId
                                   , ReferringProviderLastName
                                   , ReferringProviderFirstName
                                   , ReferringProviderMiddleName
                                   , ReferringProviderNPI
                                   , FacilityEntityCode
                                   , FacilityName
                                   , FacilityTaxIdType
                                   , FacilityTaxId
                                   , FacilityProviderIdType
                                   , FacilityProviderId
                                   , FacilityAddress1
                                   , FacilityAddress2
                                   , FacilityCity
                                   , FacilityState
                                   , FacilityZip
                                   , FacilityPhone
                                   , FacilityNPI
                                   , PaymentAddress1
                                   , PaymentAddress2
                                   , PaymentCity
                                   , PaymentState
                                   , PaymentZip
                                   , PaymentPhone
                                   , ReferringId
                                   , HCFAReservedValue
                                   , ClientGroupId
                                   , ClaimFrequencyCode
                                   , AdmissionTypeCode
                                   , AdmissionSourceCode
                                   , PatientStatusCode
                                   , StatementStartDate
                                   , StatementEndDate
                                   , CustomField1
                                   , CustomField2
                                   , CustomField3
                                   , CustomField4
                                   , CustomField5
                                   , CustomField6
                                   , CustomField7
                                   , CustomField8
                                   , CustomField9
                                   , CustomField10
                                   , InpatientAdmitDate
                                   , IsICD10Service
                                   , ClientInpatientVisitId
                                   , InpatientProgram
								   , MedicalRecordNumber)
              SELECT    1000000 + ROW_NUMBER() OVER (ORDER BY
                                                         ClientId
                                                       , ClientLastName
                                                       , ClientFirstName
                                                       , ClientMiddleName
                                                       , ClientSSN
                                                       , ClientSuffix
                                                       , ClientAddress1
                                                       , ClientAddress2
                                                       , ClientCity
                                                       , ClientState
                                                       , ClientZip
                                                       , ClientHomePhone
                                                       , ClientDOB
                                                       , ClientSex
                                                       , ClientIsSubscriber
                                                       , SubscriberContactId
                                                       , StudentStatus
                                                       , MaritalStatus
                                                       , EmploymentStatus
                                                       , EmploymentRelated
                                                       , AutoRelated
                                                       , OtherAccidentRelated
                                                       , RegistrationDate
                                                       , DischargeDate
                                                       , RelatedHospitalAdmitDate
                                                       , ClientCoveragePlanId
                                                       , InsuredId
                                                       , GroupNumber
                                                       , GroupName
                                                       , InsuredLastName
                                                       , InsuredFirstName
                                                       , InsuredMiddleName
                                                       , InsuredSuffix
                                                       , InsuredRelation
                                                       , InsuredRelationCode
                                                       , InsuredAddress1
                                                       , InsuredAddress2
                                                       , InsuredCity
                                                       , InsuredState
                                                       , InsuredZip
                                                       , InsuredHomePhone
                                                       , InsuredSex
                                                       , InsuredSSN
                                                       , InsuredDOB
                                                       , PlaceOfService
                                                       , PlaceOfServiceCode
                                                       , TypeOfServiceCode
                                                       , SubmissionReasonCode
                                                       , PayerClaimControlNumber
                                                       , EmergencyIndicator
                                                       , AttendingProviderTaxIdType
                                                       , AttendingProviderTaxId
                                                       , AttendingProviderTaxonomyCode
                                                       , AttendingId
                                                       , AttendingProviderEntityQualifier
                                                       , AttendingProviderEntityCode
                                                       , AttendingProviderIdType
                                                       , AttendingProviderId
                                                       , AttendingProviderLastName
                                                       , AttendingProviderFirstName
                                                       , AttendingProviderMiddleName
                                                       , AttendingProviderLicenseNumber
                                                       , Priority
                                                       , CoveragePlanId
                                                       , MedicaidPayer
                                                       , MedicarePayer
                                                       , PayerName
                                                       , PayerAddressHeading
                                                       , PayerAddress1
                                                       , PayerAddress2
                                                       , PayerCity
                                                       , PayerState
                                                       , PayerZip
                                                       , MedicareInsuranceTypeCode
                                                       , ClaimFilingIndicatorCode
                                                       , ElectronicClaimsPayerId
                                                       , ClaimOfficeNumber
                                                       , AgencyName
                                                       , BillingProviderTaxIdType
                                                       , BillingProviderTaxId
                                                       , BillingProviderIdType
                                                       , BillingProviderId
                                                       , BillingTaxonomyCode
                                                       , BillingProviderLastName
                                                       , BillingProviderFirstName
                                                       , BillingProviderMiddleName
                                                       , BillingProviderNPI
                                                       , PayToProviderTaxIdType
                                                       , PayToProviderTaxId
                                                       , PayToProviderIdType
                                                       , PayToProviderId
                                                       , PayToProviderLastName
                                                       , PayToProviderFirstName
                                                       , PayToProviderMiddleName
                                                       , PayToProviderNPI
                                                       , RenderingProviderTaxIdType
                                                       , RenderingProviderTaxId
                                                       , RenderingProviderIdType
                                                       , RenderingProviderId
                                                       , RenderingProviderLastName
                                                       , RenderingProviderFirstName
                                                       , RenderingProviderMiddleName
                                                       , RenderingProviderTaxonomyCode
                                                       , RenderingProviderNPI
                                                       , ReferringProviderTaxIdType
                                                       , ReferringProviderTaxId
                                                       , ReferringProviderIdType
                                                       , ReferringProviderId
                                                       , ReferringProviderLastName
                                                       , ReferringProviderFirstName
                                                       , ReferringProviderMiddleName
                                                       , ReferringProviderNPI
                                                       , FacilityEntityCode
                                                       , FacilityName
                                                       , FacilityTaxIdType
                                                       , FacilityTaxId
                                                       , FacilityProviderIdType
                                                       , FacilityProviderId
                                                       , FacilityAddress1
                                                       , FacilityAddress2
                                                       , FacilityCity
                                                       , FacilityState
                                                       , FacilityZip
                                                       , FacilityPhone
                                                       , FacilityNPI
                                                       , PaymentAddress1
                                                       , PaymentAddress2
                                                       , PaymentCity
                                                       , PaymentState
                                                       , PaymentZip
                                                       , PaymentPhone
                                                       , ReferringId
                                                       , HCFAReservedValue
                                                       , ClientGroupId
                                                       , ClaimFrequencyCode
                                                       , AdmissionTypeCode
                                                       , AdmissionSourceCode
                                                       , PatientStatusCode
                                                       , StatementStartDate
                                                       , StatementEndDate
                                                       , CustomField1
                                                       , CustomField2
                                                       , CustomField3
                                                       , CustomField4
                                                       , CustomField5
                                                       , CustomField6
                                                       , CustomField7
                                                       , CustomField8
                                                       , CustomField9
                                                       , CustomField10
                                                       , InpatientAdmitDate
                                                       , IsICD10Service
                                                       , ClientInpatientVisitId
													   , MedicalRecordNumber) AS XClaimId
                      , ClientId
                      , ClientLastName
                      , ClientFirstName
                      , ClientMiddleName
                      , ClientSSN
                      , ClientSuffix
                      , ClientAddress1
                      , ClientAddress2
                      , ClientCity
                      , ClientState
                      , ClientZip
                      , ClientHomePhone
                      , ClientDOB
                      , ClientSex
                      , ClientIsSubscriber
                      , SubscriberContactId
                      , StudentStatus
                      , MaritalStatus
                      , EmploymentStatus
                      , EmploymentRelated
                      , AutoRelated
                      , OtherAccidentRelated
                      , RegistrationDate
                      , DischargeDate
                      , RelatedHospitalAdmitDate
                      , ClientCoveragePlanId
                      , InsuredId
                      , GroupNumber
                      , GroupName
                      , InsuredLastName
                      , InsuredFirstName
                      , InsuredMiddleName
                      , InsuredSuffix
                      , InsuredRelation
                      , InsuredRelationCode
                      , InsuredAddress1
                      , InsuredAddress2
                      , InsuredCity
                      , InsuredState
                      , InsuredZip
                      , InsuredHomePhone
                      , InsuredSex
                      , InsuredSSN
                      , InsuredDOB
                        --CASE WHEN ISNULL(BedProcedure, 'N') = 'Y' THEN NULL
                        --     ELSE min(DateOfService)
                        --END ,
                        --CASE WHEN ISNULL(BedProcedure, 'N') = 'Y' THEN NULL
                        --     ELSE EndDateOfService
                        --END ,
                        --ProgramId ,
                        --LocationId ,
                      , PlaceOfService
                      , PlaceOfServiceCode
                      , TypeOfServiceCode
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode1
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode2
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode3
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode4
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode5
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode6
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode7
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode8
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode9
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode10
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode11
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode12
                        --END ,
                        --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                        --     ELSE DiagnosisCode13
                        --END ,
                        --AuthorizationId ,
                      , AuthorizationNumber
                      , SubmissionReasonCode
                      , PayerClaimControlNumber
                      , EmergencyIndicator
                        --ClinicianId ,
                        --ClinicianLastName ,
                        --ClinicianFirstName ,
                        --ClinicianMiddleName ,
                        --ClinicianSex ,
                      , AttendingProviderTaxIdType
                      , AttendingProviderTaxId
                      , AttendingProviderTaxonomyCode
                      , AttendingId
                      , AttendingProviderEntityQualifier
                      , AttendingProviderEntityCode
                      , AttendingProviderIdType
                      , AttendingProviderId
                      , AttendingProviderLastName
                      , AttendingProviderFirstName
                      , AttendingProviderMiddleName
                        -- apoole 11/18 AttendingProviderNPI,
                      , AttendingProviderLicenseNumber
                      , Priority
                      , CoveragePlanId
                      , MedicaidPayer
                      , MedicarePayer
                      , PayerName
                      , PayerAddressHeading
                      , PayerAddress1
                      , PayerAddress2
                      , PayerCity
                      , PayerState
                      , PayerZip
                      , MedicareInsuranceTypeCode
                      , ClaimFilingIndicatorCode
                      , ElectronicClaimsPayerId
                      , ClaimOfficeNumber
                      , AgencyName
                      , BillingProviderTaxIdType
                      , BillingProviderTaxId
                      , BillingProviderIdType
                      , BillingProviderId
                      , BillingTaxonomyCode
                      , BillingProviderLastName
                      , BillingProviderFirstName
                      , BillingProviderMiddleName
                      , BillingProviderNPI
                      , PayToProviderTaxIdType
                      , PayToProviderTaxId
                      , PayToProviderIdType
                      , PayToProviderId
                      , PayToProviderLastName
                      , PayToProviderFirstName
                      , PayToProviderMiddleName
                      , PayToProviderNPI
                      , RenderingProviderTaxIdType
                      , RenderingProviderTaxId
                      , RenderingProviderIdType
                      , RenderingProviderId
                      , RenderingProviderLastName
                      , RenderingProviderFirstName
                      , RenderingProviderMiddleName
                      , RenderingProviderTaxonomyCode
                      , RenderingProviderNPI
                      , ReferringProviderTaxIdType
                      , ReferringProviderTaxId
                      , ReferringProviderIdType
                      , ReferringProviderId
                      , ReferringProviderLastName
                      , ReferringProviderFirstName
                      , ReferringProviderMiddleName
                      , ReferringProviderNPI
                      , FacilityEntityCode
                      , FacilityName
                      , FacilityTaxIdType
                      , FacilityTaxId
                      , FacilityProviderIdType
                      , FacilityProviderId
                      , FacilityAddress1
                      , FacilityAddress2
                      , FacilityCity
                      , FacilityState
                      , FacilityZip
                      , FacilityPhone
                      , FacilityNPI
                      , PaymentAddress1
                      , PaymentAddress2
                      , PaymentCity
                      , PaymentState
                      , PaymentZip
                      , PaymentPhone
                      , ReferringId
                      , HCFAReservedValue
                      , ClientGroupId
                      , ClaimFrequencyCode
                      , AdmissionTypeCode
                      , AdmissionSourceCode
                      , PatientStatusCode
                      , StatementStartDate
                      , StatementEndDate
                      , CustomField1
                      , CustomField2
                      , CustomField3
                      , CustomField4
                      , CustomField5
                      , CustomField6
                      , CustomField7
                      , CustomField8
                      , CustomField9
                      , CustomField10
                      , InpatientAdmitDate
                      , IsICD10Service
                      , ClientInpatientVisitId
                      , InpatientProgram
					  , MedicalRecordNumber
              FROM  #ClaimLines
              GROUP BY
                  ClientId
                , ClientLastName
                , ClientFirstName
                , ClientMiddleName
                , ClientSSN
                , ClientSuffix
                , ClientAddress1
                , ClientAddress2
                , ClientCity
                , ClientState
                , ClientZip
                , ClientHomePhone
                , ClientDOB
                , ClientSex
                , ClientIsSubscriber
                , SubscriberContactId
                , StudentStatus
                , MaritalStatus
                , EmploymentStatus
                , EmploymentRelated
                , AutoRelated
                , OtherAccidentRelated
                , RegistrationDate
                , DischargeDate
                , RelatedHospitalAdmitDate
                , ClientCoveragePlanId
                , InsuredId
                , GroupNumber
                , GroupName
                , InsuredLastName
                , InsuredFirstName
                , InsuredMiddleName
                , InsuredSuffix
                , InsuredRelation
                , InsuredRelationCode
                , InsuredAddress1
                , InsuredAddress2
                , InsuredCity
                , InsuredState
                , InsuredZip
                , InsuredHomePhone
                , InsuredSex
                , InsuredSSN
                , InsuredDOB
                --CASE WHEN ISNULL(BedProcedure, 'N') = 'Y' THEN NULL
                --     ELSE DateOfService
                --END ,
                --CASE WHEN ISNULL(BedProcedure, 'N') = 'Y' THEN NULL
                --     ELSE EndDateOfService
                --END ,
                --ProgramId ,
                --LocationId ,
                , PlaceOfService
                , PlaceOfServiceCode
                , TypeOfServiceCode
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode1
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode2
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode3
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode4
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode5
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode6
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode7
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode8
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode9
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode10
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode11
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode12
                --END ,
                --CASE WHEN ISNULL(BillingCode, '') = '' THEN NULL
                --     ELSE DiagnosisCode13
                --END ,
                --AuthorizationId ,
                , AuthorizationNumber
                , SubmissionReasonCode
                , PayerClaimControlNumber
                , EmergencyIndicator
                --ClinicianId ,
                --ClinicianLastName ,
                --ClinicianFirstName ,
                --ClinicianMiddleName ,
                --ClinicianSex ,
                , AttendingProviderTaxIdType
                , AttendingProviderTaxId
                , AttendingProviderTaxonomyCode
                , AttendingId
                , AttendingProviderEntityQualifier
                , AttendingProviderEntityCode
                , AttendingProviderIdType
                , AttendingProviderId
                , AttendingProviderLastName
                , AttendingProviderFirstName
                , AttendingProviderMiddleName
                -- apoole 11/18 AttendingProviderNPI,
                , AttendingProviderLicenseNumber
                , Priority
                , CoveragePlanId
                , MedicaidPayer
                , MedicarePayer
                , PayerName
                , PayerAddressHeading
                , PayerAddress1
                , PayerAddress2
                , PayerCity
                , PayerState
                , PayerZip
                , MedicareInsuranceTypeCode
                , ClaimFilingIndicatorCode
                , ElectronicClaimsPayerId
                , ClaimOfficeNumber
                , AgencyName
                , BillingProviderTaxIdType
                , BillingProviderTaxId
                , BillingProviderIdType
                , BillingProviderId
                , BillingTaxonomyCode
                , BillingProviderLastName
                , BillingProviderFirstName
                , BillingProviderMiddleName
                , BillingProviderNPI
                , PayToProviderTaxIdType
                , PayToProviderTaxId
                , PayToProviderIdType
                , PayToProviderId
                , PayToProviderLastName
                , PayToProviderFirstName
                , PayToProviderMiddleName
                , PayToProviderNPI
                , RenderingProviderTaxIdType
                , RenderingProviderTaxId
                , RenderingProviderIdType
                , RenderingProviderId
                , RenderingProviderLastName
                , RenderingProviderFirstName
                , RenderingProviderMiddleName
                , RenderingProviderTaxonomyCode
                , RenderingProviderNPI
                , ReferringProviderTaxIdType
                , ReferringProviderTaxId
                , ReferringProviderIdType
                , ReferringProviderId
                , ReferringProviderLastName
                , ReferringProviderFirstName
                , ReferringProviderMiddleName
                , ReferringProviderNPI
                , FacilityEntityCode
                , FacilityName
                , FacilityTaxIdType
                , FacilityTaxId
                , FacilityProviderIdType
                , FacilityProviderId
                , FacilityAddress1
                , FacilityAddress2
                , FacilityCity
                , FacilityState
                , FacilityZip
                , FacilityPhone
                , FacilityNPI
                , PaymentAddress1
                , PaymentAddress2
                , PaymentCity
                , PaymentState
                , PaymentZip
                , PaymentPhone
                , ReferringId
                , HCFAReservedValue
                , ClientGroupId
                , ClaimFrequencyCode
                , AdmissionTypeCode
                , AdmissionSourceCode
                , PatientStatusCode
                , StatementStartDate
                , StatementEndDate
                , CustomField1
                , CustomField2
                , CustomField3
                , CustomField4
                , CustomField5
                , CustomField6
                , CustomField7
                , CustomField8
                , CustomField9
                , CustomField10
                , InpatientAdmitDate
                , IsICD10Service
                , ClientInpatientVisitId
                , InpatientProgram
				, MedicalRecordNumber


                --SELECT * FROM #LineGrouper

            UPDATE  a
              SET   XClaimId = Grouper.XClaimId
              FROM  #ClaimLines a
                  JOIN #LineGrouper Grouper ON a.ClientId = Grouper.ClientId
                                               AND  ISNULL(a.ClientLastName, '') = ISNULL(Grouper.ClientLastName, '')
                                               AND  ISNULL(a.ClientFirstName, '') = ISNULL(Grouper.ClientFirstName, '')
                                               AND  ISNULL(a.ClientMiddleName, '') = ISNULL(Grouper.ClientMiddleName, '')
                                               AND  ISNULL(a.ClientSSN, '') = ISNULL(Grouper.ClientSSN, '')
                                               AND  ISNULL(a.ClientSuffix, '') = ISNULL(Grouper.ClientSuffix, '')
                                               AND  ISNULL(a.ClientAddress1, '') = ISNULL(Grouper.ClientAddress1, '')
                                               AND  ISNULL(a.ClientAddress2, '') = ISNULL(Grouper.ClientAddress2, '')
                                               AND  ISNULL(a.ClientCity, '') = ISNULL(Grouper.ClientCity, '')
                                               AND  ISNULL(a.ClientState, '') = ISNULL(Grouper.ClientState, '')
                                               AND  ISNULL(a.ClientZip, '') = ISNULL(Grouper.ClientZip, '')
                                               AND  ISNULL(a.ClientHomePhone, '') = ISNULL(Grouper.ClientHomePhone, '')
                                               AND  ISNULL(a.ClientDOB, '') = ISNULL(Grouper.ClientDOB, '')
                                               AND  ISNULL(a.ClientSex, '') = ISNULL(Grouper.ClientSex, '')
                                               AND  ISNULL(a.ClientIsSubscriber, '') = ISNULL(Grouper.ClientIsSubscriber, '')
                                               AND  ISNULL(a.SubscriberContactId, 0) = ISNULL(Grouper.SubscriberContactId, 0)
                                               AND  ISNULL(a.StudentStatus, '') = ISNULL(Grouper.StudentStatus, '')
                                               AND  ISNULL(a.MaritalStatus, '') = ISNULL(Grouper.MaritalStatus, '')
                                               AND  ISNULL(a.EmploymentStatus, '') = ISNULL(Grouper.EmploymentStatus, '')
                                               AND  ISNULL(a.EmploymentRelated, '') = ISNULL(Grouper.EmploymentRelated, '')
                                               AND  ISNULL(a.AutoRelated, '') = ISNULL(Grouper.AutoRelated, '')
                                               AND  ISNULL(a.OtherAccidentRelated, '') = ISNULL(Grouper.OtherAccidentRelated, '')
                                               AND  ISNULL(a.RegistrationDate, '12/31/9999') = ISNULL(Grouper.RegistrationDate, '12/31/9999')
                                               AND  ISNULL(a.DischargeDate, '12/31/9999') = ISNULL(Grouper.DischargeDate, '12/31/9999')
                                               AND  ISNULL(a.RelatedHospitalAdmitDate, '12/31/9999') = ISNULL(Grouper.RelatedHospitalAdmitDate, '12/31/9999')
                                               AND  ISNULL(a.ClientCoveragePlanId, 0) = ISNULL(Grouper.ClientCoveragePlanId, 0)
                                               AND  ISNULL(a.InsuredId, '') = ISNULL(Grouper.InsuredId, '')
                                               AND  ISNULL(a.GroupNumber, '') = ISNULL(Grouper.GroupNumber, '')
                                               AND  ISNULL(a.GroupName, '') = ISNULL(Grouper.GroupName, '')
                                               AND  ISNULL(a.InsuredLastName, '') = ISNULL(Grouper.InsuredLastName, '')
                                               AND  ISNULL(a.InsuredFirstName, '') = ISNULL(Grouper.InsuredFirstName, '')
                                               AND  ISNULL(a.InsuredMiddleName, '') = ISNULL(Grouper.InsuredMiddleName, '')
                                               AND  ISNULL(a.InsuredSuffix, '') = ISNULL(Grouper.InsuredSuffix, '')
                                               AND  ISNULL(a.InsuredRelation, 0) = ISNULL(Grouper.InsuredRelation, 0)
                                               AND  ISNULL(a.InsuredRelationCode, '') = ISNULL(Grouper.InsuredRelationCode, '')
                                               AND  ISNULL(a.InsuredAddress1, '') = ISNULL(Grouper.InsuredAddress1, '')
                                               AND  ISNULL(a.InsuredAddress2, '') = ISNULL(Grouper.InsuredAddress2, '')
                                               AND  ISNULL(a.InsuredCity, '') = ISNULL(Grouper.InsuredCity, '')
                                               AND  ISNULL(a.InsuredState, '') = ISNULL(Grouper.InsuredState, '')
                                               AND  ISNULL(a.InsuredZip, '') = ISNULL(Grouper.InsuredZip, '')
                                               AND  ISNULL(a.InsuredHomePhone, '') = ISNULL(Grouper.InsuredHomePhone, '')
                                               AND  ISNULL(a.InsuredSex, '') = ISNULL(Grouper.InsuredSex, '')
                                               AND  ISNULL(a.InsuredSSN, '') = ISNULL(Grouper.InsuredSSN, '')
                                               AND  ISNULL(a.InsuredDOB, '12/31/9999') = ISNULL(Grouper.InsuredDOB, '12/31/9999')
                                               --AND ( ( ISNULL(a.DateOfService, '') = ISNULL(Grouper.DateOfService, '')
                                               --        AND ISNULL(a.BedProcedure, 'N') <> 'Y'
                                               --      )
                                               --      OR ISNULL(a.BedProcedure, 'N') = 'Y'
                                               --    )
                                               --AND ( ( ISNULL(a.EndDateOfService, '') = ISNULL(Grouper.EndDateOfService, '')
                                               --         AND ISNULL(a.BedProcedure, 'N') <> 'Y'
                                               --      )
                                               --      OR ISNULL(a.BedProcedure, 'N') = 'Y'
                                               --    )

                                               --AND CASE WHEN ISNULL(a.BillingCode, '') = '' THEN NULL
                                               --         ELSE a.DateOfService
                                               --    END = CASE WHEN ISNULL(a.BillingCode, '') = '' THEN NULL
                                               --               ELSE Grouper.DateOfService
                                               --          END
                                               --AND CASE WHEN ISNULL(a.BillingCode, '') = '' THEN NULL
                                               --         ELSE a.EndDateOfService
                                               --    END = CASE WHEN ISNULL(a.BillingCode, '') = '' THEN NULL
                                               --               ELSE Grouper.EndDateOfService
                                               --          END
                                               --AND ISNULL(a.ProgramId, 0) = ISNULL(Grouper.ProgramId, 0)
                                               --AND ISNULL(a.LocationId, 0) = ISNULL(Grouper.LocationId, 0)
                                               AND  ISNULL(a.PlaceOfService, 0) = ISNULL(Grouper.PlaceOfService, 0)
                                               AND  ISNULL(a.PlaceOfServiceCode, '') = ISNULL(Grouper.PlaceOfServiceCode, '')
                                               AND  ISNULL(a.TypeOfServiceCode, '') = ISNULL(Grouper.TypeOfServiceCode, '')
                                               --AND ISNULL(a.AuthorizationId, 0) = ISNULL(Grouper.AuthorizationId, 0)
                                               AND  ISNULL(a.AuthorizationNumber, '') = ISNULL(Grouper.AuthorizationNumber, '')
                                               --AND CASE WHEN a.InpatientProgram = 'N' THEN a.AuthorizationId
                                               --         ELSE NULL
                                               --    END = CASE WHEN Grouper.InpatientProgram = 'N' THEN Grouper.AuthorizationId
                                               --               ELSE NULL
                                               --          END
                                               --AND CASE WHEN a.InpatientProgram = 'N' THEN a.AuthorizationNumber
                                               --         ELSE NULL
                                               --    END = CASE WHEN Grouper.InpatientProgram = 'N' THEN Grouper.AuthorizationNumber
                                               --               ELSE NULL
                                               --          END

                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode1, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode1, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode2, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode2, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode3, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode3, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode4, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode4, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode5, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode5, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode6, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode6, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode7, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode7, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode8, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode8, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode9, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode9, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode10, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode10, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode11, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode11, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode12, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode12, '')
                                               --          END
                                               --AND CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --         ELSE ISNULL(a.DiagnosisCode13, '')
                                               --    END = CASE WHEN ISNULL(BillingCode, '') = '' THEN ''
                                               --               ELSE ISNULL(Grouper.DiagnosisCode13, '')
                                               --          END
                                               AND  ISNULL(a.SubmissionReasonCode, '') = ISNULL(Grouper.SubmissionReasonCode, '')
                                               AND  ISNULL(a.PayerClaimControlNumber, '') = ISNULL(Grouper.PayerClaimControlNumber, '')
                                               AND  ISNULL(a.EmergencyIndicator, '') = ISNULL(Grouper.EmergencyIndicator, '')
                                               --AND ISNULL(a.ClinicianId, 0) = ISNULL(Grouper.ClinicianId, 0)
                                               --AND ISNULL(a.ClinicianLastName, '') = ISNULL(Grouper.ClinicianLastName, '')
                                               --AND ISNULL(a.ClinicianFirstName, '') = ISNULL(Grouper.ClinicianFirstName, '')
                                               --AND ISNULL(a.ClinicianMiddleName, '') = ISNULL(Grouper.ClinicianMiddleName, '')
                                               --AND ISNULL(a.ClinicianSex, '') = ISNULL(Grouper.ClinicianSex, '')
                                               AND  ISNULL(a.AttendingProviderTaxIdType, '') = ISNULL(Grouper.AttendingProviderTaxIdType, '')
                                               AND  ISNULL(a.AttendingProviderTaxId, '') = ISNULL(Grouper.AttendingProviderTaxId, '')
                                               AND  ISNULL(a.AttendingProviderTaxonomyCode, '') = ISNULL(Grouper.AttendingProviderTaxonomyCode, '')
                                               AND  ISNULL(a.AttendingId, 0) = ISNULL(Grouper.AttendingId, 0)
                                               AND  ISNULL(a.AttendingProviderEntityQualifier, '') = ISNULL(Grouper.AttendingProviderEntityQualifier, '')
                                               AND  ISNULL(a.AttendingProviderEntityCode, '') = ISNULL(Grouper.AttendingProviderEntityCode, '')
                                               AND  ISNULL(a.AttendingProviderIdType, '') = ISNULL(Grouper.AttendingProviderIdType, '')
                                               AND  ISNULL(a.AttendingProviderId, '') = ISNULL(Grouper.AttendingProviderId, '')
                                               AND  ISNULL(a.AttendingProviderLastName, '') = ISNULL(Grouper.AttendingProviderLastName, '')
                                               AND  ISNULL(a.AttendingProviderFirstName, '') = ISNULL(Grouper.AttendingProviderFirstName, '')
                                               AND  ISNULL(a.AttendingProviderMiddleName, '') = ISNULL(Grouper.AttendingProviderMiddleName, '')
                                               AND  ISNULL(a.AttendingProviderLicenseNumber, '') = ISNULL(Grouper.AttendingProviderLicenseNumber, '')
                                               -- apoole 11/18 and ISNULL(a.AttendingProviderNPI, '') = ISNULL(Grouper.AttendingProviderNPI, '')
                                               AND  ISNULL(a.Priority, 0) = ISNULL(Grouper.Priority, 0)
                                               AND  ISNULL(a.CoveragePlanId, 0) = ISNULL(Grouper.CoveragePlanId, 0)
                                               AND  ISNULL(a.MedicaidPayer, '') = ISNULL(Grouper.MedicaidPayer, '')
                                               AND  ISNULL(a.MedicarePayer, '') = ISNULL(Grouper.MedicarePayer, '')
                                               AND  ISNULL(a.PayerName, '') = ISNULL(Grouper.PayerName, '')
                                               AND  ISNULL(a.PayerAddressHeading, '') = ISNULL(Grouper.PayerAddressHeading, '')
                                               AND  ISNULL(a.PayerAddress1, '') = ISNULL(Grouper.PayerAddress1, '')
                                               AND  ISNULL(a.PayerAddress2, '') = ISNULL(Grouper.PayerAddress2, '')
                                               AND  ISNULL(a.PayerCity, '') = ISNULL(Grouper.PayerCity, '')
                                               AND  ISNULL(a.PayerState, '') = ISNULL(Grouper.PayerState, '')
                                               AND  ISNULL(a.PayerZip, '') = ISNULL(Grouper.PayerZip, '')
                                               AND  ISNULL(a.MedicareInsuranceTypeCode, '') = ISNULL(Grouper.MedicareInsuranceTypeCode, '')
                                               AND  ISNULL(a.ClaimFilingIndicatorCode, '') = ISNULL(Grouper.ClaimFilingIndicatorCode, '')
                                               AND  ISNULL(a.ElectronicClaimsPayerId, '') = ISNULL(Grouper.ElectronicClaimsPayerId, '')
                                               AND  ISNULL(a.ClaimOfficeNumber, '') = ISNULL(Grouper.ClaimOfficeNumber, '')
                                               AND  ISNULL(a.AgencyName, '') = ISNULL(Grouper.AgencyName, '')
                                               AND  ISNULL(a.BillingProviderTaxIdType, '') = ISNULL(Grouper.BillingProviderTaxIdType, '')
                                               AND  ISNULL(a.BillingProviderTaxId, '') = ISNULL(Grouper.BillingProviderTaxId, '')
                                               AND  ISNULL(a.BillingProviderIdType, '') = ISNULL(Grouper.BillingProviderIdType, '')
                                               AND  ISNULL(a.BillingProviderId, '') = ISNULL(Grouper.BillingProviderId, '')
                                               AND  ISNULL(a.BillingTaxonomyCode, '') = ISNULL(Grouper.BillingTaxonomyCode, '')
                                               AND  ISNULL(a.BillingProviderLastName, '') = ISNULL(Grouper.BillingProviderLastName, '')
                                               AND  ISNULL(a.BillingProviderFirstName, '') = ISNULL(Grouper.BillingProviderFirstName, '')
                                               AND  ISNULL(a.BillingProviderMiddleName, '') = ISNULL(Grouper.BillingProviderMiddleName, '')
                                               AND  ISNULL(a.BillingProviderNPI, '') = ISNULL(Grouper.BillingProviderNPI, '')
                                               AND  ISNULL(a.PayToProviderTaxIdType, '') = ISNULL(Grouper.PayToProviderTaxIdType, '')
                                               AND  ISNULL(a.PayToProviderTaxId, '') = ISNULL(Grouper.PayToProviderTaxId, '')
                                               AND  ISNULL(a.PayToProviderIdType, '') = ISNULL(Grouper.PayToProviderIdType, '')
                                               AND  ISNULL(a.PayToProviderId, '') = ISNULL(Grouper.PayToProviderId, '')
                                               AND  ISNULL(a.PayToProviderLastName, '') = ISNULL(Grouper.PayToProviderLastName, '')
                                               AND  ISNULL(a.PayToProviderFirstName, '') = ISNULL(Grouper.PayToProviderFirstName, '')
                                               AND  ISNULL(a.PayToProviderMiddleName, '') = ISNULL(Grouper.PayToProviderMiddleName, '')
                                               AND  ISNULL(a.PayToProviderNPI, '') = ISNULL(Grouper.PayToProviderNPI, '')
                                               AND  ISNULL(a.RenderingProviderTaxIdType, '') = ISNULL(Grouper.RenderingProviderTaxIdType, '')
                                               AND  ISNULL(a.RenderingProviderTaxId, '') = ISNULL(Grouper.RenderingProviderTaxId, '')
                                               AND  ISNULL(a.RenderingProviderIdType, '') = ISNULL(Grouper.RenderingProviderIdType, '')
                                               AND  ISNULL(a.RenderingProviderId, '') = ISNULL(Grouper.RenderingProviderId, '')
                                               AND  ISNULL(a.RenderingProviderLastName, '') = ISNULL(Grouper.RenderingProviderLastName, '')
                                               AND  ISNULL(a.RenderingProviderFirstName, '') = ISNULL(Grouper.RenderingProviderFirstName, '')
                                               AND  ISNULL(a.RenderingProviderMiddleName, '') = ISNULL(Grouper.RenderingProviderMiddleName, '')
                                               AND  ISNULL(a.RenderingProviderTaxonomyCode, '') = ISNULL(Grouper.RenderingProviderTaxonomyCode, '')
                                               AND  ISNULL(a.RenderingProviderNPI, '') = ISNULL(Grouper.RenderingProviderNPI, '')
                                               AND  ISNULL(a.ReferringProviderTaxIdType, '') = ISNULL(Grouper.ReferringProviderTaxIdType, '')
                                               AND  ISNULL(a.ReferringProviderTaxId, '') = ISNULL(Grouper.ReferringProviderTaxId, '')
                                               AND  ISNULL(a.ReferringProviderIdType, '') = ISNULL(Grouper.ReferringProviderIdType, '')
                                               AND  ISNULL(a.ReferringProviderId, '') = ISNULL(Grouper.ReferringProviderId, '')
                                               AND  ISNULL(a.ReferringProviderLastName, '') = ISNULL(Grouper.ReferringProviderLastName, '')
                                               AND  ISNULL(a.ReferringProviderFirstName, '') = ISNULL(Grouper.ReferringProviderFirstName, '')
                                               AND  ISNULL(a.ReferringProviderMiddleName, '') = ISNULL(Grouper.ReferringProviderMiddleName, '')
                                               AND  ISNULL(a.ReferringProviderNPI, '') = ISNULL(Grouper.ReferringProviderNPI, '')
                                               AND  ISNULL(a.FacilityEntityCode, '') = ISNULL(Grouper.FacilityEntityCode, '')
                                               AND  ISNULL(a.FacilityName, '') = ISNULL(Grouper.FacilityName, '')
                                               AND  ISNULL(a.FacilityTaxIdType, '') = ISNULL(Grouper.FacilityTaxIdType, '')
                                               AND  ISNULL(a.FacilityTaxId, '') = ISNULL(Grouper.FacilityTaxId, '')
                                               AND  ISNULL(a.FacilityProviderIdType, '') = ISNULL(Grouper.FacilityProviderIdType, '')
                                               AND  ISNULL(a.FacilityProviderId, '') = ISNULL(Grouper.FacilityProviderId, '')
                                               AND  ISNULL(a.FacilityAddress1, '') = ISNULL(Grouper.FacilityAddress1, '')
                                               AND  ISNULL(a.FacilityAddress2, '') = ISNULL(Grouper.FacilityAddress2, '')
                                               AND  ISNULL(a.FacilityCity, '') = ISNULL(Grouper.FacilityCity, '')
                                               AND  ISNULL(a.FacilityState, '') = ISNULL(Grouper.FacilityState, '')
                                               AND  ISNULL(a.FacilityZip, '') = ISNULL(Grouper.FacilityZip, '')
                                               AND  ISNULL(a.FacilityPhone, '') = ISNULL(Grouper.FacilityPhone, '')
                                               AND  ISNULL(a.FacilityNPI, '') = ISNULL(Grouper.FacilityNPI, '')
                                               AND  ISNULL(a.PaymentAddress1, '') = ISNULL(Grouper.PaymentAddress1, '')
                                               AND  ISNULL(a.PaymentAddress2, '') = ISNULL(Grouper.PaymentAddress2, '')
                                               AND  ISNULL(a.PaymentCity, '') = ISNULL(Grouper.PaymentCity, '')
                                               AND  ISNULL(a.PaymentState, '') = ISNULL(Grouper.PaymentState, '')
                                               AND  ISNULL(a.PaymentZip, '') = ISNULL(Grouper.PaymentZip, '')
                                               AND  ISNULL(a.PaymentPhone, '') = ISNULL(Grouper.PaymentPhone, '')
                                               AND  ISNULL(a.ReferringId, 0) = ISNULL(Grouper.ReferringId, 0)
                                               AND  ISNULL(a.HCFAReservedValue, '') = ISNULL(Grouper.HCFAReservedValue, '')
                                               AND  ISNULL(a.ClientGroupId, 0) = ISNULL(Grouper.ClientGroupId, 0)
                                               AND  ISNULL(a.ClaimFrequencyCode, '') = ISNULL(Grouper.ClaimFrequencyCode, '')
                                               AND  ISNULL(a.AdmissionTypeCode, '') = ISNULL(Grouper.AdmissionTypeCode, '')
                                               AND  ISNULL(a.AdmissionSourceCode, '') = ISNULL(Grouper.AdmissionSourceCode, '')
                                               AND  ISNULL(a.PatientStatusCode, '') = ISNULL(Grouper.PatientStatusCode, '')
                                               AND  ISNULL(a.StatementStartDate, '12/31/9999') = ISNULL(Grouper.StatementStartDate, '12/31/9999')
                                               AND  ISNULL(a.StatementEndDate, '12/31/9999') = ISNULL(Grouper.StatementEndDate, '12/31/9999')
                                               AND  ISNULL(a.CustomField1, '') = ISNULL(Grouper.CustomField1, '')
                                               AND  ISNULL(a.CustomField2, '') = ISNULL(Grouper.CustomField2, '')
                                               AND  ISNULL(a.CustomField3, '') = ISNULL(Grouper.CustomField3, '')
                                               AND  ISNULL(a.CustomField4, '') = ISNULL(Grouper.CustomField4, '')
                                               AND  ISNULL(a.CustomField5, '') = ISNULL(Grouper.CustomField5, '')
                                               AND  ISNULL(a.CustomField6, '') = ISNULL(Grouper.CustomField6, '')
                                               AND  ISNULL(a.CustomField7, '') = ISNULL(Grouper.CustomField7, '')
                                               AND  ISNULL(a.CustomField8, '') = ISNULL(Grouper.CustomField8, '')
                                               AND  ISNULL(a.CustomField9, '') = ISNULL(Grouper.CustomField9, '')
                                               AND  ISNULL(a.CustomField10, '') = ISNULL(Grouper.CustomField10, '')
                                               AND  ISNULL(a.InpatientAdmitDate, '12/31/9999') = ISNULL(Grouper.InpatientAdmitDate, '12/31/9999')
                                               AND  ISNULL(a.IsICD10Service, '') = ISNULL(Grouper.IsICD10Service, '')
                                               AND  ISNULL(a.ClientInpatientVisitId, 0) = ISNULL(Grouper.ClientInpatientVisitId, 0)
                                               AND  ISNULL(a.InpatientProgram, 'N') = ISNULL(Grouper.InpatientProgram, 'N')
											   AND  ISNULL(a.MedicalRecordNumber, '') = ISNULL(Grouper.MedicalRecordNumber, '')

            --End New apoole 10/30




            --12/16 - apoole Calculate Statement Begin and End Dates, store in XClaims
            ;
            WITH a
              AS (SELECT    XClaimId
                          , MIN(CONVERT(DATE, ch.DateOfService))                              AS StatementStartDate
                          , MAX(CONVERT(DATE, ISNULL(ch.EndDateOfService, ch.DateOfService))) AS StatementEndDate
                          , cl.IsICD10Service
                          , cl.ClientInpatientVisitId
                          , cl.InpatientProgram
                          , cl.InpatientAdmitDate
                          , cl.InpatientDischargedDate
                    FROM    #ClaimLines cl
                        JOIN #Charges ch ON cl.ClaimLineId = ch.ClaimLineId
                    GROUP BY
                      XClaimId
                    , cl.IsICD10Service
                    , cl.ClientInpatientVisitId
                    , cl.InpatientProgram
                    , cl.InpatientAdmitDate
                    , cl.InpatientDischargedDate)
            INSERT INTO #XClaims(XClaimId
                               , StatementStartDate
                               , StatementEndDate
                               , IsICD10Service
                               , ClientInpatientVisitId
                               , InpatientProgram
                               , InpatientAdmitDate
                               , InpatientDischargedDate)
              SELECT    a.XClaimId
                      , a.StatementStartDate
                      , a.StatementEndDate
                      , a.IsICD10Service
                      , a.ClientInpatientVisitId
                      , a.InpatientProgram
                      , a.InpatientAdmitDate
                      , a.InpatientDischargedDate
              FROM  a
            --End New apoole 12/16 



            UPDATE  #XClaims
              SET   StatementEndDate = CASE
                                           WHEN DATEDIFF(dd, StatementEndDate, InpatientDischargedDate) = 1 THEN InpatientDischargedDate
                                           WHEN DATEDIFF(dd, StatementEndDate, InpatientDischargedDate) = 0 THEN InpatientDischargedDate
                                           ELSE StatementEndDate
                                       END


            -- Added 8/19/2015 Update Statement Start and End Dates in #ClaimLines
            UPDATE  a
              SET   StatementStartDate = b.StatementStartDate
                  , StatementEndDate = b.StatementEndDate
              FROM  #ClaimLines a
                  JOIN #XClaims b ON a.XClaimId = b.XClaimId


            -- Added 11/4/2015 Update DOS in #ClaimLines

            UPDATE  #ClaimLines
              SET   DateOfService = CASE
                                        WHEN InpatientProgram = 'Y' THEN NULL
                                        WHEN InpatientProgram = 'N'
                                             AND (BedProcedure = 'Y'
                                                  OR MedicationProcedure = 'Y') THEN NULL
                                        ELSE DateOfService
                                    END
                  , EndDateOfService = CASE
                                           WHEN InpatientProgram = 'Y' THEN NULL
                                           WHEN InpatientProgram = 'N'
                                                AND (BedProcedure = 'Y'
                                                     OR MedicationProcedure = 'Y') THEN NULL
                                           ELSE EndDateOfService
                                       END


            --Aggregate ClaimsLines data into XClaims - new - 12/16
            UPDATE  xc
              SET   xc.TotalAmount = gcl.TotalAmount
                  , xc.PlaceOfService = gcl.PlaceOfService
                  , xc.ClaimFrequencyCode = gcl.ClaimFrequencyCode
                    --    xc.SubmissionReasonCode = gcl.SubmissionReasonCode,
                  , xc.SignatureIndicator = gcl.SignatureIndicator
                  , xc.MedicareAssignCode = gcl.MedicareAssignCode
                  , xc.BenefitsAssignCertificationIndicator = gcl.BenefitsAssignCertificationIndicator
                  , xc.ReleaseCode = gcl.ReleaseCode
                  , xc.PatientSignatureCode = gcl.PatientSignatureCode
                    --    xc.RelatedCauses1Code = gcl.RelatedCauses1Code,
                    --    xc.RelatedCauses2Code = gcl.RelatedCauses2Code,
                    --    xc.RelatedCauses3Code = gcl.RelatedCauses3Code,
                    --    xc.AutoAccidentStateCode = gcl.AutoAccidentStateCode,
                    --    xc.SpecialProgramIndicator = gcl.SpecialProgramIndicator,
                    --    xc.ParticipationAgreement = gcl.ParticipationAgreement,
                    --    xc.DelayReasonCode = gcl.DelayReasonCode,
                  , xc.AdmissionTypeCode = gcl.AdmissionTypeCode
                  , xc.AdmissionSourceCode = gcl.AdmissionSourceCode
                  , xc.PatientStatusCode = gcl.PatientStatusCode
                    --    xc.OrderDate = gcl.OrderDate,
                    --    xc.InitialTreatmentDate = gcl.InitialTreatmentDate,
                    --    xc.ReferralDate = gcl.ReferralDate,
                    --    xc.LastSeenDate = gcl.LastSeenDate,
                    --    xc.CurrentIllnessDate = gcl.CurrentIllnessDate,
                    --    xc.AcuteManifestationDate = gcl.AcuteManifestationDate,
                    --    xc.SimilarSymptomDate = gcl.SimilarSymptomDate,
                    --    xc.AccidentDate = gcl.AccidentDate,
                    --    xc.EstimatedBirthDate = gcl.EstimatedBirthDate,
                    --    xc.PrescriptionDate = gcl.PrescriptionDate,
                    --    xc.DisabilityFromDate = gcl.DisabilityFromDate,
                    --    xc.DisabilityToDate = gcl.DisabilityToDate,
                    --    xc.LastWorkedDate = gcl.LastWorkedDate,
                    --    xc.WorkReturnDate = gcl.WorkReturnDate,
                  , xc.RelatedHospitalAdmitDate = gcl.RelatedHospitalAdmitDate
                    --    xc.RelatedHospitalDischargeDate = gcl.RelatedHospitalDischargeDate,
                  , xc.PatientAmountPaid = gcl.PatientAmountPaid
                    --    xc.TotalPurchasedServiceAmount = gcl.TotalPurchasedServiceAmount,
                    --    xc.ServiceAuthorizationExceptionCode = gcl.ServiceAuthorizationExceptionCode,
                  , xc.PriorAuthorizationNumber = gcl.PriorAuthorizationNumber
                  , xc.PayerClaimControlNumber = gcl.PayerClaimControlNumber
                    --    xc.MedicalRecordNumber = gcl.MedicalRecordNumber,
                    --xc.DiagnosisCode1 = gcl.DiagnosisCode1,
                    --xc.DiagnosisCode2 = gcl.DiagnosisCode2,
                    --xc.DiagnosisCode3 = gcl.DiagnosisCode3,
                    --xc.DiagnosisCode4 = gcl.DiagnosisCode4,
                    --xc.DiagnosisCode5 = gcl.DiagnosisCode5,
                    --xc.DiagnosisCode6 = gcl.DiagnosisCode6,
                    --xc.DiagnosisCode7 = gcl.DiagnosisCode7,
                    --xc.DiagnosisCode8 = gcl.DiagnosisCode8,
                    --xc.DiagnosisCode9 = gcl.DiagnosisCode9,
                    --xc.DiagnosisCode10 = gcl.DiagnosisCode10,
                    --xc.DiagnosisCode11 = gcl.DiagnosisCode11,
                    --xc.DiagnosisCode12 = gcl.DiagnosisCode12,
                    --xc.DiagnosisCode13 = gcl.DiagnosisCode13,
                  , xc.ReferringEntityCode = gcl.ReferringEntityCode
                  , xc.ReferringEntityQualifier = gcl.ReferringEntityQualifier
                  , xc.ReferringLastName = gcl.ReferringLastName
                  , xc.ReferringFirstName = gcl.ReferringFirstName
                    --    xc.ReferringMiddleName = gcl.ReferringMiddleName,
                    --    xc.ReferringSuffix = gcl.ReferringSuffix,
                  , xc.ReferringIdQualifier = gcl.ReferringIdQualifier
                  , xc.ReferringId = gcl.ReferringId
                    --    xc.ReferringTaxonomyCode = gcl.ReferringTaxonomyCode,
                  , xc.ReferringSecondaryQualifier = gcl.ReferringSecondaryQualifier
                  , xc.ReferringSecondaryId = gcl.ReferringSecondaryId
                  , xc.ReferringSecondaryQualifier2 = gcl.ReferringSecondaryQualifier2
                  , xc.ReferringSecondaryId2 = gcl.ReferringSecondaryId2
                    --    xc.ReferringSecondaryQualifier3 = gcl.ReferringSecondaryQualifier3,
                    --    xc.ReferringSecondaryId3 = gcl.ReferringSecondaryId3,
                  , xc.RenderingEntityQualifier = gcl.RenderingEntityQualifier
                  , xc.RenderingLastName = gcl.RenderingLastName
                  , xc.RenderingFirstName = gcl.RenderingFirstName
                    --    xc.RenderingMiddleName = gcl.RenderingMiddleName,
                    --    xc.RenderingSuffix = gcl.RenderingSuffix,
                  , xc.RenderingEntityCode = gcl.RenderingEntityCode
                  , xc.RenderingIdQualifier = gcl.RenderingIdQualifier
                  , xc.RenderingId = gcl.RenderingId
                  , xc.RenderingTaxonomyCode = gcl.RenderingTaxonomyCode
                  , xc.RenderingSecondaryQualifier = gcl.RenderingSecondaryQualifier
                  , xc.RenderingSecondaryId = gcl.RenderingSecondaryId
                  , xc.RenderingSecondaryQualifier2 = gcl.RenderingSecondaryQualifier2
                  , xc.RenderingSecondaryId2 = gcl.RenderingSecondaryId2
                    --    xc.RenderingSecondaryQualifier3 = gcl.RenderingSecondaryQualifier3,
                    --    xc.RenderingSecondaryId3 = gcl.RenderingSecondaryId3,
                    --    xc.ServicesEntityQualifier = gcl.ServicesEntityQualifier,
                    --    xc.ServicesIdQualifier = gcl.ServicesIdQualifier,
                    --    xc.ServicesId = gcl.ServicesId,
                    --    xc.servicesSecondaryQualifier = gcl.servicesSecondaryQualifier,
                    --    xc.servicesSecondaryId = gcl.servicesSecondaryId,
                  , xc.FacilityEntityCode = gcl.FacilityEntityCode
                  , xc.FacilityName = gcl.FacilityName
                  , xc.FacilityIdQualifier = gcl.FacilityIdQualifier
                  , xc.FacilityId = gcl.FacilityId
                  , xc.FacilityAddress1 = gcl.FacilityAddress1
                  , xc.FacilityAddress2 = gcl.FacilityAddress2
                  , xc.FacilityCity = gcl.FacilityCity
                  , xc.FacilityState = gcl.FacilityState
                  , xc.FacilityZip = gcl.FacilityZip
                    --    xc.FacilityCountryCode = gcl.FacilityCountryCode,
                  , xc.FacilitySecondaryQualifier = gcl.FacilitySecondaryQualifier
                  , xc.FacilitySecondaryId = gcl.FacilitySecondaryId
                    --    xc.FacilitySecondaryQualifier2 = gcl.FacilitySecondaryQualifier2,
                    --    xc.FacilitySecondaryId2 = gcl.FacilitySecondaryId2,
                    --    xc.FacilitySecondaryQualifier3 = gcl.FacilitySecondaryQualifier3,
                    --    xc.FacilitySecondaryId3 = gcl.FacilitySecondaryId3,
                    --    xc.SupervisorLastName = gcl.SupervisorLastName,
                    --    xc.SupervisorFirstName = gcl.SupervisorFirstName,
                    --    xc.SupervisorMiddleName = gcl.SupervisorMiddleName,
                    --    xc.SupervisorSuffix = gcl.SupervisorSuffix,
                    --    xc.SupervisorQualifier = gcl.SupervisorQualifier,
                    --    xc.SupervisorId = gcl.SupervisorId,
                    --    xc.CoveragePlanId = gcl.CoveragePlanId,
                    --    xc.AttendingProviderTaxIdType = gcl.AttendingProviderTaxIdType,
                    --    xc.AttendingProviderTaxId = gcl.AttendingProviderTaxId,
                  , xc.AttendingProviderTaxonomyCode = gcl.AttendingProviderTaxonomyCode
                    --    xc.AttendingId = gcl.AttendingId,
                  , xc.AttendingProviderEntityQualifier = gcl.AttendingProviderEntityQualifier
                  , xc.AttendingProviderEntityCode = gcl.AttendingProviderEntityCode
                    --    xc.AttendingProviderIdType = gcl.AttendingProviderIdType,
                  , xc.AttendingProviderId = gcl.AttendingProviderId
                  , xc.AttendingProviderIdQualifier = gcl.AttendingProviderIdQualifier
                  , xc.AttendingProviderLastName = gcl.AttendingProviderLastName
                  , xc.AttendingProviderFirstName = gcl.AttendingProviderFirstName
                    --    xc.AttendingProviderMiddleName = gcl.AttendingProviderMiddleName,
                  , xc.AttendingProviderLicenseNumber = gcl.AttendingProviderLicenseNumber
                    --    xc.AdmittingDiagnosisCode = gcl.AdmittingDiagnosisCode,
                  , xc.DischargeHour = gcl.DischargeHour
                  , xc.InpatientAdmitDate = gcl.InpatientAdmitDate
                  , xc.ClientGroupId = gcl.ClientGroupId
                  , xc.ClientId = gcl.ClientId
                  , xc.CoveragePlanId = gcl.CoveragePlanId
                  , xc.InsuredId = gcl.InsuredId
                  , xc.Priority = gcl.Priority
                  , xc.BillingProviderId = gcl.BillingProviderId
				  , xc.MedicalRecordNumber = gcl.MedicalRecordNumber
              FROM  #XClaims xc
                  JOIN
                    (   SELECT  a.XClaimId                                                                          AS XClaimId
                              , MAX(CONVERT(VARCHAR, a.ClientId) + '-' + CONVERT(VARCHAR, a.LineItemControlNumber)) AS ClaimId
                              , SUM(a.ChargeAmount)                                                                 AS TotalAmount
                              , MAX(a.PlaceOfServiceCode)                                                           AS PlaceOfService   -- NJain Changed 2/4
                              , MAX(a.ClaimFrequencyCode)                                                           AS ClaimFrequencyCode
                              , CONVERT(VARCHAR, MAX(a.RelatedHospitalAdmitDate), 112)                              AS RelatedHospitalAdmitDate
                              , 'Y'                                                                                 AS SignatureIndicator
                              , 'A'                                                                                 AS MedicareAssignCode
                              , 'Y'                                                                                 AS BenefitsAssignCertificationIndicator
                              , 'Y'                                                                                 AS ReleaseCode
                              , ''                                                                                  AS PatientSignatureCode
                              , '82'                                                                                AS RenderingEntityCode
                              , '1'                                                                                 AS RenderingEntityQualifier
                              , MAX(a.RenderingProviderLastName)                                                    AS RenderingLastName
                              , MAX(a.RenderingProviderFirstName)                                                   AS RenderingFirstName
                              , MAX(CASE
                                        WHEN ISNULL(a.RenderingProviderNPI, '') <> '' THEN 'XX'
                                        ELSE NULL
                                    END)                                                                            AS RenderingIdQualifier
                              , MAX(CASE
                                        WHEN ISNULL(a.RenderingProviderNPI, '') <> '' THEN a.RenderingProviderNPI
                                        ELSE NULL
                                    END)                                                                            AS RenderingId
                              , MAX(a.RenderingProviderTaxonomyCode)                                                AS RenderingTaxonomyCode
                              , MAX(a.RenderingProviderIdType)                                                      AS RenderingSecondaryQualifier
                              , MAX(a.RenderingProviderId)                                                          AS RenderingSecondaryId
                              , MAX(CASE
                                        WHEN a.RenderingProviderNPI IS NOT NULL THEN (CASE
                                                                                          WHEN a.RenderingProviderTaxIdType = '24' THEN 'EI'
                                                                                          ELSE 'SY'
                                                                                      END)
                                        ELSE NULL
                                    END)                                                                            AS RenderingSecondaryQualifier2
                              , MAX(CASE
                                        WHEN a.RenderingProviderNPI IS NOT NULL THEN a.RenderingProviderTaxId
                                        ELSE NULL
                                    END)                                                                            AS RenderingSecondaryId2
                              , 'DN'                                                                                AS ReferringEntityCode
                              , '1'                                                                                 AS ReferringEntityQualifier
                              , MAX(a.ReferringProviderLastName)                                                    AS ReferringLastName
                              , MAX(a.ReferringProviderFirstName)                                                   AS ReferringFirstName
                              , MAX(CASE
                                        WHEN a.ReferringProviderNPI IS NULL THEN a.ReferringProviderIdType
                                        ELSE 'XX'
                                    END)                                                                            AS ReferringIdQualifier
                              , MAX(CASE
                                        WHEN a.ReferringProviderNPI IS NULL THEN a.ReferringProviderId
                                        ELSE a.ReferringProviderNPI
                                    END)                                                                            AS ReferringId
                              , MAX(a.ReferringProviderIdType)                                                      AS ReferringSecondaryQualifier
                              , MAX(a.ReferringProviderId)                                                          AS ReferringSecondaryId
                              , MAX(CASE
                                        WHEN a.ReferringProviderNPI IS NOT NULL THEN (CASE
                                                                                          WHEN a.ReferringProviderTaxIdType = '24' THEN 'EI'
                                                                                          ELSE 'SY'
                                                                                      END)
                                        ELSE NULL
                                    END)                                                                            AS ReferringSecondaryQualifier2
                              , MAX(CASE
                                        WHEN a.ReferringProviderNPI IS NOT NULL THEN a.ReferringProviderTaxId
                                        ELSE NULL
                                    END)                                                                            AS ReferringSecondaryId2
                              , SUM(a.ClientPayment)                                                                AS PatientAmountPaid
                              , MAX(a.AuthorizationNumber)                                                          AS PriorAuthorizationNumber
                              , MAX(a.PayerClaimControlNumber)                                                      AS PayerClaimControlNumber
                              , MAX(a.FacilityEntityCode)                                                           AS FacilityEntityCode
                              , MAX(a.FacilityName)                                                                 AS FacilityName
                              , MAX(CASE
                                        WHEN a.FacilityNPI IS NULL THEN a.FacilityTaxIdType
                                        ELSE 'XX'
                                    END)                                                                            AS FacilityIdQualifier
                              , MAX(CASE
                                        WHEN a.FacilityNPI IS NULL THEN a.FacilityTaxId
                                        ELSE a.FacilityNPI
                                    END)                                                                            AS FacilityId
                              , MAX(a.FacilityAddress1)                                                             AS FacilityAddress1
                              , MAX(a.FacilityAddress2)                                                             AS FacilityAddress2
                              , MAX(a.FacilityCity)                                                                 AS FacilityCity
                              , MAX(a.FacilityState)                                                                AS FacilityState
                              , MAX(a.FacilityZip)                                                                  AS FacilityZip
                              , MAX(a.FacilityProviderIdType)                                                       AS FacilitySecondaryQualifier
                              , MAX(a.FacilityProviderId)                                                           AS FacilitySecondaryId
                              , a.AdmissionTypeCode                                                                 AS AdmissionTypeCode
                              , a.AdmissionSourceCode                                                               AS AdmissionSourceCode
                              , a.PatientStatusCode                                                                 AS PatientStatusCode
                              , '71'                                                                                AS AttendingProviderEntityCode
                              , '1'                                                                                 AS AttendingProviderEntityQualifier
                              , MAX(a.AttendingProviderLastName)                                                    AS AttendingProviderLastName
                              , MAX(a.AttendingProviderFirstName)                                                   AS AttendingProviderFirstName
                              , 'XX'                                                                                AS AttendingProviderIdQualifier
                              , MAX(a.AttendingProviderId)                                                          AS AttendingProviderId
                              , MAX(a.AttendingProviderTaxonomyCode)                                                AS AttendingProviderTaxonomyCode
                              , MAX(a.AttendingProviderLicenseNumber)                                               AS AttendingProviderLicenseNumber
                              , MAX(CASE
                                        WHEN InpatientDischargedDate IS NOT NULL THEN REPLACE(LEFT(CAST(InpatientDischargedDate AS TIME), 5), ':', '')
                                        ELSE NULL
                                    END)                                                                            AS DischargeHour
                              , MAX(a.InpatientAdmitDate)                                                           AS InpatientAdmitDate
                              , ClientGroupId
                              , ClientId
                              , CoveragePlanId
                              , InsuredId
                              , Priority
                              , BillingProviderId
							  , MAX(a.MedicalRecordNumber)															AS MedicalRecordNumber
                          FROM  #ClaimLines a
                          GROUP BY
                            a.XClaimId
                          , a.AdmissionTypeCode
                          , a.AdmissionSourceCode
                          , a.PatientStatusCode
                          , ClientGroupId
                          , ClientId
                          , CoveragePlanId
                          , InsuredId
                          , Priority
                          , BillingProviderId)gcl ON xc.XClaimId = gcl.XClaimId;



            -- NJain Added 7/7 Get Patient Status Code from Client Inpatient Visits.  

            UPDATE  a
              SET   a.PatientStatusCode = gc.ExternalCode1
              FROM  #ClaimLines a
                  JOIN ClientInpatientVisits b ON b.ClientInpatientVisitId = a.ClientInpatientVisitId
                  LEFT JOIN GlobalCodes gc ON gc.GlobalCodeId = b.DischargeType


            -- Updated Logic for Claim Frequency Code for Inpatient Admissions
            SELECT  @Bookmark = 'Updated Logic for Claim Frequency Code for Inpatient Admissions'

            IF EXISTS (SELECT   *
                         FROM   #ClaimLines
                         WHERE
                            InpatientAdmitDate IS NOT NULL)
                BEGIN


                    UPDATE  a
                      SET   ClaimFrequencyCode = '1'
                      FROM  #ClaimLines a
                      WHERE
                        CAST(a.InpatientAdmitDate AS DATE) = CAST(a.StatementStartDate AS DATE)
                        AND (CAST(a.InpatientDischargedDate AS DATE) = CAST(a.StatementEndDate AS DATE)
                             OR CAST(a.InpatientDischargedDate AS DATE) = DATEADD(dd, 1, CAST(a.StatementEndDate AS DATE)))
                        AND ISNULL(a.InpatientAdmitDate, '') <> ''
                        AND ISNULL(a.InpatientDischargedDate, '') <> ''
                        AND ISNULL(ClaimFrequencyCode, '0') NOT IN ( '7'
                                                                   , '8' )


                    UPDATE  a
                      SET   ClaimFrequencyCode = '2'
                      FROM  #ClaimLines a
                      WHERE
                        CAST(a.InpatientAdmitDate AS DATE) = CAST(a.StatementStartDate AS DATE)
                        AND ISNULL(a.InpatientAdmitDate, '') <> ''
                        AND (ISNULL(a.InpatientDischargedDate, '') = ''
                             OR CAST(a.StatementEndDate AS DATE) < DATEADD(dd, -1, CAST(a.InpatientDischargedDate AS DATE)))
                        AND ISNULL(ClaimFrequencyCode, '0') NOT IN ( '7'
                                                                   , '8' )



                    UPDATE  a
                      SET   ClaimFrequencyCode = '3'
                      FROM  #ClaimLines a
                      WHERE
                        CAST(InpatientAdmitDate AS DATE) < CAST(StatementStartDate AS DATE)
                        AND ISNULL(a.InpatientAdmitDate, '') <> ''
                        AND (ISNULL(a.InpatientDischargedDate, '') = ''
                             OR CAST(a.StatementEndDate AS DATE) < DATEADD(dd, -1, CAST(a.InpatientDischargedDate AS DATE)))
                        AND ISNULL(ClaimFrequencyCode, '0') NOT IN ( '7'
                                                                   , '8' )


                    UPDATE  a
                      SET   ClaimFrequencyCode = '4'
                      FROM  #ClaimLines a
                      WHERE
                        CAST(InpatientAdmitDate AS DATE) < CAST(StatementStartDate AS DATE)
                        AND (CAST(a.InpatientDischargedDate AS DATE) = CAST(a.StatementEndDate AS DATE)
                             OR CAST(a.InpatientDischargedDate AS DATE) = DATEADD(dd, 1, CAST(a.StatementEndDate AS DATE)))
                        AND ISNULL(a.InpatientAdmitDate, '') <> ''
                        AND ISNULL(a.InpatientDischargedDate, '') <> ''
                        AND ISNULL(ClaimFrequencyCode, '0') NOT IN ( '7'
                                                                   , '8' )


                    -- Set to 1 if cannot calculate                        
                    UPDATE  a
                      SET   ClaimFrequencyCode = '1'
                      FROM  #ClaimLines a
                      WHERE
                        ISNULL(ClaimFrequencyCode, '') = ''


                END



            UPDATE  a
              SET   PatientStatusCode = CASE
                                            WHEN CAST(b.StatementEndDate AS DATE) = CAST(b.InpatientDischargedDate AS DATE) THEN b.PatientStatusCode
                                            WHEN DATEADD(dd, 1, CAST(b.StatementEndDate AS DATE)) = CAST(b.InpatientDischargedDate AS DATE)
                                                 AND CAST(b.StatementEndDate AS DATE) <> CAST(b.InpatientDischargedDate AS DATE) THEN b.PatientStatusCode
                                            ELSE '30'
                                        END
                  , ClaimFrequencyCode = b.ClaimFrequencyCode
              FROM  #XClaims a
                  JOIN #ClaimLines b ON b.XClaimId = a.XClaimId


            UPDATE  a
              SET   PatientStatusCode = b.PatientStatusCode
              FROM  #ClaimLines a
                  JOIN #XClaims b ON b.XClaimId = a.XClaimId


            -- SELECT * FROM #XClaims


            -- NJain Added 2/2
            DECLARE @ExecuteClaimGrouperSCSP CHAR(1) = 'N' --#EH!INFO!ADD!@ExecuteClaimGrouperSCSP!

            IF EXISTS (SELECT   *
                         FROM   sys.objects
                         WHERE
                            name = 'scsp_PMClaims837GrouperAndDiagnosisCodeCalculation'
                            AND type = 'P')
                BEGIN
                    EXEC scsp_PMClaims837GrouperAndDiagnosisCodeCalculation @CurrentUser = @ParmCurrentUser
                                                                          , @ClaimFormatId = @ClaimFormatId
                                                                          , @ClaimBatchId = @ParmClaimBatchId
                                                                          , @FormatType = @FormatType
                                                                          , @ExecuteClaimGrouperSCSP = @ExecuteClaimGrouperSCSP OUTPUT
                END
            IF(@ExecuteClaimGrouperSCSP = 'N')
                BEGIN

                    -- 11/1 - apoole
                    -- Diagnosis Document Routines
                    -- 4/22/14 Added new table to handle diagnosis document errors
                    --

                    DECLARE @workingClientId INT
                          , @priorXClaimId INT
                          , @workingXClaimId INT
                          , @workingAdmitDate DATETIME
                          , @workingDischargeDate DATETIME
                          , @StatementEndDate DATETIME
                          , @IsICD10Service CHAR(1)
                          , @IPCodingDocumentVersionId INT
                          , @ClientInpatientVisitId INT

                    DECLARE @workingResult TABLE(
                        AdmittingDiagnosisCode      VARCHAR(10) NULL
                      , AdmittingDiagnosisQualifier VARCHAR(3)  NULL
                      , AdmittingDiagnosisPOA       VARCHAR(1)  NULL
                      , DiagnosisCode1              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier1     VARCHAR(3)  NULL
                      , DiagnosisCodePOA1           VARCHAR(1)  NULL
                      , DiagnosisCode2              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier2     VARCHAR(3)  NULL
                      , DiagnosisCodePOA2           VARCHAR(1)  NULL
                      , DiagnosisCode3              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier3     VARCHAR(3)  NULL
                      , DiagnosisCodePOA3           VARCHAR(1)  NULL
                      , DiagnosisCode4              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier4     VARCHAR(3)  NULL
                      , DiagnosisCodePOA4           VARCHAR(1)  NULL
                      , DiagnosisCode5              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier5     VARCHAR(3)  NULL
                      , DiagnosisCodePOA5           VARCHAR(1)  NULL
                      , DiagnosisCode6              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier6     VARCHAR(3)  NULL
                      , DiagnosisCodePOA6           VARCHAR(1)  NULL
                      , DiagnosisCode7              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier7     VARCHAR(3)  NULL
                      , DiagnosisCodePOA7           VARCHAR(1)  NULL
                      , DiagnosisCode8              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier8     VARCHAR(3)  NULL
                      , DiagnosisCodePOA8           VARCHAR(1)  NULL
                      , DiagnosisCode9              VARCHAR(10) NULL
                      , DiagnosisCodeQualifier9     VARCHAR(3)  NULL
                      , DiagnosisCodePOA9           VARCHAR(1)  NULL
                      , DiagnosisCode10             VARCHAR(10) NULL
                      , DiagnosisCodeQualifier10    VARCHAR(3)  NULL
                      , DiagnosisCodePOA10          VARCHAR(1)  NULL
                      , DiagnosisCode11             VARCHAR(10) NULL
                      , DiagnosisCodeQualifier11    VARCHAR(3)  NULL
                      , DiagnosisCodePOA11          VARCHAR(1)  NULL
                      , DiagnosisCode12             VARCHAR(10) NULL
                      , DiagnosisCodeQualifier12    VARCHAR(3)  NULL
                      , DiagnosisCodePOA12          VARCHAR(1)  NULL
                      , DiagnosisCode13             VARCHAR(10) NULL
                      , DiagnosisCodeQualifier13    VARCHAR(3)  NULL
                      , DiagnosisCodePOA13          VARCHAR(1)  NULL
                    )

                    DECLARE @DiagnosisData TABLE(
                        ICDCode          VARCHAR(20)
                      , ICDCodeQualifier VARCHAR(3)
                      , POA              CHAR(1)
                      , DiagType         VARCHAR(20)
                      , diagnosisorder   INT
                    )


                    --11/6 Modified to only work on inpatient claim - apoole
                    SELECT  @workingXClaimId = MIN(XClaimId)
                      FROM  #XClaims
                      WHERE
                        InpatientAdmitDate IS NOT NULL --11/26 apoole changed behavior PlaceOfServiceCode in ('21', '51', '71')
                    WHILE(@workingXClaimId IS NOT NULL)
                        BEGIN
                            SELECT TOP 1
                                @workingAdmitDate       = RelatedHospitalAdmitDate
                              , @workingDischargeDate   = RelatedHospitalDischargeDate
                              , @workingClientId        = ClientId
                              , @IsICD10Service         = IsICD10Service
                              , @ClientInpatientVisitId = ClientInpatientVisitId
                              FROM  #ClaimLines
                              WHERE
                                XClaimId = @workingXClaimId
                            --11/6 Enforcing check for admission diagnosis, principal diagnosis

                            SELECT  @StatementEndDate = (SELECT ISNULL(MAX(InpatientDischargedDate), MAX(StatementEndDate))
                                                           FROM #ClaimLines
                                                           WHERE
                                                             ClientId = @workingClientId
                                                             AND @workingAdmitDate = RelatedHospitalAdmitDate
                                                             AND @IsICD10Service = IsICD10Service);
                            WITH DiagnosisDocumentVersionId
                              AS (SELECT TOP 1
                                        DocumentId
                                      , CurrentDocumentVersionId
                                      , EffectiveDate
                                      , ModifiedDate
                                    FROM    Documents
                                    WHERE
                                        ClientId = @workingClientId
                                        AND ISNULL(RecordDeleted, 'N') = 'N'
                                        AND Status = 22
                                        AND DocumentCodeId IN(SELECT    DocumentCodeId
                                                                FROM    DocumentCodes
                                                                WHERE
                                                                    DocumentName = 'Inpatient Coding Document'
                                                                    AND Active = 'Y'
                                                                    AND ISNULL(RecordDeleted, 'N') = 'N')
                                        AND CONVERT(DATE, EffectiveDate) <= CONVERT(DATE, @StatementEndDate)
                                        AND CONVERT(DATE, EffectiveDate) >= CONVERT(DATE, @workingAdmitDate)
                                    ORDER BY
                                      EffectiveDate DESC
                                    , ModifiedDate DESC)
                               , AdmissionDiag
                              AS (SELECT TOP 1
                                        CASE
                                            WHEN @IsICD10Service = 'Y' THEN REPLACE(b.ICD10Code, '*', '')
                                            ELSE ICD9Code
                                        END     AS ICDCode
                                      , CASE
                                            WHEN @IsICD10Service = 'Y' THEN 'ABJ'
                                            ELSE 'BJ'
                                        END     AS ICDCodeQualifier
                                      , 'Admit' AS DiagType
                                      , 0       AS DiagOrder
                                    FROM    dbo.InpatientCodingDiagnoses a
                                        LEFT JOIN dbo.DiagnosisICD10Codes b ON b.ICD10CodeId = a.ICD10CodeId
                                                                               AND  ISNULL(b.RecordDeleted, 'N') = 'N'
                                    WHERE
                                        ISNULL(a.RecordDeleted, 'N') = 'N'
                                        AND DiagnosisType = 140
                                        AND (ICD9Code <> '799.9' OR a.ICD9Code IS NULL)
                                        AND DocumentVersionId IN(SELECT CurrentDocumentVersionId
                                                                   FROM DiagnosisDocumentVersionId))
                               , PrincipalDiag
                              AS (SELECT TOP 1
                                        CASE
                                            WHEN @IsICD10Service = 'Y' THEN REPLACE(b.ICD10Code, '*', '')
                                            ELSE ICD9Code
                                        END         AS ICDCode
                                      , CASE
                                            WHEN @IsICD10Service = 'Y' THEN 'ABK'
                                            ELSE 'BK'
                                        END         AS ICDCodeQualifier
                                      , 'Principal' AS DiagType
                                      , 1           AS DiagOrder
                                    FROM    dbo.InpatientCodingDiagnoses a
                                        LEFT JOIN dbo.DiagnosisICD10Codes b ON b.ICD10CodeId = a.ICD10CodeId
                                                                               AND  ISNULL(b.RecordDeleted, 'N') = 'N'
                                    WHERE
                                        ISNULL(a.RecordDeleted, 'N') = 'N'
                                        AND DiagnosisType = 140
                                        AND (ICD9Code <> '799.9' OR a.ICD9Code IS NULL)
                                        AND DocumentVersionId IN(SELECT CurrentDocumentVersionId
                                                                   FROM DiagnosisDocumentVersionId))
                               , AdditionalDiag
                              AS (SELECT DISTINCT
                                        CASE
                                            WHEN @IsICD10Service = 'Y' THEN REPLACE(b.ICD10Code, '*', '')
                                            ELSE ICD9Code
                                        END          AS ICDCode
                                      , CASE
                                            WHEN @IsICD10Service = 'Y' THEN 'ABF'
                                            ELSE 'BF'
                                        END          AS ICDCodeQualifier
                                      , 'Additional' AS DiagType
                                      , 2            AS DiagOrder
                                    FROM    dbo.InpatientCodingDiagnoses a
                                        LEFT JOIN dbo.DiagnosisICD10Codes b ON b.ICD10CodeId = a.ICD10CodeId
                                                                               AND  ISNULL(b.RecordDeleted, 'N') = 'N'
                                    WHERE
                                        ISNULL(a.RecordDeleted, 'N') = 'N'
                                        AND DiagnosisType <> 140
                                        AND (ICD9Code <> '799.9' OR a.ICD9Code IS NULL)
                                        AND DocumentVersionId IN(SELECT CurrentDocumentVersionId
                                                                   FROM DiagnosisDocumentVersionId))
                               , AdditionalDiagOrdered
                              AS (SELECT    ICDCode
                                          , ICDCodeQualifier
                                          , DiagType
                                          , (ROW_NUMBER() OVER (ORDER BY ICDCode) + 1) AS DiagOrder
                                    FROM    AdditionalDiag)
                            INSERT INTO @DiagnosisData(ICDCode
                                                     , ICDCodeQualifier
                                                     , DiagType
                                                     , diagnosisorder)
                            SELECT DISTINCT
                                ICDCode
                              , ICDCodeQualifier
                              , DiagType
                              , DiagOrder
                              FROM  AdmissionDiag
                            UNION
                            SELECT DISTINCT
                                ICDCode
                              , ICDCodeQualifier
                              , DiagType
                              , DiagOrder
                              FROM  PrincipalDiag
                            UNION
                            SELECT DISTINCT
                                ICDCode
                              , ICDCodeQualifier
                              , DiagType
                              , DiagOrder
                              FROM  AdditionalDiagOrdered



                            IF NOT EXISTS (SELECT   * FROM  @DiagnosisData)
                                BEGIN
                                    SELECT  @ErrorMessage = 'Diagnosis not found'
                                END


                            IF NOT EXISTS (SELECT   *
                                             FROM   @DiagnosisData
                                             WHERE
                                                DiagType = 'Admit'
                                                AND ISNULL(ICDCode, '') <> '')
                                BEGIN
                                    SELECT  @ErrorMessage = ISNULL(@ErrorMessage, '') + '; ' + 'Admit Diagnosis not found'
                                END


                            IF NOT EXISTS (SELECT   *
                                             FROM   @DiagnosisData
                                             WHERE
                                                DiagType = 'Principal'
                                                AND ISNULL(ICDCode, '') <> '')
                                BEGIN
                                    SELECT  @ErrorMessage = ISNULL(@ErrorMessage, '') + '; ' + 'Principal Diagnosis not found'
                                END




                            IF ISNULL(@ErrorMessage, '') <> ''
                                BEGIN

                                    INSERT INTO #DiagnosisDocumentErrors(XClaimId
                                                                       , ClientId
                                                                       , ErrorMessage)
                                      SELECT    @workingXClaimId
                                              , @workingClientId
                                              , @ErrorMessage


                                END

                            SELECT  @ErrorMessage = NULL


                            --SELECT * FROM #DiagnosisDocumentErrors


                            INSERT INTO @workingResult(AdmittingDiagnosisCode
                                                     , AdmittingDiagnosisQualifier
                                                     , DiagnosisCode1
                                                     , DiagnosisCodeQualifier1
                                                     , DiagnosisCode2
                                                     , DiagnosisCodeQualifier2
                                                     , DiagnosisCode3
                                                     , DiagnosisCodeQualifier3
                                                     , DiagnosisCode4
                                                     , DiagnosisCodeQualifier4
                                                     , DiagnosisCode5
                                                     , DiagnosisCodeQualifier5
                                                     , DiagnosisCode6
                                                     , DiagnosisCodeQualifier6
                                                     , DiagnosisCode7
                                                     , DiagnosisCodeQualifier7
                                                     , DiagnosisCode8
                                                     , DiagnosisCodeQualifier8
                                                     , DiagnosisCode9
                                                     , DiagnosisCodeQualifier9
                                                     , DiagnosisCode10
                                                     , DiagnosisCodeQualifier10
                                                     , DiagnosisCode11
                                                     , DiagnosisCodeQualifier11
                                                     , DiagnosisCode12
                                                     , DiagnosisCodeQualifier12
                                                     , DiagnosisCode13
                                                     , DiagnosisCodeQualifier13)
                            VALUES((   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                            DiagType = 'Admit')
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Admit')
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Principal')
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Principal')
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 2)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 2)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 3)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 3)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 4)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 4)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 5)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 5)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 6)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 6)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 7)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 7)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 8)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 8)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 9)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 9)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 10)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 10)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 11)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 11)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 12)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 12)
                                 , (   SELECT   ICDCode
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 13)
                                 , (   SELECT   ICDCodeQualifier
                                         FROM   @DiagnosisData
                                         WHERE
                                           DiagType = 'Additional'
                                           AND diagnosisorder = 13))



                            UPDATE  #XClaims
                              SET   DiagnosisCode1 = result.DiagnosisCode1
                                  , DiagnosisCodeQualifier1 = result.DiagnosisCodeQualifier1
                                  , DiagnosisCode2 = result.DiagnosisCode2
                                  , DiagnosisCodeQualifier2 = result.DiagnosisCodeQualifier2
                                  , DiagnosisCode3 = result.DiagnosisCode3
                                  , DiagnosisCodeQualifier3 = result.DiagnosisCodeQualifier3
                                  , DiagnosisCode4 = result.DiagnosisCode4
                                  , DiagnosisCodeQualifier4 = result.DiagnosisCodeQualifier4
                                  , DiagnosisCode5 = result.DiagnosisCode5
                                  , DiagnosisCodeQualifier5 = result.DiagnosisCodeQualifier5
                                  , DiagnosisCode6 = result.DiagnosisCode6
                                  , DiagnosisCodeQualifier6 = result.DiagnosisCodeQualifier6
                                  , DiagnosisCode7 = result.DiagnosisCode7
                                  , DiagnosisCodeQualifier7 = result.DiagnosisCodeQualifier7
                                  , DiagnosisCode8 = result.DiagnosisCode8
                                  , DiagnosisCodeQualifier8 = result.DiagnosisCodeQualifier8
                                  , DiagnosisCode9 = result.DiagnosisCode9
                                  , DiagnosisCodeQualifier9 = result.DiagnosisCodeQualifier9
                                  , DiagnosisCode10 = result.DiagnosisCode10
                                  , DiagnosisCodeQualifier10 = result.DiagnosisCodeQualifier10
                                  , DiagnosisCode11 = result.DiagnosisCode11
                                  , DiagnosisCodeQualifier11 = result.DiagnosisCodeQualifier11
                                  , DiagnosisCode12 = result.DiagnosisCode12
                                  , DiagnosisCodeQualifier12 = result.DiagnosisCodeQualifier12
                                  , DiagnosisCode13 = result.DiagnosisCode13
                                  , DiagnosisCodeQualifier13 = result.DiagnosisCodeQualifier13
                                  , AdmittingDiagnosisCode = result.AdmittingDiagnosisCode
                                  , AdmittingDiagnosisQualifier = result.AdmittingDiagnosisQualifier
                              FROM  @workingResult result
                              WHERE
                                XClaimId = @workingXClaimId


                            UPDATE  a
                              SET   DiagnosisCode1 = b.DiagnosisCode1
                                  , DiagnosisCodeQualifier1 = b.DiagnosisCodeQualifier1
                                  , DiagnosisCode2 = b.DiagnosisCode2
                                  , DiagnosisCodeQualifier2 = b.DiagnosisCodeQualifier2
                                  , DiagnosisCode3 = b.DiagnosisCode3
                                  , DiagnosisCodeQualifier3 = b.DiagnosisCodeQualifier3
                                  , DiagnosisCode4 = b.DiagnosisCode4
                                  , DiagnosisCodeQualifier4 = b.DiagnosisCodeQualifier4
                                  , DiagnosisCode5 = b.DiagnosisCode5
                                  , DiagnosisCodeQualifier5 = b.DiagnosisCodeQualifier5
                                  , DiagnosisCode6 = b.DiagnosisCode6
                                  , DiagnosisCodeQualifier6 = b.DiagnosisCodeQualifier6
                                  , DiagnosisCode7 = b.DiagnosisCode7
                                  , DiagnosisCodeQualifier7 = b.DiagnosisCodeQualifier7
                                  , DiagnosisCode8 = b.DiagnosisCode8
                                  , DiagnosisCodeQualifier8 = b.DiagnosisCodeQualifier8
                                  , DiagnosisCode9 = b.DiagnosisCode9
                                  , DiagnosisCodeQualifier9 = b.DiagnosisCodeQualifier9
                                  , DiagnosisCode10 = b.DiagnosisCode10
                                  , DiagnosisCodeQualifier10 = b.DiagnosisCodeQualifier10
                                  , DiagnosisCode11 = b.DiagnosisCode11
                                  , DiagnosisCodeQualifier11 = b.DiagnosisCodeQualifier11
                                  , DiagnosisCode12 = b.DiagnosisCode12
                                  , DiagnosisCodeQualifier12 = b.DiagnosisCodeQualifier12
                                  , DiagnosisCode13 = b.DiagnosisCode13
                                  , DiagnosisCodeQualifier13 = b.DiagnosisCodeQualifier13
                                  , AdmittingDiagnosisCode = b.AdmittingDiagnosisCode
                                  , AdmittingDiagnosisQualifier = b.AdmittingDiagnosisQualifier
                              FROM  #ClaimLines a
                                  JOIN #XClaims b ON b.XClaimId = a.XClaimId
                              WHERE
                                a.XClaimId = @workingXClaimId


                            -- Added 10/1/2015 Attending Provider
                            SELECT  @IPCodingDocumentVersionId = (SELECT TOP 1
                                                                        CurrentDocumentVersionId
                                                                    FROM    Documents
                                                                    WHERE
                                                                        ClientId = @workingClientId
                                                                        AND ISNULL(RecordDeleted, 'N') = 'N'
                                                                        AND Status = 22
                                                                        AND DocumentCodeId IN(SELECT    DocumentCodeId
                                                                                                FROM    DocumentCodes
                                                                                                WHERE
                                                                                                    DocumentName = 'Inpatient Coding Document'
                                                                                                    AND Active = 'Y'
                                                                                                    AND ISNULL(RecordDeleted, 'N') = 'N')
                                                                        AND CONVERT(DATE, EffectiveDate) <= CONVERT(DATE, @StatementEndDate)
                                                                        AND CONVERT(DATE, EffectiveDate) >= CONVERT(DATE, @workingAdmitDate)
                                                                    ORDER BY
                                                                      EffectiveDate DESC
                                                                    , ModifiedDate DESC)

                            UPDATE  a
                              SET   AttendingId = (SELECT   AttendingPhysicianId
                                                     FROM   dbo.InpatientCodingDocuments
                                                     WHERE
                                                        DocumentVersionId = @IPCodingDocumentVersionId)
                                  , DRGCode = (SELECT   DRG
                                                 FROM   dbo.InpatientCodingDocuments
                                                 WHERE
                                                    DocumentVersionId = @IPCodingDocumentVersionId)
                              FROM  #ClaimLines a
                              WHERE
                                a.ClientId = @workingClientId



                            SELECT  @workingAdmitDate          = NULL
                                  , @workingClientId           = NULL
                                  , @workingDischargeDate      = NULL
                                  , @StatementEndDate          = NULL
                                  , @IPCodingDocumentVersionId = NULL

                            SELECT  @priorXClaimId = @workingXClaimId

                            DELETE  FROM @workingResult

                            DELETE  FROM @DiagnosisData

                            SELECT  @workingXClaimId = NULL

                            SELECT  @workingXClaimId = MIN(XClaimId)
                              FROM  #XClaims
                              WHERE
                                XClaimId > @priorXClaimId
                                AND InpatientAdmitDate IS NOT NULL --11/26 apoole changed behavior PlaceOfServiceCode in ('21', '51', '71')
                        END
                    -- End 11/1
                    -- Outpatient claims

                    UPDATE  a
                      SET   DiagnosisCode1 = b.DiagnosisCode1
                          , DiagnosisCode2 = b.DiagnosisCode2
                          , DiagnosisCode3 = b.DiagnosisCode3
                          , DiagnosisCode4 = b.DiagnosisCode4
                          , DiagnosisCode5 = b.DiagnosisCode5
                          , DiagnosisCode6 = b.DiagnosisCode6
                          , DiagnosisCode7 = b.DiagnosisCode7
                          , DiagnosisCode8 = b.DiagnosisCode8
                          , DiagnosisCode9 = b.DiagnosisCode8
                          , DiagnosisCode10 = b.DiagnosisCode10
                          , DiagnosisCode11 = b.DiagnosisCode11
                          , DiagnosisCode12 = b.DiagnosisCode12
                          , DiagnosisCode13 = b.DiagnosisCode13
                          , DiagnosisCodePOA1 = b.DiagnosisCodePOA1
                          , DiagnosisCodePOA2 = b.DiagnosisCodePOA2
                          , DiagnosisCodePOA3 = b.DiagnosisCodePOA3
                          , DiagnosisCodePOA4 = b.DiagnosisCodePOA4
                          , DiagnosisCodePOA5 = b.DiagnosisCodePOA5
                          , DiagnosisCodePOA6 = b.DiagnosisCodePOA6
                          , DiagnosisCodePOA7 = b.DiagnosisCodePOA7
                          , DiagnosisCodePOA8 = b.DiagnosisCodePOA8
                          , DiagnosisCodePOA9 = b.DiagnosisCodePOA9
                          , DiagnosisCodePOA10 = b.DiagnosisCodePOA10
                          , DiagnosisCodePOA11 = b.DiagnosisCodePOA11
                          , DiagnosisCodePOA12 = b.DiagnosisCodePOA12
                          , DiagnosisCodePOA13 = b.DiagnosisCodePOA13
                          , DiagnosisCodeQualifier1 = b.DiagnosisCodeQualifier1
                          , DiagnosisCodeQualifier2 = b.DiagnosisCodeQualifier2
                          , DiagnosisCodeQualifier3 = b.DiagnosisCodeQualifier3
                          , DiagnosisCodeQualifier4 = b.DiagnosisCodeQualifier4
                          , DiagnosisCodeQualifier5 = b.DiagnosisCodeQualifier5
                          , DiagnosisCodeQualifier6 = b.DiagnosisCodeQualifier6
                          , DiagnosisCodeQualifier7 = b.DiagnosisCodeQualifier7
                          , DiagnosisCodeQualifier8 = b.DiagnosisCodeQualifier8
                          , DiagnosisCodeQualifier9 = b.DiagnosisCodeQualifier9
                          , DiagnosisCodeQualifier10 = b.DiagnosisCodeQualifier10
                          , DiagnosisCodeQualifier11 = b.DiagnosisCodeQualifier11
                          , DiagnosisCodeQualifier12 = b.DiagnosisCodeQualifier12
                          , DiagnosisCodeQualifier13 = b.DiagnosisCodeQualifier13
                      FROM  #XClaims a
                          JOIN #ClaimLines b ON b.XClaimId = a.XClaimId
                      WHERE
                        a.InpatientAdmitDate IS NULL

                --SELECT * FROM #XClaims

                END




            -- Update Attending info in #XClaims
            UPDATE  a
              SET   AttendingProviderLastName = LTRIM(RTRIM(b.LastName))
                  , AttendingProviderFirstName = LTRIM(RTRIM(b.FirstName))
                  , AttendingProviderIdType = 'XX'
                  , AttendingProviderId = LTRIM(RTRIM(b.NationalProviderId))
                  , AttendingProviderTaxonomyCode = LTRIM(RTRIM(gc.ExternalCode1))
                  , AttendingProviderLicenseNumber = LTRIM(RTRIM(b.LicenseNumber))
              FROM  #ClaimLines a
                  JOIN Staff b ON(a.AttendingId = b.StaffId)
                                 AND ISNULL(b.RecordDeleted, 'N') = 'N'
                  LEFT JOIN GlobalCodes gc ON gc.GlobalCodeId = b.TaxonomyCode
              WHERE
                a.AttendingId IS NOT NULL


            UPDATE  a
              SET   AttendingId = b.AttendingId
                  , AttendingProviderLastName = LTRIM(RTRIM(b.AttendingProviderLastName))
                  , AttendingProviderFirstName = LTRIM(RTRIM(b.AttendingProviderFirstName))
                  , AttendingProviderIdType = 'XX'
                  , AttendingProviderId = LTRIM(RTRIM(b.AttendingProviderId))
                  , AttendingProviderTaxonomyCode = LTRIM(RTRIM(b.AttendingProviderTaxonomyCode))
                  , AttendingProviderLicenseNumber = LTRIM(RTRIM(b.AttendingProviderLicenseNumber))
                  , DRGCode = b.DRGCode
              FROM  #XClaims a
                  JOIN #ClaimLines b ON b.XClaimId = a.XClaimId
              WHERE
                b.AttendingId IS NOT NULL




            -- Added 03/05 Update #XClaims with Condition, Value, Occurence and Occurence Span Codes.
            UPDATE  a
              SET   a.ConditionCode1 = (b.ConditionCode1)
                  , a.ConditionCode2 = (b.ConditionCode2)
                  , a.ConditionCode3 = (b.ConditionCode3)
                  , a.ConditionCode4 = (b.ConditionCode4)
                  , a.ConditionCode5 = (b.ConditionCode5)
                  , a.ConditionCode6 = (b.ConditionCode6)
                  , a.ConditionCode7 = (b.ConditionCode7)
                  , a.ConditionCode8 = (b.ConditionCode8)
                  , a.ConditionCode9 = (b.ConditionCode9)
                  , a.ConditionCode10 = (b.ConditionCode10)
                  , a.ConditionCode11 = (b.ConditionCode11)
                  , a.ConditionCode12 = (b.ConditionCode12)
                  , a.ValueCode1 = (b.ValueCode1)
                  , a.ValueCodeValue1 = (b.ValueCodeValue1)
                  , a.ValueCode2 = (b.ValueCode2)
                  , a.ValueCodeValue2 = (b.ValueCodeValue2)
                  , a.ValueCode3 = (b.ValueCode3)
                  , a.ValueCodeValue3 = (b.ValueCodeValue3)
                  , a.ValueCode4 = (b.ValueCode4)
                  , a.ValueCodeValue4 = (b.ValueCodeValue4)
                  , a.ValueCode5 = (b.ValueCode5)
                  , a.ValueCodeValue5 = (b.ValueCodeValue5)
                  , a.ValueCode6 = (b.ValueCode6)
                  , a.ValueCodeValue6 = (b.ValueCodeValue6)
                  , a.ValueCode7 = (b.ValueCode7)
                  , a.ValueCodeValue7 = (b.ValueCodeValue7)
                  , a.ValueCode8 = (b.ValueCode8)
                  , a.ValueCodeValue8 = (b.ValueCodeValue8)
                  , a.ValueCode9 = (b.ValueCode9)
                  , a.ValueCodeValue9 = (b.ValueCodeValue9)
                  , a.ValueCode10 = (b.ValueCode10)
                  , a.ValueCodeValue10 = (b.ValueCodeValue10)
                  , a.ValueCode11 = (b.ValueCode11)
                  , a.ValueCodeValue11 = (b.ValueCodeValue11)
                  , a.ValueCode12 = (b.ValueCode12)
                  , a.ValueCodeValue12 = (b.ValueCodeValue12)
                  , a.OccurenceCode1 = (b.OccurenceCode1)
                  , a.OccurenceCodeDate1 = (b.OccurenceCodeDate1)
                  , a.OccurenceCode2 = (b.OccurenceCode2)
                  , a.OccurenceCodeDate2 = (b.OccurenceCodeDate2)
                  , a.OccurenceCode3 = (b.OccurenceCode3)
                  , a.OccurenceCodeDate3 = (b.OccurenceCodeDate3)
                  , a.OccurenceCode4 = (b.OccurenceCode4)
                  , a.OccurenceCodeDate4 = (b.OccurenceCodeDate4)
                  , a.OccurenceCode5 = (b.OccurenceCode5)
                  , a.OccurenceCodeDate5 = (b.OccurenceCodeDate5)
                  , a.OccurenceCode6 = (b.OccurenceCode6)
                  , a.OccurenceCodeDate6 = (b.OccurenceCodeDate6)
                  , a.OccurenceCode7 = (b.OccurenceCode7)
                  , a.OccurenceCodeDate7 = (b.OccurenceCodeDate7)
                  , a.OccurenceCode8 = (b.OccurenceCode8)
                  , a.OccurenceCodeDate8 = (b.OccurenceCodeDate8)
                  , a.OccurenceCode9 = (b.OccurenceCode9)
                  , a.OccurenceCodeDate9 = (b.OccurenceCodeDate9)
                  , a.OccurenceCode10 = (b.OccurenceCode10)
                  , a.OccurenceCodeDate10 = (b.OccurenceCodeDate10)
                  , a.OccurenceCode11 = (b.OccurenceCode11)
                  , a.OccurenceCodeDate11 = (b.OccurenceCodeDate11)
                  , a.OccurenceCode12 = (b.OccurenceCode12)
                  , a.OccurenceCodeDate12 = (b.OccurenceCodeDate12)
                  , a.OccurenceSpanCode1 = (b.OccurenceSpanCode1)
                  , a.OccurenceSpanCodeFrom1 = (b.OccurenceSpanCodeFrom1)
                  , a.OccurenceSpanCodeThrough1 = (b.OccurenceSpanCodeThrough1)
                  , a.OccurenceSpanCode2 = (b.OccurenceSpanCode2)
                  , a.OccurenceSpanCodeFrom2 = (b.OccurenceSpanCodeFrom2)
                  , a.OccurenceSpanCodeThrough2 = (b.OccurenceSpanCodeThrough2)
                  , a.OccurenceSpanCode3 = (b.OccurenceSpanCode3)
                  , a.OccurenceSpanCodeFrom3 = (b.OccurenceSpanCodeFrom3)
                  , a.OccurenceSpanCodeThrough3 = (b.OccurenceSpanCodeThrough3)
                  , a.OccurenceSpanCode4 = (b.OccurenceSpanCode4)
                  , a.OccurenceSpanCodeFrom4 = (b.OccurenceSpanCodeFrom4)
                  , a.OccurenceSpanCodeThrough4 = (b.OccurenceSpanCodeThrough4)
                  , a.OccurenceSpanCode5 = (b.OccurenceSpanCode5)
                  , a.OccurenceSpanCodeFrom5 = (b.OccurenceSpanCodeFrom5)
                  , a.OccurenceSpanCodeThrough5 = (b.OccurenceSpanCodeThrough5)
                  , a.OccurenceSpanCode6 = (b.OccurenceSpanCode6)
                  , a.OccurenceSpanCodeFrom6 = (b.OccurenceSpanCodeFrom6)
                  , a.OccurenceSpanCodeThrough6 = (b.OccurenceSpanCodeThrough6)
                  , a.OccurenceSpanCode7 = (b.OccurenceSpanCode7)
                  , a.OccurenceSpanCodeFrom7 = (b.OccurenceSpanCodeFrom7)
                  , a.OccurenceSpanCodeThrough7 = (b.OccurenceSpanCodeThrough7)
                  , a.OccurenceSpanCode8 = (b.OccurenceSpanCode8)
                  , a.OccurenceSpanCodeFrom8 = (b.OccurenceSpanCodeFrom8)
                  , a.OccurenceSpanCodeThrough8 = (b.OccurenceSpanCodeThrough8)
                  , a.OccurenceSpanCode9 = (b.OccurenceSpanCode9)
                  , a.OccurenceSpanCodeFrom9 = (b.OccurenceSpanCodeFrom9)
                  , a.OccurenceSpanCodeThrough9 = (b.OccurenceSpanCodeThrough9)
                  , a.OccurenceSpanCode10 = (b.OccurenceSpanCode10)
                  , a.OccurenceSpanCodeFrom10 = (b.OccurenceSpanCodeFrom10)
                  , a.OccurenceSpanCodeThrough10 = (b.OccurenceSpanCodeThrough10)
                  , a.OccurenceSpanCode11 = (b.OccurenceSpanCode11)
                  , a.OccurenceSpanCodeFrom11 = (b.OccurenceSpanCodeFrom11)
                  , a.OccurenceSpanCodeThrough11 = (b.OccurenceSpanCodeThrough11)
                  , a.OccurenceSpanCode12 = (b.OccurenceSpanCode12)
                  , a.OccurenceSpanCodeFrom12 = (b.OccurenceSpanCodeFrom12)
                  , a.OccurenceSpanCodeThrough12 = (b.OccurenceSpanCodeThrough12)
              FROM  #XClaims a
                  JOIN #ClaimLines b ON a.XClaimId = b.XClaimId




            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 65
              WHERE
                ClaimBatchId = @ParmClaimBatchId



            -- Validate required fields
            SELECT  @Bookmark = 'EXEC ssp_PMClaims837Validations'
            EXEC ssp_PMClaims837Validations @CurrentUser = @ParmCurrentUser
                                          , @ClaimBatchId = @ParmClaimBatchId
                                          , @FormatType = @FormatType


            UPDATE  ClaimBatches
              SET   BatchProcessProgress = 70
              WHERE
                ClaimBatchId = @ParmClaimBatchId


            -- Delete the error Charges
            DELETE a
                FROM    #ClaimLines a
                    JOIN ChargeErrors b ON(a.ChargeId = b.ChargeId)


            IF(SELECT   COUNT(*) FROM   #ClaimLines) = 0
                BEGIN
                    --return 0
                    --set @ErrorMessage = 'All selected charges had errors'
                    --set @ErrorNumber = 30001
                    --select * from ChargeErrors
                    GOTO ProcessedStatus
                END



            -- 837

            IF @Electronic = 'Y'
                BEGIN

                    PRINT 6241
                    SELECT  @Bookmark = 'EXEC ssp_PMClaimsUpdateClaimsTablesInstitutional'

                    EXEC ssp_PMClaimsUpdateClaimsTablesInstitutional @CurrentUser = @ParmCurrentUser
                                                                   , @ClaimFormatId = @ClaimFormatId
                                                                   , @ClaimBatchId = @ParmClaimBatchId
                    PRINT 6243

                    DECLARE @TotalClaims INT
                    DECLARE @TotalBilledAmount MONEY

                    DECLARE @e_sep CHAR(1)
                          , @te_sep VARCHAR(10)
                    DECLARE @se_sep CHAR(1)
                          , @tse_sep VARCHAR(10)
                    DECLARE @seg_term VARCHAR(2)

                    DECLARE @ClientGroupId INT
                          , @ClientGroupCount INT
                    DECLARE @ClaimLimit INT
                    DECLARE @ClaimsPerClientLimit INT --#EH!INFO!ADD!@ClaimsPerClientLimit!
                    DECLARE @LastClientId INT       --#EH!INFO!ADD!@LastClientId!
                          , @CurrentClientId INT    --#EH!INFO!ADD!@CurrentClientId!

                    DECLARE @BatchFileNumber INT
                    DECLARE @NumberOfSegments INT
                    DECLARE @FunctionalTrailer VARCHAR(1000)
                          , @InterchangeTrailer VARCHAR(1000)
                          , @TransactionTrailer VARCHAR(1000)
                    DECLARE @seg1 VARCHAR(1000)
                          , @seg2 VARCHAR(1000)
                          , @seg3 VARCHAR(1000)
                          , @seg4 VARCHAR(1000)
                          , @seg5 VARCHAR(1000)
                          , @seg6 VARCHAR(1000)
                          , @seg7 VARCHAR(1000)
                          , @seg8 VARCHAR(1000)
                          , @seg9 VARCHAR(1000)
                          , @seg10 VARCHAR(1000)
                          , @seg11 VARCHAR(1000)
                          , @seg12 VARCHAR(1000)
                          , @seg13 VARCHAR(1000)
                          , @seg14 VARCHAR(1000)
                          , @seg15 VARCHAR(1000)
                          , @seg16 VARCHAR(1000)
                          , @seg17 VARCHAR(1000)
                          , @seg18 VARCHAR(1000)
                          , @seg19 VARCHAR(1000)
                          , @seg20 VARCHAR(1000)
                          , @seg21 VARCHAR(1000)
                          , @seg22 VARCHAR(1000)
                          , @seg23 VARCHAR(1000)
                          , @seg24 VARCHAR(1000)
                          , @seg25 VARCHAR(1000)
                          , @seg26 VARCHAR(1000)
                          , @seg27 VARCHAR(1000)
                          , @seg28 VARCHAR(1000)
                          , @seg29 VARCHAR(1000)
                          , @seg30 VARCHAR(1000)
                          , @seg31 VARCHAR(1000)
                          , @seg32 VARCHAR(1000)
                          , @seg33 VARCHAR(1000)
                          , @seg34 VARCHAR(1000)
                          , @seg35 VARCHAR(1000)
                          , @seg36 VARCHAR(1000)
                          , @seg37 VARCHAR(1000)
                          , @seg38 VARCHAR(1000)
                          , @seg39 VARCHAR(1000)
                          , @seg40 VARCHAR(1000)
                          , @seg41 VARCHAR(1000)
						  , @seg42 VARCHAR(1000)

                    DECLARE @ProviderLoopId INT
                    DECLARE @SubscriberLoopId INT
                    DECLARE @ClaimLoopId INT
                    --New**
                    DECLARE @ServiceLoopId INT
                    --New** end
                    DECLARE @ServiceCount INT
                    DECLARE @HierId INT
                    DECLARE @ProviderHierId INT
                    DECLARE @TextPointer BINARY(16)
                    DECLARE @ClaimLineId INT
                    DECLARE @CoveragePlan VARCHAR(10)
                    DECLARE @DateString VARCHAR(8)

                    CREATE TABLE #FinalData (DataText TEXT NULL)


                    -- Added 1/30 NJain To keep track of XClaimIds included in a file created below
                    CREATE TABLE #XClaims_Track (
                        XClaimId2 INT     NOT NULL
                      , Included  CHAR(1) NOT NULL
                    )

                    INSERT INTO #XClaims_Track(XClaimId2
                                             , Included)
                      SELECT    XClaimId, 'N' FROM  #XClaims


                    -- Split into multiple files if exceeding limit

                    SELECT  @ClientGroupId        = 0
                          , @ClientGroupCount     = 0
                          , @ClaimLimit           = 5000
                          , @ClaimsPerClientLimit = 100
                          , @BatchFileNumber      = 0

                    SELECT  @DateString = CONVERT(VARCHAR, GETDATE(), 112)

                    -- Create multiple files if exceeding claim limit per file
                    WHILE EXISTS (SELECT    * FROM  #ClaimLines)
                        BEGIN

                            SELECT  @BatchFileNumber = @BatchFileNumber + 1

                            DELETE  FROM #ClaimLines_Temp

                            --set rowcount @ClaimLimit

                            INSERT INTO #ClaimLines_Temp
                              SELECT    *
                              FROM  #ClaimLines
                              WHERE
                                    XClaimId IN(SELECT TOP(@ClaimLimit)
                                                    XClaimId
                                                  FROM  #XClaims a
                                                      JOIN #XClaims_Track b ON a.XClaimId = b.XClaimId2
                                                  WHERE
                                                    b.Included = 'N'
                                                  ORDER BY
                                                    a.XClaimId)
                            --1/16 APOOLE BUG This doesn't account for the second  /third loops through. Needs to be stored which XClaimId's have already been used.

                            -- Added 1/30 NJain to fix the above bug
                            UPDATE  a
                              SET   a.Included = 'Y'
                              FROM  #XClaims_Track a
                                  JOIN #ClaimLines_Temp b ON a.XClaimId2 = b.XClaimId
                            --

                            DELETE a
                                FROM    #ClaimLines a
                                    JOIN #ClaimLines_Temp b ON(a.ClaimLineId = b.ClaimLineId)
                            --set rowcount 0


                            -- If number of claims per Client exceeds @ClaimsPerClientLimit
                            -- Split the claims into multiple groups
                            DECLARE cur_ClientGroup INSENSITIVE CURSOR
                                FOR
                                SELECT  ClientId
                                      , ClaimLineId
                                  FROM  #ClaimLines_Temp
                                  WHERE
                                    ClientGroupId IS NULL
                                  ORDER BY
                                    ClientId
                                  , DateOfService

                            OPEN cur_ClientGroup

                            FETCH cur_ClientGroup
                            INTO @CurrentClientId
                               , @ClaimLineId
                            --#EH!INFO!ADD!@CurrentClientId!
                            --#EH!INFO!ADD!@ClaimLineId!
                            WHILE @@fetch_status = 0
                                BEGIN
                                    SELECT  @ClientGroupCount = @ClientGroupCount + 1

                                    IF @LastClientId = NULL
                                       OR   @CurrentClientId <> @LastClientId
                                       OR   @ClientGroupCount > @ClaimsPerClientLimit
                                        BEGIN
                                            SELECT  @ClientGroupId = @ClientGroupId + 1
                                        END

                                    UPDATE  #ClaimLines_Temp
                                      SET   ClientGroupId = @ClientGroupId
                                      WHERE
                                        ClaimLineId = @ClaimLineId

                                    -- Added 3/27
                                    UPDATE  a
                                      SET   a.ClientGroupId = (SELECT   MAX(b.ClientGroupId)
                                                                 FROM   #ClaimLines_Temp b
                                                                 WHERE
                                                                    b.XClaimId = a.XClaimId)
                                      FROM  #XClaims a


                                    UPDATE  b
                                      SET   ClientGroupId = a.ClientGroupId
                                      FROM  #XClaims a
                                          JOIN #ClaimLines_Temp b ON b.XClaimId = a.XClaimId



                                    SELECT  @LastClientId = @CurrentClientId

                                    FETCH cur_ClientGroup
                                    INTO @CurrentClientId
                                       , @ClaimLineId
                                END

                            CLOSE cur_ClientGroup
                            DEALLOCATE cur_ClientGroup

                            SELECT  @TotalClaims       = COUNT(*)
                                  , @TotalBilledAmount = ISNULL(SUM(ChargeAmount), 0)
                              FROM  #ClaimLines_Temp

                            --print 'Number of Claims = ' + convert(varchar,@TotalClaims)
                            --print 'Total Billed Amount  = ' + convert(varchar, @TotalBilledAmount)

                            SELECT  @e_sep    = '*'
                                  , @te_sep   = 'TE_SEP'
                                  , @se_sep   = ':'
                                  , @tse_sep  = 'TSE_SEP'
                                  , @seg_term = '~'
                            --char(13)+char(10)



                            -- Populate Interchange Control Header
                            -- NJain added 1/31
                            IF @BatchFileNumber = 1 --#EH!INFO!ADD!@BatchFileNumber!
                                BEGIN

                                    DELETE  FROM #HIPAAHeaderTrailer

                                    -- NJain Added 7/10/2014
                                    -- Updated the Insert statement to use the new fields from ClaimFormats table. If the data in these fields is NULL, then use the previously hard-coded values.
                                    INSERT INTO #HIPAAHeaderTrailer(AuthorizationIdQualifier
                                                                  , AuthorizationId
                                                                  , SecurityIdQualifier
                                                                  , SecurityId
                                                                  , InterchangeSenderQualifier
                                                                  , InterchangeSenderId
                                                                  , InterchangeReceiverQualifier
                                                                  , InterchangeReceiverId
                                                                  , InterchangeDate
                                                                  , InterchangeTime
                                                                  , InterchangeControlStandardsId
                                                                  , InterchangeControlVersionNumber
                                                                  , InterchangeControlNumberHeader
                                                                  , AcknowledgeRequested
                                                                  , UsageIndicator
                                                                  , ComponentSeparator
                                                                  , FunctionalIdCode
                                                                  , ApplicationSenderCode
                                                                  , ApplicationReceiverCode
                                                                  , FunctionalDate
                                                                  , FunctionalTime
                                                                  , GroupControlNumberHeader
                                                                  , ResponsibleAgencyCode
                                                                  , VersionCode
                                                                  , NumberOfTransactions
                                                                  , GroupControlNumberTrailer
                                                                  , NumberOfGroups
                                                                  , InterchangeControlNumberTrailer)
                                      SELECT    ISNULL(AuthorizationIdQualifier, '00')
                                              , ISNULL(AuthorizationId, SPACE(10))
                                              , ISNULL(SecurityInfoQualifier, '00')
                                              , ISNULL(SecurityId, SPACE(10))
                                              , ISNULL(InterchangeSenderQualifier, 'ZZ')
                                              , BillingLocationCode
                                              , ISNULL(InterchangeReceiverQualifier, 'ZZ')
                                              , ReceiverCode
                                              , RIGHT(CONVERT(VARCHAR, GETDATE(), 112), 6)
                                              , SUBSTRING(CONVERT(VARCHAR, GETDATE(), 108), 1, 2) + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 108), 4, 2)
                                              , '^'
                                              , '00501'
                                              , REPLICATE('0', 9 - LEN(CONVERT(VARCHAR, @ParmClaimBatchId))) + CONVERT(VARCHAR, @ParmClaimBatchId)
                                              , '0'
                                              , ProductionOrTest
                                              , @tse_sep
                                              , 'HC'
                                              , ISNULL(ApplicationSenderCode, BillingLocationCode)
                                              , ISNULL(ApplicationReceiverCode, ReceiverCode)
                                              , CONVERT(VARCHAR, GETDATE(), 112)
                                              , SUBSTRING(CONVERT(VARCHAR, GETDATE(), 108), 1, 2) + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 108), 4, 2)
                                              , CONVERT(VARCHAR, @ParmClaimBatchId)
                                              , 'X'
                                              , '005010X223A2'
                                              , '1'
                                              , CONVERT(VARCHAR, @ParmClaimBatchId)
                                              , '1'
                                              , REPLICATE('0', 9 - LEN(CONVERT(VARCHAR, @ParmClaimBatchId))) + CONVERT(VARCHAR, @ParmClaimBatchId)
                                      FROM  ClaimFormats
                                      WHERE
                                            ClaimFormatId = @ClaimFormatId


                                    -- Added 4/18
                                    ---------------------------------------------------------------------------------
                                    --PRINT 6507
                                    SELECT  @Bookmark = 'scsp_PMClaims837InstitutionalUpdateSegmentData'

                                    IF EXISTS (SELECT   *
                                                 FROM   sys.procedures
                                                 WHERE
                                                    name = 'scsp_PMClaims837InstitutionalUpdateSegmentData')
                                        BEGIN
                                            EXEC dbo.scsp_PMClaims837InstitutionalUpdateSegmentData @CurrentUser = @ParmCurrentUser
                                                                                                  , @ClaimBatchId = @ParmClaimBatchId
                                                                                                  , @FormatType = @FormatType
                                        END
                                    --PRINT 6509

                                    --SELECT * FROM #XClaims
                                    ---------------------------------------------------------------------------------

                                    -- Set up Interchange and Functional header and trailer segments
                                    UPDATE  #HIPAAHeaderTrailer
                                      SET   InterchangeHeaderSegment = UPPER(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               REPLACE(
                                                                                                   ('ISA' + @te_sep + AuthorizationIdQualifier + @te_sep
                                                                                                    + AuthorizationId + @te_sep + SecurityIdQualifier + @te_sep
                                                                                                    + SecurityId + @te_sep + InterchangeSenderQualifier
                                                                                                    + @te_sep + InterchangeSenderId
                                                                                                    + SPACE(15 - LEN(InterchangeSenderId)) + @te_sep
                                                                                                    + InterchangeReceiverQualifier + @te_sep
                                                                                                    + InterchangeReceiverId
                                                                                                    + SPACE(15 - LEN(InterchangeReceiverId)) + @te_sep
                                                                                                    + InterchangeDate + @te_sep + InterchangeTime + @te_sep
                                                                                                    + InterchangeControlStandardsId + @te_sep
                                                                                                    + InterchangeControlVersionNumber + @te_sep
                                                                                                    + InterchangeControlNumberHeader + @te_sep
                                                                                                    + AcknowledgeRequested + @te_sep + UsageIndicator + @te_sep
                                                                                                    + ComponentSeparator), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                         , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                          , FunctionalHeaderSegment = UPPER(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              REPLACE(
                                                                                                  ('GS' + @te_sep + FunctionalIdCode + @te_sep
                                                                                                   + ApplicationSenderCode + @te_sep + ApplicationReceiverCode
                                                                                                   + @te_sep + FunctionalDate + @te_sep + FunctionalTime
                                                                                                   + @te_sep + GroupControlNumberHeader + @te_sep
                                                                                                   + ResponsibleAgencyCode + @te_sep + VersionCode), @e_sep, '')
                                                                                            , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                            , @tse_sep, @se_sep)) + @seg_term
                                          , FunctionalTrailerSegment = UPPER(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               REPLACE(
                                                                                                   ('GE' + @te_sep + NumberOfTransactions + @te_sep
                                                                                                    + GroupControlNumberTrailer), @e_sep, ''), @se_sep, '')
                                                                                         , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                       + @seg_term
                                          , InterchangeTrailerSegment = UPPER(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            REPLACE(
                                                                                                REPLACE(
                                                                                                    ('IEA' + @te_sep + NumberOfGroups + @te_sep
                                                                                                     + InterchangeControlNumberTrailer), @e_sep, ''), @se_sep
                                                                                              , ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                              , @se_sep)) + CASE
                                                                                                WHEN @seg_term = CHAR(13) + CHAR(10) THEN ''
                                                                                                ELSE @seg_term
                                                                                            END
                                END
                            -- HIPAA Header Trailer

                            -- In case of the last batch of the file
                            IF NOT EXISTS (SELECT   * FROM  #ClaimLines)
                                BEGIN

                                    UPDATE  #HIPAAHeaderTrailer
                                      SET   NumberOfTransactions = @BatchFileNumber

                                    UPDATE  #HIPAAHeaderTrailer
                                      SET   FunctionalTrailerSegment = UPPER(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               REPLACE(
                                                                                                   ('GE' + @te_sep + NumberOfTransactions + @te_sep
                                                                                                    + GroupControlNumberTrailer), @e_sep, ''), @se_sep, '')
                                                                                         , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                       + @seg_term
                                END

                            -- Populate Header and Trailer #837HeaderTrailer
                            DELETE  FROM #837HeaderTrailer

                            INSERT INTO #837HeaderTrailer(TransactionSetControlNumberHeader
                                                        , TransactionSetPurposeCode
                                                        , ApplicationTransactionId
                                                        , CreationDate
                                                        , CreationTime
                                                        , EncounterId
                                                        , TransactionTypeCode
                                                        , SubmitterEntityQualifier
                                                        , SubmitterLastName
                                                        , SubmitterId
                                                        , SubmitterContactName
                                                        , SubmitterCommNumber1Qualifier
                                                        , SubmitterCommNumber1
                                                        , ReceiverLastName
                                                        , ReceiverPrimaryId
                                                        , TransactionSetControlNumberTrailer)
                              SELECT    REPLICATE('0', 8 - LEN(CONVERT(VARCHAR, @ParmClaimBatchId))) + CONVERT(VARCHAR, @ParmClaimBatchId)
                                        + CONVERT(VARCHAR, @BatchFileNumber - 1)
                                      , '00'
                                      , REPLICATE('0', 9 - LEN(CONVERT(VARCHAR, @ParmClaimBatchId))) + CONVERT(VARCHAR, @ParmClaimBatchId)
                                      , CONVERT(VARCHAR, GETDATE(), 112)
                                      , SUBSTRING(CONVERT(VARCHAR, GETDATE(), 108), 1, 2) + SUBSTRING(CONVERT(VARCHAR, GETDATE(), 108), 4, 2)
                                      , 'CH'
                                      , CASE
                                            WHEN a.ProductionOrTest = 'T' THEN '005010X223A2'
                                            ELSE '005010X223A2'
                                        END
                                      , '2'
                                      , b.AgencyName
                                      , a.BillingLocationCode
                                      , b.BillingContact
                                      , 'TE'
                                      , SUBSTRING(
                                            REPLACE(REPLACE(REPLACE(REPLACE(b.BillingPhone, ' ', RTRIM('')), '-', RTRIM('')), '(', RTRIM('')), ')', RTRIM('')), 1
                                          , 10)
                                      , PlanName.CoveragePlanName
                                      , a.ReceiverPrimaryId
                                      , REPLICATE('0', 8 - LEN(CONVERT(VARCHAR, @ParmClaimBatchId))) + CONVERT(VARCHAR, @ParmClaimBatchId)
                                        + CONVERT(VARCHAR, @BatchFileNumber - 1)
                              FROM  ClaimFormats a
                                  CROSS JOIN Agency b
                                  CROSS JOIN
                                    (   SELECT DISTINCT TOP 1
                                            ISNULL(b.CoveragePlanName, c.PayerName) AS CoveragePlanName
                                          FROM  dbo.ClaimBatches a
                                              LEFT JOIN dbo.CoveragePlans b ON b.CoveragePlanId = a.CoveragePlanId
                                              LEFT JOIN Payers c ON c.PayerId = a.PayerId
                                          WHERE
                                            a.ClaimBatchId = @ParmClaimBatchId
                                            AND a.ClaimFormatId = @ClaimFormatId) AS PlanName
                              WHERE
                                    a.ClaimFormatId = @ClaimFormatId


                            --SELECT * FROM #837HeaderTrailer


                            -- Populate #837BillingProviders, one record for each provider id
                            DELETE  FROM #837BillingProviders



                            INSERT INTO #837BillingProviders(BillingProviderLastName
                                                           , BillingProviderFirstName
                                                           , BillingProviderMiddleName
                                                           , BillingProviderIdQualifier
                                                           , BillingProviderId
                                                           , BillingProviderAddress1
                                                           , BillingProviderAddress2
                                                           , BillingProviderCity
                                                           , BillingProviderState
                                                           , BillingProviderZip
                                                           , BillingProviderAdditionalIdQualifier
                                                           , BillingProviderAdditionalId
                                                           , BillingProviderAdditionalIdQualifier2
                                                           , BillingProviderAdditionalId2
                                                           , BillingProviderContactName
                                                           , BillingProviderContactNumber1Qualifier
                                                           , BillingProviderContactNumber1
                                                           , BillingProviderTaxonomyCode
                                                           , PayToProviderLastName
                                                           , PayToProviderFirstName
                                                           , PayToProviderMiddleName
                                                           , PayToProviderIdQualifier
                                                           , PayToProviderId
                                                           , PayToProviderAddress1
                                                           , PayToProviderAddress2
                                                           , PayToProviderCity
                                                           , PayToProviderState
                                                           , PayToProviderZip
                                                           , PayToProviderSecondaryQualifier
                                                           , PayToProviderSecondaryId
                                                           , PayToProviderSecondaryQualifier2
                                                           , PayToProviderSecondaryId2)
                              SELECT DISTINCT
                                    MAX(a.BillingProviderLastName)
                                  , MAX(a.BillingProviderFirstName)
                                  , MAX(a.BillingProviderMiddleName)
                                  , 'XX'
                                  , a.BillingProviderNPI
                                  , MAX(a.PaymentAddress1)
                                  , MAX(a.PaymentAddress2)
                                  , MAX(a.PaymentCity)
                                  , MAX(a.PaymentState)
                                  , MAX(a.PaymentZip)
                                  , MAX(a.BillingProviderIdType)
                                  , MAX(a.BillingProviderId)
                                  , MAX(CASE
                                            WHEN a.BillingProviderTaxIdType = '24' THEN 'EI'
                                            ELSE 'SY'
                                        END)
                                  , MAX(a.BillingProviderTaxId)
                                  , MAX(b.BillingContact)
                                  , 'TE'
                                  , MAX(b.BillingPhone)
                                  , MAX(a.BillingTaxonomyCode)
                                  , MAX(a.PayToProviderLastName)
                                  , MAX(a.PayToProviderFirstName)
                                  , MAX(a.PayToProviderMiddleName)
                                  , 'XX'
                                  , MAX(a.PayToProviderNPI)
                                  , MAX(a.PaymentAddress1)
                                  , MAX(a.PaymentAddress2)
                                  , MAX(a.PaymentCity)
                                  , MAX(a.PaymentState)
                                  , MAX(a.PaymentZip)
                                  , MAX(a.PayToProviderIdType)
                                  , MAX(a.PayToProviderId)
                                  , MAX(CASE
                                            WHEN a.PayToProviderTaxIdType = '24' THEN 'EI'
                                            ELSE 'SY'
                                        END)
                                  , MAX(a.PayToProviderTaxId)
                              FROM  #ClaimLines_Temp a
                                  CROSS JOIN Agency b
                              GROUP BY
                                  a.BillingProviderNPI



                            -- Populate #837SubscriberClients, one record for each provider id/patient
                            DELETE  FROM #837SubscriberClients



                            INSERT INTO #837SubscriberClients(RefBillingProviderId
                                                            , ClientGroupId
                                                            , ClientId
                                                            , CoveragePlanId
                                                            , InsuredId
                                                            , Priority
                                                            , GroupNumber
                                                            , GroupName
                                                            , RelationCode
                                                            , MedicareInsuranceTypeCode
                                                            , ClaimFilingIndicatorCode
                                                            , SubscriberEntityQualifier
                                                            , SubscriberLastName
                                                            , SubscriberFirstName
                                                            , SubscriberMiddleName
                                                            , SubscriberSuffix
                                                            , SubscriberIdQualifier
                                                            , SubscriberIdInsuredId
                                                            , SubscriberAddress1
                                                            , SubscriberAddress2
                                                            , SubscriberCity
                                                            , SubscriberState
                                                            , SubscriberZip
                                                            , SubscriberDOB
                                                            , SubscriberSex
                                                            , SubscriberSSN
                                                            , PayerName
                                                            , PayerIdQualifier
                                                            , ElectronicClaimsPayerId
                                                            , ClaimOfficeNumber
                                                            , PayerAddress1
                                                            , PayerAddress2
                                                            , PayerCity
                                                            , PayerState
                                                            , PayerZip
                                                            , ClientLastName
                                                            , ClientFirstName
                                                            , ClientMiddleName
                                                            , ClientSuffix
                                                            , ClientAddress1
                                                            , ClientAddress2
                                                            , ClientCity
                                                            , ClientState
                                                            , ClientZip
                                                            , ClientDOB
                                                            , ClientSex)
                              SELECT DISTINCT
                                    b.UniqueId
                                  , a.ClientGroupId
                                  , a.ClientId
                                  , a.CoveragePlanId
                                  , a.InsuredId
                                  , a.Priority
                                  , MAX(a.GroupNumber)
                                  , MAX(a.GroupName)
                                  , MAX(a.InsuredRelationCode)
                                  , MAX(a.MedicareInsuranceTypeCode)
                                  , MAX(a.ClaimFilingIndicatorCode)
                                  , '1'
                                  , MAX(RTRIM(a.InsuredLastName))
                                  , MAX(RTRIM(a.InsuredFirstName))
                                  , MAX(RTRIM(a.InsuredMiddleName))
                                  , MAX(RTRIM(a.InsuredSuffix))
                                  , 'MI'
                                  , a.InsuredId
                                  , MAX(RTRIM(a.InsuredAddress1))
                                  , MAX(RTRIM(a.InsuredAddress2))
                                  , MAX(RTRIM(a.InsuredCity))
                                  , MAX(RTRIM(a.InsuredState))
                                  , MAX(RTRIM(a.InsuredZip))
                                  , MAX(CONVERT(VARCHAR, a.InsuredDOB, 112))
                                  , MAX(a.InsuredSex)
                                  , MAX(a.InsuredSSN)
                                  , MAX(a.PayerName)
                                  , 'PI'
                                  , MAX(a.ElectronicClaimsPayerId)
                                  , MAX(a.ClaimOfficeNumber)
                                  , MAX(RTRIM(a.PayerAddress1))
                                  , MAX(RTRIM(a.PayerAddress2))
                                  , MAX(RTRIM(a.PayerCity))
                                  , MAX(RTRIM(a.PayerState))
                                  , MAX(RTRIM(a.PayerZip))
                                  , MAX(RTRIM(a.ClientLastName))
                                  , MAX(RTRIM(a.ClientFirstName))
                                  , MAX(RTRIM(a.ClientMiddleName))
                                  , MAX(RTRIM(a.ClientSuffix))
                                  , MAX(RTRIM(a.ClientAddress1))
                                  , MAX(RTRIM(a.ClientAddress2))
                                  , MAX(RTRIM(a.ClientCity))
                                  , MAX(RTRIM(a.ClientState))
                                  , MAX(RTRIM(a.ClientZip))
                                  , MAX(CONVERT(VARCHAR, a.ClientDOB, 112))
                                  , MAX(a.ClientSex)
                              FROM  #ClaimLines_Temp a
                                  JOIN #837BillingProviders b ON(a.BillingProviderNPI = b.BillingProviderId)
                              GROUP BY
                                  b.UniqueId
                                , a.ClientGroupId
                                , a.ClientId
                                , a.CoveragePlanId
                                , a.InsuredId
                                , a.Priority


                            --SELECT BillingProviderId, * FROM #ClaimLines_Temp

                            --SELECT BillingProviderAdditionalId, * FROM #837BillingProviders

                            -- Populate #837Claims table, one record for each provider id/patient/claim
                            DELETE  FROM #837Claims


                            SELECT  @Bookmark = '#837 Claims Insert'

                            INSERT INTO #837Claims(RefSubscriberClientId
                                                 , XClaimId
                                                 , ClaimId
                                                 , TotalAmount
                                                 , StatementStartDate
                                                 , StatementEndDate
                                                 , PlaceOfService
                                                 , ClaimFrequencyCode
                                                 , RelatedHospitalAdmitDate
                                                 , SignatureIndicator
                                                 , MedicareAssignCode
                                                 , BenefitsAssignCertificationIndicator
                                                 , ReleaseCode
                                                 , PatientSignatureCode
                                                 , AdmittingDiagnosisQualifier
                                                 , DiagnosisCodeQualifier1
                                                 , DiagnosisCodeQualifier2
                                                 , DiagnosisCodeQualifier3
                                                 , DiagnosisCodeQualifier4
                                                 , DiagnosisCodeQualifier5
                                                 , DiagnosisCodeQualifier6
                                                 , DiagnosisCodeQualifier7
                                                 , DiagnosisCodeQualifier8
                                                 , DiagnosisCodeQualifier9
                                                 , DiagnosisCodeQualifier10
                                                 , DiagnosisCodeQualifier11
                                                 , DiagnosisCodeQualifier12
                                                 , DiagnosisCodeQualifier13
                                                 , AdmittingDiagnosisCode
                                                 , DRGCode
                                                 , DiagnosisCode1
                                                 , DiagnosisCode2
                                                 , DiagnosisCode3
                                                 , DiagnosisCode4
                                                 , DiagnosisCode5
                                                 , DiagnosisCode6
                                                 , DiagnosisCode7
                                                 , DiagnosisCode8
                                                 , DiagnosisCode9
                                                 , DiagnosisCode10
                                                 , DiagnosisCode11
                                                 , DiagnosisCode12
                                                 , DiagnosisCode13
                                                 , AdmittingDiagnosisPOA
                                                 , DiagnosisCodePOA1
                                                 , DiagnosisCodePOA2
                                                 , DiagnosisCodePOA3
                                                 , DiagnosisCodePOA4
                                                 , DiagnosisCodePOA5
                                                 , DiagnosisCodePOA6
                                                 , DiagnosisCodePOA7
                                                 , DiagnosisCodePOA8
                                                 , DiagnosisCodePOA9
                                                 , DiagnosisCodePOA10
                                                 , DiagnosisCodePOA11
                                                 , DiagnosisCodePOA12
                                                 , DiagnosisCodePOA13
                                                 , ProcedureCode1
                                                 , ProcedureCode2
                                                 , ProcedureCode3
                                                 , ProcedureCode4
                                                 , ProcedureCode5
                                                 , ProcedureCode6
                                                 , ProcedureCode7
                                                 , ProcedureCode8
                                                 , ProcedureCode9
                                                 , ProcedureCode10
                                                 , ProcedureCode11
                                                 , ProcedureCode12
                                                 , ProcedureCodeQualifier1
                                                 , ProcedureCodeQualifier2
                                                 , ProcedureCodeQualifier3
                                                 , ProcedureCodeQualifier4
                                                 , ProcedureCodeQualifier5
                                                 , ProcedureCodeQualifier6
                                                 , ProcedureCodeQualifier7
                                                 , ProcedureCodeQualifier8
                                                 , ProcedureCodeQualifier9
                                                 , ProcedureCodeQualifier10
                                                 , ProcedureCodeQualifier11
                                                 , ProcedureCodeQualifier12
                                                 , ProcedureCodeDate1
                                                 , ProcedureCodeDate2
                                                 , ProcedureCodeDate3
                                                 , ProcedureCodeDate4
                                                 , ProcedureCodeDate5
                                                 , ProcedureCodeDate6
                                                 , ProcedureCodeDate7
                                                 , ProcedureCodeDate8
                                                 , ProcedureCodeDate9
                                                 , ProcedureCodeDate10
                                                 , ProcedureCodeDate11
                                                 , ProcedureCodeDate12
                                                 , RenderingEntityCode
                                                 , RenderingEntityQualifier
                                                 , RenderingLastName
                                                 , RenderingFirstName
                                                 , RenderingIdQualifier
                                                 , RenderingId
                                                 , RenderingTaxonomyCode
                                                 , RenderingSecondaryQualifier
                                                 , RenderingSecondaryId
                                                 , RenderingSecondaryQualifier2
                                                 , RenderingSecondaryId2
                                                 , ReferringEntityCode
                                                 , ReferringEntityQualifier
                                                 , ReferringLastName
                                                 , ReferringFirstName
                                                 , ReferringIdQualifier
                                                 , ReferringId
                                                 , ReferringSecondaryQualifier
                                                 , ReferringSecondaryId
                                                 , ReferringSecondaryQualifier2
                                                 , ReferringSecondaryId2
                                                 , PatientAmountPaid
                                                 , PriorAuthorizationNumber
                                                 , PayerClaimControlNumber
                                                 , FacilityEntityCode
                                                 , FacilityName
                                                 , FacilityIdQualifier
                                                 , FacilityId
                                                 , FacilityAddress1
                                                 , FacilityAddress2
                                                 , FacilityCity
                                                 , FacilityState
                                                 , FacilityZip
                                                 , FacilitySecondaryQualifier
                                                 , FacilitySecondaryId  /*,
FacilitySecondaryQualifier2 ,FacilitySecondaryId2*/
                                                 , AdmissionTypeCode
                                                 , AdmissionSourceCode
                                                 , PatientStatusCode
                                                 , AttendingProviderEntityCode
                                                 , AttendingProviderEntityQualifier
                                                 , AttendingProviderLastName
                                                 , AttendingProviderFirstName
                                                 , AttendingProviderIdQualifier
                                                 , AttendingProviderId
                                                 , AttendingProviderTaxonomyCode
                                                 , AttendingProviderLicenseNumber
                                                 , DischargeHour
                                                                        -- Added 03/05
                                                 , ConditionCode1
                                                 , ConditionCode2
                                                 , ConditionCode3
                                                 , ConditionCode4
                                                 , ConditionCode5
                                                 , ConditionCode6
                                                 , ConditionCode7
                                                 , ConditionCode8
                                                 , ConditionCode9
                                                 , ConditionCode10
                                                 , ConditionCode11
                                                 , ConditionCode12
                                                 , ValueCode1
                                                 , ValueCodeValue1
                                                 , ValueCode2
                                                 , ValueCodeValue2
                                                 , ValueCode3
                                                 , ValueCodeValue3
                                                 , ValueCode4
                                                 , ValueCodeValue4
                                                 , ValueCode5
                                                 , ValueCodeValue5
                                                 , ValueCode6
                                                 , ValueCodeValue6
                                                 , ValueCode7
                                                 , ValueCodeValue7
                                                 , ValueCode8
                                                 , ValueCodeValue8
                                                 , ValueCode9
                                                 , ValueCodeValue9
                                                 , ValueCode10
                                                 , ValueCodeValue10
                                                 , ValueCode11
                                                 , ValueCodeValue11
                                                 , ValueCode12
                                                 , ValueCodeValue12
                                                 , OccurenceCode1
                                                 , OccurenceCodeDate1
                                                 , OccurenceCode2
                                                 , OccurenceCodeDate2
                                                 , OccurenceCode3
                                                 , OccurenceCodeDate3
                                                 , OccurenceCode4
                                                 , OccurenceCodeDate4
                                                 , OccurenceCode5
                                                 , OccurenceCodeDate5
                                                 , OccurenceCode6
                                                 , OccurenceCodeDate6
                                                 , OccurenceCode7
                                                 , OccurenceCodeDate7
                                                 , OccurenceCode8
                                                 , OccurenceCodeDate8
                                                 , OccurenceCode9
                                                 , OccurenceCodeDate9
                                                 , OccurenceCode10
                                                 , OccurenceCodeDate10
                                                 , OccurenceCode11
                                                 , OccurenceCodeDate11
                                                 , OccurenceCode12
                                                 , OccurenceCodeDate12
                                                 , OccurenceSpanCode1
                                                 , OccurenceSpanCodeFrom1
                                                 , OccurenceSpanCodeThrough1
                                                 , OccurenceSpanCode2
                                                 , OccurenceSpanCodeFrom2
                                                 , OccurenceSpanCodeThrough2
                                                 , OccurenceSpanCode3
                                                 , OccurenceSpanCodeFrom3
                                                 , OccurenceSpanCodeThrough3
                                                 , OccurenceSpanCode4
                                                 , OccurenceSpanCodeFrom4
                                                 , OccurenceSpanCodeThrough4
                                                 , OccurenceSpanCode5
                                                 , OccurenceSpanCodeFrom5
                                                 , OccurenceSpanCodeThrough5
                                                 , OccurenceSpanCode6
                                                 , OccurenceSpanCodeFrom6
                                                 , OccurenceSpanCodeThrough6
                                                 , OccurenceSpanCode7
                                                 , OccurenceSpanCodeFrom7
                                                 , OccurenceSpanCodeThrough7
                                                 , OccurenceSpanCode8
                                                 , OccurenceSpanCodeFrom8
                                                 , OccurenceSpanCodeThrough8
                                                 , OccurenceSpanCode9
                                                 , OccurenceSpanCodeFrom9
                                                 , OccurenceSpanCodeThrough9
                                                 , OccurenceSpanCode10
                                                 , OccurenceSpanCodeFrom10
                                                 , OccurenceSpanCodeThrough10
                                                 , OccurenceSpanCode11
                                                 , OccurenceSpanCodeFrom11
                                                 , OccurenceSpanCodeThrough11
                                                 , OccurenceSpanCode12
                                                 , OccurenceSpanCodeFrom12
                                                 , OccurenceSpanCodeThrough12
                                                 , ClaimNoteReferenceCode
                                                 , ClaimNote
												 , MedicalRecordNumber)
                              SELECT    b.UniqueId
                                      , a.XClaimId
                                                --12/11 apoole Look into using ClaimLineItemGroupId instead of LineItemControlNumber -- REVIEW
                                      , MAX(CONVERT(VARCHAR, a.ClientId) + '-' + CONVERT(VARCHAR, clt.LineItemControlNumber))
                                                --SUM(a.TotalAmount) ,
                                                --MAX(a.TotalAmount) ,
                                      , SUM(clt.ChargeAmount)
                                      , MAX(a.StatementStartDate)
                                      , MAX(a.StatementEndDate)
                                      , MAX(a.PlaceOfService)
                                      , MAX(a.ClaimFrequencyCode)
                                      , CONVERT(VARCHAR, MAX(a.RelatedHospitalAdmitDate), 112)
                                      , 'Y'
                                      , 'A'
                                      , 'Y'
                                      , 'I'
                                      , ''      --DJH Updated ReleaseCode from 'M' to 'I'--srf 12/27/2010 - changed PatientSignatureCode from B to '' 
                                      , MAX(a.AdmittingDiagnosisQualifier)
                                      , MAX(a.DiagnosisCodeQualifier1)
                                      , MAX(a.DiagnosisCodeQualifier2)
                                      , MAX(a.DiagnosisCodeQualifier3)
                                      , MAX(a.DiagnosisCodeQualifier4)
                                      , MAX(a.DiagnosisCodeQualifier5)
                                      , MAX(a.DiagnosisCodeQualifier6)
                                      , MAX(a.DiagnosisCodeQualifier7)
                                      , MAX(a.DiagnosisCodeQualifier8)
                                      , MAX(a.DiagnosisCodeQualifier9)
                                      , MAX(a.DiagnosisCodeQualifier10)
                                      , MAX(a.DiagnosisCodeQualifier11)
                                      , MAX(a.DiagnosisCodeQualifier12)
                                      , MAX(a.DiagnosisCodeQualifier13)
                                      , MAX(a.AdmittingDiagnosisCode)
                                      , MAX(a.DRGCode)
                                      , MAX(a.DiagnosisCode1)
                                      , MAX(a.DiagnosisCode2)
                                      , MAX(a.DiagnosisCode3)
                                      , MAX(a.DiagnosisCode4)
                                      , MAX(a.DiagnosisCode5)
                                      , MAX(a.DiagnosisCode6)
                                      , MAX(a.DiagnosisCode7)
                                      , MAX(a.DiagnosisCode8)
                                      , MAX(a.DiagnosisCode9)
                                      , MAX(a.DiagnosisCode10)
                                      , MAX(a.DiagnosisCode11)
                                      , MAX(a.DiagnosisCode12)
                                      , MAX(a.DiagnosisCode13)
                                      , MAX(a.AdmittingDiagnosisPOA)
                                      , MAX(a.DiagnosisCodePOA1)
                                      , MAX(a.DiagnosisCodePOA2)
                                      , MAX(a.DiagnosisCodePOA3)
                                      , MAX(a.DiagnosisCodePOA4)
                                      , MAX(a.DiagnosisCodePOA5)
                                      , MAX(a.DiagnosisCodePOA6)
                                      , MAX(a.DiagnosisCodePOA7)
                                      , MAX(a.DiagnosisCodePOA8)
                                      , MAX(a.DiagnosisCodePOA9)
                                      , MAX(a.DiagnosisCodePOA10)
                                      , MAX(a.DiagnosisCodePOA11)
                                      , MAX(a.DiagnosisCodePOA12)
                                      , MAX(a.DiagnosisCodePOA13)
                                      , MAX(a.ProcedureCode1)
                                      , MAX(a.ProcedureCode2)
                                      , MAX(a.ProcedureCode3)
                                      , MAX(a.ProcedureCode4)
                                      , MAX(a.ProcedureCode5)
                                      , MAX(a.ProcedureCode6)
                                      , MAX(a.ProcedureCode7)
                                      , MAX(a.ProcedureCode8)
                                      , MAX(a.ProcedureCode9)
                                      , MAX(a.ProcedureCode10)
                                      , MAX(a.ProcedureCode11)
                                      , MAX(a.ProcedureCode12)
                                      , MAX(a.ProcedureCodeQualifier1)
                                      , MAX(a.ProcedureCodeQualifier2)
                                      , MAX(a.ProcedureCodeQualifier3)
                                      , MAX(a.ProcedureCodeQualifier4)
                                      , MAX(a.ProcedureCodeQualifier5)
                                      , MAX(a.ProcedureCodeQualifier6)
                                      , MAX(a.ProcedureCodeQualifier7)
                                      , MAX(a.ProcedureCodeQualifier8)
                                      , MAX(a.ProcedureCodeQualifier9)
                                      , MAX(a.ProcedureCodeQualifier10)
                                      , MAX(a.ProcedureCodeQualifier11)
                                      , MAX(a.ProcedureCodeQualifier12)
                                      , MAX(a.ProcedureCodeDate1)
                                      , MAX(a.ProcedureCodeDate2)
                                      , MAX(a.ProcedureCodeDate3)
                                      , MAX(a.ProcedureCodeDate4)
                                      , MAX(a.ProcedureCodeDate5)
                                      , MAX(a.ProcedureCodeDate6)
                                      , MAX(a.ProcedureCodeDate7)
                                      , MAX(a.ProcedureCodeDate8)
                                      , MAX(a.ProcedureCodeDate9)
                                      , MAX(a.ProcedureCodeDate10)
                                      , MAX(a.ProcedureCodeDate11)
                                      , MAX(a.ProcedureCodeDate12)
                                      , '82'
                                      , '1'     -- review: change to come from xclaim? 
                                      , MAX(a.RenderingLastName)
                                      , MAX(a.RenderingFirstName)
                                      , MAX(a.RenderingIdQualifier)
                                      , MAX(a.RenderingId)
                                      , MAX(a.RenderingTaxonomyCode)
                                      , MAX(a.RenderingSecondaryQualifier)
                                      , MAX(a.RenderingSecondaryId)
                                      , MAX(a.RenderingSecondaryQualifier2)
                                      , MAX(a.RenderingSecondaryId2)
                                      , 'DN'
                                      , '1'     -- review: change to come from xclaim?
                                      , MAX(a.ReferringLastName)
                                      , MAX(a.ReferringFirstName)
                                      , MAX(a.ReferringIdQualifier)
                                      , MAX(a.ReferringId)
                                      , MAX(a.ReferringSecondaryQualifier)
                                      , MAX(a.ReferringSecondaryId)
                                      , MAX(a.ReferringSecondaryQualifier2)
                                      , MAX(a.ReferringSecondaryId2)
                                      , SUM(a.PatientAmountPaid)
                                      , MAX(a.PriorAuthorizationNumber)
                                      , MAX(a.PayerClaimControlNumber)
                                      , MAX(a.FacilityEntityCode)
                                      , MAX(a.FacilityName)
                                      , MAX(a.FacilityIdQualifier)
                                      , MAX(a.FacilityId)
                                      , MAX(a.FacilityAddress1)
                                      , MAX(a.FacilityAddress2)
                                      , MAX(a.FacilityCity)
                                      , MAX(a.FacilityState)
                                      , MAX(a.FacilityZip)
                                      , MAX(a.FacilitySecondaryQualifier)
                                      , MAX(a.FacilitySecondaryId)
                                      , a.AdmissionTypeCode
                                      , a.AdmissionSourceCode
                                      , a.PatientStatusCode
                                      , '71'
                                      , '1'     -- review: change to come from xclaim?
                                      , MAX(a.AttendingProviderLastName)
                                      , MAX(a.AttendingProviderFirstName)
                                      , 'XX'    -- review: change to come from xclaim?
                                      , MAX(a.AttendingProviderId)
                                      , MAX(a.AttendingProviderTaxonomyCode)
                                      , MAX(a.AttendingProviderLicenseNumber)
                                      , MAX(a.DischargeHour)
                                                -- Added 03/05    
                                      , MAX(a.ConditionCode1)
                                      , MAX(a.ConditionCode2)
                                      , MAX(a.ConditionCode3)
                                      , MAX(a.ConditionCode4)
                                      , MAX(a.ConditionCode5)
                                      , MAX(a.ConditionCode6)
                                      , MAX(a.ConditionCode7)
                                      , MAX(a.ConditionCode8)
                                      , MAX(a.ConditionCode9)
                                      , MAX(a.ConditionCode10)
                                      , MAX(a.ConditionCode11)
                                      , MAX(a.ConditionCode12)
                                      , MAX(a.ValueCode1)
                                      , MAX(a.ValueCodeValue1)
                                      , MAX(a.ValueCode2)
                                      , MAX(a.ValueCodeValue2)
                                      , MAX(a.ValueCode3)
                                      , MAX(a.ValueCodeValue3)
                                      , MAX(a.ValueCode4)
                                      , MAX(a.ValueCodeValue4)
                                      , MAX(a.ValueCode5)
                                      , MAX(a.ValueCodeValue5)
                                      , MAX(a.ValueCode6)
                                      , MAX(a.ValueCodeValue6)
                                      , MAX(a.ValueCode7)
                                      , MAX(a.ValueCodeValue7)
                                      , MAX(a.ValueCode8)
                                      , MAX(a.ValueCodeValue8)
                                      , MAX(a.ValueCode9)
                                      , MAX(a.ValueCodeValue9)
                                      , MAX(a.ValueCode10)
                                      , MAX(a.ValueCodeValue10)
                                      , MAX(a.ValueCode11)
                                      , MAX(a.ValueCodeValue11)
                                      , MAX(a.ValueCode12)
                                      , MAX(a.ValueCodeValue12)
                                      , MAX(a.OccurenceCode1)
                                      , MAX(a.OccurenceCodeDate1)
                                      , MAX(a.OccurenceCode2)
                                      , MAX(a.OccurenceCodeDate2)
                                      , MAX(a.OccurenceCode3)
                                      , MAX(a.OccurenceCodeDate3)
                                      , MAX(a.OccurenceCode4)
                                      , MAX(a.OccurenceCodeDate4)
                                      , MAX(a.OccurenceCode5)
                                      , MAX(a.OccurenceCodeDate5)
                                      , MAX(a.OccurenceCode6)
                                      , MAX(a.OccurenceCodeDate6)
                                      , MAX(a.OccurenceCode7)
                                      , MAX(a.OccurenceCodeDate7)
                                      , MAX(a.OccurenceCode8)
                                      , MAX(a.OccurenceCodeDate8)
                                      , MAX(a.OccurenceCode9)
                                      , MAX(a.OccurenceCodeDate9)
                                      , MAX(a.OccurenceCode10)
                                      , MAX(a.OccurenceCodeDate10)
                                      , MAX(a.OccurenceCode11)
                                      , MAX(a.OccurenceCodeDate11)
                                      , MAX(a.OccurenceCode12)
                                      , MAX(a.OccurenceCodeDate12)
                                      , MAX(a.OccurenceSpanCode1)
                                      , MAX(a.OccurenceSpanCodeFrom1)
                                      , MAX(a.OccurenceSpanCodeThrough1)
                                      , MAX(a.OccurenceSpanCode2)
                                      , MAX(a.OccurenceSpanCodeFrom2)
                                      , MAX(a.OccurenceSpanCodeThrough2)
                                      , MAX(a.OccurenceSpanCode3)
                                      , MAX(a.OccurenceSpanCodeFrom3)
                                      , MAX(a.OccurenceSpanCodeThrough3)
                                      , MAX(a.OccurenceSpanCode4)
                                      , MAX(a.OccurenceSpanCodeFrom4)
                                      , MAX(a.OccurenceSpanCodeThrough4)
                                      , MAX(a.OccurenceSpanCode5)
                                      , MAX(a.OccurenceSpanCodeFrom5)
                                      , MAX(a.OccurenceSpanCodeThrough5)
                                      , MAX(a.OccurenceSpanCode6)
                                      , MAX(a.OccurenceSpanCodeFrom6)
                                      , MAX(a.OccurenceSpanCodeThrough6)
                                      , MAX(a.OccurenceSpanCode7)
                                      , MAX(a.OccurenceSpanCodeFrom7)
                                      , MAX(a.OccurenceSpanCodeThrough7)
                                      , MAX(a.OccurenceSpanCode8)
                                      , MAX(a.OccurenceSpanCodeFrom8)
                                      , MAX(a.OccurenceSpanCodeThrough8)
                                      , MAX(a.OccurenceSpanCode9)
                                      , MAX(a.OccurenceSpanCodeFrom9)
                                      , MAX(a.OccurenceSpanCodeThrough9)
                                      , MAX(a.OccurenceSpanCode10)
                                      , MAX(a.OccurenceSpanCodeFrom10)
                                      , MAX(a.OccurenceSpanCodeThrough10)
                                      , MAX(a.OccurenceSpanCode11)
                                      , MAX(a.OccurenceSpanCodeFrom11)
                                      , MAX(a.OccurenceSpanCodeThrough11)
                                      , MAX(a.OccurenceSpanCode12)
                                      , MAX(a.OccurenceSpanCodeFrom12)
                                      , MAX(a.OccurenceSpanCodeThrough12)
                                      , MAX(a.ClaimNoteReferenceCode)
                                      , MAX(a.ClaimNote)
									  , MAX(a.MedicalRecordNumber)
                              FROM  #XClaims a
                                  JOIN #ClaimLines_Temp clt ON a.XClaimId = clt.XClaimId --3/5 Added this join
                                  JOIN #837SubscriberClients b ON( ISNULL(a.ClientGroupId, 0) = ISNULL(b.ClientGroupId, 0)
                                                                   AND  a.ClientId = b.ClientId
                                                                   AND  a.CoveragePlanId = b.CoveragePlanId
                                                                   AND  ISNULL(a.InsuredId, 'ISNULL') = ISNULL(b.InsuredId, 'ISNULL')
                                                                   AND  a.Priority = b.Priority)
                                  JOIN #837BillingProviders c ON( c.UniqueId = b.RefBillingProviderId
                                                                  AND   clt.BillingProviderNPI = c.BillingProviderId)
                              GROUP BY
                                  b.UniqueId
                                , a.XClaimId
                                , a.AdmissionTypeCode
                                , a.AdmissionSourceCode
                                , a.PatientStatusCode






                            --SELECT RelatedHospitalAdmitDate, InpatientAdmitDate, * FROM #837Claims
                            --SELECT RelatedHospitalAdmitDate, InpatientAdmitDate, * FROM #XClaims

                            -- Populate #837OtherInsureds
                            DELETE  FROM #837OtherInsureds

                            INSERT INTO #837OtherInsuredsNeedsGroup(RefClaimId
                                                                  , ClaimLineId
                                                                  , PayerSequenceNumber
                                                                  , SubscriberRelationshipCode
                                                                  , InsuranceTypeCode
                                                                  , ClaimFilingIndicatorCode
                                                                  , PayerPaidAmount
                                                                  , PayerAllowedAmount
                                                                  , InsuredDOB
                                                                  , InsuredSex
                                                                  , BenefitsAssignCertificationIndicator
                                                                  , PatientSignatureSourceCode
                                                                  , InformationReleaseCode
                                                                  , InsuredQualifier
                                                                  , InsuredLastName
                                                                  , InsuredFirstName
                                                                  , InsuredMiddleName
                                                                  , InsuredSuffix
                                                                  , InsuredIdQualifier
                                                                  , InsuredId
                                                                  , InsuredSecondaryQualifier
                                                                  , PayerName
                                                                  , PayerQualifier
                                                                  , PayerId
                                                                  , PaymentDate
                                                                  , GroupName
                                                                  , PatientResponsibilityAmount --ClaimLineId, errorneous 2nd copy apoole 12/2
                                                                  , Priority)
                              SELECT    a.UniqueId
                                      , b.ClaimLineId
                                      , CASE b.Priority
                                            WHEN 1 THEN 'P'
                                            WHEN 2 THEN 'S'
                                            ELSE 'T'
                                        END
                                      , b.InsuredRelationCode
                                      , b.InsuranceTypeCode
                                      , b.ClaimFilingIndicatorCode
                                      , b.PaidAmount
                                      , b.AllowedAmount
                                      , CONVERT(VARCHAR, b.InsuredDOB, 112)
                                      , b.InsuredSex
                                      , 'Y'
                                      , ''
                                      , 'Y'
                                      , '1'                     --DJH Updated ReleaseCode from 'M' to 'I'--srf 1/4/2011 changed PatientSignatureSourceCode to '' per institutional specs
                                      , RTRIM(b.InsuredLastName)
                                      , RTRIM(b.InsuredFirstName)
                                      , RTRIM(b.InsuredMiddleName)
                                      , RTRIM(b.InsuredSuffix)
                                      , 'MI'
                                      , b.InsuredId
                                      , 'IG'
                                      , b.PayerName
                                      , 'PI'
                                      , b.ElectronicClaimsPayerId
                                      , CONVERT(VARCHAR, b.PaidDate, 112)
                                      , b.GroupName
                                      , b.ClientResponsibility  -- b.ClaimLineId, errorneous 2nd copy 12/2 apoole
                                      , b.Priority
                              FROM  #837Claims a
                                  JOIN #ClaimLines_Temp c ON c.XClaimId = a.XClaimId
                                  JOIN #OtherInsured b ON(c.ClaimLineId = b.ClaimLineId)
                            --was 10/30 apoole JOIN #OtherInsured b ON (a.ClaimLineId = b.ClaimLineId)
                            -- Needs further work

                            -- Populate #837Services
                            DELETE  FROM #837Services
                            SELECT  @Bookmark = 'INSERT  INTO #837Services'
                            INSERT INTO #837Services(RefClaimId
                                                   , ServiceIdQualifier
                                                   , RevenueCode
                                                   , BillingCode
                                                   , Modifier1
                                                   , Modifier2
                                                   , Modifier3
                                                   , Modifier4
                                                   , LineItemChargeAmount
                                                   , UnitOfMeasure
                                                   , ServiceUnitCount
                                                   , PlaceOfService
                                                    -- 11/19 removed Diagnosis Pointer unused apoole
                                                    --DiagnosisCodePointer1 ,DiagnosisCodePointer2 ,
                                                    --DiagnosisCodePointer3 ,DiagnosisCodePointer4 ,
                                                    --DiagnosisCodePointer5 ,DiagnosisCodePointer6 ,
                                                    --DiagnosisCodePointer7 ,DiagnosisCodePointer8 ,
                                                   , EmergencyIndicator
                                                   , ServiceDateQualifier
                                                   , ServiceDate
                                                   , LineItemControlNumber
                                                   , ApprovedAmount)
                              SELECT    b.UniqueId
                                      , 'HC'
                                      , a.RevenueCode
                                      , a.BillingCode
                                      , a.Modifier1
                                      , a.Modifier2
                                      , a.Modifier3
                                      , a.Modifier4
                                      , a.ChargeAmount
                                      , CASE
                                            WHEN c.EnteredAs = 112 THEN 'DA'
                                            ELSE 'UN'
                                        END
                                      , (CASE
                                             WHEN CONVERT(INT, a.ClaimUnits * 10) = CONVERT(INT, a.ClaimUnits) * 10 THEN
                                                 CONVERT(VARCHAR, CONVERT(INT, a.ClaimUnits))
                                             ELSE CONVERT(VARCHAR, a.ClaimUnits)
                                         END)
                                      , a.PlaceOfServiceCode
                                        -- 11/19 removed Diagnosis Pointer unused apoole
                                        --a.DiagnosisPointer1, a.DiagnosisPointer2, a.DiagnosisPointer3, a.DiagnosisPointer4,  
                                        --a.DiagnosisPointer5, a.DiagnosisPointer6, a.DiagnosisPointer7, a.DiagnosisPointer8,  
                                      , a.EmergencyIndicator
                                      , CASE
                                            WHEN CONVERT(VARCHAR, a.DateOfService, 112) = CONVERT(VARCHAR, a.EndDateOfService, 112) THEN 'D8'
                                            ELSE 'RD8'
                                        END
                                      , CASE
                                            WHEN CONVERT(VARCHAR, a.DateOfService, 112) = CONVERT(VARCHAR, a.EndDateOfService, 112) THEN
                                                CONVERT(VARCHAR, a.EndDateOfService, 112)
                                            ELSE RTRIM(CONVERT(VARCHAR, a.DateOfService, 112)) + '-' + RTRIM(CONVERT(VARCHAR, a.EndDateOfService, 112))
                                        END
                                      , CONVERT(VARCHAR, a.LineItemControlNumber)
                                      , a.ApprovedAmount
                              FROM  #ClaimLines_Temp a
                                  JOIN #837Claims b ON(a.XClaimId = b.XClaimId)
                                  LEFT JOIN ProcedureCodes c ON a.ProcedureCodeId = c.ProcedureCodeId
                              ORDER BY
                                  a.DateOfService
                            --was 10/30 apoole: JOIN #837Claims b ON (a.ClaimLineId = b.ClaimLineId)




                            --New**
                            -- Populate #837DrugIdentification
                            DELETE  FROM #837DrugIdentification

                            PRINT 7253
                            IF EXISTS (SELECT   *
                                         FROM   sys.procedures
                                         WHERE
                                            name = 'scsp_PMClaims837InstitutionalUpdateDrugIdentificationSegment')
                                BEGIN
                                    SELECT  @Bookmark = 'EXEC scsp_PMClaims837InstitutionalUpdateDrugIdentificationSegment'
                                    EXEC scsp_PMClaims837InstitutionalUpdateDrugIdentificationSegment @CurrentUser = @ParmCurrentUser
                                                                                                    , @ClaimBatchId = @ParmClaimBatchId
                                --End New**
                                END

                            PRINT 7256
                            IF EXISTS (SELECT   *
                                         FROM   sys.procedures
                                         WHERE
                                            name = 'scsp_PMClaims837InstitutionalUpdateSegmentData')
                                BEGIN
                                    SELECT  @Bookmark = 'EXEC scsp_PMClaims837InstitutionalUpdateDrugIdentificationSegment'
                                    EXEC scsp_PMClaims837InstitutionalUpdateSegmentData @CurrentUser = @ParmCurrentUser
                                                                                      , @ClaimBatchId = @ParmClaimBatchId
                                                                                      , @FormatType = @FormatType

                                END


                            -- BEGIN SEGMENT SECTION
                            SELECT  @Bookmark = ' BEGIN SEGMENT SECTION'
                            -- Update Segments for Header and Trailer
                            UPDATE  #837HeaderTrailer
                              SET   STSegment = UPPER(
                                                    REPLACE(
                                                        REPLACE(
                                                            REPLACE(
                                                                REPLACE(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            ('ST' + @te_sep + '837' + @te_sep + TransactionSetControlNumberHeader + @te_sep
                                                                             + (SELECT  Version
                                                                                  FROM  ClaimFormats
                                                                                  WHERE
                                                                                    ClaimFormatId = @ClaimFormatId)), @e_sep, ''), @se_sep, ''), @seg_term, '')
                                                              , '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , BHTSegment = UPPER(
                                                     REPLACE(
                                                         REPLACE(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             ('BHT' + @te_sep + '0019' + @te_sep + TransactionSetPurposeCode + @te_sep
                                                                              + ApplicationTransactionId + @te_sep + CreationDate + @te_sep + CreationTime
                                                                              + @te_sep + EncounterId), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                           , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                    /*TransactionTypeRefSegment = UPPER(replace(replace(replace(replace(replace(replace((
'REF' + @te_sep + '87'+ @te_sep + TransactionTypeCode  
), @e_sep,''),@se_sep,''),@seg_term,''),'&',''),@te_sep,@e_sep),@tse_sep,@se_sep)) + @seg_term,*/
                                  , SubmitterNM1Segment = UPPER(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      ('NM1' + @te_sep + '41' + @te_sep + SubmitterEntityQualifier + @te_sep
                                                                                       + SubmitterLastName + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep
                                                                                       + '46' + @te_sep + SubmitterId), @e_sep, ''), @se_sep, ''), @seg_term
                                                                            , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , SubmitterPerSegment = UPPER(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      ('PER' + @te_sep + 'IC' + @te_sep + SubmitterContactName + @te_sep
                                                                                       + SubmitterCommNumber1Qualifier + @te_sep + SubmitterCommNumber1)
                                                                                    , @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                , @tse_sep, @se_sep)) + @seg_term
                                  , ReceiverNm1Segment = UPPER(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     ('NM1' + @te_sep + '40' + @te_sep + '2' + @te_sep + ReceiverLastName
                                                                                      + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep + '46' + @te_sep
                                                                                      + ReceiverPrimaryId), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                   , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term



                                    -- Update segments for Billing and Pay to Provider
                            SELECT  @Bookmark = 'Update segments for Billing and Pay to Provider'
                            UPDATE  #837BillingProviders
                              SET   BillingPRVSegment = CASE
                                                            WHEN BillingProviderTaxonomyCode IS NULL THEN NULL
                                                            ELSE
                                                                UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('PRV' + @te_sep + 'BI' + @te_sep + 'PXC' + @te_sep
                                                                                             + BillingProviderTaxonomyCode), @e_sep, ''), @se_sep, '')
                                                                                  , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                        END
                                  , BillingProviderNM1Segment = UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('NM1' + @te_sep + '85' + @te_sep
                                                                                             + CASE
                                                                                                   WHEN ISNULL(RTRIM(BillingProviderFirstName), '') = '' THEN
                                                                                                       '2'
                                                                                                   ELSE '1'
                                                                                               END + @te_sep + BillingProviderLastName + @te_sep
                                                                                             + CASE
                                                                                                   WHEN ISNULL(RTRIM(BillingProviderFirstName), '') = '' THEN
                                                                                                       RTRIM('')
                                                                                                   ELSE RTRIM(BillingProviderFirstName)
                                                                                               END + @te_sep
                                                                                             + CASE
                                                                                                   WHEN ISNULL(RTRIM(BillingProviderMiddleName), '') = '' THEN
                                                                                                       RTRIM('')
                                                                                                   ELSE RTRIM(BillingProviderMiddleName)
                                                                                               END + @te_sep + @te_sep
                                                                                             + CASE
                                                                                                   WHEN ISNULL(RTRIM(BillingProviderSuffix), '') = '' THEN
                                                                                                       RTRIM('')
                                                                                                   ELSE RTRIM(BillingProviderSuffix)
                                                                                               END + @te_sep + BillingProviderIdQualifier + @te_sep
                                                                                             + BillingProviderId), @e_sep, ''), @se_sep, ''), @seg_term, '')
                                                                              , '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , BillingProviderN3Segment = UPPER(
                                                                   REPLACE(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           ('N3' + @te_sep
                                                                                            + REPLACE(
                                                                                                  REPLACE(REPLACE(BillingProviderAddress1, '#', ' '), '.', ' ')
                                                                                                , '-', ' ')
                                                                                            + (CASE
                                                                                                   WHEN ISNULL(RTRIM(BillingProviderAddress2), '') = '' THEN
                                                                                                       RTRIM('')
                                                                                                   ELSE
                                                                                                       @te_sep
                                                                                                       + REPLACE(
                                                                                                             REPLACE(
                                                                                                                 REPLACE(BillingProviderAddress2, '#', ' ')
                                                                                                               , '.', ' '), '-', ' ')
                                                                                               END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                         , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , BillingProviderN4Segment = UPPER(
                                                                   REPLACE(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           ('N4' + @te_sep + BillingProviderCity + @te_sep
                                                                                            + BillingProviderState + @te_sep + BillingProviderZip), @e_sep, '')
                                                                                     , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                     , @se_sep)) + @seg_term
                                  , BillingProviderRefSegment = CASE
                                                                    WHEN BillingProviderAdditionalId IS NULL THEN NULL
                                                                    ELSE
                                                                        UPPER(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            REPLACE(
                                                                                                REPLACE(
                                                                                                    ('REF' + @te_sep + BillingProviderAdditionalIdQualifier
                                                                                                     + @te_sep + BillingProviderAdditionalId), @e_sep, '')
                                                                                              , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                              , @tse_sep, @se_sep)) + @seg_term
                                                                END
                                  , BillingProviderRef2Segment = CASE
                                                                     WHEN BillingProviderAdditionalId2 IS NULL THEN NULL
                                                                     ELSE
                                                                         UPPER(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             REPLACE(
                                                                                                 REPLACE(
                                                                                                     ('REF' + @te_sep + BillingProviderAdditionalIdQualifier2
                                                                                                      + @te_sep + BillingProviderAdditionalId2), @e_sep, '')
                                                                                               , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                               , @tse_sep, @se_sep)) + @seg_term
                                                                 END
                                  , BillingProviderRef3Segment = CASE
                                                                     WHEN BillingProviderAdditionalId3 IS NULL THEN NULL
                                                                     ELSE
                                                                         UPPER(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             REPLACE(
                                                                                                 REPLACE(
                                                                                                     ('REF' + @te_sep + BillingProviderAdditionalIdQualifier3
                                                                                                      + @te_sep + BillingProviderAdditionalId3), @e_sep, '')
                                                                                               , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                               , @tse_sep, @se_sep)) + @seg_term
                                                                 END
                                  , PayToProviderNM1Segment = UPPER(REPLACE(('NM1' + @te_sep + '87' + @te_sep + '2'), @te_sep, @e_sep)) /*+ @te_sep + PayToProviderLastName + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep + PayToProviderIdQualifier + @te_sep + PayToProviderId ), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))*/
                                                              + @seg_term
                                  , PayToProviderN3Segment = UPPER(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         ('N3' + @te_sep
                                                                                          + REPLACE(
                                                                                                REPLACE(REPLACE(PayToProviderAddress1, '#', ' '), '.', ' ')
                                                                                              , '-', ' ')
                                                                                          + (CASE
                                                                                                 WHEN ISNULL(RTRIM(PayToProviderAddress2), '') = '' THEN
                                                                                                     RTRIM('')
                                                                                                 ELSE
                                                                                                     @te_sep
                                                                                                     + REPLACE(
                                                                                                           REPLACE(
                                                                                                               REPLACE(PayToProviderAddress2, '#', ' '), '.'
                                                                                                             , ' '), '-', ' ')
                                                                                             END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                       , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , PayToProviderN4Segment = UPPER(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         ('N4' + @te_sep + PayToProviderCity + @te_sep + PayToProviderState
                                                                                          + @te_sep + PayToProviderZip), @e_sep, ''), @se_sep, ''), @seg_term
                                                                               , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , PayToProviderRefSegment = CASE
                                                                  WHEN PayToProviderSecondaryId IS NULL THEN NULL
                                                                  ELSE
                                                                      UPPER(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              REPLACE(
                                                                                                  ('REF' + @te_sep + PayToProviderSecondaryQualifier + @te_sep
                                                                                                   + PayToProviderSecondaryId), @e_sep, ''), @se_sep, '')
                                                                                        , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                      + @seg_term
                                                              END
                                  , PayToProviderRef2Segment = CASE
                                                                   WHEN PayToProviderSecondaryId2 IS NULL THEN NULL
                                                                   ELSE
                                                                       UPPER(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               REPLACE(
                                                                                                   ('REF' + @te_sep + PayToProviderSecondaryQualifier2
                                                                                                    + @te_sep + PayToProviderSecondaryId2), @e_sep, '')
                                                                                             , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                             , @tse_sep, @se_sep)) + @seg_term
                                                               END
                                  , PayToProviderRef3Segment = CASE
                                                                   WHEN PayToProviderSecondaryId3 IS NULL THEN NULL
                                                                   ELSE
                                                                       UPPER(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               REPLACE(
                                                                                                   ('REF' + @te_sep + PayToProviderSecondaryQualifier3
                                                                                                    + @te_sep + PayToProviderSecondaryId3), @e_sep, '')
                                                                                             , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                             , @tse_sep, @se_sep)) + @seg_term
                                                               END



                            -- do not send pay to provider info if Billing And Pay to providers are the same
                            UPDATE  #837BillingProviders
                              SET   PayToProviderNM1Segment = NULL
                                  , PayToProviderN3Segment = NULL
                                  , PayToProviderN4Segment = NULL
                                  , PayToProviderRefSegment = NULL
                                  , PayToProviderRef2Segment = NULL
                                  , PayToProviderRef3Segment = NULL
                              WHERE
                                BillingProviderId = PayToProviderId

                            --SELECT * FROM #837BillingProviders

                            /*
where BillingProviderLastName = PayToProviderLastName
and (BillingProviderFirstName = PayToProviderFirstName or
(BillingProviderFirstName is null and PayToProviderFirstName is null))
and (BillingProviderMiddleName = PayToProviderMiddleName or
(BillingProviderMiddleName is null and PayToProviderMiddleName is null))
and BillingProviderAddress1 = PayToProviderAddress1
and BillingProviderCity = PayToProviderCity
and BillingProviderState = PayToProviderState
and BillingProviderZip = PayToProviderZip
*/

                            UPDATE  #837SubscriberClients
                              SET   MedicareInsuranceTypeCode = NULL
                            --srf 1/4/2011 per 837 inst instructions

                            --Update Segments for Subscriber Patient
                            SELECT  @Bookmark = 'Update Segments for Subscriber Patient'
                            UPDATE  #837SubscriberClients
                              SET   SubscriberSegment = UPPER(
                                                            REPLACE(
                                                                REPLACE(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    ('SBR' + @te_sep + (CASE Priority
                                                                                                            WHEN 1 THEN 'P'
                                                                                                            WHEN 2 THEN 'S'
                                                                                                            ELSE 'T'
                                                                                                        END) + @te_sep + CASE
                                                                                                                             WHEN RelationCode = '18' THEN '18'
                                                                                                                             ELSE RTRIM('')
                                                                                                                         END
                                                                                     + CASE
                                                                                           WHEN ISNULL(RTRIM(GroupNumber), '') = '' THEN @te_sep
                                                                                           ELSE @te_sep + RTRIM(GroupNumber)
                                                                                       END
                                                                                     + CASE
                                                                                           WHEN ISNULL(RTRIM(GroupNumber), '') <> '' THEN @te_sep
                                                                                           ELSE (CASE
                                                                                                     WHEN ISNULL(RTRIM(GroupName), '') = ''
                                                                                                          AND   ISNULL(RTRIM(PayerName), '') = '' THEN @te_sep
                                                                                                     ELSE @te_sep + ISNULL(RTRIM(GroupName), RTRIM(PayerName))
                                                                                                 END)
                                                                                       END
                                                                                     + @te_sep
                                                                                     /*CASE WHEN ISNULL(RTRIM(MedicareInsuranceTypeCode), '') = '' THEN @te_sep -- Not used in 223A2 for 837I
                                                                                                                                                                         ELSE @te_sep + RTRIM(MedicareInsuranceTypeCode)
                                                                                                                                                                    END*/
                                                                                     + @te_sep + @te_sep + @te_sep + @te_sep + RTRIM(ClaimFilingIndicatorCode))
                                                                                  , @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                              , @tse_sep, @se_sep)) + @seg_term
                                  , SubscriberNM1Segment = UPPER(
                                                               REPLACE(
                                                                   REPLACE(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       ('NM1' + @te_sep + 'IL' + @te_sep + SubscriberEntityQualifier + @te_sep
                                                                                        + SubscriberLastName + @te_sep
                                                                                        + (CASE
                                                                                               WHEN ISNULL(RTRIM(SubscriberFirstName), '') = '' THEN RTRIM('')
                                                                                               ELSE SubscriberFirstName
                                                                                           END) + @te_sep
                                                                                        + (CASE
                                                                                               WHEN ISNULL(RTRIM(SubscriberMiddleName), '') = '' THEN RTRIM('')
                                                                                               ELSE SubscriberMiddleName
                                                                                           END) + @te_sep
                                                                                        + (CASE
                                                                                               WHEN ISNULL(RTRIM(SubscriberSuffix), '') = '' THEN @te_sep
                                                                                               ELSE @te_sep + RTRIM(SubscriberSuffix)
                                                                                           END) + @te_sep + SubscriberIdQualifier + @te_sep
                                                                                        + REPLACE(REPLACE(InsuredId, '-', RTRIM('')), ' ', RTRIM(''))), @e_sep
                                                                                     , ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                 , @se_sep)) + @seg_term

                                    /* **2010BA** DJH - Added Situational Logic to only pass N3,N4,DMG when Subscriber = Patient - 03/13/2012 */
                                  , SubscriberN3Segment = CASE
                                                              WHEN RelationCode = '18' THEN
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('N3' + @te_sep
                                                                                               + RTRIM(
                                                                                                     REPLACE(
                                                                                                         REPLACE(
                                                                                                             REPLACE(SubscriberAddress1, '#', ' '), '.', ' ')
                                                                                                       , '-', ' '))
                                                                                               + (CASE
                                                                                                      WHEN ISNULL(RTRIM(SubscriberAddress2), '') = '' THEN
                                                                                                          RTRIM('')
                                                                                                      ELSE
                                                                                                          @te_sep
                                                                                                          + RTRIM(
                                                                                                                REPLACE(
                                                                                                                    REPLACE(
                                                                                                                        REPLACE(SubscriberAddress2, '#', ' ')
                                                                                                                      , '.', ' '), '-', ' '))
                                                                                                  END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                            , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                              ELSE NULL
                                                          END
                                  , SubscriberN4Segment = CASE
                                                              WHEN RelationCode = '18' THEN
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('N4' + @te_sep + SubscriberCity + @te_sep + SubscriberState
                                                                                               + @te_sep + SubscriberZip), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                    , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                              ELSE NULL
                                                          END
                                  , SubscriberDMGSegment = CASE
                                                               WHEN RelationCode = '18' THEN
                                                                   UPPER(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               ('DMG' + @te_sep + 'D8' + @te_sep + SubscriberDOB + @te_sep
                                                                                                + (CASE
                                                                                                       WHEN SubscriberSex IS NULL THEN 'U'
                                                                                                       ELSE SubscriberSex
                                                                                                   END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                             , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                               ELSE NULL
                                                           END
                                  , SubscriberRefSegment = CASE
                                                               WHEN SubscriberSSN IS NULL THEN NULL
                                                               ELSE
                                                                   UPPER(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               ('REF' + @te_sep + 'SY' + @te_sep + SubscriberSSN), @e_sep, '')
                                                                                         , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                         , @se_sep)) + @seg_term
                                                           END
                                  , PayerNM1Segment = UPPER(
                                                          REPLACE(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  ('NM1' + @te_sep + 'PR' + @te_sep + '2' + @te_sep + PayerName + @te_sep
                                                                                   + @te_sep + @te_sep + @te_sep + @te_sep + PayerIdQualifier + @te_sep
                                                                                   + ElectronicClaimsPayerId), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&'
                                                                    , ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , PayerN3Segment = CASE
                                                         WHEN PayerAddress1 IS NULL THEN NULL
                                                         ELSE
                                                             UPPER(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         ('N3' + @te_sep
                                                                                          + RTRIM(
                                                                                                REPLACE(
                                                                                                    REPLACE(REPLACE(PayerAddress1, '#', ' '), '.', ' '), '-'
                                                                                                  , ' '))
                                                                                          + (CASE
                                                                                                 WHEN ISNULL(RTRIM(PayerAddress2), '') = '' THEN RTRIM('')
                                                                                                 ELSE
                                                                                                     @te_sep
                                                                                                     + RTRIM(
                                                                                                           REPLACE(
                                                                                                               REPLACE(
                                                                                                                   REPLACE(PayerAddress2, '#', ' '), '.', ' ')
                                                                                                             , '-', ' '))
                                                                                             END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                       , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                     END
                                  , PayerN4Segment = CASE
                                                         WHEN PayerAddress1 IS NULL THEN NULL
                                                         ELSE
                                                             UPPER(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         ('N4' + @te_sep + PayerCity + @te_sep + PayerState + @te_sep
                                                                                          + PayerZip), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                       , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                     END
                                  , PayerRefSegment = CASE
                                                          WHEN ISNULL(RTRIM(ClaimOfficeNumber), '') = '' THEN NULL
                                                          ELSE
                                                              UPPER(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          ('REF' + @te_sep + 'FY' + @te_sep + ClaimOfficeNumber), @e_sep, '')
                                                                                    , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                    , @se_sep)) + @seg_term
                                                      END
                                  , PatientPatSegment = CASE
                                                            WHEN RelationCode = '18' THEN NULL
                                                            ELSE
                                                                UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(REPLACE(('PAT' + @te_sep + RelationCode), @e_sep, ''), @se_sep, '')
                                                                                  , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                        END
                                  , PatientNM1Segment = CASE
                                                            WHEN RelationCode = '18' THEN NULL
                                                            ELSE
                                                                UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('NM1' + @te_sep + 'QC' + @te_sep + '1' + @te_sep + ClientLastName
                                                                                             + (CASE
                                                                                                    WHEN ISNULL(RTRIM(ClientFirstName), '') = '' THEN
                                                                                            (CASE
                                                                                                 WHEN ISNULL(RTRIM(ClientMiddleName), '') <> ''
                                                                                                      OR ISNULL(RTRIM(ClientSuffix), '') <> '' THEN @te_sep
                                                                                                 ELSE RTRIM('')
                                                                                             END)
                                                                                                    ELSE @te_sep + RTRIM(ClientFirstName)
                                                                                                END)
                                                                                             + (CASE
                                                                                                    WHEN ISNULL(RTRIM(ClientMiddleName), '') = '' THEN
                                                                                            (CASE
                                                                                                 WHEN ISNULL(RTRIM(ClientSuffix), '') <> '' THEN @te_sep
                                                                                                 ELSE RTRIM('')
                                                                                             END)
                                                                                                    ELSE @te_sep + RTRIM(ClientMiddleName)
                                                                                                END)
                                                                                             + (CASE
                                                                                                    WHEN ISNULL(RTRIM(ClientSuffix), '') = '' THEN RTRIM('')
                                                                                                    ELSE @te_sep + @te_sep + RTRIM(ClientSuffix)
                                                                                                END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                          , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                        END
                                  , PatientN3Segment = CASE
                                                           WHEN RelationCode = '18' THEN NULL
                                                           ELSE
                                                               UPPER(
                                                                   REPLACE(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           ('N3' + @te_sep
                                                                                            + REPLACE(
                                                                                                  REPLACE(REPLACE(ClientAddress1, '#', ' '), '.', ' '), '-'
                                                                                                , ' ')
                                                                                            + (CASE
                                                                                                   WHEN ISNULL(RTRIM(ClientAddress2), '') = '' THEN RTRIM('')
                                                                                                   ELSE
                                                                                                       @te_sep
                                                                                                       + RTRIM(
                                                                                                             REPLACE(
                                                                                                                 REPLACE(
                                                                                                                     REPLACE(ClientAddress2, '#', ' '), '.'
                                                                                                                   , ' '), '-', ' '))
                                                                                               END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                         , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                       END
                                  , PatientN4Segment = CASE
                                                           WHEN RelationCode = '18' THEN NULL
                                                           ELSE
                                                               UPPER(
                                                                   REPLACE(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           ('N4' + @te_sep + ClientCity + @te_sep + ClientState + @te_sep
                                                                                            + ClientZip), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                         , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                       END
                                  , PatientDMGSegment = CASE
                                                            WHEN RelationCode = '18' THEN NULL
                                                            ELSE
                                                                UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('DMG' + @te_sep + 'D8' + @te_sep + ClientDOB + @te_sep
                                                                                             + (CASE
                                                                                                    WHEN ClientSex IS NULL THEN 'U'
                                                                                                    ELSE ClientSex
                                                                                                END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                          , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                        END



                                    --Remove not required segment information for #837Claims
                            UPDATE  #837Claims
                              SET -- RenderingId = null, --removed apoole 12/10/2013
                                FacilityAddress1 = NULL

                            --SELECT * FROM #837Claims



                            /** dharvey removed 1.22.2015 due to improper concatenation **/
                            /** dharvey restored 1.29.2015 with proper conversion on time part **/
                            UPDATE  a
                              SET   a.RelatedHospitalAdmitDate = CONVERT(VARCHAR(8), a.RelatedHospitalAdmitDate) + ''
                                                                 + REPLACE(CONVERT(VARCHAR(5), CAST(c.RelatedHospitalAdmitDate AS DATETIME), 108), ':', '')
                              FROM  #837Claims a
                                  JOIN #XClaims b ON a.XClaimId = b.XClaimId
                                  JOIN #ClaimLines_Temp c ON c.XClaimId = b.XClaimId




                            --Update segment information for #837Claims
                            UPDATE  #837Claims
                              SET   CLMSegment = UPPER(
                                                     REPLACE(
                                                         REPLACE(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             ('CLM' + @te_sep + ClaimId + @te_sep
                                                                              + (CASE
                                                                                     WHEN CONVERT(INT, TotalAmount * 100) = CONVERT(INT, TotalAmount) * 100 THEN
                                                                                         CONVERT(VARCHAR, CONVERT(INT, TotalAmount))
                                                                                     ELSE CONVERT(VARCHAR, TotalAmount)
                                                                                 END) + @te_sep + @te_sep + @te_sep + ISNULL(PlaceOfService, '') + @tse_sep
                                                                              + 'A' + @tse_sep + ISNULL(ClaimFrequencyCode, '') + @te_sep
                                                                              + --isnull(SignatureIndicator, '') + --- CLM06: not required per 837I Implementation Guide
                                                                             @te_sep  + ISNULL(MedicareAssignCode, '') + @te_sep
                                                                              + ISNULL(BenefitsAssignCertificationIndicator, '') + @te_sep
                                                                              + ISNULL(ReleaseCode, '') + @te_sep -- + isnull(PatientSignatureCode, '') 
                                                                              + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep --+ 'Y'  
                                                                             )     , @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                       , @tse_sep, @se_sep)) + @seg_term
                                  , StatementDateDTPSegment = UPPER(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          ('DTP' + @te_sep + '434' + @te_sep + 'RD8' + @te_sep
                                                                                           + RTRIM(CONVERT(VARCHAR, StatementStartDate, 112)) + '-'
                                                                                           + RTRIM(CONVERT(VARCHAR, StatementEndDate, 112))), @e_sep, '')
                                                                                    , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                    , @se_sep)) + @seg_term
                                  , DischargeDateDTPSegment = CASE
                                                                  WHEN DischargeHour IS NULL THEN NULL
                                                                  WHEN ClaimFrequencyCode IN ( '1'
                                                                                             , '4'
                                                                                             , '7' ) THEN
                                                                      UPPER(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              REPLACE(
                                                                                                  ('DTP' + @te_sep + '096' + @te_sep + 'TM' + @te_sep
                                                                                                   + ISNULL(DischargeHour, '')), @e_sep, ''), @se_sep, '')
                                                                                        , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                      + @seg_term
                                                                  ELSE NULL
                                                              END
                                  , AdmissionDateDTPSegment = CASE
                                                                  WHEN RelatedHospitalAdmitDate IS NULL THEN NULL
                                                                  ELSE
                                                                      UPPER(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              REPLACE(
                                                                                                  ('DTP' + @te_sep + '435' + @te_sep + 'DT' + @te_sep
                                                                                                   + RelatedHospitalAdmitDate), @e_sep, ''), @se_sep, '')
                                                                                        , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                      + @seg_term
                                                              END
                                  , CL1Segment = UPPER(
                                                     REPLACE(
                                                         REPLACE(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             ('CL1' + @te_sep + ISNULL(AdmissionTypeCode, '') + @te_sep
                                                                              + ISNULL(AdmissionSourceCode, '') + @te_sep + ISNULL(PatientStatusCode, ''))
                                                                           , @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                       , @se_sep)) + @seg_term
                                  , PatientAmountPaidSegment = CASE
                                                                   WHEN PatientAmountPaid IN ( 0
                                                                                             , NULL ) THEN NULL
                                                                   ELSE
                                                                       UPPER(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               REPLACE(
                                                                                                   ('AMT' + @te_sep + 'F5' + @te_sep
                                                                                                    + (CASE
                                                                                                           WHEN CONVERT(INT, PatientAmountPaid * 100) = CONVERT(
                                                                                                                                                            INT
                                                                                                                                                          , PatientAmountPaid)
                                                                                                                                                        * 100 THEN
                                                                                                               CONVERT(VARCHAR, CONVERT(INT, PatientAmountPaid))
                                                                                                           ELSE CONVERT(VARCHAR, PatientAmountPaid)
                                                                                                       END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&'
                                                                                     , ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                               END
                                  , AuthorizationNumberRefSegment = CASE
                                                                        WHEN ISNULL(RTRIM(PriorAuthorizationNumber), '') = '' THEN NULL
                                                                        ELSE
                                                                            UPPER(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            REPLACE(
                                                                                                REPLACE(
                                                                                                    REPLACE(
                                                                                                        ('REF' + @te_sep + 'G1' + @te_sep
                                                                                                         + PriorAuthorizationNumber), @e_sep, ''), @se_sep, '')
                                                                                              , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                            + @seg_term
                                                                    END
                                  , PayerClaimControlNumberRefSegment = CASE
                                                                            WHEN ISNULL(RTRIM(PayerClaimControlNumber), '') = '' THEN NULL
                                                                            ELSE
                                                                                UPPER(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            REPLACE(
                                                                                                REPLACE(
                                                                                                    REPLACE(
                                                                                                        REPLACE(
                                                                                                            ('REF' + @te_sep + 'F8' + @te_sep
                                                                                                             + PayerClaimControlNumber), @e_sep, ''), @se_sep
                                                                                                      , ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                                      , @tse_sep, @se_sep)) + @seg_term
                                                                        END
                           , NTESegment = UPPER(
                                             REPLACE(
                                                 REPLACE(
                                                     REPLACE(
                                                         REPLACE(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     (
                                                                     /*NTE00*/ 'NTE' + @te_sep + /*NTE01*/ ClaimNoteReferenceCode + @te_sep
                                                                               + /*NTE02*/ ClaimNote), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                   , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
								,MedicalRecordNumberRefSegment = CASE WHEN ISNULL(RTRIM(MedicalRecordNumber), '') = '' THEN NULL
                                                                 ELSE UPPER(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(( 'REF' + @te_sep + 'EA' + @te_sep + MedicalRecordNumber ), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                            END 
                                    -- 11/4 Modified by apoole to move diagnosiscode1 to principaldiagnosishisegment
                                  , HISegment = CASE
                                                    WHEN DiagnosisCode2 IS NULL THEN NULL
                                                    ELSE
                                                        UPPER(
                                                            REPLACE(
                                                                REPLACE(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    ('HI' + @te_sep + DiagnosisCodeQualifier2 + @tse_sep
                                                                                     + REPLACE(DiagnosisCode2, '.', '') + @tse_sep + @tse_sep + @tse_sep
                                                                                     + @tse_sep + @tse_sep + @tse_sep + @tse_sep
                                                                                     + ISNULL(DiagnosisCodePOA2, 'U')
                                                                                     + (CASE
                                                                                            WHEN DiagnosisCode3 IS NOT NULL THEN
                                                                                                @te_sep + DiagnosisCodeQualifier3 + @tse_sep
                                                                                                + REPLACE(DiagnosisCode3, '.', '') + @tse_sep + @tse_sep
                                                                                                + @tse_sep + @tse_sep + @tse_sep + @tse_sep + @tse_sep
                                                                                                + ISNULL(DiagnosisCodePOA3, 'U')
                                                                                                + (CASE
                                                                                                       WHEN DiagnosisCode4 IS NOT NULL THEN
                                                                                                           @te_sep + DiagnosisCodeQualifier4 + @tse_sep
                                                                                                           + REPLACE(DiagnosisCode4, '.', '') + @tse_sep
                                                                                                           + @tse_sep + @tse_sep + @tse_sep + @tse_sep
                                                                                                           + @tse_sep + @tse_sep
                                                                                                           + ISNULL(DiagnosisCodePOA4, 'U')
                                                                                                           + (CASE
                                                                                                                  WHEN DiagnosisCode5 IS NOT NULL THEN
                                                                                                                      @te_sep + DiagnosisCodeQualifier5
                                                                                                                      + @tse_sep
                                                                                                                      + REPLACE(DiagnosisCode5, '.', '')
                                                                                                                      + @tse_sep + @tse_sep + @tse_sep
                                                                                                                      + @tse_sep + @tse_sep + @tse_sep
                                                                                                                      + @tse_sep
                                                                                                                      + ISNULL(DiagnosisCodePOA5, 'U')
                                                                                                                      + (CASE
                                                                                                                             WHEN DiagnosisCode6 IS NOT NULL THEN
                                                                                                                                 @te_sep
                                                                                                                                 + DiagnosisCodeQualifier6
                                                                                                                                 + @tse_sep
                                                                                                                                 + REPLACE(
                                                                                                                                       DiagnosisCode6, '.', '')
                                                                                                                                 + @tse_sep + @tse_sep
                                                                                                                                 + @tse_sep + @tse_sep
                                                                                                                                 + @tse_sep + @tse_sep
                                                                                                                                 + @tse_sep
                                                                                                                                 + ISNULL(
                                                                                                                                       DiagnosisCodePOA6, 'U')
                                                                                                                                 + (CASE
                                                                                                                                        WHEN DiagnosisCode7 IS NOT NULL THEN
                                                                                                                                            @te_sep
                                                                                                                                            + DiagnosisCodeQualifier7
                                                                                                                                            + @tse_sep
                                                                                                                                            + REPLACE(
                                                                                                                                                  DiagnosisCode7
                                                                                                                                                , '.', '')
                                                                                                                                            + @tse_sep
                                                                                                                                            + @tse_sep
                                                                                                                                            + @tse_sep
                                                                                                                                            + @tse_sep
                                                                                                                                            + @tse_sep
                                                                                                                                            + @tse_sep
                                                                                                                                            + @tse_sep
                                                                                                                                            + ISNULL(
                                                                                                                                                  DiagnosisCodePOA7
                                                                                                                                                , 'U')
                                                                                                                                            + (CASE
                                                                                                                                                   WHEN DiagnosisCode8 IS NOT NULL THEN
                                                                                                                                                       @te_sep
                                                                                                                                                       + DiagnosisCodeQualifier8
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + REPLACE(
                                                                                                                                                             DiagnosisCode8
                                                                                                                                                           , '.'
                                                                                                                                                           , '')
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + @tse_sep
                                                                                                                                                       + ISNULL(
                                                                                                                                                             DiagnosisCodePOA8
                                                                                                                                                           , 'U')
                                                                                                                                                   ELSE
                                                                                                                                                       RTRIM('')
                                                                                                                                               END)
                                                                                                                                        ELSE RTRIM('')
                                                                                                                                    END)
                                                                                                                             ELSE RTRIM('')
                                                                                                                         END)
                                                                                                                  ELSE RTRIM('')
                                                                                                              END)
                                                                                                       ELSE RTRIM('')
                                                                                                   END)
                                                                                            ELSE RTRIM('')
                                                                                        END)
                                                                                     + CASE
                                                                                           WHEN DiagnosisCode2 IS NOT NULL
                                                                                                AND DiagnosisCode3 IS NOT NULL
                                                                                                AND DiagnosisCode4 IS NOT NULL
                                                                                                AND DiagnosisCode5 IS NOT NULL
                                                                                                AND DiagnosisCode6 IS NOT NULL
                                                                                                AND DiagnosisCode7 IS NOT NULL
                                                                                                AND DiagnosisCode8 IS NOT NULL
                                                                                                AND DiagnosisCode9 IS NOT NULL THEN
                                                                                               @te_sep + DiagnosisCodeQualifier9 + @tse_sep
                                                                                               + REPLACE(DiagnosisCode9, '.', '') + @tse_sep + @tse_sep
                                                                                               + @tse_sep + @tse_sep + @tse_sep + @tse_sep + @tse_sep
                                                                                               + ISNULL(DiagnosisCodePOA9, 'U')
                                                                                               + (CASE
                                                                                                      WHEN DiagnosisCode10 IS NOT NULL THEN
                                                                                                          @te_sep + DiagnosisCodeQualifier10 + @tse_sep
                                                                                                          + REPLACE(DiagnosisCode10, '.', '') + @tse_sep
                                                                                                          + @tse_sep + @tse_sep + @tse_sep + @tse_sep
                                                                                                          + @tse_sep + @tse_sep
                                                                                                          + ISNULL(DiagnosisCodePOA10, 'U')
                                                                                                          + (CASE
                                                                                                                 WHEN DiagnosisCode11 IS NOT NULL THEN
                                                                                                                     @te_sep + DiagnosisCodeQualifier11
                                                                                                                     + @tse_sep
                                                                                                                     + REPLACE(DiagnosisCode11, '.', '')
                                                                                                                     + +@tse_sep + @tse_sep + @tse_sep
                                                                                                                     + @tse_sep + @tse_sep + @tse_sep
                                                                                                                     + @tse_sep
                                                                                                                     + ISNULL(DiagnosisCodePOA11, 'U')
                                                                                                                     + (CASE
                                                                                                                            WHEN DiagnosisCode12 IS NOT NULL THEN
                                                                                                                                @te_sep
                                                                                                                                + DiagnosisCodeQualifier12
                                                                                                                                + @tse_sep
                                                                                                                                + REPLACE(
                                                                                                                                      DiagnosisCode12, '.', '')
                                                                                                                                + +@tse_sep + @tse_sep
                                                                                                                                + @tse_sep + @tse_sep
                                                                                                                                + @tse_sep + @tse_sep
                                                                                                                                + @tse_sep
                                                                                                                                + ISNULL(
                                                                                                                                      DiagnosisCodePOA12, 'U')
                                                                                                                                + (CASE
                                                                                                                                       WHEN DiagnosisCode13 IS NOT NULL THEN
                                                                                                                                           @te_sep
                                                                                                                                           + DiagnosisCodeQualifier13
                                                                                                                                           + @tse_sep
                                                                                                                                           + REPLACE(
                                                                                                                                                 DiagnosisCode13
                                                                                                                                               , '.', '')
                                                                                                                                           + @tse_sep
                                                                                                                                           + @tse_sep
                                                                                                                                           + @tse_sep
                                                                                                                                           + @tse_sep
                                                                                                                                           + @tse_sep
                                                                                                                                           + @tse_sep
                                                                                                                                           + @tse_sep
                                                                                                                                           + ISNULL(
                                                                                                                                                 DiagnosisCodePOA13
                                                                                                                                               , 'U')
                                                                                                                                       ELSE ''
                                                                                                                                   END)
                                                                                                                            ELSE ''
                                                                                                                        END)
                                                                                                                 ELSE ''
                                                                                                             END)
                                                                                                      ELSE ''
                                                                                                  END)
                                                                                           ELSE ''
                                                                                       END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                  , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                END
                                  , OtherProcedureHISegment = CASE
                                                                  WHEN ProcedureCode2 IS NULL THEN NULL
                                                                  ELSE
                                                                      UPPER(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              REPLACE(
                                                                                                  ('HI' + @te_sep + ProcedureCodeQualifier2 + @tse_sep
                                                                                                   + REPLACE(ProcedureCode2, '.', '') + @tse_sep + 'D8'
                                                                                                   + @tse_sep + ProcedureCodeDate2
                                                                                                   + (CASE
                                                                                                          WHEN ProcedureCode3 IS NOT NULL THEN
                                                                                                              @te_sep + ProcedureCodeQualifier3 + @tse_sep
                                                                                                              + REPLACE(ProcedureCode3, '.', '') + @tse_sep
                                                                                                              + 'D8' + @tse_sep + ProcedureCodeDate3
                                                                                                              + (CASE
                                                                                                                     WHEN ProcedureCode4 IS NOT NULL THEN
                                                                                                                         @te_sep + ProcedureCodeQualifier4
                                                                                                                         + @tse_sep
                                                                                                                         + REPLACE(ProcedureCode4, '.', '')
                                                                                                                         + @tse_sep + 'D8' + @tse_sep
                                                                                                                         + ProcedureCodeDate4
                                                                                                                         + (CASE
                                                                                                                                WHEN ProcedureCode5 IS NOT NULL THEN
                                                                                                                                    @te_sep
                                                                                                                                    + ProcedureCodeQualifier5
                                                                                                                                    + @tse_sep
                                                                                                                                    + REPLACE(
                                                                                                                                          ProcedureCode5, '.'
                                                                                                                                        , '') + @tse_sep + 'D8'
                                                                                                                                    + @tse_sep
                                                                                                                                    + ProcedureCodeDate5
                                                                                                                                    + (CASE
                                                                                                                                           WHEN ProcedureCode6 IS NOT NULL THEN
                                                                                                                                               @te_sep
                                                                                                                                               + ProcedureCodeQualifier6
                                                                                                                                               + @tse_sep
                                                                                                                                               + REPLACE(
                                                                                                                                                     ProcedureCode6
                                                                                                                                                   , '.', '')
                                                                                                                                               + @tse_sep
                                                                                                                                               + 'D8'
                                                                                                                                               + @tse_sep
                                                                                                                                               + ProcedureCodeDate6
                                                                                                                                               + (CASE
                                                                                                                                                      WHEN ProcedureCode7 IS NOT NULL THEN
                                                                                                                                                          @te_sep
                                                                                                                                                          + ProcedureCodeQualifier7
                                                                                                                                                          + @tse_sep
                                                                                                                                                          + REPLACE(
                                                                                                                                                                ProcedureCode7
                                                                                                                                                              , '.'
                                                                                                                                                              , '')
                                                                                                                                                          + @tse_sep
                                                                                                                                                          + 'D8'
                                                                                                                                                          + @tse_sep
                                                                                                                                                          + ProcedureCodeDate7
                                                                                                                                                          + (CASE
                                                                                                                                                                 WHEN ProcedureCode8 IS NOT NULL THEN
                                                                                                                                                                     @te_sep
                                                                                                                                                                     + ProcedureCodeQualifier8
                                                                                                                                                                     + @tse_sep
                                                                                                                                                                     + REPLACE(
                                                                                                                                                                           ProcedureCode8
                                                                                                                                                                         , '.'
                                                                                                                                                                         , '')
                                                                                                                                                                     + @tse_sep
                                                                                                                                                                     + 'D8'
                                                                                                                                                                     + @tse_sep
                                                                                                                                                                     + ProcedureCodeDate8
                                                                                                                                                                 ELSE
                                                                                                                                                                     RTRIM(
                                                                                                                                                                         '')
                                                                                                                                                             END)
                                                                                                                                                      ELSE
                                                                                                                                                          RTRIM(
                                                                                                                                                              '')
                                                                                                                                                  END)
                                                                                                                                           ELSE RTRIM('')
                                                                                                                                       END)
                                                                                                                                ELSE RTRIM('')
                                                                                                                            END)
                                                                                                                     ELSE RTRIM('')
                                                                                                                 END)
                                                                                                          ELSE RTRIM('')
                                                                                                      END)
                                                                                                   + CASE
                                                                                                         WHEN ProcedureCode2 IS NOT NULL
                                                                                                              AND   ProcedureCode3 IS NOT NULL
                                                                                                              AND   ProcedureCode4 IS NOT NULL
                                                                                                              AND   ProcedureCode5 IS NOT NULL
                                                                                                              AND   ProcedureCode6 IS NOT NULL
                                                                                                              AND   ProcedureCode7 IS NOT NULL
                                                                                                              AND   ProcedureCode8 IS NOT NULL
                                                                                                              AND   ProcedureCode9 IS NOT NULL THEN
                                                                                                             @te_sep + ProcedureCodeQualifier9 + @tse_sep
                                                                                                             + REPLACE(ProcedureCode9, '.', '') + @tse_sep
                                                                                                             + 'D8' + @tse_sep + ProcedureCodeDate9
                                                                                                             + (CASE
                                                                                                                    WHEN ProcedureCode10 IS NOT NULL THEN
                                                                                                                        @te_sep + ProcedureCodeQualifier10
                                                                                                                        + @tse_sep
                                                                                                                        + REPLACE(ProcedureCode10, '.', '')
                                                                                                                        + @tse_sep + 'D8' + @tse_sep
                                                                                                                        + ProcedureCodeDate10
                                                                                                                        + (CASE
                                                                                                                               WHEN ProcedureCode11 IS NOT NULL THEN
                                                                                                                                   @te_sep
                                                                                                                                   + ProcedureCodeQualifier11
                                                                                                                                   + @tse_sep
                                                                                                                                   + REPLACE(
                                                                                                                                         ProcedureCode11, '.'
                                                                                                                                       , '') + @tse_sep + 'D8'
                                                                                                                                   + @tse_sep
                                                                                                                                   + ProcedureCodeDate11
                                                                                                                                   + (CASE
                                                                                                                                          WHEN ProcedureCode12 IS NOT NULL THEN
                                                                                                                                              @te_sep
                                                                                                                                              + ProcedureCodeQualifier12
                                                                                                                                              + @tse_sep
                                                                                                                                              + REPLACE(
                                                                                                                                                    ProcedureCode12
                                                                                                                                                  , '.', '')
                                                                                                                                              + @tse_sep + 'D8'
                                                                                                                                              + @tse_sep
                                                                                                                                              + ProcedureCodeDate12
                                                                                                                                          ELSE ''
                                                                                                                                      END)
                                                                                                                               ELSE ''
                                                                                                                           END)
                                                                                                                    ELSE ''
                                                                                                                END)
                                                                                                         ELSE ''
                                                                                                     END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                                , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                              END




                                    --srf 3/28/2011 added HI A3 - Primary payer expected amount loop
                                  , HIResponsibilitySegment = UPPER(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          ('HI' + @te_sep + 'BE' + @tse_sep + 'A3' + @tse_sep + @tse_sep
                                                                                           + @tse_sep
                                                                                           + (CASE
                                                                                                  WHEN CONVERT(INT, TotalAmount * 100) = CONVERT(
                                                                                                                                             INT, TotalAmount)
                                                                                                                                         * 100 THEN
                                                                                                      CONVERT(VARCHAR, CONVERT(INT, TotalAmount))
                                                                                                  ELSE CONVERT(VARCHAR, TotalAmount)
                                                                                              END))
                                                                                          + (CASE
                                                                                                 WHEN ValueCode1 IS NOT NULL THEN
                                                                                                     @te_sep + 'BE' + @tse_sep + ValueCode1 + @tse_sep
                                                                                                     + @tse_sep + @tse_sep + ValueCodeValue1
                                                                                                 ELSE RTRIM('')
                                                                                             END
                                                                                             + (CASE
                                                                                                    WHEN ValueCode2 IS NOT NULL THEN
                                                                                                        @te_sep + 'BE' + @tse_sep + ValueCode2 + @tse_sep
                                                                                                        + @tse_sep + @tse_sep + ValueCodeValue2
                                                                                                        + (CASE
                                                                                                               WHEN ValueCode3 IS NOT NULL THEN
                                                                                                                   @te_sep + 'BE' + @tse_sep + ValueCode3
                                                                                                                   + @tse_sep + @tse_sep + @tse_sep
                                                                                                                   + ValueCodeValue3
                                                                                                                   + (CASE
                                                                                                                          WHEN ValueCode4 IS NOT NULL THEN
                                                                                                                              @te_sep + 'BE' + @tse_sep
                                                                                                                              + ValueCode4 + @tse_sep
                                                                                                                              + @tse_sep + @tse_sep
                                                                                                                              + ValueCodeValue4
                                                                                                                              + (CASE
                                                                                                                                     WHEN ValueCode5 IS NOT NULL THEN
                                                                                                                                         @te_sep + 'BE'
                                                                                                                                         + @tse_sep
                                                                                                                                         + ValueCode5
                                                                                                                                         + @tse_sep + @tse_sep
                                                                                                                                         + @tse_sep
                                                                                                                                         + ValueCodeValue5
                                                                                                                                         + (CASE
                                                                                                                                                WHEN ValueCode6 IS NOT NULL THEN
                                                                                                                                                    @te_sep
                                                                                                                                                    + 'BE'
                                                                                                                                                    + @tse_sep
                                                                                                                                                    + ValueCode6
                                                                                                                                                    + @tse_sep
                                                                                                                                                    + @tse_sep
                                                                                                                                                    + @tse_sep
                                                                                                                                                    + ValueCodeValue6
                                                                                                                                                    + (CASE
                                                                                                                                                           WHEN ValueCode7 IS NOT NULL THEN
                                                                                                                                                               @te_sep
                                                                                                                                                               + 'BE'
                                                                                                                                                               + @tse_sep
                                                                                                                                                               + ValueCode7
                                                                                                                                                               + @tse_sep
                                                                                                                                                               + @tse_sep
                                                                                                                                                               + @tse_sep
                                                                                                                                                               + ValueCodeValue7
                                                                                                                                                           ELSE
                                                                                                                                                               RTRIM(
                                                                                                                                                                   '')
                                                                                                                                                       END)
                                                                                                                                                ELSE RTRIM('')
                                                                                                                                            END)
                                                                                                                                     ELSE RTRIM('')
                                                                                                                                 END)
                                                                                                                          ELSE RTRIM('')
                                                                                                                      END)
                                                                                                               ELSE RTRIM('')
                                                                                                           END)
                                                                                                    ELSE RTRIM('')
                                                                                                END)
                                                                                             + CASE
                                                                                                   WHEN ValueCode1 IS NOT NULL
                                                                                                        AND ValueCode2 IS NOT NULL
                                                                                                        AND ValueCode3 IS NOT NULL
                                                                                                        AND ValueCode4 IS NOT NULL
                                                                                                        AND ValueCode5 IS NOT NULL
                                                                                                        AND ValueCode6 IS NOT NULL
                                                                                                        AND ValueCode7 IS NOT NULL
                                                                                                        AND ValueCode8 IS NOT NULL THEN
                                                                                                       @te_sep + 'BE' + @tse_sep + ValueCode8 + @tse_sep
                                                                                                       + @tse_sep + @tse_sep + ValueCodeValue8
                                                                                                       + (CASE
                                                                                                              WHEN ValueCode9 IS NOT NULL THEN
                                                                                                                  @te_sep + 'BE' + @tse_sep + ValueCode9
                                                                                                                  + @tse_sep + @tse_sep + @tse_sep
                                                                                                                  + ValueCodeValue9
                                                                                                                  + (CASE
                                                                                                                         WHEN ValueCode10 IS NOT NULL THEN
                                                                                                                             @te_sep + 'BE' + @tse_sep
                                                                                                                             + ValueCode10 + @tse_sep
                                                                                                                             + @tse_sep + @tse_sep
                                                                                                                             + ValueCodeValue10
                                                                                                                             + (CASE
                                                                                                                                    WHEN ValueCode11 IS NOT NULL THEN
                                                                                                                                        @te_sep + 'BE'
                                                                                                                                        + @tse_sep
                                                                                                                                        + ValueCode11
                                                                                                                                        + @tse_sep + @tse_sep
                                                                                                                                        + @tse_sep
                                                                                                                                        + ValueCodeValue11
                                                                                                                                        + (CASE
                                                                                                                                               WHEN ValueCode12 IS NOT NULL THEN
                                                                                                                                                   @te_sep
                                                                                                                                                   + 'BE'
                                                                                                                                                   + @tse_sep
                                                                                                                                                   + ValueCode12
                                                                                                                                                   + @tse_sep
                                                                                                                                                   + @tse_sep
                                                                                                                                                   + @tse_sep
                                                                                                                                                   + ValueCodeValue12
                                                                                                                                               ELSE ''
                                                                                                                                           END)
                                                                                                                                    ELSE ''
                                                                                                                                END)
                                                                                                                         ELSE ''
                                                                                                                     END)
                                                                                                              ELSE ''
                                                                                                          END)
                                                                                                   ELSE ''
                                                                                               END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                        , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , ReferringNM1Segment = CASE
                                                              WHEN ReferringId IS NULL
                                                                   AND  ReferringSecondaryId IS NULL THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('NM1' + @te_sep + ReferringEntityCode + @te_sep
                                                                                               + ReferringEntityQualifier + @te_sep + ReferringLastName
                                                                                               + @te_sep + ReferringFirstName
                                                                                               + (CASE
                                                                                                      WHEN ReferringIdQualifier = 'XX' THEN
                                                                                                          @te_sep + @te_sep + @te_sep + @te_sep
                                                                                                          + ReferringIdQualifier + @te_sep + ReferringId
                                                                                                      ELSE RTRIM('')
                                                                                                  END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                            , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                          END
                                  , ReferringRefSegment = CASE
                                                              WHEN ReferringSecondaryId IS NULL THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('REF' + @te_sep + ReferringSecondaryQualifier + @te_sep
                                                                                               + ReferringSecondaryId), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                    , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                          END
                                  , ReferringRef2Segment = CASE
                                                               WHEN ReferringSecondaryId2 IS NULL THEN NULL
                                                               ELSE
                                                                   UPPER(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               ('REF' + @te_sep + ReferringSecondaryQualifier2 + @te_sep
                                                                                                + ReferringSecondaryId2), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                     , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                           END
                                  , ReferringRef3Segment = CASE
                                                               WHEN ReferringSecondaryId3 IS NULL THEN NULL
                                                               ELSE
                                                                   UPPER(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               ('REF' + @te_sep + ReferringSecondaryQualifier3 + @te_sep
                                                                                                + ReferringSecondaryId3), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                     , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                           END
                                  , RenderingNM1Segment = CASE
                                                              WHEN ISNULL(RTRIM(RenderingId), '') = '' THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('NM1' + @te_sep + RenderingEntityCode + @te_sep
                                                                                               + RenderingEntityQualifier + @te_sep + RenderingLastName
                                                                                               + @te_sep + RenderingFirstName + @te_sep + @te_sep + @te_sep
                                                                                               + @te_sep + RenderingIdQualifier + @te_sep + RenderingId)
                                                                                            , @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                            , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                          END
                                    -- 4/24/2018 No Rendering PRV Segment in the Implementation Guide for 837 I.
                                    /*RenderingPRVSegment = CASE WHEN ISNULL(RTRIM(RenderingId), '') = '' THEN NULL
                                                           ELSE UPPER(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(( 'PRV' + @te_sep + 'PE' + @te_sep + 'ZZ' + @te_sep + RenderingTaxonomyCode ), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                      END ,*/
                                  , RenderingRefSegment = CASE
                                                              WHEN ISNULL(RTRIM(RenderingId), '') = ''
                                                                   OR   ISNULL(RTRIM(RenderingSecondaryId), '') = '' THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('REF' + @te_sep + RenderingSecondaryQualifier + @te_sep
                                                                                               + RenderingSecondaryId), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                    , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                          END
                                  , RenderingRef2Segment = CASE
                                                               WHEN ISNULL(RTRIM(RenderingSecondaryId2), '') = '' THEN NULL
                                                               ELSE
                                                                   UPPER(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               ('REF' + @te_sep + RenderingSecondaryQualifier2 + @te_sep
                                                                                                + RenderingSecondaryId2), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                     , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                           END
                                  , RenderingRef3Segment = CASE
                                                               WHEN ISNULL(RTRIM(RenderingSecondaryId3), '') = '' THEN NULL
                                                               ELSE
                                                                   UPPER(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       REPLACE(
                                                                                           REPLACE(
                                                                                               ('REF' + @te_sep + RenderingSecondaryQualifier3 + @te_sep
                                                                                                + RenderingSecondaryId3), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                     , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                           END
                                  , FacilityNM1Segment = CASE
                                                             WHEN ISNULL(RTRIM(FacilityAddress1), '') = ''
                                                                  OR ISNULL(RTRIM(FacilityCity), '') = ''
                                                                  OR ISNULL(RTRIM(FacilityState), '') = ''
                                                                  OR ISNULL(RTRIM(FacilityZip), '') = '' THEN NULL
                                                             ELSE
                                                                 UPPER(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             ('NM1' + @te_sep + FacilityEntityCode + @te_sep + '2' + @te_sep
                                                                                              + FacilityName + @te_sep + @te_sep + @te_sep + @te_sep + @te_sep
                                                                                              + FacilityIdQualifier + @te_sep + FacilityId), @e_sep, '')
                                                                                       , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                       , @se_sep)) + @seg_term
                                                         END
                                  , FacilityN3Segment = CASE
                                                            WHEN ISNULL(RTRIM(FacilityAddress1), '') = ''
                                                                 OR ISNULL(RTRIM(FacilityCity), '') = ''
                                                                 OR ISNULL(RTRIM(FacilityState), '') = ''
                                                                 OR ISNULL(RTRIM(FacilityZip), '') = '' THEN NULL
                                                            ELSE
                                                                UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('N3' + @te_sep
                                                                                             + REPLACE(
                                                                                                   REPLACE(REPLACE(FacilityAddress1, '#', ' '), '.', ' '), '-'
                                                                                                 , ' ')
                                                                                             + (CASE
                                                                                                    WHEN ISNULL(RTRIM(FacilityAddress2), '') = '' THEN
                                                                                                        RTRIM('')
                                                                                                    ELSE
                                                                                                        @te_sep
                                                                                                        + REPLACE(
                                                                                                              REPLACE(
                                                                                                                  REPLACE(FacilityAddress2, '#', ' '), '.', ' ')
                                                                                                            , '-', ' ')
                                                                                                END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                          , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                        END
                                  , FacilityN4Segment = CASE
                                                            WHEN ISNULL(RTRIM(FacilityAddress1), '') = ''
                                                                 OR ISNULL(RTRIM(FacilityCity), '') = ''
                                                                 OR ISNULL(RTRIM(FacilityState), '') = ''
                                                                 OR ISNULL(RTRIM(FacilityZip), '') = '' THEN NULL
                                                            ELSE
                                                                UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('N4' + @te_sep + FacilityCity + @te_sep + FacilityState + @te_sep
                                                                                             + FacilityZip), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                          , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                        END
                                  , FacilityRefSegment = CASE
                                                             WHEN ISNULL(RTRIM(FacilitySecondaryId), '') = '' THEN NULL
                                                             ELSE
                                                                 UPPER(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             ('REF' + @te_sep + FacilitySecondaryQualifier + @te_sep
                                                                                              + FacilitySecondaryId), @e_sep, ''), @se_sep, ''), @seg_term, '')
                                                                               , '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                         END
                                  , FacilityRef2Segment = CASE
                                                              WHEN ISNULL(RTRIM(FacilitySecondaryId2), '') = '' THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('REF' + @te_sep + FacilitySecondaryQualifier2 + @te_sep
                                                                                               + FacilitySecondaryId2), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                    , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                          END
                                  , FacilityRef3Segment = CASE
                                                              WHEN ISNULL(RTRIM(FacilitySecondaryId3), '') = '' THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('REF' + @te_sep + FacilitySecondaryQualifier3 + @te_sep
                                                                                               + FacilitySecondaryId3), @e_sep, ''), @se_sep, ''), @seg_term
                                                                                    , ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                          END
                                  , AttendingNM1Segment = CASE
                                                              WHEN AttendingProviderId IS NULL THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('NM1' + @te_sep + AttendingProviderEntityCode + @te_sep
                                                                                               + AttendingProviderEntityQualifier + @te_sep
                                                                                               + AttendingProviderLastName + @te_sep
                                                                                               + AttendingProviderFirstName
                                                                                               + (CASE
                                                                                                      WHEN AttendingProviderIdQualifier = 'XX' THEN
                                                                                                          @te_sep + @te_sep + @te_sep + @te_sep
                                                                                                          + AttendingProviderIdQualifier + @te_sep
                                                                                                          + AttendingProviderId
                                                                                                      ELSE RTRIM('')
                                                                                                  END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                            , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                          END
                                  , AttendingPRVSegment = CASE
                                                              WHEN ISNULL(RTRIM(AttendingProviderId), '') = '' THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('PRV' + @te_sep + 'AT' + @te_sep + 'PXC' + @te_sep
                                                                                               + AttendingProviderTaxonomyCode), @e_sep, ''), @se_sep, '')
                                                                                    , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                  + @seg_term
                                                          END
                                    --12/3 apoole added AttendingREFSegment to support LicenseNumber
                                  , AttendingREFSegment = CASE
                                                              WHEN(ISNULL(RTRIM(AttendingProviderLicenseNumber), '') = ''
                                                                   OR   ISNULL(AttendingProviderId, '') = '') THEN NULL
                                                              ELSE
                                                                  UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('REF' + @te_sep + '0B' + @te_sep
                                                                                               + AttendingProviderLicenseNumber), @e_sep, ''), @se_sep, '')
                                                                                    , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                  + @seg_term
                                                          END
                                  , AdmittingDiagnosisHISegment = CASE
                                                                      WHEN AdmittingDiagnosisCode IS NULL THEN NULL
                                                                      ELSE
                                                                          UPPER(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              REPLACE(
                                                                                                  REPLACE(
                                                                                                      ('HI' + @te_sep + AdmittingDiagnosisQualifier + @tse_sep
                                                                                                       + REPLACE(AdmittingDiagnosisCode, '.', '')), @e_sep, '')
                                                                                                , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                                , @tse_sep, @se_sep)) + @seg_term
                                                                  END
                                  , PrincipalProcedureHISegment = CASE
                                                                      WHEN ProcedureCode1 IS NULL THEN NULL
                                                                      ELSE
                                                                          UPPER(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              REPLACE(
                                                                                                  REPLACE(
                                                                                                      ('HI' + @te_sep + ProcedureCodeQualifier1 + @tse_sep
                                                                                                       + REPLACE(ProcedureCode1, '.', '') + @tse_sep + 'D8'
                                                                                                       + @tse_sep + ProcedureCodeDate1), @e_sep, ''), @se_sep
                                                                                                , ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep
                                                                                , @se_sep)) + @seg_term
                                                                  END
                                  , DiagnosisRelatedGroupSegment = CASE
                                                                       WHEN ISNULL(DRGCode, '') = '' THEN NULL
                                                                       ELSE
                                                                           UPPER(
                                                                               REPLACE(
                                                                                   REPLACE(
                                                                                       ('HI' + @te_sep + 'DR' + @tse_sep + REPLACE(DRGCode, '.', '')), @te_sep
                                                                                     , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                                   END
                                    --apoole added AdmittingDiagnosisHISegment 11/4
                                  , PrincipalDiagnosisHISegment = UPPER(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      REPLACE(
                                                                                          REPLACE(
                                                                                              ('HI' + @te_sep + DiagnosisCodeQualifier1 + @tse_sep
                                                                                               + REPLACE(DiagnosisCode1, '.', '') + @tse_sep + @tse_sep
                                                                                               + @tse_sep + @tse_sep + @tse_sep + @tse_sep + @tse_sep
                                                                                               + ISNULL(DiagnosisCodePOA1, 'U')), @e_sep, ''), @se_sep, '')
                                                                                    , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                  + @seg_term
                                    --apoole added PatientReasonForVisitHISegment 11/19
                                  , PatientReasonForVisitHISegment = CASE
                                                                         WHEN InpatientAdmitDate IS NULL THEN NULL
                                                                         ELSE
                                                                             UPPER(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             REPLACE(
                                                                                                 REPLACE(
                                                                                                     REPLACE(
                                                                                                         ('HI' + @te_sep + 'APR' + @tse_sep
                                                                                                          + REPLACE(DiagnosisCode1, '.', '')), @e_sep, '')
                                                                                                   , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                                   , @tse_sep, @se_sep)) + @seg_term
                                                                     END



                                    -- 4/24/2014. Per Implementation Guide, if Attending Provider = Rendering Provider, do not send Rendering
                            UPDATE  #837Claims
                              SET   RenderingNM1Segment = NULL
                                  , RenderingRefSegment = NULL
                              WHERE
                                ISNULL(AttendingProviderEntityQualifier, '') = ISNULL(RenderingEntityQualifier, '')
                                AND ISNULL(AttendingProviderLastName, '') = ISNULL(RenderingLastName, '')
                                AND ISNULL(AttendingProviderFirstName, '') = ISNULL(RenderingFirstName, '')
                                AND ISNULL(AttendingProviderIdQualifier, '') = ISNULL(RenderingIdQualifier, '')
                                AND ISNULL(AttendingProviderId, '') = ISNULL(RenderingId, '')




                            --SELECT * FROM #837Claims


                            -- Added 03/05 Update segment information for #837Claims
                            UPDATE  #837Claims
                              SET   ConditionCodeHISegment = CASE
                                                                 WHEN ConditionCode1 IS NULL THEN NULL
                                                                 ELSE
                                                                     UPPER(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             REPLACE(
                                                                                                 ('HI' + @te_sep + 'BG' + @tse_sep + ConditionCode1
                                                                                                  + (CASE
                                                                                                         WHEN ConditionCode2 IS NOT NULL THEN
                                                                                                             @te_sep + 'BG' + @tse_sep + ConditionCode2
                                                                                                             + (CASE
                                                                                                                    WHEN ConditionCode3 IS NOT NULL THEN
                                                                                                                        @te_sep + 'BG' + @tse_sep
                                                                                                                        + ConditionCode3
                                                                                                                        + (CASE
                                                                                                                               WHEN ConditionCode4 IS NOT NULL THEN
                                                                                                                                   @te_sep + 'BG' + @tse_sep
                                                                                                                                   + ConditionCode4
                                                                                                                                   + (CASE
                                                                                                                                          WHEN ConditionCode5 IS NOT NULL THEN
                                                                                                                                              @te_sep + 'BG'
                                                                                                                                              + @tse_sep
                                                                                                                                              + ConditionCode5
                                                                                                                                              + (CASE
                                                                                                                                                     WHEN ConditionCode6 IS NOT NULL THEN
                                                                                                                                                         @te_sep
                                                                                                                                                         + 'BG'
                                                                                                                                                         + @tse_sep
                                                                                                                                                         + ConditionCode6
                                                                                                                                                         + (CASE
                                                                                                                                                                WHEN ConditionCode7 IS NOT NULL THEN
                                                                                                                                                                    @te_sep
                                                                                                                                                                    + 'BG'
                                                                                                                                                                    + @tse_sep
                                                                                                                                                                    + ConditionCode7
                                                                                                                                                                ELSE
                                                                                                                                                                    RTRIM(
                                                                                                                                                                        '')
                                                                                                                                                            END)
                                                                                                                                                     ELSE
                                                                                                                                                         RTRIM(
                                                                                                                                                             '')
                                                                                                                                                 END)
                                                                                                                                          ELSE RTRIM('')
                                                                                                                                      END)
                                                                                                                               ELSE RTRIM('')
                                                                                                                           END)
                                                                                                                    ELSE RTRIM('')
                                                                                                                END)
                                                                                                         ELSE RTRIM('')
                                                                                                     END)
                                                                                                  + CASE
                                                                                                        WHEN ConditionCode1 IS NOT NULL
                                                                                                             AND   ConditionCode2 IS NOT NULL
                                                                                                             AND   ConditionCode3 IS NOT NULL
                                                                                                             AND   ConditionCode4 IS NOT NULL
                                                                                                             AND   ConditionCode5 IS NOT NULL
                                                                                                             AND   ConditionCode6 IS NOT NULL
                                                                                                             AND   ConditionCode7 IS NOT NULL
                                                                                                             AND   ConditionCode8 IS NOT NULL THEN
                                                                                                            @te_sep + 'BG' + @tse_sep + DiagnosisCode8
                                                                                                            + (CASE
                                                                                                                   WHEN ConditionCode9 IS NOT NULL THEN
                                                                                                                       @te_sep + 'BG' + @tse_sep
                                                                                                                       + ConditionCode9
                                                                                                                       + (CASE
                                                                                                                              WHEN ConditionCode10 IS NOT NULL THEN
                                                                                                                                  @te_sep + 'BG' + @tse_sep
                                                                                                                                  + ConditionCode10
                                                                                                                                  + (CASE
                                                                                                                                         WHEN ConditionCode11 IS NOT NULL THEN
                                                                                                                                             @te_sep + 'BG'
                                                                                                                                             + @tse_sep
                                                                                                                                             + ConditionCode11
                                                                                                                                             + (CASE
                                                                                                                                                    WHEN ConditionCode12 IS NOT NULL THEN
                                                                                                                                                        @te_sep
                                                                                                                                                        + 'BG'
                                                                                                                                                        + @tse_sep
                                                                                                                                                        + ConditionCode12
                                                                                                                                                    ELSE ''
                                                                                                                                                END)
                                                                                                                                         ELSE ''
                                                                                                                                     END)
                                                                                                                              ELSE ''
                                                                                                                          END)
                                                                                                                   ELSE ''
                                                                                                               END)
                                                                                                        ELSE ''
                                                                                                    END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                               , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                             END
                                  , ValueCodeHISegment = NULL
                                  , OccurenceCodeHISegment = CASE
                                                                 WHEN OccurenceCode1 IS NULL THEN NULL
                                                                 ELSE
                                                                     UPPER(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             REPLACE(
                                                                                                 ('HI' + @te_sep + 'BH' + @tse_sep + OccurenceCode1 + @tse_sep
                                                                                                  + 'D8' + @tse_sep + OccurenceCodeDate1
                                                                                                  + (CASE
                                                                                                         WHEN OccurenceCode2 IS NOT NULL THEN
                                                                                                             @te_sep + 'BE' + @tse_sep + OccurenceCode2
                                                                                                             + @tse_sep + 'D8' + @tse_sep + OccurenceCodeDate2
                                                                                                             + (CASE
                                                                                                                    WHEN OccurenceCode3 IS NOT NULL THEN
                                                                                                                        @te_sep + 'BE' + @tse_sep
                                                                                                                        + OccurenceCode3 + @tse_sep + 'D8'
                                                                                                                        + @tse_sep + OccurenceCodeDate3
                                                                                                                        + (CASE
                                                                                                                               WHEN OccurenceCode4 IS NOT NULL THEN
                                                                                                                                   @te_sep + 'BE' + @tse_sep
                                                                                                                                   + OccurenceCode4 + @tse_sep
                                                                                                                                   + 'D8' + @tse_sep
                                                                                                                                   + OccurenceCodeDate4
                                                                                                                                   + (CASE
                                                                                                                                          WHEN OccurenceCode5 IS NOT NULL THEN
                                                                                                                                              @te_sep + 'BE'
                                                                                                                                              + @tse_sep
                                                                                                                                              + OccurenceCode5
                                                                                                                                              + @tse_sep + 'D8'
                                                                                                                                              + @tse_sep
                                                                                                                                              + OccurenceCodeDate5
                                                                                                                                              + (CASE
                                                                                                                                                     WHEN OccurenceCode6 IS NOT NULL THEN
                                                                                                                                                         @te_sep
                                                                                                                                                         + 'BE'
                                                                                                                                                         + @tse_sep
                                                                                                                                                         + OccurenceCode6
                                                                                                                                                         + @tse_sep
                                                                                                                                                         + 'D8'
                                                                                                                                                         + @tse_sep
                                                                                                                                                         + OccurenceCodeDate6
                                                                                                                                                         + (CASE
                                                                                                                                                                WHEN OccurenceCode7 IS NOT NULL THEN
                                                                                                                                                                    @te_sep
                                                                                                                                                                    + 'BE'
                                                                                                                                                                    + @tse_sep
                                                                                                                                                                    + OccurenceCode7
                                                                                                                                                                    + @tse_sep
                                                                                                                                                                    + 'D8'
                                                                                                                                                                    + @tse_sep
                                                                                                                                                                    + OccurenceCodeDate7
                                                                                                                                                                ELSE
                                                                                                                                                                    RTRIM(
                                                                                                                                                                        '')
                                                                                                                                                            END)
                                                                                                                                                     ELSE
                                                                                                                                                         RTRIM(
                                                                                                                                                             '')
                                                                                                                                                 END)
                                                                                                                                          ELSE RTRIM('')
                                                                                                                                      END)
                                                                                                                               ELSE RTRIM('')
                                                                                                                           END)
                                                                                                                    ELSE RTRIM('')
                                                                                                                END)
                                                                                                         ELSE RTRIM('')
                                                                                                     END)
                                                                                                  + CASE
                                                                                                        WHEN OccurenceCode1 IS NOT NULL
                                                                                                             AND OccurenceCode2 IS NOT NULL
                                                                                                             AND OccurenceCode3 IS NOT NULL
                                                                                                             AND OccurenceCode4 IS NOT NULL
                                                                                                             AND OccurenceCode5 IS NOT NULL
                                                                                                             AND OccurenceCode6 IS NOT NULL
                                                                                                             AND OccurenceCode7 IS NOT NULL
                                                                                                             AND OccurenceCode8 IS NOT NULL THEN
                                                                                                            @te_sep + 'BE' + @tse_sep + OccurenceCode8
                                                                                                            + @tse_sep + 'D8' + @tse_sep + OccurenceCodeDate8
                                                                                                            + (CASE
                                                                                                                   WHEN OccurenceCode9 IS NOT NULL THEN
                                                                                                                       @te_sep + 'BE' + @tse_sep
                                                                                                                       + OccurenceCode9 + @tse_sep + 'D8'
                                                                                                                       + @tse_sep + OccurenceCodeDate9
                                                                                                                       + (CASE
                                                                                                                              WHEN OccurenceCode10 IS NOT NULL THEN
                                                                                                                                  @te_sep + 'BE' + @tse_sep
                                                                                                                                  + OccurenceCode10 + @tse_sep
                                                                                                                                  + 'D8' + @tse_sep
                                                                                                                                  + OccurenceCodeDate10
                                                                                                                                  + (CASE
                                                                                                                                         WHEN OccurenceCode11 IS NOT NULL THEN
                                                                                                                                             @te_sep + 'BE'
                                                                                                                                             + @tse_sep
                                                                                                                                             + OccurenceCode11
                                                                                                                                             + @tse_sep + 'D8'
                                                                                                                                             + @tse_sep
                                                                                                                                             + OccurenceCodeDate11
                                                                                                                                             + (CASE
                                                                                                                                                    WHEN OccurenceCode12 IS NOT NULL THEN
                                                                                                                                                        @te_sep
                                                                                                                                                        + 'BE'
                                                                                                                                                        + @tse_sep
                                                                                                                                                        + OccurenceCode12
                                                                                                                                                        + 'D8'
                                                                                                                                                        + @tse_sep
                                                                                                                                                        + OccurenceCodeDate12
                                                                                                                                                    ELSE ''
                                                                                                                                                END)
                                                                                                                                         ELSE ''
                                                                                                                                     END)
                                                                                                                              ELSE ''
                                                                                                                          END)
                                                                                                                   ELSE ''
                                                                                                               END)
                                                                                                        ELSE ''
                                                                                                    END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                               , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                             END


                            -- Update segment information for #837OtherInsureds
                            UPDATE  #837OtherInsureds
                              SET   SubscriberSegment = UPPER(
                                                            REPLACE(
                                                                REPLACE(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    ('SBR' + @te_sep + PayerSequenceNumber + @te_sep
                                                                                     + SubscriberRelationshipCode + @te_sep
                                                                                     + ISNULL(RTRIM(InsuredId), RTRIM('')) + @te_sep
                                                                                     + ISNULL(RTRIM(GroupName), RTRIM('')) + @te_sep + '' + @te_sep
                                                                                     + --srf 1/4/2011 replaced InsuranceTypeCode with '' per 837 inst specs
                                                                                    @te_sep  + @te_sep + @te_sep + ClaimFilingIndicatorCode), @e_sep, '')
                                                                              , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                        + @seg_term
                                  , PayerPaidAmountSegment = UPPER(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         ('AMT' + @te_sep + 'C4' + @te_sep + CONVERT(VARCHAR, PayerPaidAmount) --srf 12/27/2010 changed 'D' to 'C4'
                                                                                         )     , @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                       , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , PayerAllowedAmountSegment = UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('AMT' + @te_sep + 'B6' + @te_sep
                                                                                             + CONVERT(VARCHAR, PayerAllowedAmount)), @e_sep, ''), @se_sep, '')
                                                                                  , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , DMGSegment = UPPER(
                                                     REPLACE(
                                                         REPLACE(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             ('DMG' + @te_sep + 'D8' + @te_sep + InsuredDOB + @te_sep
                                                                              + (CASE
                                                                                     WHEN InsuredSex IS NULL THEN 'U'
                                                                                     ELSE InsuredSex
                                                                                 END)), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                       , @tse_sep, @se_sep)) + @seg_term
                                  , OISegment = UPPER(
                                                    REPLACE(
                                                        REPLACE(
                                                            REPLACE(
                                                                REPLACE(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            ('OI' + @te_sep + @te_sep + @te_sep + BenefitsAssignCertificationIndicator
                                                                             + @te_sep + PatientSignatureSourceCode + @te_sep + @te_sep
                                                                             + InformationReleaseCode), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                          , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , OINM1Segment = UPPER(
                                                       REPLACE(
                                                           REPLACE(
                                                               REPLACE(
                                                                   REPLACE(
                                                                       REPLACE(
                                                                           REPLACE(
                                                                               ('NM1' + @te_sep + 'IL' + @te_sep + InsuredQualifier + @te_sep + InsuredLastName
                                                                                + @te_sep + InsuredFirstName + @te_sep + @te_sep + @te_sep + @te_sep
                                                                                + InsuredIdQualifier + @te_sep + InsuredId), @e_sep, ''), @se_sep, '')
                                                                     , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                    /*OIRefSegment = UPPER(replace(replace(replace(replace(replace(replace((
'REF' + @te_sep +  InsuredSecondaryQualifier + @te_sep +  
InsuredSecondaryId 
), @e_sep,''),@se_sep,''),@seg_term,''),'&',''),@te_sep,@e_sep),@tse_sep,@se_sep)) + @seg_term, */
                                  , PayerNM1Segment = UPPER(
                                                          REPLACE(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  ('NM1' + @te_sep + 'PR' + @te_sep + '2' + @te_sep + PayerName + @te_sep
                                                                                   + @te_sep + @te_sep + @te_sep + @te_sep + PayerQualifier + @te_sep + PayerId)
                                                                                , @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                            , @tse_sep, @se_sep)) + @seg_term
                                  , PayerPaymentDTPSegment = CASE
                                                                 WHEN ISNULL(RTRIM(PaymentDate), '') = '' THEN NULL
                                                                 ELSE
                                                                     UPPER(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             REPLACE(
                                                                                                 ('DTP' + @te_sep + '573' + @te_sep + 'D8' + @te_sep
                                                                                                  + PaymentDate), @e_sep, ''), @se_sep, ''), @seg_term, '')
                                                                                   , '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                             END




                                    -- Other Insured Adjustment Information
                            SELECT  @Bookmark = ' Other Insured Adjustment Information'
                            UPDATE  #837OtherInsuredLineItems
                              SET   SVDSegment = UPPER(
                                                     REPLACE(
                                                         REPLACE(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             ('SVD' + @te_sep + OtherPayerPrimaryId + @te_sep
                                                                              + (CASE
                                                                                     WHEN CONVERT(INT, LinePaidAmount * 100) = CONVERT(INT, LinePaidAmount)
                                                                                                                               * 100 THEN
                                                                                         CONVERT(VARCHAR, CONVERT(INT, LinePaidAmount))
                                                                                     ELSE CONVERT(VARCHAR, LinePaidAmount)
                                                                                 END) + @te_sep + ServiceIdQualifier + @tse_sep + RTRIM(BillingCode)
                                                                              + (CASE
                                                                                     WHEN Modifier1 IS NOT NULL
                                                                                          OR   ProcedureDescription IS NOT NULL THEN
                                                                                         @tse_sep + RTRIM(ISNULL(Modifier1, ''))
                                                                                     ELSE RTRIM('')
                                                                                 END)
                                                                              + (CASE
                                                                                     WHEN Modifier2 IS NOT NULL
                                                                                          OR   ProcedureDescription IS NOT NULL THEN
                                                                                         @tse_sep + RTRIM(ISNULL(Modifier2, ''))
                                                                                     ELSE RTRIM('')
                                                                                 END)
                                                                              + (CASE
                                                                                     WHEN Modifier3 IS NOT NULL
                                                                                          OR   ProcedureDescription IS NOT NULL THEN
                                                                                         @tse_sep + RTRIM(ISNULL(Modifier3, ''))
                                                                                     ELSE RTRIM('')
                                                                                 END)
                                                                              + (CASE
                                                                                     WHEN Modifier4 IS NOT NULL
                                                                                          OR   ProcedureDescription IS NOT NULL THEN
                                                                                         @tse_sep + RTRIM(ISNULL(Modifier4, ''))
                                                                                     ELSE RTRIM('')
                                                                                 END)
                                                                              + (CASE
                                                                                     WHEN ProcedureDescription IS NOT NULL THEN
                                                                                         @tse_sep + RTRIM(ISNULL(ProcedureDescription, ''))
                                                                                     ELSE RTRIM('')
                                                                                 END) + @te_sep
                                                                              + (CASE
                                                                                     WHEN CONVERT(INT, PaidUnitCount * 100) = CONVERT(INT, PaidUnitCount) * 100 THEN
                                                                                         CONVERT(VARCHAR, CONVERT(INT, PaidUnitCount))
                                                                                     ELSE CONVERT(VARCHAR, PaidUnitCount)
                                                                                 END) + @te_sep + BundledLineNumber), @e_sep, ''), @se_sep, ''), @seg_term, '')
                                                               , '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , CAS1Segment = CASE
                                                      WHEN AdjustmentReasonCode1_1 IS NULL
                                                           OR   ISNULL(AdjustmentAmount1_1, 0) = 0 THEN NULL
                                                      ELSE
                                                          UPPER(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      ('CAS' + @te_sep + 'PR' + @te_sep + AdjustmentReasonCode1_1 + @te_sep
                                                                                       + CONVERT(VARCHAR(20), AdjustmentAmount1_1)
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode1_2 IS NOT NULL
                                                                                                  OR AdjustmentQuantity1_1 IS NOT NULL
                                                                                                  OR SecondAdjustmentReasonCode1_1 IS NOT NULL THEN
                                                                                                 @te_sep
                                                                                                 + ISNULL(CONVERT(VARCHAR(20), AdjustmentQuantity1_1), '')
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode1_2 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode1_1 IS NOT NULL THEN
                                                                                                           @te_sep + ISNULL(SecondAdjustmentReasonCode1_1, '')
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode1_2 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode1_2 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount1_2)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode1_3 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity1_2 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode1_2 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity1_2)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode1_3 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode1_2 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode1_2, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode1_3 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode1_3 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount1_3)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode1_4 IS NOT NULL
                                                                                                            OR AdjustmentQuantity1_3 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode1_3 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity1_3)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode1_4 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode1_3 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode1_3, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode1_4 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode1_4 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount1_4)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode1_5 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity1_4 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode1_4 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity1_4)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode1_5 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode1_4 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode1_4, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode1_5 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode1_5 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount1_5)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode1_6 IS NOT NULL
                                                                                                            OR AdjustmentQuantity1_5 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode1_5 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity1_5)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode1_6 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode1_5 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode1_5, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode1_6 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode1_6 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount1_6)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentQuantity1_6 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode1_6 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity1_6)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN SecondAdjustmentReasonCode1_6 IS NOT NULL THEN
                                                                                                                     @te_sep + SecondAdjustmentReasonCode1_6
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                    , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                  END
                                  , CAS2Segment = CASE
                                                      WHEN AdjustmentReasonCode2_1 IS NULL
                                                           OR   ISNULL(AdjustmentAmount2_1, 0) = 0 THEN NULL
                                                      ELSE
                                                          UPPER(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      ('CAS' + @te_sep + 'CO' + @te_sep + AdjustmentReasonCode2_1 + @te_sep
                                                                                       + CONVERT(VARCHAR(20), AdjustmentAmount2_1)
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode2_2 IS NOT NULL
                                                                                                  OR AdjustmentQuantity2_1 IS NOT NULL
                                                                                                  OR SecondAdjustmentReasonCode2_1 IS NOT NULL THEN
                                                                                                 @te_sep
                                                                                                 + ISNULL(CONVERT(VARCHAR(20), AdjustmentQuantity2_1), '')
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode2_2 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode2_1 IS NOT NULL THEN
                                                                                                           @te_sep + ISNULL(SecondAdjustmentReasonCode2_1, '')
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode2_2 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode2_2 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount2_2)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode2_3 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity2_2 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode2_2 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity2_2)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode2_3 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode2_2 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode2_2, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode2_3 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode2_3 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount2_3)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode2_4 IS NOT NULL
                                                                                                            OR AdjustmentQuantity2_3 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode2_3 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity2_3)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode2_4 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode2_3 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode2_3, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode2_4 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode2_4 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount2_4)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode2_5 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity2_4 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode2_4 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity2_4)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode2_5 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode2_4 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode2_4, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode2_5 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode2_5 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount2_5)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode2_6 IS NOT NULL
                                                                                                            OR AdjustmentQuantity2_5 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode2_5 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity2_5)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode2_6 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode2_5 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode2_5, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode2_6 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode2_6 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount2_6)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentQuantity2_6 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode2_6 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity2_6)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN SecondAdjustmentReasonCode2_6 IS NOT NULL THEN
                                                                                                                     @te_sep + SecondAdjustmentReasonCode2_6
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                    , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                  END
                                  , CAS3Segment = CASE
                                                      WHEN AdjustmentReasonCode3_1 IS NULL
                                                           OR   ISNULL(AdjustmentAmount3_1, 0) = 0 THEN NULL
                                                      ELSE
                                                          UPPER(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      ('CAS' + @te_sep + 'CR' + @te_sep + AdjustmentReasonCode3_1 + @te_sep
                                                                                       + CONVERT(VARCHAR(20), AdjustmentAmount3_1)
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode3_2 IS NOT NULL
                                                                                                  OR AdjustmentQuantity3_1 IS NOT NULL
                                                                                                  OR SecondAdjustmentReasonCode3_1 IS NOT NULL THEN
                                                                                                 @te_sep
                                                                                                 + ISNULL(CONVERT(VARCHAR(20), AdjustmentQuantity3_1), '')
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode3_2 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode3_1 IS NOT NULL THEN
                                                                                                           @te_sep + ISNULL(SecondAdjustmentReasonCode3_1, '')
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode3_2 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode3_2 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount3_2)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode3_3 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity3_2 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode3_2 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity3_2)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode3_3 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode3_2 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode3_2, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode3_3 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode3_3 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount3_3)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode3_4 IS NOT NULL
                                                                                                            OR AdjustmentQuantity3_3 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode3_3 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity3_3)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode3_4 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode3_3 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode3_3, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode3_4 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode3_4 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount3_4)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode3_5 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity3_4 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode3_4 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity3_4)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode3_5 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode3_4 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode3_4, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode3_5 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode3_5 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount3_5)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode3_6 IS NOT NULL
                                                                                                            OR AdjustmentQuantity3_5 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode3_5 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity3_5)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode3_6 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode3_5 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode3_5, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode3_6 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode3_6 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount3_6)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentQuantity3_6 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode3_6 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity3_6)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN SecondAdjustmentReasonCode3_6 IS NOT NULL THEN
                                                                                                                     @te_sep + SecondAdjustmentReasonCode3_6
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                    , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                  END
                                  , CAS4Segment = CASE
                                                      WHEN AdjustmentReasonCode4_1 IS NULL
                                                           OR   ISNULL(AdjustmentAmount4_1, 0) = 0 THEN NULL
                                                      ELSE
                                                          UPPER(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      ('CAS' + @te_sep + 'OA' + @te_sep + AdjustmentReasonCode4_1 + @te_sep
                                                                                       + CONVERT(VARCHAR(20), AdjustmentAmount4_1)
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode4_2 IS NOT NULL
                                                                                                  OR AdjustmentQuantity4_1 IS NOT NULL
                                                                                                  OR SecondAdjustmentReasonCode4_1 IS NOT NULL THEN
                                                                                                 @te_sep
                                                                                                 + ISNULL(CONVERT(VARCHAR(20), AdjustmentQuantity4_1), '')
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode4_2 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode4_1 IS NOT NULL THEN
                                                                                                           @te_sep + ISNULL(SecondAdjustmentReasonCode4_1, '')
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode4_2 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode4_2 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount4_2)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode4_3 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity4_2 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode4_2 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity4_2)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode4_3 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode4_2 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode4_2, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode4_3 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode4_3 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount4_3)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode4_4 IS NOT NULL
                                                                                                            OR AdjustmentQuantity4_3 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode4_3 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity4_3)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode4_4 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode4_3 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode4_3, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode4_4 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode4_4 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount4_4)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode4_5 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity4_4 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode4_4 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity4_4)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode4_5 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode4_4 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode4_4, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode4_5 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode4_5 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount4_5)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode4_6 IS NOT NULL
                                                                                                            OR AdjustmentQuantity4_5 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode4_5 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity4_5)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode4_6 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode4_5 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode4_5, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode4_6 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode4_6 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount4_6)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentQuantity4_6 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode4_6 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity4_6)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN SecondAdjustmentReasonCode4_6 IS NOT NULL THEN
                                                                                                                     @te_sep + SecondAdjustmentReasonCode4_6
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                    , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                  END
                                  , CAS5Segment = CASE
                                                      WHEN AdjustmentReasonCode5_1 IS NULL
                                                           OR   ISNULL(AdjustmentAmount5_1, 0) = 0 THEN NULL
                                                      ELSE
                                                          UPPER(
                                                              REPLACE(
                                                                  REPLACE(
                                                                      REPLACE(
                                                                          REPLACE(
                                                                              REPLACE(
                                                                                  REPLACE(
                                                                                      ('CAS' + @te_sep + 'PI' + @te_sep + AdjustmentReasonCode5_1 + @te_sep
                                                                                       + CONVERT(VARCHAR(20), AdjustmentAmount5_1)
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode5_2 IS NOT NULL
                                                                                                  OR AdjustmentQuantity5_1 IS NOT NULL
                                                                                                  OR SecondAdjustmentReasonCode5_1 IS NOT NULL THEN
                                                                                                 @te_sep
                                                                                                 + ISNULL(CONVERT(VARCHAR(20), AdjustmentQuantity5_1), '')
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode5_2 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode5_1 IS NOT NULL THEN
                                                                                                           @te_sep + ISNULL(SecondAdjustmentReasonCode5_1, '')
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode5_2 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode5_2 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount5_2)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode5_3 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity5_2 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode5_2 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity5_2)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode5_3 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode5_2 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode5_2, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode5_3 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode5_3 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount5_3)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode5_4 IS NOT NULL
                                                                                                            OR AdjustmentQuantity5_3 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode5_3 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity5_3)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode5_4 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode5_3 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode5_3, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode5_4 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode5_4 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount5_4)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode5_5 IS NOT NULL
                                                                                                            OR  AdjustmentQuantity5_4 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode5_4 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity5_4)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode5_5 IS NOT NULL
                                                                                                                      OR  SecondAdjustmentReasonCode5_4 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode5_4, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode5_5 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode5_5 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount5_5)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentReasonCode5_6 IS NOT NULL
                                                                                                            OR AdjustmentQuantity5_5 IS NOT NULL
                                                                                                            OR SecondAdjustmentReasonCode5_5 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity5_5)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN AdjustmentReasonCode5_6 IS NOT NULL
                                                                                                                      OR SecondAdjustmentReasonCode5_5 IS NOT NULL THEN
                                                                                                                     @te_sep
                                                                                                                     + ISNULL(SecondAdjustmentReasonCode5_5, '')
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END
                                                                                       + CASE
                                                                                             WHEN AdjustmentReasonCode5_6 IS NOT NULL THEN
                                                                                                 @te_sep + AdjustmentReasonCode5_6 + @te_sep
                                                                                                 + CONVERT(VARCHAR(20), AdjustmentAmount5_6)
                                                                                                 + CASE
                                                                                                       WHEN AdjustmentQuantity5_6 IS NOT NULL
                                                                                                            OR  SecondAdjustmentReasonCode5_6 IS NOT NULL THEN
                                                                                                           @te_sep
                                                                                                           + ISNULL(
                                                                                                                 CONVERT(VARCHAR(20), AdjustmentQuantity5_6)
                                                                                                               , '')
                                                                                                           + CASE
                                                                                                                 WHEN SecondAdjustmentReasonCode5_6 IS NOT NULL THEN
                                                                                                                     @te_sep + SecondAdjustmentReasonCode5_6
                                                                                                                 ELSE ''
                                                                                                             END
                                                                                                       ELSE ''
                                                                                                   END
                                                                                             ELSE ''
                                                                                         END), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                    , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                  END
                                  , ServiceAdjudicationDTPSegment = CASE
                                                                        WHEN ISNULL(RTRIM(AdjudicationDate), '') = '' THEN NULL
                                                                        ELSE
                                                                            UPPER(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            REPLACE(
                                                                                                REPLACE(
                                                                                                    REPLACE(
                                                                                                        ('DTP' + @te_sep + '573' + @te_sep + 'D8' + @te_sep
                                                                                                         + AdjudicationDate), @e_sep, ''), @se_sep, '')
                                                                                              , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                            + @seg_term
                                                                    END
                                  , RemainingPatientAMTSegment = CASE
                                                                     WHEN ISNULL(RemainingPatientAmount, 0) = 0 THEN NULL
                                                                     ELSE
                                                                         UPPER(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     REPLACE(
                                                                                         REPLACE(
                                                                                             REPLACE(
                                                                                                 REPLACE(
                                                                                                     ('AMT' + @te_sep + 'EAF' + @te_sep
                                                                                                      + CONVERT(VARCHAR(20), RemainingPatientAmount)), @e_sep
                                                                                                   , ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep
                                                                                   , @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                                 END





                            -- update segments for #837Services
                            SELECT  @Bookmark = 'update segments for #837Services'
                            UPDATE  #837Services
                              SET   ApprovedAmount = NULL
                            --, --srf 1/4/2011 per 837 inst intstructions
                            -- LineItemControlNumber = null commented out 12/10/13 apoole


                            UPDATE  #837Services
                              SET   SV2Segment = UPPER(
                                                     REPLACE(
                                                         REPLACE(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             ('SV2' + @te_sep + RTRIM(RevenueCode) + @te_sep
                                                                              + (CASE
                                                                                     WHEN ISNULL(BillingCode, '') = '' THEN ''
                                                                                     ELSE
                                                                             (ServiceIdQualifier + @tse_sep + RTRIM(ISNULL(BillingCode, ''))
                                                                              + (CASE
                                                                                     WHEN Modifier1 IS NOT NULL THEN @tse_sep + RTRIM(Modifier1)
                                                                                     ELSE RTRIM('')
                                                                                 END) + (CASE
                                                                                             WHEN Modifier2 IS NOT NULL THEN @tse_sep + RTRIM(Modifier2)
                                                                                             ELSE RTRIM('')
                                                                                         END)
                                                                              + (CASE
                                                                                     WHEN Modifier3 IS NOT NULL THEN @tse_sep + RTRIM(Modifier3)
                                                                                     ELSE RTRIM('')
                                                                                 END) + (CASE
                                                                                             WHEN Modifier4 IS NOT NULL THEN @tse_sep + RTRIM(Modifier4)
                                                                                             ELSE RTRIM('')
                                                                                         END))
                                                                                 END) + @te_sep
                                                                              + (CASE
                                                                                     WHEN CONVERT(INT, LineItemChargeAmount * 100) = CONVERT(
                                                                                                                                         INT
                                                                                                                                       , LineItemChargeAmount)
                                                                                                                                     * 100 THEN
                                                                                         CONVERT(VARCHAR, CONVERT(INT, LineItemChargeAmount))
                                                                                     ELSE CONVERT(VARCHAR, LineItemChargeAmount)
                                                                                 END) + @te_sep + UnitOfMeasure + @te_sep + ServiceUnitCount), @e_sep, '')
                                                                       , @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                 + @seg_term
                                  , ServiceDateDTPSegment = UPPER(
                                                                REPLACE(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        ('DTP' + @te_sep + '472' + @te_sep + ServiceDateQualifier + @te_sep
                                                                                         + ServiceDate), @e_sep, ''), @se_sep, ''), @seg_term, ''), '&', '')
                                                                      , @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                  , LineItemControlRefSegment = UPPER(
                                                                    REPLACE(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            ('REF' + @te_sep + '6R' + @te_sep + LineItemControlNumber), @e_sep
                                                                                          , ''), @se_sep, ''), @seg_term, ''), '&', ''), @te_sep, @e_sep)
                                                                      , @tse_sep, @se_sep)) + @seg_term
                                  , ApprovedAmountSegment = CASE
                                                                WHEN ApprovedAmount IS NULL THEN NULL
                                                                ELSE
                                                                    UPPER(
                                                                        REPLACE(
                                                                            REPLACE(
                                                                                REPLACE(
                                                                                    REPLACE(
                                                                                        REPLACE(
                                                                                            REPLACE(
                                                                                                ('AMT' + @te_sep + 'AAE' + @te_sep
                                                                                                 + CONVERT(VARCHAR, ApprovedAmount)), @e_sep, ''), @se_sep, '')
                                                                                      , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep))
                                                                    + @seg_term
                                                            END


                            --New** Start
                            -- update segments for #837DrugIdentification
                            UPDATE  #837DrugIdentification
                              SET   LINSegment = CASE
                                                     WHEN NationalDrugCode IS NULL THEN NULL
                                                     ELSE
                                                         UPPER(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     ('LIN' + @te_sep + @te_sep
                                                                                      + ISNULL(RTRIM(NationalDrugCodeQualifier), RTRIM('')) + @te_sep
                                                                                      + ISNULL(RTRIM(NationalDrugCode), RTRIM(''))), @e_sep, ''), @se_sep, '')
                                                                           , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                 END
                                  , CTPSegment = CASE
                                                     WHEN DrugUnitPrice IS NULL THEN NULL
                                                     ELSE
                                                         UPPER(
                                                             REPLACE(
                                                                 REPLACE(
                                                                     REPLACE(
                                                                         REPLACE(
                                                                             REPLACE(
                                                                                 REPLACE(
                                                                                     ('CTP' + @te_sep + @te_sep + @te_sep
                                                                                      + ISNULL(RTRIM(DrugUnitPrice), RTRIM('')) + @te_sep
                                                                                      + ISNULL(RTRIM(DrugCodeUnitCount), RTRIM('')) + @te_sep
                                                                                      + ISNULL(RTRIM(DrugUnitOfMeasure), RTRIM(''))), @e_sep, ''), @se_sep, '')
                                                                           , @seg_term, ''), '&', ''), @te_sep, @e_sep), @tse_sep, @se_sep)) + @seg_term
                                                 END



                            --New** End
                            UPDATE  ClaimBatches
                              SET   BatchProcessProgress = 79
                              WHERE
                                ClaimBatchId = @ParmClaimBatchId

                            SELECT  @Bookmark = 'EXEC scsp_PMClaims837UpdateSegments'

                            EXEC scsp_PMClaims837UpdateSegments @CurrentUser = @ParmCurrentUser
                                                              , @ClaimBatchId = @ParmClaimBatchId
                                                              , @FormatType = @FormatType



                            UPDATE  ClaimBatches
                              SET   BatchProcessProgress = 80
                              WHERE
                                ClaimBatchId = @ParmClaimBatchId



                            --select * from #837BillingProviders
                            --select * from #837SubscriberClients
                            --select * from #837Claims
                            --select * from #837Services
                            --select * from #837OtherInsureds

                            -- Compute Segments
                            -- Segments from Header and Trailer
                            SELECT  @NumberOfSegments = 6

                            -- Segments from Billing Provider
                            SELECT  @NumberOfSegments
                                = @NumberOfSegments + COUNT(*) -- HL Segment
                                  + ISNULL(
                                        SUM(CASE
                                                WHEN BillingProviderNM1Segment IS NULL THEN 0
                                                ELSE 1
                                            END) + SUM(CASE
                                                           WHEN BillingPRVSegment IS NULL THEN 0
                                                           ELSE 1
                                                       END) + SUM(CASE
                                                                      WHEN BillingProviderN3Segment IS NULL THEN 0
                                                                      ELSE 1
                                                                  END) + SUM(CASE
                                                                                 WHEN BillingProviderN4Segment IS NULL THEN 0
                                                                                 ELSE 1
                                                                             END) + SUM(CASE
                                                                                            WHEN BillingProviderRefSegment IS NULL THEN 0
                                                                                            ELSE 1
                                                                                        END) + SUM(CASE
                                                                                                       WHEN BillingProviderRef2Segment IS NULL THEN 0
                                                                                                       ELSE 1
                                                                                                   END)
                                        + SUM(CASE
                                                  WHEN BillingProviderRef3Segment IS NULL THEN 0
                                                  ELSE 1
                                              END) + SUM(CASE
                                                             WHEN BillingProviderPerSegment IS NULL THEN 0
                                                             ELSE 1
                                                         END) + SUM(CASE
                                                                        WHEN PayToProviderNM1Segment IS NULL THEN 0
                                                                        ELSE 1
                                                                    END) + SUM(CASE
                                                                                   WHEN PayToProviderN3Segment IS NULL THEN 0
                                                                                   ELSE 1
                                                                               END) + SUM(CASE
                                                                                              WHEN PayToProviderN4Segment IS NULL THEN 0
                                                                                              ELSE 1
                                                                                          END) + SUM(CASE
                                                                                                         WHEN PayToProviderRefSegment IS NULL THEN 0
                                                                                                         ELSE 1
                                                                                                     END)
                                        + SUM(CASE
                                                  WHEN PayToProviderRef2Segment IS NULL THEN 0
                                                  ELSE 1
                                              END) + SUM(CASE
                                                             WHEN PayToProviderRef3Segment IS NULL THEN 0
                                                             ELSE 1
                                                         END), 0)
                              FROM  #837BillingProviders



                            -- Segments from Subscriber Patient 
                            SELECT  @NumberOfSegments
                                = @NumberOfSegments + COUNT(*) -- Subscriber HL Segment
                                  + SUM(CASE
                                            WHEN SubscriberSegment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN SubscriberPatientSegment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN SubscriberNM1Segment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN SubscriberN3Segment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN SubscriberN4Segment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN SubscriberDMGSegment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN SubscriberRefSegment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END) + SUM(CASE
                                                                                                                         WHEN PayerNM1Segment IS NULL THEN 0
                                                                                                                         ELSE 1
                                                                                                                     END)
                                  + SUM(CASE
                                            WHEN PayerN3Segment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN PayerN4Segment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN PayerRefSegment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN ResponsibleNM1Segment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN ResponsibleN3Segment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN ResponsibleN4Segment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN PatientPatSegment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END) -- Patient HL Segment 
                                  + SUM(CASE
                                            WHEN PatientPatSegment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN PatientNM1Segment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN PatientN3Segment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN PatientN4Segment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN PatientDMGSegment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END)
                              FROM  #837SubscriberClients



                            -- Segments from Claim
                            SELECT  @NumberOfSegments
                                = @NumberOfSegments + SUM(CASE
                                                              WHEN CLMSegment IS NULL THEN 0
                                                              ELSE 1
                                                          END) + SUM(CASE
                                                                         WHEN ReferralDateDTPSegment IS NULL THEN 0
                                                                         ELSE 1
                                                                     END) + SUM(CASE
                                                                                    WHEN AdmissionDateDTPSegment IS NULL THEN 0
                                                                                    ELSE 1
                                                                                END) + SUM(CASE
                                                                                               WHEN StatementDateDTPSegment IS NULL THEN 0
                                                                                               ELSE 1
                                                                                           END) + SUM(CASE
                                                                                                          WHEN DischargeDateDTPSegment IS NULL THEN 0
                                                                                                          ELSE 1
                                                                                                      END)
                                  + SUM(CASE
                                            WHEN PatientAmountPaidSegment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN CL1Segment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN AuthorizationNumberRefSegment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN PayerClaimControlNumberRefSegment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN HIPRSegment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN HISegment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN HIResponsibilitySegment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END)
                                  + SUM(CASE
                                            WHEN ReferringNM1Segment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN ReferringRefSegment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN ReferringRef2Segment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN ReferringRef3Segment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN RenderingNM1Segment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN RenderingPRVSegment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN RenderingRefSegment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END)
                                  + SUM(CASE
                                            WHEN RenderingRef2Segment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN RenderingRef3Segment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN FacilityNM1Segment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN FacilityN3Segment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN FacilityN4Segment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN FacilityRefSegment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN FacilityRef2Segment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END)
                                  + SUM(CASE
                                            WHEN FacilityRef3Segment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN AttendingNM1Segment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN AttendingPRVSegment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN AdmittingDiagnosisHISegment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN NTESegment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN PrincipalDiagnosisHISegment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN PrincipalProcedureHISegment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END)
                                  + SUM(CASE
                                            WHEN OtherProcedureHISegment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN PatientReasonForVisitHISegment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN AttendingREFSegment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN DiagnosisRelatedGroupSegment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN ConditionCodeHISegment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN ValueCodeHISegment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN OccurenceCodeHISegment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END)
                                  + SUM(CASE
                                            WHEN OccurenceSpanCodeHISegment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
														WHEN MedicalRecordNumberRefSegment IS NULL THEN 0
														ELSE 1
													END)
                              FROM  #837Claims



                            -- Segments from Other Insured
                            SELECT  @NumberOfSegments
                                = @NumberOfSegments
                                  + ISNULL(
                                        SUM(CASE
                                                WHEN SubscriberSegment IS NULL THEN 0
                                                ELSE 1
                                            END) + SUM(CASE
                                                           WHEN PayerPaidAmountSegment IS NULL THEN 0
                                                           ELSE 1
                                                       END) + SUM(CASE
                                                                      WHEN PayerAllowedAmountSegment IS NULL THEN 0
                                                                      ELSE 1
                                                                  END) + SUM(CASE
                                                                                 WHEN PatientResponsibilityAmountSegment IS NULL THEN 0
                                                                                 ELSE 1
                                                                             END) + SUM(CASE
                                                                                            WHEN DMGSegment IS NULL THEN 0
                                                                                            ELSE 1
                                                                                        END) + SUM(CASE
                                                                                                       WHEN OISegment IS NULL THEN 0
                                                                                                       ELSE 1
                                                                                                   END) + SUM(CASE
                                                                                                                  WHEN OINM1Segment IS NULL THEN 0
                                                                                                                  ELSE 1
                                                                                                              END) + SUM(CASE
                                                                                                                             WHEN OIN3Segment IS NULL THEN 0
                                                                                                                             ELSE 1
                                                                                                                         END)
                                        + SUM(CASE
                                                  WHEN OIN4Segment IS NULL THEN 0
                                                  ELSE 1
                                              END) + SUM(CASE
                                                             WHEN OIRefSegment IS NULL THEN 0
                                                             ELSE 1
                                                         END) + SUM(CASE
                                                                        WHEN PayerNM1Segment IS NULL THEN 0
                                                                        ELSE 1
                                                                    END) + SUM(CASE
                                                                                   WHEN PayerPaymentDTPSegment IS NULL THEN 0
                                                                                   ELSE 1
                                                                               END) + SUM(CASE
                                                                                              WHEN AuthorizationNumberRefSegment IS NULL THEN 0
                                                                                              ELSE 1
                                                                                          END), 0)
                              FROM  #837OtherInsureds



                            -- Segments from Service
                            SELECT  @NumberOfSegments
                                = @NumberOfSegments + COUNT(*) -- LX segment
                                  + SUM(CASE
                                            WHEN SV2Segment IS NULL THEN 0
                                            ELSE 1
                                        END) + SUM(CASE
                                                       WHEN ServiceDateDTPSegment IS NULL THEN 0
                                                       ELSE 1
                                                   END) + SUM(CASE
                                                                  WHEN ReferralDateDTPSegment IS NULL THEN 0
                                                                  ELSE 1
                                                              END) + SUM(CASE
                                                                             WHEN LineItemControlRefSegment IS NULL THEN 0
                                                                             ELSE 1
                                                                         END) + SUM(CASE
                                                                                        WHEN ProviderAuthorizationRefSegment IS NULL THEN 0
                                                                                        ELSE 1
                                                                                    END) + SUM(CASE
                                                                                                   WHEN SupervisorNM1Segment IS NULL THEN 0
                                                                                                   ELSE 1
                                                                                               END) + SUM(CASE
                                                                                                              WHEN ReferringNM1Segment IS NULL THEN 0
                                                                                                              ELSE 1
                                                                                                          END) + SUM(CASE
                                                                                                                         WHEN PayerNM1Segment IS NULL THEN 0
                                                                                                                         ELSE 1
                                                                                                                     END)
                                  + SUM(CASE
                                            WHEN ApprovedAmountSegment IS NULL THEN 0
                                            ELSE 1
                                        END)
                              FROM  #837Services



                            -- Segments from Other Insured for Adjustments
                            SELECT  @NumberOfSegments
                                = @NumberOfSegments
                                  + ISNULL(SUM(CASE
                                                   WHEN SVDSegment IS NULL THEN 0
                                                   ELSE 1
                                               END) + SUM(CASE
                                                              WHEN CAS1Segment IS NULL THEN 0
                                                              ELSE 1
                                                          END) + SUM(CASE
                                                                         WHEN CAS2Segment IS NULL THEN 0
                                                                         ELSE 1
                                                                     END) + SUM(CASE
                                                                                    WHEN CAS3Segment IS NULL THEN 0
                                                                                    ELSE 1
                                                                                END) + SUM(CASE
                                                                                               WHEN ServiceAdjudicationDTPSegment IS NULL THEN 0
                                                                                               ELSE 1
                                                                                           END), 0)
                              FROM  #837OtherInsureds



                            --NEW** segments for #837DrugIdentification
                            SELECT  @NumberOfSegments = @NumberOfSegments + ISNULL(SUM(CASE
                                                                                           WHEN LINSegment IS NULL THEN 0
                                                                                           ELSE 1
                                                                                       END) + SUM(CASE
                                                                                                      WHEN CTPSegment IS NULL THEN 0
                                                                                                      ELSE 1
                                                                                                  END), 0)
                              FROM  #837DrugIdentification
                            --NEW** End

                            -- Generate File
                            SELECT  @HierId = 0



                            -- Interchange and Functional Header
                            SELECT  @seg1               = InterchangeHeaderSegment
                                  , @seg2               = FunctionalHeaderSegment
                                  , @FunctionalTrailer  = FunctionalTrailerSegment
                                  , @InterchangeTrailer = InterchangeTrailerSegment
                              FROM  #HIPAAHeaderTrailer

                            DELETE  FROM #FinalData

                            INSERT INTO #FinalData
                            VALUES(RTRIM(@seg1))

                            SELECT  @TextPointer = TEXTPTR(DataText)
                              FROM  #FinalData

                            UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2

                            -- Transaction Header
                            SELECT  @seg1  = NULL
                                  , @seg2  = NULL
                                  , @seg3  = NULL
                                  , @seg4  = NULL
                                  , @seg5  = NULL
                                  , @seg6  = NULL
                                  , @seg7  = NULL
                                  , @seg8  = NULL
                                  , @seg9  = NULL
                                  , @seg10 = NULL
                                  , @seg11 = NULL
                                  , @seg12 = NULL
                                  , @seg13 = NULL
                                  , @seg14 = NULL
                                  , @seg15 = NULL
                                  , @seg16 = NULL
                                  , @seg17 = NULL
                                  , @seg18 = NULL
                                  , @seg19 = NULL
                                  , @seg20 = NULL
                                  , @seg21 = NULL
                                  , @seg22 = NULL
                                  , @seg23 = NULL
                                  , @seg24 = NULL
                                  , @seg25 = NULL

                            SELECT  @seg1 = STSegment
                                  , @seg2 = BHTSegment
                                  , @seg3 = TransactionTypeRefSegment
                                  , @seg4 = SubmitterNM1Segment
                                  , @seg5 = SubmitterPerSegment
                                  , @seg6 = ReceiverNm1Segment
                                  , @TransactionTrailer
                                          = ('SE' + @e_sep + CONVERT(VARCHAR, @NumberOfSegments) + @e_sep + TransactionSetControlNumberHeader + @seg_term)
                              FROM  #837HeaderTrailer

                            EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                            EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT
                            EXEC ssp_PM837StringFilter @seg3, @e_sep, @se_sep, @seg_term, @seg3 OUTPUT
                            EXEC ssp_PM837StringFilter @seg4, @e_sep, @se_sep, @seg_term, @seg4 OUTPUT
                            EXEC ssp_PM837StringFilter @seg5, @e_sep, @se_sep, @seg_term, @seg5 OUTPUT
                            EXEC ssp_PM837StringFilter @seg6, @e_sep, @se_sep, @seg_term, @seg6 OUTPUT

                            IF(@seg1 IS NOT NULL)
                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                            IF(@seg2 IS NOT NULL)
                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2
                            IF(@seg3 IS NOT NULL)
                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg3
                            IF(@seg4 IS NOT NULL)
                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg4
                            IF(@seg5 IS NOT NULL)
                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg5
                            IF(@seg6 IS NOT NULL)
                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg6

                            -- Billing PRovider
                            SELECT  @seg1  = NULL
                                  , @seg2  = NULL
                                  , @seg3  = NULL
                                  , @seg4  = NULL
                                  , @seg5  = NULL
                                  , @seg6  = NULL
                                  , @seg7  = NULL
                                  , @seg8  = NULL
                                  , @seg9  = NULL
                                  , @seg10 = NULL
                                  , @seg11 = NULL
                                  , @seg12 = NULL
                                  , @seg13 = NULL
                                  , @seg14 = NULL
                                  , @seg15 = NULL
                                  , @seg16 = NULL
                                  , @seg17 = NULL
                                  , @seg18 = NULL
                                  , @seg19 = NULL
                                  , @seg20 = NULL
                                  , @seg21 = NULL
                                  , @seg22 = NULL
                                  , @seg23 = NULL

                            DECLARE cur_Provider CURSOR
                                FOR
                                SELECT  UniqueId
                                      , BillingProviderNM1Segment
                                      , BillingProviderN3Segment
                                      , BillingProviderN4Segment
                                      , BillingProviderRefSegment
                                      , BillingProviderRef2Segment
                                      , BillingProviderRef3Segment
                                      , BillingProviderPerSegment
                                      , BillingPRVSegment
                                      , PayToProviderNM1Segment
                                      , PayToProviderN3Segment
                                      , PayToProviderN4Segment
                                      , PayToProviderRefSegment
                                      , PayToProviderRef2Segment
                                      , PayToProviderRef3Segment
                                  FROM  #837BillingProviders

                            OPEN cur_Provider

                            FETCH cur_Provider
                            INTO @ProviderLoopId
                               , @seg1
                               , @seg2
                               , @seg3
                               , @seg4
                               , @seg5
                               , @seg6
                               , @seg7
                               , @seg8
                               , @seg9
                               , @seg10
                               , @seg11
                               , @seg13
                               , @seg14
                               , @seg15

                            WHILE @@fetch_status = 0
                                BEGIN

                                    -- Increment Hierarchical ID
                                    SELECT  @HierId = @HierId + 1
                                    SELECT  @ProviderHierId = @HierId


                                    -- HL Segment 
                                    SELECT  @seg12 = 'HL' + @e_sep + CONVERT(VARCHAR, @ProviderHierId) + @e_sep + @e_sep + '20' + @e_sep + '1' + @seg_term


                                    EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg3, @e_sep, @se_sep, @seg_term, @seg3 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg4, @e_sep, @se_sep, @seg_term, @seg4 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg5, @e_sep, @se_sep, @seg_term, @seg5 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg6, @e_sep, @se_sep, @seg_term, @seg6 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg7, @e_sep, @se_sep, @seg_term, @seg7 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg8, @e_sep, @se_sep, @seg_term, @seg8 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg9, @e_sep, @se_sep, @seg_term, @seg9 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg10, @e_sep, @se_sep, @seg_term, @seg10 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg11, @e_sep, @se_sep, @seg_term, @seg11 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg13, @e_sep, @se_sep, @seg_term, @seg13 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg14, @e_sep, @se_sep, @seg_term, @seg14 OUTPUT
                                    EXEC ssp_PM837StringFilter @seg15, @e_sep, @se_sep, @seg_term, @seg15 OUTPUT


                                    IF(@seg12 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg12
                                    IF(@seg8 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg8
                                    IF(@seg1 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                                    IF(@seg2 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2
                                    IF(@seg3 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg3
                                    IF(@seg4 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg4
                                    IF(@seg5 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg5
                                    IF(@seg6 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg6
                                    IF(@seg7 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg7
                                    IF(@seg9 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg9
                                    IF(@seg10 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg10
                                    IF(@seg11 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg11
                                    IF(@seg13 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg13
                                    IF(@seg14 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg14
                                    IF(@seg15 IS NOT NULL)
                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg15


                                    -- Loop to get subscriber
                                    SELECT  @Bookmark = ' Loop to get subscriber'
                                    DECLARE cur_Subscriber CURSOR
                                        FOR
                                        SELECT  UniqueId
                                              , SubscriberSegment
                                              , SubscriberPatientSegment
                                              , SubscriberNM1Segment
                                              , SubscriberN3Segment
                                              , SubscriberN4Segment
                                              , SubscriberDMGSegment
                                              , SubscriberRefSegment
                                              , PayerNM1Segment
                                              , PayerN3Segment
                                              , PayerN4Segment
                                              , PayerRefSegment
                                              , PatientPatSegment
                                              , PatientNM1Segment
                                              , PatientN3Segment
                                              , PatientN4Segment
                                              , PatientDMGSegment
                                          FROM  #837SubscriberClients
                                          WHERE
                                            RefBillingProviderId = @ProviderLoopId

                                    OPEN cur_Subscriber

                                    FETCH cur_Subscriber
                                    INTO @SubscriberLoopId
                                       , @seg1
                                       , @seg2
                                       , @seg3
                                       , @seg4
                                       , @seg5
                                       , @seg6
                                       , @seg7
                                       , @seg8
                                       , @seg9
                                       , @seg10
                                       , @seg11
                                       , @seg12
                                       , @seg13
                                       , @seg14
                                       , @seg15
                                       , @seg16
                                    --#EH!INFO!ADD!@SubscriberLoopId!
                                    WHILE @@fetch_status = 0
                                        BEGIN

                                            -- Increment Hierarchical ID
                                            SELECT  @HierId = @HierId + 1



                                            -- HL Segment for Subsriber Loop
                                            SELECT  @seg17
                                                = 'HL' + @e_sep + CONVERT(VARCHAR, @HierId) + @e_sep + CONVERT(VARCHAR, @ProviderHierId) + @e_sep + '22'
                                                  + @e_sep + (CASE
                                                                  WHEN @seg12 IS NULL THEN '0'
                                                                  ELSE '1'
                                                              END) + @seg_term



                                            -- HL Segment for Patient Loop
                                            IF @seg12 IS NOT NULL
                                                BEGIN
                                                    SELECT  @HierId = @HierId + 1



                                                    SELECT  @seg18
                                                        = 'HL' + @e_sep + CONVERT(VARCHAR, @HierId) + @e_sep + CONVERT(VARCHAR, @HierId - 1) + @e_sep + '23'
                                                          + @e_sep + '0' + @seg_term



                                                END

                                            EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg3, @e_sep, @se_sep, @seg_term, @seg3 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg4, @e_sep, @se_sep, @seg_term, @seg4 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg5, @e_sep, @se_sep, @seg_term, @seg5 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg6, @e_sep, @se_sep, @seg_term, @seg6 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg7, @e_sep, @se_sep, @seg_term, @seg7 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg8, @e_sep, @se_sep, @seg_term, @seg8 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg9, @e_sep, @se_sep, @seg_term, @seg9 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg10, @e_sep, @se_sep, @seg_term, @seg10 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg11, @e_sep, @se_sep, @seg_term, @seg11 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg12, @e_sep, @se_sep, @seg_term, @seg12 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg13, @e_sep, @se_sep, @seg_term, @seg13 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg14, @e_sep, @se_sep, @seg_term, @seg14 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg15, @e_sep, @se_sep, @seg_term, @seg15 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg16, @e_sep, @se_sep, @seg_term, @seg16 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg17, @e_sep, @se_sep, @seg_term, @seg17 OUTPUT
                                            EXEC ssp_PM837StringFilter @seg18, @e_sep, @se_sep, @seg_term, @seg18 OUTPUT



                                            IF(@seg17 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg17
                                            IF(@seg1 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                                            IF(@seg2 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2
                                            IF(@seg3 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg3
                                            IF(@seg4 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg4
                                            IF(@seg5 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg5
                                            IF(@seg6 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg6
                                            IF(@seg7 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg7
                                            IF(@seg8 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg8
                                            IF(@seg9 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg9
                                            IF(@seg10 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg10
                                            IF(@seg11 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg11
                                            IF(@seg18 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg18
                                            IF(@seg12 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg12
                                            IF(@seg13 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg13
                                            IF(@seg14 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg14
                                            IF(@seg15 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg15
                                            IF(@seg16 IS NOT NULL)
                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg16



                                            -- Loop to get Claim
                                            DECLARE cur_Claim CURSOR
                                                FOR
                                                SELECT  UniqueId
                                                      , CLMSegment
                                                      , StatementDateDTPSegment
                                                      , ReferralDateDTPSegment
                                                      , AdmissionDateDTPSegment
                                                      , DischargeDateDTPSegment
                                                      , PatientAmountPaidSegment
                                                      , CL1Segment
                                                      , AuthorizationNumberRefSegment
                                                      , PayerClaimControlNumberRefSegment
                                                      , HIPRSegment
                                                      , HISegment
                                                      , HIResponsibilitySegment
                                                      , ReferringNM1Segment
                                                      , ReferringRefSegment
                                                      , ReferringRef2Segment
                                                      , ReferringRef3Segment
                                                      , AttendingNM1Segment
                                                      , AttendingPRVSegment
                                                      , RenderingNM1Segment
                                                      , RenderingPRVSegment
                                                      , RenderingRefSegment
                                                      , RenderingRef2Segment
                                                      , RenderingRef3Segment
                                                      , FacilityNM1Segment
                                                      , FacilityN3Segment
                                                      , FacilityN4Segment
                                                      , FacilityRefSegment
                                                      , FacilityRef2Segment
                                                      , FacilityRef3Segment
                                                      , PrincipalDiagnosisHISegment
                                                      , AdmittingDiagnosisHISegment
                                                      , PatientReasonForVisitHISegment
                                                      , DiagnosisRelatedGroupSegment
                                                      , AttendingREFSegment
                                                      , PrincipalProcedureHISegment
                                                      , OtherProcedureHISegment
                                                      , OccurenceSpanCodeHISegment
                                                      , OccurenceCodeHISegment
                                                      , ValueCodeHISegment
                                                      , ConditionCodeHISegment
                                                      , NTESegment
													  , MedicalRecordNumberRefSegment
                                                  FROM  #837Claims
                                                  WHERE
                                                    RefSubscriberClientId = @SubscriberLoopId




                                            OPEN cur_Claim



                                            FETCH cur_Claim
                                            INTO @ClaimLoopId
                                               , @seg1
                                               , @seg2
                                               , @seg3
                                               , @seg4
                                               , @seg5
                                               , @seg6
                                               , @seg7
                                               , @seg8
                                               , @seg9
                                               , @seg10
                                               , @seg11
                                               , @seg12
                                               , @seg13
                                               , @seg14
                                               , @seg15
                                               , @seg16
                                               , @seg17
                                               , @seg18
                                               , @seg19
                                               , @seg20
                                               , @seg21
                                               , @seg22
                                               , @seg23
                                               , @seg24
                                               , @seg25
                                               , @seg26
                                               , @seg27
                                               , @seg28
                                               , @seg29
                                               , @seg30
                                               , @seg31
                                               , @seg32
                                               , @seg33
                                               , @seg34
                                               , @seg35
                                               , @seg36
                                               , @seg37
                                               , @seg38
                                               , @seg39
                                               , @seg40
                                               , @seg41
											   , @Seg42

                                            WHILE @@fetch_status = 0
                                                BEGIN

                                                    EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg3, @e_sep, @se_sep, @seg_term, @seg3 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg4, @e_sep, @se_sep, @seg_term, @seg4 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg5, @e_sep, @se_sep, @seg_term, @seg5 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg6, @e_sep, @se_sep, @seg_term, @seg6 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg7, @e_sep, @se_sep, @seg_term, @seg7 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg8, @e_sep, @se_sep, @seg_term, @seg8 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg9, @e_sep, @se_sep, @seg_term, @seg9 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg10, @e_sep, @se_sep, @seg_term, @seg10 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg11, @e_sep, @se_sep, @seg_term, @seg11 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg12, @e_sep, @se_sep, @seg_term, @seg12 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg13, @e_sep, @se_sep, @seg_term, @seg13 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg14, @e_sep, @se_sep, @seg_term, @seg14 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg15, @e_sep, @se_sep, @seg_term, @seg15 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg16, @e_sep, @se_sep, @seg_term, @seg16 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg17, @e_sep, @se_sep, @seg_term, @seg17 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg18, @e_sep, @se_sep, @seg_term, @seg18 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg19, @e_sep, @se_sep, @seg_term, @seg19 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg20, @e_sep, @se_sep, @seg_term, @seg20 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg21, @e_sep, @se_sep, @seg_term, @seg21 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg22, @e_sep, @se_sep, @seg_term, @seg22 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg23, @e_sep, @se_sep, @seg_term, @seg23 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg24, @e_sep, @se_sep, @seg_term, @seg24 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg25, @e_sep, @se_sep, @seg_term, @seg25 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg26, @e_sep, @se_sep, @seg_term, @seg26 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg27, @e_sep, @se_sep, @seg_term, @seg27 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg28, @e_sep, @se_sep, @seg_term, @seg28 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg29, @e_sep, @se_sep, @seg_term, @seg29 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg30, @e_sep, @se_sep, @seg_term, @seg30 OUTPUT
                                                    EXEC ssp_PM837StringFilter @seg31, @e_sep, @se_sep, @seg_term, @seg31 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg32, @e_sep, @se_sep, @seg_term, @seg32 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg33, @e_sep, @se_sep, @seg_term, @seg33 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg34, @e_sep, @se_sep, @seg_term, @seg34 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg35, @e_sep, @se_sep, @seg_term, @seg35 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg36, @e_sep, @se_sep, @seg_term, @seg36 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg37, @e_sep, @se_sep, @seg_term, @seg37 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg38, @e_sep, @se_sep, @seg_term, @seg38 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg39, @e_sep, @se_sep, @seg_term, @seg39 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg40, @e_sep, @se_sep, @seg_term, @seg40 OUTPUT

                                                    EXEC ssp_PM837StringFilter @seg41, @e_sep, @se_sep, @seg_term, @seg41 OUTPUT

													EXEC ssp_PM837StringFilter @seg42, @e_sep, @se_sep, @seg_term, @seg42 OUTPUT



                                                    IF(@seg1 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                                                    IF(@seg2 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2
                                                    IF(@seg3 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg3
                                                    IF(@seg4 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg4
                                                    IF(@seg5 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg5
                                                    IF(@seg6 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg6

                                                    IF(@seg7 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg7
                                                    IF(@seg8 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg8
                                                    IF(@seg9 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg9

													IF(@seg42 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg42

                                                    IF(@seg41 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg41
                                                    IF(@seg30 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg30
                                                    IF(@seg31 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg31
                                                    IF(@seg33 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg33
                                                    IF(@seg32 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg32
                                                    IF(@seg10 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg10

                                                    IF(@seg35 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg35

                                                    IF(@seg36 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg36
                                                    IF(@seg37 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg37

                                                    IF(@seg38 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg38

                                                    IF(@seg39 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg39

                                                    IF(@seg40 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg40

                                                    IF(@seg11 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg11
                                                    IF(@seg12 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg12
                                                    IF(@seg13 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg13
                                                    IF(@seg14 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg14
                                                    IF(@seg15 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg15
                                                    IF(@seg16 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg16
                                                    IF(@seg17 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg17



                                                    IF(@seg34 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg34
                                                    IF(@seg18 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg18
                                                    IF(@seg19 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg19
                                                    IF(@seg20 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg20
                                                    IF(@seg21 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg21
                                                    IF(@seg22 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg22
                                                    IF(@seg23 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg23
                                                    IF(@seg24 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg24
                                                    IF(@seg25 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg25
                                                    IF(@seg26 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg26
                                                    IF(@seg27 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg27
                                                    IF(@seg28 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg28
                                                    IF(@seg29 IS NOT NULL)
                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg29



                                                    -- Initialize Service Count
                                                    SELECT  @ServiceCount = 0



                                                    -- Loop to get Other Insured
                                                    DECLARE cur_OtherInsured CURSOR
                                                        FOR
                                                        SELECT  SubscriberSegment
                                                              , PayerPaidAmountSegment
                                                              , PayerAllowedAmountSegment
                                                              , PatientResponsibilityAmountSegment
                                                              , DMGSegment
                                                              , OISegment
                                                              , OINM1Segment
                                                              , OIN3Segment
                                                              , OIN4Segment
                                                              , OIRefSegment
                                                              , PayerNM1Segment
                                                              , PayerPaymentDTPSegment
                                                              , AuthorizationNumberRefSegment
                                                          FROM  #837OtherInsureds
                                                          WHERE
                                                            RefClaimId = @ClaimLoopId



                                                    OPEN cur_OtherInsured



                                                    FETCH cur_OtherInsured
                                                    INTO @seg1
                                                       , @seg2
                                                       , @seg3
                                                       , @seg4
                                                       , @seg5
                                                       , @seg6
                                                       , @seg7
                                                       , @seg8
                                                       , @seg9
                                                       , @seg10
                                                       , @seg11
                                                       , @seg12
                                                       , @seg13



                                                    WHILE @@fetch_status = 0
                                                        BEGIN

                                                            EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg3, @e_sep, @se_sep, @seg_term, @seg3 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg4, @e_sep, @se_sep, @seg_term, @seg4 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg5, @e_sep, @se_sep, @seg_term, @seg5 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg6, @e_sep, @se_sep, @seg_term, @seg6 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg7, @e_sep, @se_sep, @seg_term, @seg7 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg8, @e_sep, @se_sep, @seg_term, @seg8 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg9, @e_sep, @se_sep, @seg_term, @seg9 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg10, @e_sep, @se_sep, @seg_term, @seg10 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg11, @e_sep, @se_sep, @seg_term, @seg11 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg12, @e_sep, @se_sep, @seg_term, @seg12 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg13, @e_sep, @se_sep, @seg_term, @seg13 OUTPUT



                                                            IF(@seg1 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                                                            IF(@seg2 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2
                                                            IF(@seg3 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg3
                                                            IF(@seg4 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg4
                                                            IF(@seg5 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg5
                                                            IF(@seg6 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg6
                                                            IF(@seg7 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg7
                                                            IF(@seg8 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg8
                                                            IF(@seg9 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg9
                                                            IF(@seg10 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg10
                                                            IF(@seg11 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg11
                                                            IF(@seg12 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg12
                                                            IF(@seg13 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg13



                                                            SELECT  @seg1  = NULL
                                                                  , @seg2  = NULL
                                                                  , @seg3  = NULL
                                                                  , @seg4  = NULL
                                                                  , @seg5  = NULL
                                                                  , @seg6  = NULL
                                                                  , @seg7  = NULL
                                                                  , @seg8  = NULL
                                                                  , @seg9  = NULL
                                                                  , @seg10 = NULL
                                                                  , @seg11 = NULL
                                                                  , @seg12 = NULL
                                                                  , @seg13 = NULL
                                                                  , @seg14 = NULL
                                                                  , @seg15 = NULL
                                                                  , @seg16 = NULL
                                                                  , @seg17 = NULL
                                                                  , @seg18 = NULL
                                                                  , @seg19 = NULL
                                                                  , @seg20 = NULL
                                                                  , @seg21 = NULL
                                                                  , @seg22 = NULL
                                                                  , @seg23 = NULL
                                                                  , @seg24 = NULL
                                                                  , @seg25 = NULL
                                                                  , @seg26 = NULL
                                                                  , @seg27 = NULL
                                                                  , @seg28 = NULL
                                                                  , @seg29 = NULL
                                                                  , @seg30 = NULL
                                                                  , @seg31 = NULL
                                                                  , @seg32 = NULL
                                                                  , @seg33 = NULL
                                                                  , @seg34 = NULL
                                                                  , @seg35 = NULL
                                                                  , @seg36 = NULL
                                                                  , @seg37 = NULL
                                                                  , @seg38 = NULL
                                                                  , @seg39 = NULL
                                                                  , @seg40 = NULL
                                                                  , @seg41 = NULL
																  , @seg42 = NULL


                                                            FETCH cur_OtherInsured
                                                            INTO @seg1
                                                               , @seg2
                                                               , @seg3
                                                               , @seg4
                                                               , @seg5
                                                               , @seg6
                                                               , @seg7
                                                               , @seg8
                                                               , @seg9
                                                               , @seg10
                                                               , @seg11
                                                               , @seg12
                                                               , @seg13



                                                        END -- Other Insured Loop

                                                    CLOSE cur_OtherInsured



                                                    DEALLOCATE cur_OtherInsured



                                                    -- Loop to get Service
                                                    SELECT  @Bookmark = 'Loop to get Service'
                                                    DECLARE cur_Service CURSOR
                                                        FOR
                                                        SELECT  UniqueId
                                                              , SV2Segment
                                                              , ServiceDateDTPSegment
                                                              , ReferralDateDTPSegment
                                                              , LineItemControlRefSegment
                                                              , ProviderAuthorizationRefSegment
                                                              , SupervisorNM1Segment
                                                              , ReferringNM1Segment
                                                              , PayerNM1Segment
                                                              , ApprovedAmountSegment
                                                          FROM  #837Services
                                                          WHERE
                                                            RefClaimId = @ClaimLoopId



                                                    OPEN cur_Service



                                                    FETCH cur_Service
                                                    INTO @ServiceLoopId
                                                       , @seg1
                                                       , @seg2
                                                       , @seg3
                                                       , @seg4
                                                       , @seg5
                                                       , @seg6
                                                       , @seg7
                                                       , @seg8
                                                       , @seg9
                                                    --#EH!INFO!ADD!@ServiceLoopId!


                                                    WHILE @@fetch_status = 0
                                                        BEGIN

                                                            SELECT  @ServiceCount = @ServiceCount + 1



                                                            -- LX segment
                                                            SELECT  @seg12 = 'LX' + @e_sep + CONVERT(VARCHAR, @ServiceCount) + @seg_term



                                                            EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg3, @e_sep, @se_sep, @seg_term, @seg3 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg4, @e_sep, @se_sep, @seg_term, @seg4 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg5, @e_sep, @se_sep, @seg_term, @seg5 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg6, @e_sep, @se_sep, @seg_term, @seg6 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg7, @e_sep, @se_sep, @seg_term, @seg7 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg8, @e_sep, @se_sep, @seg_term, @seg8 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg9, @e_sep, @se_sep, @seg_term, @seg9 OUTPUT
                                                            EXEC ssp_PM837StringFilter @seg12, @e_sep, @se_sep, @seg_term, @seg12 OUTPUT



                                                            IF(@seg12 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg12
                                                            IF(@seg1 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                                                            IF(@seg2 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2
                                                            IF(@seg3 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg3
                                                            IF(@seg4 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg4
                                                            IF(@seg5 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg5
                                                            IF(@seg6 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg6
                                                            IF(@seg7 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg7
                                                            IF(@seg8 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg8
                                                            IF(@seg9 IS NOT NULL)
                                                                UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg9



                                                            --select @ServiceLoopId= null,@seg1 = null, @seg2 = null, @seg3 = null, @seg4 = null, @seg5 = null, @seg6 = null, 
                                                            --@seg7 = null, @seg8 = null, @seg9 = null, @seg10 = null, @seg11 = null, @seg12 = null ,
                                                            --@seg13 = null, @seg14 = null, @seg15 = null, @seg16 = null, @seg17 = null, @seg18 = null,
                                                            --@seg19 = null, @seg20 = null, @seg21 = null, @seg22 = null



                                                            --NEW** Start 
                                                            -- Loop to get #837DrugIdentification
                                                            SELECT  @Bookmark = 'Loop to get #837DrugIdentification'
                                                            DECLARE cur_DrugIdentification CURSOR
                                                                FOR
                                                                SELECT  LINSegment
                                                                      , CTPSegment
                                                                  FROM  #837DrugIdentification
                                                                  WHERE
                                                                    RefServiceId = @ServiceLoopId



                                                            OPEN cur_DrugIdentification



                                                            FETCH cur_DrugIdentification
                                                            INTO @seg1
                                                               , @seg2



                                                            WHILE @@fetch_status = 0
                                                                BEGIN

                                                                    EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                                                                    EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT



                                                                    IF(@seg1 IS NOT NULL)
                                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                                                                    IF(@seg2 IS NOT NULL)
                                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2



                                                                    SELECT  @seg1 = NULL, @seg2 = NULL


                                                                    --New**
                                                                    FETCH cur_DrugIdentification
                                                                    INTO @seg1
                                                                       , @seg2



                                                                END -- Other DrugIdentification Loop

                                                            CLOSE cur_DrugIdentification



                                                            DEALLOCATE cur_DrugIdentification



                                                            SELECT  @seg1 = NULL, @seg2 = NULL



                                                            --NEW** end

                                                            -- Loop to get Other Insured Adjustments
                                                            DECLARE cur_OtherInsured CURSOR
                                                                FOR
                                                                SELECT  SVDSegment
                                                                      , CAS1Segment
                                                                      , CAS2Segment
                                                                      , CAS3Segment
                                                                      , ServiceAdjudicationDTPSegment
                                                                  FROM  #837OtherInsureds
                                                                  WHERE
                                                                    RefClaimId = @ClaimLoopId



                                                            OPEN cur_OtherInsured



                                                            FETCH cur_OtherInsured
                                                            INTO @seg1
                                                               , @seg2
                                                               , @seg3
                                                               , @seg4
                                                               , @seg5



                                                            WHILE @@fetch_status = 0
                                                                BEGIN

                                                                    EXEC ssp_PM837StringFilter @seg1, @e_sep, @se_sep, @seg_term, @seg1 OUTPUT
                                                                    EXEC ssp_PM837StringFilter @seg2, @e_sep, @se_sep, @seg_term, @seg2 OUTPUT
                                                                    EXEC ssp_PM837StringFilter @seg3, @e_sep, @se_sep, @seg_term, @seg3 OUTPUT
                                                                    EXEC ssp_PM837StringFilter @seg4, @e_sep, @se_sep, @seg_term, @seg4 OUTPUT
                                                                    EXEC ssp_PM837StringFilter @seg5, @e_sep, @se_sep, @seg_term, @seg5 OUTPUT



                                                                    IF(@seg1 IS NOT NULL)
                                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg1
                                                                    IF(@seg2 IS NOT NULL)
                                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg2
                                                                    IF(@seg3 IS NOT NULL)
                                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg3
                                                                    IF(@seg4 IS NOT NULL)
                                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg4
                                                                    IF(@seg5 IS NOT NULL)
                                                                        UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @seg5



                                                                    SELECT  @seg1  = NULL
                                                                          , @seg2  = NULL
                                                                          , @seg3  = NULL
                                                                          , @seg4  = NULL
                                                                          , @seg5  = NULL
                                                                          , @seg6  = NULL
                                                                          , @seg7  = NULL
                                                                          , @seg8  = NULL
                                                                          , @seg9  = NULL
                                                                          , @seg10 = NULL
                                                                          , @seg11 = NULL
                                                                          , @seg12 = NULL
                                                                          , @seg13 = NULL
                                                                          , @seg14 = NULL
                                                                          , @seg15 = NULL
                                                                          , @seg16 = NULL
                                                                          , @seg17 = NULL
                                                                          , @seg18 = NULL
                                                                          , @seg19 = NULL
                                                                          , @seg20 = NULL
                                                                          , @seg21 = NULL
                                                                          , @seg22 = NULL



                                                                    FETCH cur_OtherInsured
                                                                    INTO @seg1
                                                                       , @seg2
                                                                       , @seg3
                                                                       , @seg4
                                                                       , @seg5



                                                                END -- Other Insured Adjustment Loop

                                                            CLOSE cur_OtherInsured



                                                            DEALLOCATE cur_OtherInsured



                                                            SELECT  @seg1  = NULL
                                                                  , @seg2  = NULL
                                                                  , @seg3  = NULL
                                                                  , @seg4  = NULL
                                                                  , @seg5  = NULL
                                                                  , @seg6  = NULL
                                                                  , @seg7  = NULL
                                                                  , @seg8  = NULL
                                                                  , @seg9  = NULL
                                                                  , @seg10 = NULL
                                                                  , @seg11 = NULL
                                                                  , @seg12 = NULL
                                                                  , @seg13 = NULL
                                                                  , @seg14 = NULL
                                                                  , @seg15 = NULL
                                                                  , @seg16 = NULL
                                                                  , @seg17 = NULL
                                                                  , @seg18 = NULL
                                                                  , @seg19 = NULL
                                                                  , @seg20 = NULL
                                                                  , @seg21 = NULL
                                                                  , @seg22 = NULL



                                                            FETCH cur_Service
                                                            INTO @ServiceLoopId
                                                               , @seg1
                                                               , @seg2
                                                               , @seg3
                                                               , @seg4
                                                               , @seg5
                                                               , @seg6
                                                               , @seg7
                                                               , @seg8
                                                               , @seg9



                                                        END -- Service Loop

                                                    CLOSE cur_Service



                                                    DEALLOCATE cur_Service



                                                    SELECT  @ServiceLoopId = NULL
                                                          , @seg1          = NULL
                                                          , @seg2          = NULL
                                                          , @seg3          = NULL
                                                          , @seg4          = NULL
                                                          , @seg5          = NULL
                                                          , @seg6          = NULL
                                                          , @seg7          = NULL
                                                          , @seg8          = NULL
                                                          , @seg9          = NULL
                                                          , @seg10         = NULL
                                                          , @seg11         = NULL
                                                          , @seg12         = NULL
                                                          , @seg13         = NULL
                                                          , @seg14         = NULL
                                                          , @seg15         = NULL
                                                          , @seg16         = NULL
                                                          , @seg17         = NULL
                                                          , @seg18         = NULL
                                                          , @seg19         = NULL
                                                          , @seg20         = NULL
                                                          , @seg21         = NULL
                                                          , @seg22         = NULL



                                                    FETCH cur_Claim
                                                    INTO @ClaimLoopId
                                                       , @seg1
                                                       , @seg2
                                                       , @seg3
                                                       , @seg4
                                                       , @seg5
                                                       , @seg6
                                                       , @seg7
                                                       , @seg8
                                                       , @seg9
                                                       , @seg10
                                                       , @seg11
                                                       , @seg12
                                                       , @seg13
                                                       , @seg14
                                                       , @seg15
                                                       , @seg16
                                                       , @seg17
                                                       , @seg18
                                                       , @seg19
                                                       , @seg20
                                                       , @seg21
                                                       , @seg22
                                                       , @seg23
                                                       , @seg24
                                                       , @seg25
                                                       , @seg26
                                                       , @seg27
                                                       , @seg28
                                                       , @seg29
                                                       , @seg30
                                                       , @seg31
                                                       , @seg32
                                                       , @seg33
                                                       , @seg34
                                                       , @seg35
                                                       , @seg36
                                                       , @seg37
                                                       , @seg38
                                                       , @seg39
                                                       , @seg40
                                                       , @seg41
													   , @seg42


                                                END -- Claim Loop

                                            CLOSE cur_Claim



                                            DEALLOCATE cur_Claim



                                            SELECT  @seg1  = NULL
                                                  , @seg2  = NULL
                                                  , @seg3  = NULL
                                                  , @seg4  = NULL
                                                  , @seg5  = NULL
                                                  , @seg6  = NULL
                                                  , @seg7  = NULL
                                                  , @seg8  = NULL
                                                  , @seg9  = NULL
                                                  , @seg10 = NULL
                                                  , @seg11 = NULL
                                                  , @seg12 = NULL
                                                  , @seg13 = NULL
                                                  , @seg14 = NULL
                                                  , @seg15 = NULL
                                                  , @seg16 = NULL
                                                  , @seg17 = NULL
                                                  , @seg18 = NULL
                                                  , @seg19 = NULL
                                                  , @seg20 = NULL
                                                  , @seg21 = NULL
                                                  , @seg22 = NULL
                                                  , @seg23 = NULL



                                            FETCH cur_Subscriber
                                            INTO @SubscriberLoopId
                                               , @seg1
                                               , @seg2
                                               , @seg3
                                               , @seg4
                                               , @seg5
                                               , @seg6
                                               , @seg7
                                               , @seg8
                                               , @seg9
                                               , @seg10
                                               , @seg11
                                               , @seg12
                                               , @seg13
                                               , @seg14
                                               , @seg15
                                               , @seg16



                                        END -- Subscriber Loop

                                    CLOSE cur_Subscriber



                                    DEALLOCATE cur_Subscriber



                                    SELECT  @seg1  = NULL
                                          , @seg2  = NULL
                                          , @seg3  = NULL
                                          , @seg4  = NULL
                                          , @seg5  = NULL
                                          , @seg6  = NULL
                                          , @seg7  = NULL
                                          , @seg8  = NULL
                                          , @seg9  = NULL
                                          , @seg10 = NULL
                                          , @seg11 = NULL
                                          , @seg12 = NULL
                                          , @seg13 = NULL
                                          , @seg14 = NULL
                                          , @seg15 = NULL
                                          , @seg16 = NULL
                                          , @seg17 = NULL
                                          , @seg18 = NULL
                                          , @seg19 = NULL
                                          , @seg20 = NULL
                                          , @seg21 = NULL
                                          , @seg22 = NULL



                                    FETCH cur_Provider
                                    INTO @ProviderLoopId
                                       , @seg1
                                       , @seg2
                                       , @seg3
                                       , @seg4
                                       , @seg5
                                       , @seg6
                                       , @seg7
                                       , @seg8
                                       , @seg9
                                       , @seg10
                                       , @seg11
                                       , @seg13
                                       , @seg14
                                       , @seg15



                                END -- Billing Provider Loop

                            CLOSE cur_Provider



                            DEALLOCATE cur_Provider



                            -- Transaction Trailer
                            UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @TransactionTrailer



                            -- In case of last file populate functional and interchange trailer
                            IF NOT EXISTS (SELECT   * FROM  #ClaimLines)
                                BEGIN

                                    SELECT  @FunctionalTrailer  = FunctionalTrailerSegment
                                          , @InterchangeTrailer = InterchangeTrailerSegment
                                      FROM  #HIPAAHeaderTrailer



                                    -- Functional Group Trailer
                                    UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @FunctionalTrailer



                                    -- Interchange Group Trailer
                                    UPDATETEXT #FinalData.DataText @TextPointer NULL NULL @InterchangeTrailer

                                END

                        END
                    -- File Creation

                    -- Update the claim file data, status and processed date
                    UPDATE  a
                      SET   ElectronicClaimsData = b.DataText
                          , Status = 4523
                          , ProcessedDate = CONVERT(VARCHAR, GETDATE(), 101)
                          , SegmentTerminater = @seg_term
                          , BatchProcessProgress = 100
                      FROM  ClaimBatches a
                          CROSS JOIN #FinalData b
                      WHERE
                        a.ClaimBatchId = @ParmClaimBatchId

                END
            ----------------------------------------------------------------------------------------------------------
            -- UB04
            IF @Electronic = 'N'
                BEGIN

                    -- Update Page Number = 2 when for a Claim number of lines > 22

                    CREATE TABLE #ClaimPages (
                        XClaimId    INT NOT NULL
                      , ClaimLineId INT NOT NULL
                      , PageNumber  INT NOT NULL
                      , SortOrder   INT NULL
                      , ClientId    INT NULL
                    )

                    INSERT INTO #ClaimPages(XClaimId
                                          , ClaimLineId
                                          , PageNumber
                                          , ClientId)
                      SELECT    XClaimId
                              , ClaimLineId
                              , 1
                              , ClientId
                      FROM  #ClaimLines
                      ORDER BY
                          XClaimId
                        , ClaimLineId;
                    WITH CTE
                      AS (SELECT    *
                                  , (ROW_NUMBER() OVER (PARTITION BY XClaimId
                                                        ORDER BY
                                                            ClaimLineId) + 21) / 22 AS PageNo
                            FROM    #ClaimPages)
                    UPDATE  CTE SET PageNumber = PageNo



                    -- Convert Rows to Columns 
                    -- Set Sort Order Field in #ClaimPages

                    CREATE TABLE #ClaimPages2 (
                        XClaimId             INT NOT NULL
                      , ClaimLineId          INT NOT NULL
                      , PageNumber           INT NOT NULL
                      , SortOrder            INT NULL
                      , ClientId             INT NULL
                      , ClaimLineItemGroupId INT NULL
                    )

                    DECLARE @I INT = 0
                    SELECT  @I = MIN(XClaimId)
                      FROM  #ClaimPages
                    DECLARE @J INT = 0
                    WHILE @I <> 0
                        BEGIN

                            INSERT INTO #ClaimPages2(XClaimId
                                                   , ClaimLineId
                                                   , PageNumber
                                                   , ClientId
                                                   , SortOrder)
                              SELECT    XClaimId
                                      , ClaimLineId
                                      , PageNumber
                                      , ClientId
                                      , ROW_NUMBER() OVER (PARTITION BY XClaimId
                                                                      , PageNumber
                                                           ORDER BY
                                                               XClaimId
                                                             , PageNumber)
                              FROM  #ClaimPages a
                              WHERE
                                    a.XClaimId = @I
                            SELECT  @J = @I
                            SELECT  @I = 0
                            SELECT  @I = MIN(XClaimId)
                              FROM  #ClaimPages
                              WHERE
                                XClaimId > @J

                        END

                    -- Pivot
                    CREATE TABLE #ClaimPivot (
                        XClaimId                 INT           NULL
                      , PageNumber               INT           NULL
                      , ClaimLineId1             INT           NULL
                      , ClaimLineId2             INT           NULL
                      , ClaimLineId3             INT           NULL
                      , ClaimLineId4             INT           NULL
                      , ClaimLineId5             INT           NULL
                      , ClaimLineId6             INT           NULL
                      , ClaimLineId7             INT           NULL
                      , ClaimLineId8             INT           NULL
                      , ClaimLineId9             INT           NULL
                      , ClaimLineId10            INT           NULL
                      , ClaimLineId11            INT           NULL
                      , ClaimLineId12            INT           NULL
                      , ClaimLineId13            INT           NULL
                      , ClaimLineId14            INT           NULL
                      , ClaimLineId15            INT           NULL
                      , ClaimLineId16            INT           NULL
                      , ClaimLineId17            INT           NULL
                      , ClaimLineId18            INT           NULL
                      , ClaimLineId19            INT           NULL
                      , ClaimLineId20            INT           NULL
                      , ClaimLineId21            INT           NULL
                      , ClaimLineId22            INT           NULL
                      , HCPCSCode1               VARCHAR(15)   NULL
                      , HCPCSCode2               VARCHAR(15)   NULL
                      , HCPCSCode3               VARCHAR(15)   NULL
                      , HCPCSCode4               VARCHAR(15)   NULL
                      , HCPCSCode5               VARCHAR(15)   NULL
                      , HCPCSCode6               VARCHAR(15)   NULL
                      , HCPCSCode7               VARCHAR(15)   NULL
                      , HCPCSCode8               VARCHAR(15)   NULL
                      , HCPCSCode9               VARCHAR(15)   NULL
                      , HCPCSCode10              VARCHAR(15)   NULL
                      , HCPCSCode11              VARCHAR(15)   NULL
                      , HCPCSCode12              VARCHAR(15)   NULL
                      , HCPCSCode13              VARCHAR(15)   NULL
                      , HCPCSCode14              VARCHAR(15)   NULL
                      , HCPCSCode15              VARCHAR(15)   NULL
                      , HCPCSCode16              VARCHAR(15)   NULL
                      , HCPCSCode17              VARCHAR(15)   NULL
                      , HCPCSCode18              VARCHAR(15)   NULL
                      , HCPCSCode19              VARCHAR(15)   NULL
                      , HCPCSCode20              VARCHAR(15)   NULL
                      , HCPCSCode21              VARCHAR(15)   NULL
                      , HCPCSCode22              VARCHAR(15)   NULL
                      , RevenueCode1             VARCHAR(15)   NULL
                      , RevenueCode2             VARCHAR(15)   NULL
                      , RevenueCode3             VARCHAR(15)   NULL
                      , RevenueCode4             VARCHAR(15)   NULL
                      , RevenueCode5             VARCHAR(15)   NULL
                      , RevenueCode6             VARCHAR(15)   NULL
                      , RevenueCode7             VARCHAR(15)   NULL
                      , RevenueCode8             VARCHAR(15)   NULL
                      , RevenueCode9             VARCHAR(15)   NULL
                      , RevenueCode10            VARCHAR(15)   NULL
                      , RevenueCode11            VARCHAR(15)   NULL
                      , RevenueCode12            VARCHAR(15)   NULL
                      , RevenueCode13            VARCHAR(15)   NULL
                      , RevenueCode14            VARCHAR(15)   NULL
                      , RevenueCode15            VARCHAR(15)   NULL
                      , RevenueCode16            VARCHAR(15)   NULL
                      , RevenueCode17            VARCHAR(15)   NULL
                      , RevenueCode18            VARCHAR(15)   NULL
                      , RevenueCode19            VARCHAR(15)   NULL
                      , RevenueCode20            VARCHAR(15)   NULL
                      , RevenueCode21            VARCHAR(15)   NULL
                      , RevenueCode22            VARCHAR(15)   NULL
                      , RevenueCodeDescription1  VARCHAR(100)  NULL
                      , RevenueCodeDescription2  VARCHAR(100)  NULL
                      , RevenueCodeDescription3  VARCHAR(100)  NULL
                      , RevenueCodeDescription4  VARCHAR(100)  NULL
                      , RevenueCodeDescription5  VARCHAR(100)  NULL
                      , RevenueCodeDescription6  VARCHAR(100)  NULL
                      , RevenueCodeDescription7  VARCHAR(100)  NULL
                      , RevenueCodeDescription8  VARCHAR(100)  NULL
                      , RevenueCodeDescription9  VARCHAR(100)  NULL
                      , RevenueCodeDescription10 VARCHAR(100)  NULL
                      , RevenueCodeDescription11 VARCHAR(100)  NULL
                      , RevenueCodeDescription12 VARCHAR(100)  NULL
                      , RevenueCodeDescription13 VARCHAR(100)  NULL
                      , RevenueCodeDescription14 VARCHAR(100)  NULL
                      , RevenueCodeDescription15 VARCHAR(100)  NULL
                      , RevenueCodeDescription16 VARCHAR(100)  NULL
                      , RevenueCodeDescription17 VARCHAR(100)  NULL
                      , RevenueCodeDescription18 VARCHAR(100)  NULL
                      , RevenueCodeDescription19 VARCHAR(100)  NULL
                      , RevenueCodeDescription20 VARCHAR(100)  NULL
                      , RevenueCodeDescription21 VARCHAR(100)  NULL
                      , RevenueCodeDescription22 VARCHAR(100)  NULL
                      , DateofService1           DATETIME      NULL
                      , DateofService2           DATETIME      NULL
                      , DateofService3           DATETIME      NULL
                      , DateofService4           DATETIME      NULL
                      , DateofService5           DATETIME      NULL
                      , DateofService6           DATETIME      NULL
                      , DateofService7           DATETIME      NULL
                      , DateofService8           DATETIME      NULL
                      , DateofService9           DATETIME      NULL
                      , DateofService10          DATETIME      NULL
                      , DateofService11          DATETIME      NULL
                      , DateofService12          DATETIME      NULL
                      , DateofService13          DATETIME      NULL
                      , DateofService14          DATETIME      NULL
                      , DateofService15          DATETIME      NULL
                      , DateofService16          DATETIME      NULL
                      , DateofService17          DATETIME      NULL
                      , DateofService18          DATETIME      NULL
                      , DateofService19          DATETIME      NULL
                      , DateofService20          DATETIME      NULL
                      , DateofService21          DATETIME      NULL
                      , DateofService22          DATETIME      NULL
                      , TotalServiceUnits1       DECIMAL(7, 2) NULL
                      , TotalServiceUnits2       DECIMAL(7, 2) NULL
                      , TotalServiceUnits3       DECIMAL(7, 2) NULL
                      , TotalServiceUnits4       DECIMAL(7, 2) NULL
                      , TotalServiceUnits5       DECIMAL(7, 2) NULL
                      , TotalServiceUnits6       DECIMAL(7, 2) NULL
                      , TotalServiceUnits7       DECIMAL(7, 2) NULL
                      , TotalServiceUnits8       DECIMAL(7, 2) NULL
                      , TotalServiceUnits9       DECIMAL(7, 2) NULL
                      , TotalServiceUnits10      DECIMAL(7, 2) NULL
                      , TotalServiceUnits11      DECIMAL(7, 2) NULL
                      , TotalServiceUnits12      DECIMAL(7, 2) NULL
                      , TotalServiceUnits13      DECIMAL(7, 2) NULL
                      , TotalServiceUnits14      DECIMAL(7, 2) NULL
                      , TotalServiceUnits15      DECIMAL(7, 2) NULL
                      , TotalServiceUnits16      DECIMAL(7, 2) NULL
                      , TotalServiceUnits17      DECIMAL(7, 2) NULL
                      , TotalServiceUnits18      DECIMAL(7, 2) NULL
                      , TotalServiceUnits19      DECIMAL(7, 2) NULL
                      , TotalServiceUnits20      DECIMAL(7, 2) NULL
                      , TotalServiceUnits21      DECIMAL(7, 2) NULL
                      , TotalServiceUnits22      DECIMAL(7, 2) NULL
                      , TotalCharges1            MONEY         DEFAULT 0.00
                      , TotalCharges2            MONEY         DEFAULT 0.00
                      , TotalCharges3            MONEY         DEFAULT 0.00
                      , TotalCharges4            MONEY         DEFAULT 0.00
                      , TotalCharges5            MONEY         DEFAULT 0.00
                      , TotalCharges6            MONEY         DEFAULT 0.00
                      , TotalCharges7            MONEY         DEFAULT 0.00
                      , TotalCharges8            MONEY         DEFAULT 0.00
                      , TotalCharges9            MONEY         DEFAULT 0.00
                      , TotalCharges10           MONEY         DEFAULT 0.00
                      , TotalCharges11           MONEY         DEFAULT 0.00
                      , TotalCharges12           MONEY         DEFAULT 0.00
                      , TotalCharges13           MONEY         DEFAULT 0.00
                      , TotalCharges14           MONEY         DEFAULT 0.00
                      , TotalCharges15           MONEY         DEFAULT 0.00
                      , TotalCharges16           MONEY         DEFAULT 0.00
                      , TotalCharges17           MONEY         DEFAULT 0.00
                      , TotalCharges18           MONEY         DEFAULT 0.00
                      , TotalCharges19           MONEY         DEFAULT 0.00
                      , TotalCharges20           MONEY         DEFAULT 0.00
                      , TotalCharges21           MONEY         DEFAULT 0.00
                      , TotalCharges22           MONEY         DEFAULT 0.00
                    )

                    INSERT INTO #ClaimPivot(XClaimId
                                          , PageNumber
                                          , ClaimLineId1
                                          , ClaimLineId2
                                          , ClaimLineId3
                                          , ClaimLineId4
                                          , ClaimLineId5
                                          , ClaimLineId6
                                          , ClaimLineId7
                                          , ClaimLineId8
                                          , ClaimLineId9
                                          , ClaimLineId10
                                          , ClaimLineId11
                                          , ClaimLineId12
                                          , ClaimLineId13
                                          , ClaimLineId14
                                          , ClaimLineId15
                                          , ClaimLineId16
                                          , ClaimLineId17
                                          , ClaimLineId18
                                          , ClaimLineId19
                                          , ClaimLineId20
                                          , ClaimLineId21
                                          , ClaimLineId22)
                      SELECT    XClaimId
                              , PageNumber
                              , [1]  AS ClaimLineId1
                              , [2]  AS ClaimLineId2
                              , [3]  AS ClaimLineId3
                              , [4]  AS ClaimLineId4
                              , [5]  AS ClaimLineId5
                              , [6]  AS ClaimLineId6
                              , [7]  AS ClaimLineId7
                              , [8]  AS ClaimLineId8
                              , [9]  AS ClaimLineId9
                              , [10] AS ClaimLineId10
                              , [11] AS ClaimLineId11
                              , [12] AS ClaimLineId12
                              , [13] AS ClaimLineId13
                              , [14] AS ClaimLineId14
                              , [15] AS ClaimLineId15
                              , [16] AS ClaimLineId16
                              , [17] AS ClaimLineId17
                              , [18] AS ClaimLineId18
                              , [19] AS ClaimLineId19
                              , [20] AS ClaimLineId20
                              , [21] AS ClaimLineId21
                              , [22] AS ClaimLineId22
                      FROM  #ClaimPages2
                          PIVOT(MAX(ClaimLineId)
                                FOR SortOrder IN([1]
                                               , [2]
                                               , [3]
                                               , [4]
                                               , [5]
                                               , [6]
                                               , [7]
                                               , [8]
                                               , [9]
                                               , [10]
                                               , [11]
                                               , [12]
                                               , [13]
                                               , [14]
                                               , [15]
                                               , [16]
                                               , [17]
                                               , [18]
                                               , [19]
                                               , [20]
                                               , [21]
                                               , [22]))pvt


                    UPDATE  a
                      SET   a.HCPCSCode1 = b.BillingCode
                          , a.RevenueCode1 = b.RevenueCode
                          , a.RevenueCodeDescription1 = b.RevenueCodeDescription
                          , a.DateofService1 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits1 = b.ClaimUnits
                          , a.TotalCharges1 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId1 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode2 = b.BillingCode
                          , a.RevenueCode2 = b.RevenueCode
                          , a.RevenueCodeDescription2 = b.RevenueCodeDescription
                          , a.DateofService2 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits2 = b.ClaimUnits
                          , a.TotalCharges2 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId2 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode3 = b.BillingCode
                          , a.RevenueCode3 = b.RevenueCode
                          , a.RevenueCodeDescription3 = b.RevenueCodeDescription
                          , a.DateofService3 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits3 = b.ClaimUnits
                          , a.TotalCharges3 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId3 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode4 = b.BillingCode
                          , a.RevenueCode4 = b.RevenueCode
                          , a.RevenueCodeDescription4 = b.RevenueCodeDescription
                          , a.DateofService4 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits4 = b.ClaimUnits
                          , a.TotalCharges4 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId4 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode5 = b.BillingCode
                          , a.RevenueCode5 = b.RevenueCode
                          , a.RevenueCodeDescription5 = b.RevenueCodeDescription
                          , a.DateofService5 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits5 = b.ClaimUnits
                          , a.TotalCharges5 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId5 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode6 = b.BillingCode
                          , a.RevenueCode6 = b.RevenueCode
                          , a.RevenueCodeDescription6 = b.RevenueCodeDescription
                          , a.DateofService6 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits6 = b.ClaimUnits
                          , a.TotalCharges6 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId6 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode7 = b.BillingCode
                          , a.RevenueCode7 = b.RevenueCode
                          , a.RevenueCodeDescription7 = b.RevenueCodeDescription
                          , a.DateofService7 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits7 = b.ClaimUnits
                          , a.TotalCharges7 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId7 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode8 = b.BillingCode
                          , a.RevenueCode8 = b.RevenueCode
                          , a.RevenueCodeDescription8 = b.RevenueCodeDescription
                          , a.DateofService8 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits8 = b.ClaimUnits
                          , a.TotalCharges8 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId8 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode9 = b.BillingCode
                          , a.RevenueCode9 = b.RevenueCode
                          , a.RevenueCodeDescription9 = b.RevenueCodeDescription
                          , a.DateofService9 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits9 = b.ClaimUnits
                          , a.TotalCharges9 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId9 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode10 = b.BillingCode
                          , a.RevenueCode10 = b.RevenueCode
                          , a.RevenueCodeDescription10 = b.RevenueCodeDescription
                          , a.DateofService10 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits10 = b.ClaimUnits
                          , a.TotalCharges10 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId10 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode11 = b.BillingCode
                          , a.RevenueCode11 = b.RevenueCode
                          , a.RevenueCodeDescription11 = b.RevenueCodeDescription
                          , a.DateofService11 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits11 = b.ClaimUnits
                          , a.TotalCharges11 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId11 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode12 = b.BillingCode
                          , a.RevenueCode12 = b.RevenueCode
                          , a.RevenueCodeDescription12 = b.RevenueCodeDescription
                          , a.DateofService12 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits12 = b.ClaimUnits
                          , a.TotalCharges12 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId12 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode13 = b.BillingCode
                          , a.RevenueCode13 = b.RevenueCode
                          , a.RevenueCodeDescription13 = b.RevenueCodeDescription
                          , a.DateofService13 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits13 = b.ClaimUnits
                          , a.TotalCharges13 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId13 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode14 = b.BillingCode
                          , a.RevenueCode14 = b.RevenueCode
                          , a.RevenueCodeDescription14 = b.RevenueCodeDescription
                          , a.DateofService14 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits14 = b.ClaimUnits
                          , a.TotalCharges14 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId14 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode15 = b.BillingCode
                          , a.RevenueCode15 = b.RevenueCode
                          , a.RevenueCodeDescription15 = b.RevenueCodeDescription
                          , a.DateofService15 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits15 = b.ClaimUnits
                          , a.TotalCharges15 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId15 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode16 = b.BillingCode
                          , a.RevenueCode16 = b.RevenueCode
                          , a.RevenueCodeDescription16 = b.RevenueCodeDescription
                          , a.DateofService16 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits16 = b.ClaimUnits
                          , a.TotalCharges16 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId16 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode17 = b.BillingCode
                          , a.RevenueCode17 = b.RevenueCode
                          , a.RevenueCodeDescription17 = b.RevenueCodeDescription
                          , a.DateofService17 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits17 = b.ClaimUnits
                          , a.TotalCharges17 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId17 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode18 = b.BillingCode
                          , a.RevenueCode18 = b.RevenueCode
                          , a.RevenueCodeDescription18 = b.RevenueCodeDescription
                          , a.DateofService18 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits18 = b.ClaimUnits
                          , a.TotalCharges18 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId18 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode19 = b.BillingCode
                          , a.RevenueCode19 = b.RevenueCode
                          , a.RevenueCodeDescription19 = b.RevenueCodeDescription
                          , a.DateofService19 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits19 = b.ClaimUnits
                          , a.TotalCharges19 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId19 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode20 = b.BillingCode
                          , a.RevenueCode20 = b.RevenueCode
                          , a.RevenueCodeDescription20 = b.RevenueCodeDescription
                          , a.DateofService20 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits20 = b.ClaimUnits
                          , a.TotalCharges20 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId20 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode21 = b.BillingCode
                          , a.RevenueCode21 = b.RevenueCode
                          , a.RevenueCodeDescription21 = b.RevenueCodeDescription
                          , a.DateofService21 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits21 = b.ClaimUnits
                          , a.TotalCharges21 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId21 = b.ClaimLineId

                    UPDATE  a
                      SET   a.HCPCSCode22 = b.BillingCode
                          , a.RevenueCode22 = b.RevenueCode
                          , a.RevenueCodeDescription22 = b.RevenueCodeDescription
                          , a.DateofService22 = CAST(b.DateOfService AS DATE)
                          , a.TotalServiceUnits22 = b.ClaimUnits
                          , a.TotalCharges22 = b.ChargeAmount
                      FROM  #ClaimPivot a
                          JOIN #ClaimLines b ON a.ClaimLineId22 = b.ClaimLineId

                    UPDATE  ClaimBatches
                      SET   BatchProcessProgress = 80
                      WHERE
                        ClaimBatchId = @ParmClaimBatchId

                    --SELECT * FROM #ClaimPivot
                    --SELECT * FROM #ClaimLines


                    -- Delete Old Data related to the batch and update tables in the database (ClaimLineItems, ClaimLineItemGroups, ClaimLineItemCharges)
                    SELECT  @Bookmark = 'EXEC ssp_PMClaimsUpdateClaimsTablesInstitutional'
                    EXEC ssp_PMClaimsUpdateClaimsTablesInstitutional @CurrentUser = @ParmCurrentUser
                                                                   , @ClaimFormatId = @ClaimFormatId
                                                                   , @ClaimBatchId = @ParmClaimBatchId

                    -- Insert Final Data into Staging Table #ClaimUB04
                    SELECT  @Bookmark = 'Insert Final Data into Staging Table #ClaimUB04'

                    CREATE TABLE #ClaimUB04 (
                        ClaimUniqueId                     INT         IDENTITY NOT NULL
                      , XClaimId                          INT         NULL
                      , ClaimLineItemGroupId              INT         NULL
                      , PageNumber                        INT         NULL
                      , Field1ProviderName                VARCHAR(25) NULL
                      , FieldProviderAddress              VARCHAR(25) NULL
                      , FieldProviderCityStateZip         VARCHAR(25) NULL
                      , FieldProviderTelephoneFax         VARCHAR(25) NULL
                      , Field2PayToName                   VARCHAR(25) NULL
                      , Field2PayToAddress                VARCHAR(25) NULL
                      , Field2PayToCityState              VARCHAR(25) NULL
                      , Field3aPatientControlNumber       VARCHAR(20) NULL
                      , Field3bMedicalRecordNumber        VARCHAR(24) NULL
                      , Field4TypeOfBill                  VARCHAR(4)  NULL
                      , Field5TaxIdType                   VARCHAR(5)  NULL
                      , Field5TaxId                       VARCHAR(10) NULL
                      , Field6StatementFrom               VARCHAR(10) NULL
                      , Field6StatementTo                 VARCHAR(10) NULL
                      , Field7Unlabelled                  VARCHAR(10) NULL
                      , Field8aPatientId                  VARCHAR(19) NULL
                      , Field8bPatientName                VARCHAR(29) NULL
                      , Field9aPatientAddress             VARCHAR(40) NULL
                      , Field9bCity                       VARCHAR(30) NULL
                      , Field9cState                      VARCHAR(2)  NULL
                      , Field9dZip                        VARCHAR(10) NULL
                      , Field9eCountryCode                VARCHAR(3)  NULL
                      , Field10PatientDOB                 VARCHAR(10) NULL
                      , Field11PatientSex                 VARCHAR(2)  NULL
                      , Field12AdmissionDate              VARCHAR(10) NULL
                      , Field13AdmissionHour              VARCHAR(2)  NULL
                      , Field14AdmissionType              VARCHAR(2)  NULL
                      , Field15AdmissionSource            CHAR(1)     NULL
                      , Field16DischargeHour              VARCHAR(2)  NULL
                      , Field17DischargeStatus            VARCHAR(2)  NULL
                      , Field18ConditionCode              VARCHAR(2)  NULL
                      , Field19ConditionCode              VARCHAR(2)  NULL
                      , Field20ConditionCode              VARCHAR(2)  NULL
                      , Field21ConditionCode              VARCHAR(2)  NULL
                      , Field22ConditionCode              VARCHAR(2)  NULL
                      , Field23ConditionCode              VARCHAR(2)  NULL
                      , Field24ConditionCode              VARCHAR(2)  NULL
                      , Field25ConditionCode              VARCHAR(2)  NULL
                      , Field26ConditionCode              VARCHAR(2)  NULL
                      , Field27ConditionCode              VARCHAR(2)  NULL
                      , Field28ConditionCode              VARCHAR(2)  NULL
                      , Field29AccidentState              VARCHAR(2)  NULL
                      , Field30aUnlabelled                VARCHAR(12) NULL
                      , Field30bUnlabelled                VARCHAR(13) NULL
                      , Field31aOccurenceCode             VARCHAR(2)  NULL
                      , Field31aOccurenceDate             VARCHAR(10) NULL
                      , Field31bOccurenceCode             VARCHAR(2)  NULL
                      , Field31bOccurenceDate             VARCHAR(10) NULL
                      , Field32aOccurenceCode             VARCHAR(2)  NULL
                      , Field32aOccurenceDate             VARCHAR(10) NULL
                      , Field32bOccurenceCode             VARCHAR(2)  NULL
                      , Field32bOccurenceDate             VARCHAR(10) NULL
                      , Field33aOccurenceCode             VARCHAR(2)  NULL
                      , Field33aOccurenceDate             VARCHAR(10) NULL
                      , Field33bOccurenceCode             VARCHAR(2)  NULL
                      , Field33bOccurenceDate             VARCHAR(10) NULL
                      , Field34aOccurenceCode             VARCHAR(2)  NULL
                      , Field34aOccurenceDate             VARCHAR(10) NULL
                      , Field34bOccurenceCode             VARCHAR(2)  NULL
                      , Field34bOccurenceDate             VARCHAR(10) NULL
                      , Field35aOccuranceCode             VARCHAR(2)  NULL
                      , Field35aOccuranceFrom             VARCHAR(10) NULL
                      , Field35aOccuranceTo               VARCHAR(10) NULL
                      , Field35bOccuranceCode             VARCHAR(2)  NULL
                      , Field35bOccuranceFrom             VARCHAR(10) NULL
                      , Field35bOccuranceTo               VARCHAR(10) NULL
                      , Field36aOccuranceCode             VARCHAR(2)  NULL
                      , Field36aOccuranceFrom             VARCHAR(10) NULL
                      , Field36aOccuranceTo               VARCHAR(10) NULL
                      , Field36bOccuranceCode             VARCHAR(2)  NULL
                      , Field36bOccuranceFrom             VARCHAR(10) NULL
                      , Field36bOccuranceTo               VARCHAR(10) NULL
                      , Field37aUnlabelled                VARCHAR(10) NULL
                      , Field37bUnlabelled                VARCHAR(10) NULL
                      , Field38ResponsibleAddress1        VARCHAR(40) NULL
                      , Field38ResponsibleAddress2        VARCHAR(40) NULL
                      , Field38ResponsibleAddress3        VARCHAR(40) NULL
                      , Field38ResponsibleAddress4        VARCHAR(40) NULL
                      , Field38ResponsibleAddress5        VARCHAR(40) NULL
                      , Field39aValueCode                 VARCHAR(2)  NULL
                      , Field39aValueAmountWhole          VARCHAR(6)  NULL
                      , Field39aValueDecimal              VARCHAR(2)  NULL
                      , Field39bValueCode                 VARCHAR(2)  NULL
                      , Field39bValueAmountWhole          VARCHAR(6)  NULL
                      , Field39bValueDecimal              VARCHAR(2)  NULL
                      , Field39cValueCode                 VARCHAR(2)  NULL
                      , Field39cValueAmountWhole          VARCHAR(6)  NULL
                      , Field39cValueDecimal              VARCHAR(2)  NULL
                      , Field39dValueCode                 VARCHAR(2)  NULL
                      , Field39dValueAmountWhole          VARCHAR(6)  NULL
                      , Field39dValueDecimal              VARCHAR(2)  NULL
                      , Field40aValueCode                 VARCHAR(2)  NULL
                      , Field40aValueAmountWhole          VARCHAR(6)  NULL
                      , Field40aValueDecimal              VARCHAR(2)  NULL
                      , Field40bValueCode                 VARCHAR(2)  NULL
                      , Field40bValueAmountWhole          VARCHAR(6)  NULL
                      , Field40bValueDecimal              VARCHAR(2)  NULL
                      , Field40cValueCode                 VARCHAR(2)  NULL
                      , Field40cValueAmountWhole          VARCHAR(6)  NULL
                      , Field40cValueDecimal              VARCHAR(2)  NULL
                      , Field40dValueCode                 VARCHAR(2)  NULL
                      , Field40dValueAmountWhole          VARCHAR(6)  NULL
                      , Field40dValueDecimal              VARCHAR(2)  NULL
                      , Field41aValueCode                 VARCHAR(2)  NULL
                      , Field41aValueAmountWhole          VARCHAR(6)  NULL
                      , Field41aValueDecimal              VARCHAR(2)  NULL
                      , Field41bValueCode                 VARCHAR(2)  NULL
                      , Field41bValueAmountWhole          VARCHAR(6)  NULL
                      , Field41bValueDecimal              VARCHAR(2)  NULL
                      , Field41cValueCode                 VARCHAR(2)  NULL
                      , Field41cValueAmountWhole          VARCHAR(6)  NULL
                      , Field41cValueDecimal              VARCHAR(2)  NULL
                      , Field41dValueCode                 VARCHAR(2)  NULL
                      , Field41dValueAmountWhole          VARCHAR(6)  NULL
                      , Field41dValueDecimal              VARCHAR(2)  NULL
                      , Field42RevenueCode1               VARCHAR(4)  NULL
                      , Field43RevenueDescription1        VARCHAR(24) NULL
                      , Field44HCPCSCode1                 VARCHAR(14) NULL
                      , Field45ServiceDate1               VARCHAR(10) NULL
                      , Field46ServiceUnits1              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole1         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal1       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole1    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal1  VARCHAR(2)  NULL
                      , Field49Unlabelled1                VARCHAR(2)  NULL
                      , Field42RevenueCode2               VARCHAR(4)  NULL
                      , Field43RevenueDescription2        VARCHAR(24) NULL
                      , Field44HCPCSCode2                 VARCHAR(14) NULL
                      , Field45ServiceDate2               VARCHAR(10) NULL
                      , Field46ServiceUnits2              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole2         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal2       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole2    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal2  VARCHAR(2)  NULL
                      , Field49Unlabelled2                VARCHAR(2)  NULL
                      , Field42RevenueCode3               VARCHAR(4)  NULL
                      , Field43RevenueDescription3        VARCHAR(24) NULL
                      , Field44HCPCSCode3                 VARCHAR(14) NULL
                      , Field45ServiceDate3               VARCHAR(10) NULL
                      , Field46ServiceUnits3              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole3         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal3       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole3    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal3  VARCHAR(2)  NULL
                      , Field49Unlabelled3                VARCHAR(2)  NULL
                      , Field42RevenueCode4               VARCHAR(4)  NULL
                      , Field43RevenueDescription4        VARCHAR(24) NULL
                      , Field44HCPCSCode4                 VARCHAR(14) NULL
                      , Field45ServiceDate4               VARCHAR(10) NULL
                      , Field46ServiceUnits4              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole4         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal4       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole4    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal4  VARCHAR(2)  NULL
                      , Field49Unlabelled4                VARCHAR(2)  NULL
                      , Field42RevenueCode5               VARCHAR(4)  NULL
                      , Field43RevenueDescription5        VARCHAR(24) NULL
                      , Field44HCPCSCode5                 VARCHAR(14) NULL
                      , Field45ServiceDate5               VARCHAR(10) NULL
                      , Field46ServiceUnits5              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole5         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal5       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole5    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal5  VARCHAR(2)  NULL
                      , Field49Unlabelled5                VARCHAR(2)  NULL
                      , Field42RevenueCode6               VARCHAR(4)  NULL
                      , Field43RevenueDescription6        VARCHAR(24) NULL
                      , Field44HCPCSCode6                 VARCHAR(14) NULL
                      , Field45ServiceDate6               VARCHAR(10) NULL
                      , Field46ServiceUnits6              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole6         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal6       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole6    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal6  VARCHAR(2)  NULL
                      , Field49Unlabelled6                VARCHAR(2)  NULL
                      , Field42RevenueCode7               VARCHAR(4)  NULL
                      , Field43RevenueDescription7        VARCHAR(24) NULL
                      , Field44HCPCSCode7                 VARCHAR(14) NULL
                      , Field45ServiceDate7               VARCHAR(10) NULL
                      , Field46ServiceUnits7              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole7         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal7       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole7    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal7  VARCHAR(2)  NULL
                      , Field49Unlabelled7                VARCHAR(2)  NULL
                      , Field42RevenueCode8               VARCHAR(4)  NULL
                      , Field43RevenueDescription8        VARCHAR(24) NULL
                      , Field44HCPCSCode8                 VARCHAR(14) NULL
                      , Field45ServiceDate8               VARCHAR(10) NULL
                      , Field46ServiceUnits8              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole8         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal8       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole8    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal8  VARCHAR(2)  NULL
                      , Field49Unlabelled8                VARCHAR(2)  NULL
                      , Field42RevenueCode9               VARCHAR(4)  NULL
                      , Field43RevenueDescription9        VARCHAR(24) NULL
                      , Field44HCPCSCode9                 VARCHAR(14) NULL
                      , Field45ServiceDate9               VARCHAR(10) NULL
                      , Field46ServiceUnits9              VARCHAR(7)  NULL
                      , Field47TotalChargesWhole9         VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal9       VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole9    VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal9  VARCHAR(2)  NULL
                      , Field49Unlabelled9                VARCHAR(2)  NULL
                      , Field42RevenueCode10              VARCHAR(4)  NULL
                      , Field43RevenueDescription10       VARCHAR(24) NULL
                      , Field44HCPCSCode10                VARCHAR(14) NULL
                      , Field45ServiceDate10              VARCHAR(10) NULL
                      , Field46ServiceUnits10             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole10        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal10      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole10   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal10 VARCHAR(2)  NULL
                      , Field49Unlabelled10               VARCHAR(2)  NULL
                      , Field42RevenueCode11              VARCHAR(4)  NULL
                      , Field43RevenueDescription11       VARCHAR(24) NULL
                      , Field44HCPCSCode11                VARCHAR(14) NULL
                      , Field45ServiceDate11              VARCHAR(10) NULL
                      , Field46ServiceUnits11             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole11        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal11      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole11   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal11 VARCHAR(2)  NULL
                      , Field49Unlabelled11               VARCHAR(2)  NULL
                      , Field42RevenueCode12              VARCHAR(4)  NULL
                      , Field43RevenueDescription12       VARCHAR(24) NULL
                      , Field44HCPCSCode12                VARCHAR(14) NULL
                      , Field45ServiceDate12              VARCHAR(10) NULL
                      , Field46ServiceUnits12             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole12        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal12      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole12   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal12 VARCHAR(2)  NULL
                      , Field49Unlabelled12               VARCHAR(2)  NULL
                      , Field42RevenueCode13              VARCHAR(4)  NULL
                      , Field43RevenueDescription13       VARCHAR(24) NULL
                      , Field44HCPCSCode13                VARCHAR(14) NULL
                      , Field45ServiceDate13              VARCHAR(10) NULL
                      , Field46ServiceUnits13             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole13        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal13      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole13   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal13 VARCHAR(2)  NULL
                      , Field49Unlabelled13               VARCHAR(2)  NULL
                      , Field42RevenueCode14              VARCHAR(4)  NULL
                      , Field43RevenueDescription14       VARCHAR(24) NULL
                      , Field44HCPCSCode14                VARCHAR(14) NULL
                      , Field45ServiceDate14              VARCHAR(10) NULL
                      , Field46ServiceUnits14             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole14        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal14      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole14   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal14 VARCHAR(2)  NULL
                      , Field49Unlabelled14               VARCHAR(2)  NULL
                      , Field42RevenueCode15              VARCHAR(4)  NULL
                      , Field43RevenueDescription15       VARCHAR(24) NULL
                      , Field44HCPCSCode15                VARCHAR(14) NULL
                      , Field45ServiceDate15              VARCHAR(10) NULL
                      , Field46ServiceUnits15             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole15        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal15      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole15   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal15 VARCHAR(2)  NULL
                      , Field49Unlabelled15               VARCHAR(2)  NULL
                      , Field42RevenueCode16              VARCHAR(4)  NULL
                      , Field43RevenueDescription16       VARCHAR(24) NULL
                      , Field44HCPCSCode16                VARCHAR(14) NULL
                      , Field45ServiceDate16              VARCHAR(10) NULL
                      , Field46ServiceUnits16             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole16        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal16      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole16   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal16 VARCHAR(2)  NULL
                      , Field49Unlabelled16               VARCHAR(2)  NULL
                      , Field42RevenueCode17              VARCHAR(4)  NULL
                      , Field43RevenueDescription17       VARCHAR(24) NULL
                      , Field44HCPCSCode17                VARCHAR(14) NULL
                      , Field45ServiceDate17              VARCHAR(10) NULL
                      , Field46ServiceUnits17             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole17        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal17      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole17   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal17 VARCHAR(2)  NULL
                      , Field49Unlabelled17               VARCHAR(2)  NULL
                      , Field42RevenueCode18              VARCHAR(4)  NULL
                      , Field43RevenueDescription18       VARCHAR(24) NULL
                      , Field44HCPCSCode18                VARCHAR(14) NULL
                      , Field45ServiceDate18              VARCHAR(10) NULL
                      , Field46ServiceUnits18             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole18        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal18      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole18   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal18 VARCHAR(2)  NULL
                      , Field49Unlabelled18               VARCHAR(2)  NULL
                      , Field42RevenueCode19              VARCHAR(4)  NULL
                      , Field43RevenueDescription19       VARCHAR(24) NULL
                      , Field44HCPCSCode19                VARCHAR(14) NULL
                      , Field45ServiceDate19              VARCHAR(10) NULL
                      , Field46ServiceUnits19             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole19        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal19      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole19   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal19 VARCHAR(2)  NULL
                      , Field49Unlabelled19               VARCHAR(2)  NULL
                      , Field42RevenueCode20              VARCHAR(4)  NULL
                      , Field43RevenueDescription20       VARCHAR(24) NULL
                      , Field44HCPCSCode20                VARCHAR(14) NULL
                      , Field45ServiceDate20              VARCHAR(10) NULL
                      , Field46ServiceUnits20             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole20        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal20      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole20   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal20 VARCHAR(2)  NULL
                      , Field49Unlabelled20               VARCHAR(2)  NULL
                      , Field42RevenueCode21              VARCHAR(4)  NULL
                      , Field43RevenueDescription21       VARCHAR(24) NULL
                      , Field44HCPCSCode21                VARCHAR(14) NULL
                      , Field45ServiceDate21              VARCHAR(10) NULL
                      , Field46ServiceUnits21             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole21        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal21      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole21   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal21 VARCHAR(2)  NULL
                      , Field49Unlabelled21               VARCHAR(2)  NULL
                      , Field42RevenueCode22              VARCHAR(4)  NULL
                      , Field43RevenueDescription22       VARCHAR(24) NULL
                      , Field44HCPCSCode22                VARCHAR(14) NULL
                      , Field45ServiceDate22              VARCHAR(10) NULL
                      , Field46ServiceUnits22             VARCHAR(7)  NULL
                      , Field47TotalChargesWhole22        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal22      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole22   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal22 VARCHAR(2)  NULL
                      , Field49Unlabelled22               VARCHAR(2)  NULL
                      , Field43PageNumber                 VARCHAR(3)  NULL
                      , Field43PageOf                     VARCHAR(3)  NULL
                      , Field44CreationDate               VARCHAR(10) NULL
                      , Field47TotalChargesWhole23        VARCHAR(6)  NULL
                      , Field47TotalChargesDecimal23      VARCHAR(2)  NULL
                      , Field48NonCoveredChargesWhole23   VARCHAR(6)  NULL
                      , Field48NonCoveredChargesDecimal23 VARCHAR(2)  NULL
                      , Field50aPayerName                 VARCHAR(23) NULL
                      , Field50bPayerName                 VARCHAR(23) NULL
                      , Field50cPayerName                 VARCHAR(23) NULL
                      , Field51aHealthPlanId              VARCHAR(15) NULL
                      , Field51bHealthPlanId              VARCHAR(15) NULL
                      , Field51cHealthPlanId              VARCHAR(15) NULL
                      , Field52aReleaseOfInformation      VARCHAR(1)  NULL
                      , Field52bReleaseOfInformation      VARCHAR(1)  NULL
                      , Field52cReleaseOfInformation      VARCHAR(1)  NULL
                      , Field53aAssignmentOfBenefits      VARCHAR(1)  NULL
                      , Field53bAssignmentOfBenefits      VARCHAR(1)  NULL
                      , Field53cAssignmentOfBenefits      VARCHAR(1)  NULL
                      , Field54aPriorPaymentsWhole        VARCHAR(6)  NULL
                      , Field54aPriorPaymentsDecimal      VARCHAR(6)  NULL
                      , Field54bPriorPaymentsWhole        VARCHAR(6)  NULL
                      , Field54bPriorPaymentsDecimal      VARCHAR(6)  NULL
                      , Field54cPriorPaymentsWhole        VARCHAR(6)  NULL
                      , Field54cPriorPaymentsDecimal      VARCHAR(6)  NULL
                      , Field55aEstimatedAmountWhole      VARCHAR(6)  NULL
                      , Field55aEstimatedAmountDecimal    VARCHAR(6)  NULL
                      , Field55bEstimatedAmountWhole      VARCHAR(6)  NULL
                      , Field55bEstimatedAmountDecimal    VARCHAR(6)  NULL
                      , Field55cEstimatedAmountWhole      VARCHAR(6)  NULL
                      , Field55cEstimatedAmountDecimal    VARCHAR(6)  NULL
                      , Field56FacilityNPI                VARCHAR(15) NULL
                      , Field57aOtherProviderId           VARCHAR(15) NULL
                      , Field57bOtherProviderId           VARCHAR(15) NULL
                      , Field57cOtherProviderId           VARCHAR(15) NULL
                      , Field58aInsuredName               VARCHAR(25) NULL
                      , Field58bInsuredName               VARCHAR(25) NULL
                      , Field58cInsuredName               VARCHAR(25) NULL
                      , Field59aPatientRelationship       VARCHAR(2)  NULL
                      , Field59bPatientRelationship       VARCHAR(2)  NULL
                      , Field59cPatientRelationship       VARCHAR(2)  NULL
                      , Field60aInsuredId                 VARCHAR(20) NULL
                      , Field60bInsuredId                 VARCHAR(20) NULL
                      , Field60cInsuredId                 VARCHAR(20) NULL
                      , Field61aGroupName                 VARCHAR(14) NULL
                      , Field61bGroupName                 VARCHAR(14) NULL
                      , Field61cGroupName                 VARCHAR(14) NULL
                      , Field62aGroupNumber               VARCHAR(17) NULL
                      , Field62bGroupNumber               VARCHAR(17) NULL
                      , Field62cGroupNumber               VARCHAR(17) NULL
                      , Field63aAuthorizationCode         VARCHAR(30) NULL
                      , Field63bAuthorizationCode         VARCHAR(30) NULL
                      , Field63cAuthorizationCode         VARCHAR(30) NULL
                      , Field64aDocumentControlNumber     VARCHAR(26) NULL
                      , Field64bDocumentControlNumber     VARCHAR(26) NULL
                      , Field64cDocumentControlNumber     VARCHAR(26) NULL
                      , Field65aEmployerName              VARCHAR(25) NULL
                      , Field65bEmployerName              VARCHAR(25) NULL
                      , Field65cEmployerName              VARCHAR(25) NULL
                      , Field66DiagnosisVersion           VARCHAR(1)  NULL
                      , Field67PrincipalDiagnosis         VARCHAR(8)  NULL
                      , Field67aOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67bOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67cOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67dOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67eOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67fOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67gOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67hOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67iOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67jOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67kOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67lOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67mOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67nOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67oOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67pOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67qOtherDiagnosis            VARCHAR(8)  NULL
                      , Field67POA                        VARCHAR(1)  NULL
                      , Field67aPOA                       VARCHAR(1)  NULL
                      , Field67bPOA                       VARCHAR(1)  NULL
                      , Field67cPOA                       VARCHAR(1)  NULL
                      , Field67dPOA                       VARCHAR(1)  NULL
                      , Field67ePOA                       VARCHAR(1)  NULL
                      , Field67fPOA                       VARCHAR(1)  NULL
                      , Field67gPOA                       VARCHAR(1)  NULL
                      , Field67hPOA                       VARCHAR(1)  NULL
                      , Field67iPOA                       VARCHAR(1)  NULL
                      , Field67jPOA                       VARCHAR(1)  NULL
                      , Field67kPOA                       VARCHAR(1)  NULL
                      , Field67lPOA                       VARCHAR(1)  NULL
                      , Field67mPOA                       VARCHAR(1)  NULL
                      , Field67nPOA                       VARCHAR(1)  NULL
                      , Field67oPOA                       VARCHAR(1)  NULL
                      , Field67pPOA                       VARCHAR(1)  NULL
                      , Field67qPOA                       VARCHAR(1)  NULL
                      , Field68aUnlabelled                VARCHAR(8)  NULL
                      , Field68bUnlabelled                VARCHAR(9)  NULL
                      , Field69AdmittingDiagnosis         VARCHAR(8)  NULL
                      , Field70aReasonForVisitCode        VARCHAR(7)  NULL
                      , Field70bReasonForVisitCode        VARCHAR(7)  NULL
                      , Field70cReasonForVisitCode        VARCHAR(7)  NULL
                      , Field71PPSCode                    VARCHAR(3)  NULL
                      , Field72aECICode                   VARCHAR(8)  NULL
                      , Field72bECICode                   VARCHAR(8)  NULL
                      , Field72cECICode                   VARCHAR(8)  NULL
                      , Field73Unlabelled                 VARCHAR(9)  NULL
                      , Field74PrincipalProcedureCode     VARCHAR(7)  NULL
                      , Field74PrincipalProcedureDate     VARCHAR(10) NULL
                      , Field74aOtherProcedureCode        VARCHAR(7)  NULL
                      , Field74aOtherProcedureDate        VARCHAR(10) NULL
                      , Field74bOtherProcedureCode        VARCHAR(7)  NULL
                      , Field74bOtherProcedureDate        VARCHAR(10) NULL
                      , Field74cOtherProcedureCode        VARCHAR(7)  NULL
                      , Field74cOtherProcedureDate        VARCHAR(10) NULL
                      , Field74dOtherProcedureCode        VARCHAR(7)  NULL
                      , Field74dOtherProcedureDate        VARCHAR(10) NULL
                      , Field74eOtherProcedureCode        VARCHAR(7)  NULL
                      , Field74eOtherProcedureDate        VARCHAR(10) NULL
                      , Field75aUnlabelled                VARCHAR(4)  NULL
                      , Field75bUnlabelled                VARCHAR(4)  NULL
                      , Field75cUnlabelled                VARCHAR(4)  NULL
                      , Field75dUnlabelled                VARCHAR(4)  NULL
                      , Field76AttendingNPI               VARCHAR(15) NULL
                      , Field76AttendingQualifier         VARCHAR(2)  NULL
                      , Field76AttendingProviderId        VARCHAR(9)  NULL
                      , Field76AttendingLastName          VARCHAR(16) NULL
                      , Field76AttendingFirstName         VARCHAR(12) NULL
                      , Field77OperatingNPI               VARCHAR(15) NULL
                      , Field77OperatingQualifier         VARCHAR(2)  NULL
                      , Field77OperatingProviderId        VARCHAR(9)  NULL
                      , Field77OperatingLastName          VARCHAR(16) NULL
                      , Field77OperatingFirstName         VARCHAR(12) NULL
                      , Field78OtherType                  VARCHAR(2)  NULL
                      , Field78OtherNPI                   VARCHAR(15) NULL
                      , Field78OtherQualifier             VARCHAR(2)  NULL
                      , Field78OtherProviderId            VARCHAR(9)  NULL
                      , Field78OtherLastName              VARCHAR(16) NULL
                      , Field78OtherFirstName             VARCHAR(12) NULL
                      , Field79OtherType                  VARCHAR(2)  NULL
                      , Field79OtherNPI                   VARCHAR(15) NULL
                      , Field79OtherQualifier             VARCHAR(2)  NULL
                      , Field79OtherProviderId            VARCHAR(9)  NULL
                      , Field79OtherLastName              VARCHAR(16) NULL
                      , Field79OtherFirstName             VARCHAR(12) NULL
                      , Field80aRemarks                   VARCHAR(19) NULL
                      , Field80bRemarks                   VARCHAR(24) NULL
                      , Field80cRemarks                   VARCHAR(24) NULL
                      , Field80dRemarks                   VARCHAR(24) NULL
                      , Field81aQualifier                 VARCHAR(2)  NULL
                      , Field81aCode                      VARCHAR(12) NULL
                      , Field81aValue                     VARCHAR(12) NULL
                      , Field81bQualifier                 VARCHAR(2)  NULL
                      , Field81bCode                      VARCHAR(12) NULL
                      , Field81bValue                     VARCHAR(12) NULL
                      , Field81cQualifier                 VARCHAR(2)  NULL
                      , Field81cCode                      VARCHAR(12) NULL
                      , Field81cValue                     VARCHAR(12) NULL
                      , Field81dQualifier                 VARCHAR(2)  NULL
                      , Field81dCode                      VARCHAR(10) NULL
                      , Field81dValue                     VARCHAR(12) NULL
                    )


                    INSERT INTO #ClaimUB04(XClaimId
                                         , ClaimLineItemGroupId
                                         , PageNumber
                                         , Field1ProviderName
                                         , FieldProviderAddress
                                         , FieldProviderCityStateZip
                                         , FieldProviderTelephoneFax
                                         , Field2PayToName
                                         , Field2PayToAddress
                                         , Field2PayToCityState
                                         , Field3aPatientControlNumber
                                         , Field3bMedicalRecordNumber
                                         , Field4TypeOfBill
                                         , Field5TaxId
                                         , Field6StatementFrom
                                         , Field6StatementTo
                                         , Field8aPatientId
                                         , Field8bPatientName
                                         , Field9aPatientAddress
                                         , Field9bCity
                                         , Field9cState
                                         , Field9dZip
                                         , Field9eCountryCode
                                         , Field10PatientDOB
                                         , Field11PatientSex
                                         , Field12AdmissionDate
                                         , Field13AdmissionHour
                                         , Field14AdmissionType
                                         , Field15AdmissionSource
                                         , Field16DischargeHour
                                         , Field17DischargeStatus
                                         , Field29AccidentState
                                         , Field43PageNumber
                                         , Field44CreationDate
                                         , Field50aPayerName
                                         , Field50bPayerName
                                         , Field51aHealthPlanId
                                         , Field51bHealthPlanId
                                         , Field52aReleaseOfInformation
                                         , Field52bReleaseOfInformation
                                         , Field53aAssignmentOfBenefits
                                         , Field53bAssignmentOfBenefits
                                         , Field54aPriorPaymentsWhole
                                         , Field54aPriorPaymentsDecimal
                                         , Field56FacilityNPI
                                         , Field58aInsuredName
                                         , Field58bInsuredName
                                         , Field59aPatientRelationship
                                         , Field59bPatientRelationship
                                         , Field60aInsuredId
                                         , Field60bInsuredId
                                         , Field61aGroupName
                                         , Field62aGroupNumber
                                         , Field61bGroupName
                                         , Field62bGroupNumber
                                         , Field63aAuthorizationCode
                                         , Field66DiagnosisVersion
                                         , Field67PrincipalDiagnosis
                                         , Field67POA
                                         , Field67aOtherDiagnosis
                                         , Field67aPOA
                                         , Field67bOtherDiagnosis
                                         , Field67bPOA
                                         , Field67cOtherDiagnosis
                                         , Field67cPOA
                                         , Field67dOtherDiagnosis
                                         , Field67dPOA
                                         , Field67eOtherDiagnosis
                                         , Field67ePOA
                                         , Field67fOtherDiagnosis
                                         , Field67fPOA
                                         , Field67gOtherDiagnosis
                                         , Field67gPOA
                                         , Field67hOtherDiagnosis
                                         , Field67hPOA
                                         , Field67iOtherDiagnosis
                                         , Field67iPOA
                                         , Field67jOtherDiagnosis
                                         , Field67jPOA
                                         , Field67kOtherDiagnosis
                                         , Field67kPOA
                                         , Field67lOtherDiagnosis
                                         , Field67lPOA
                                         , Field69AdmittingDiagnosis
                                         , Field76AttendingNPI
                                         , Field76AttendingQualifier
                                         , Field76AttendingProviderId
                                         , Field76AttendingLastName
                                         , Field76AttendingFirstName
                                         , Field80aRemarks
                                         , Field80bRemarks
                                         , Field80cRemarks
                                         , Field80dRemarks
                                         , Field38ResponsibleAddress1
                                         , Field38ResponsibleAddress2
                                         , Field38ResponsibleAddress3
                                         , Field38ResponsibleAddress4
                                         , Field18ConditionCode
                                         , Field19ConditionCode
                                         , Field20ConditionCode
                                         , Field21ConditionCode
                                         , Field22ConditionCode
                                         , Field23ConditionCode
                                         , Field24ConditionCode
                                         , Field25ConditionCode
                                         , Field26ConditionCode
                                         , Field27ConditionCode
                                         , Field28ConditionCode
                                         , Field31aOccurenceCode
                                         , Field31aOccurenceDate
                                         , Field31bOccurenceCode
                                         , Field31bOccurenceDate
                                         , Field32aOccurenceCode
                                         , Field32aOccurenceDate
                                         , Field32bOccurenceCode
                                         , Field32bOccurenceDate
                                         , Field33aOccurenceCode
                                         , Field33aOccurenceDate
                                         , Field33bOccurenceCode
                                         , Field33bOccurenceDate
                                         , Field34aOccurenceCode
                                         , Field34aOccurenceDate
                                         , Field34bOccurenceCode
                                         , Field34bOccurenceDate
                                         , Field35aOccuranceCode
                                         , Field35aOccuranceFrom
                                         , Field35aOccuranceTo
                                         , Field35bOccuranceCode
                                         , Field35bOccuranceFrom
                                         , Field35bOccuranceTo
                                         , Field36aOccuranceCode
                                         , Field36aOccuranceFrom
                                         , Field36aOccuranceTo
                                         , Field36bOccuranceCode
                                         , Field36bOccuranceFrom
                                         , Field36bOccuranceTo
                                         , Field39aValueCode
                                         , Field39bValueCode
                                         , Field39cValueCode
                                         , Field39dValueCode
                                         , Field40aValueCode
                                         , Field40bValueCode
                                         , Field40cValueCode
                                         , Field40dValueCode
                                         , Field41aValueCode
                                         , Field41bValueCode
                                         , Field41cValueCode
                                         , Field41dValueCode)
                      SELECT DISTINCT
                            (a.XClaimId)
                          , (a.ClaimLineItemGroupId)
                          , (a.PageNumber)
                          , (ISNULL(RTRIM(b.BillingProviderFirstName), '') + ISNULL(RTRIM(b.BillingProviderMiddleName), '')
                             + ISNULL(RTRIM(b.BillingProviderLastName), ''))
                          , RTRIM(b.PaymentAddress1) + '' + ISNULL(RTRIM(b.PaymentAddress2), '')
                          , (RTRIM(b.PaymentCity) + ' ' + RTRIM(b.PaymentState) + ' ' + RTRIM(b.PaymentZip))
                          , (RTRIM(b.PaymentPhone))
                          , (ISNULL(RTRIM(b.PayToProviderFirstName), '') + ISNULL(RTRIM(b.PayToProviderMiddleName), '')
                             + ISNULL(RTRIM(b.PayToProviderLastName), ''))
                          , RTRIM(b.PaymentAddress1) + '' + ISNULL(RTRIM(b.PaymentAddress2), '')    --PayToProviderAddress
                          , (RTRIM(b.PaymentCity) + ' ' + RTRIM(b.PaymentState))                    --PayToCityState
                          , c.ClientId                                                              --PatientControlNo
                          , c.ClientId                                                              --MedicalRecordNo
                          , RTRIM(c.PlaceOfService) + RTRIM(c.ClaimFrequencyCode)                   -- Type of Bill
                          , (RTRIM(b.BillingProviderTaxId))
                          , ((CASE
                                  WHEN DATEPART(mm, c.StatementStartDate) < 10 THEN '0'
                                  ELSE RTRIM('')
                              END + CONVERT(VARCHAR, DATEPART(mm, c.StatementStartDate))) + (CASE
                                                                                                 WHEN DATEPART(dd, c.StatementStartDate) < 10 THEN '0'
                                                                                                 ELSE RTRIM('')
                                                                                             END + CONVERT(VARCHAR, DATEPART(dd, c.StatementStartDate)))
                             + SUBSTRING((CONVERT(VARCHAR, DATEPART(yy, c.StatementStartDate))), 3, 2))
                          , ((CASE
                                  WHEN DATEPART(mm, c.StatementEndDate) < 10 THEN '0'
                                  ELSE RTRIM('')
                              END + CONVERT(VARCHAR, DATEPART(mm, c.StatementEndDate))) + (CASE
                                                                                               WHEN DATEPART(dd, c.StatementEndDate) < 10 THEN '0'
                                                                                               ELSE RTRIM('')
                                                                                           END + CONVERT(VARCHAR, DATEPART(dd, c.StatementEndDate)))
                             + SUBSTRING((CONVERT(VARCHAR, DATEPART(yy, c.StatementEndDate))), 3, 2))
                          , c.ClientId                                                              --Patient Id
                          , (RTRIM(b.ClientLastName) + ', ' + RTRIM(b.ClientFirstName) + ' ' + ISNULL(SUBSTRING(RTRIM(b.ClientMiddleName), 1, 1), RTRIM('')))
                          , (b.ClientAddress1)
                          , (b.ClientCity)
                          , (b.ClientState)
                          , (b.ClientZip)
                          , NULL
                          , ((CASE
                                  WHEN DATEPART(mm, b.ClientDOB) < 10 THEN '0'
                                  ELSE RTRIM('')
                              END + CONVERT(VARCHAR, DATEPART(mm, b.ClientDOB))) + (CASE
                                                                                        WHEN DATEPART(dd, b.ClientDOB) < 10 THEN '0'
                                                                                        ELSE RTRIM('')
                                                                                    END + CONVERT(VARCHAR, DATEPART(dd, b.ClientDOB)))
                             + ((CONVERT(VARCHAR, DATEPART(yy, b.ClientDOB)))))
                          , (b.ClientSex)
                          , ((CASE
                                  WHEN DATEPART(mm, b.RelatedHospitalAdmitDate) < 10 THEN '0'
                                  ELSE RTRIM('')
                              END + CONVERT(VARCHAR, DATEPART(mm, b.RelatedHospitalAdmitDate)))
                             + (CASE
                                    WHEN DATEPART(dd, b.RelatedHospitalAdmitDate) < 10 THEN '0'
                                    ELSE RTRIM('')
                                END + CONVERT(VARCHAR, DATEPART(dd, b.RelatedHospitalAdmitDate)))
                             + SUBSTRING((CONVERT(VARCHAR, DATEPART(yy, b.RelatedHospitalAdmitDate))), 3, 2))
                          , (CASE
                                 WHEN DATEPART(hh, b.RelatedHospitalAdmitDate) < 10 THEN '0'
                                 ELSE RTRIM('')
                             END + CONVERT(VARCHAR, DATEPART(hh, b.RelatedHospitalAdmitDate)))      --AdmissionHour
                          , RTRIM(c.AdmissionTypeCode)
                          , RTRIM(c.AdmissionSourceCode)
                          , SUBSTRING(RTRIM(c.DischargeHour), 1, 2)
                          , RTRIM(c.PatientStatusCode)
                          , RTRIM(c.AutoAccidentStateCode)
                          , CONVERT(VARCHAR(3), a.PageNumber)
                          , ((CASE
                                  WHEN DATEPART(mm, GETDATE()) < 10 THEN '0'
                                  ELSE RTRIM('')
                              END + CONVERT(VARCHAR, DATEPART(mm, GETDATE()))) + (CASE
                                                                                      WHEN DATEPART(dd, GETDATE()) < 10 THEN '0'
                                                                                      ELSE RTRIM('')
                                                                                  END + CONVERT(VARCHAR, DATEPART(dd, GETDATE())))
                             + SUBSTRING((CONVERT(VARCHAR, DATEPART(yy, GETDATE()))), 3, 2))
                          ,
							 CASE WHEN b.priority = 1 THEN b.payername 
							 WHEN b.priority > 1 THEN d.PayerName
							 END,
							 CASE WHEN b.Priority = 1 THEN NULL ELSE b.PayerName END
							 --, CASE
        --                        WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(d.PayerName)
        --                        ELSE RTRIM(b.PayerName)
        --                    END
        --                  , CASE
        --                        WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(b.PayerName)
        --                        ELSE NULL
        --                    END
                          , b.CustomField1                                                          -- Health Plan Id
                          , b.CustomField2                                                          -- Health Plan Id
                          , RTRIM(c.ReleaseCode)
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN 'Y'
                                ELSE NULL
                            END
                          , RTRIM(c.BenefitsAssignCertificationIndicator)
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN 'Y'
                                ELSE NULL
                            END
                          , CONVERT(VARCHAR, CONVERT(INT, FLOOR(d.PaidAmount)))
                          , CONVERT(VARCHAR, CONVERT(INT, ((d.PaidAmount % 1) * 100)))
                          , RTRIM(b.BillingProviderNPI)
                          , CASE WHEN b.Priority = 1 THEN (b.InsuredLastName + ', ' + b.InsuredFirstName + ' ' + ISNULL(SUBSTRING(RTRIM(b.InsuredMiddleName), 1, 1), RTRIM('')))
						  WHEN b.priority > 1 THEN (d.InsuredLastName + ', ' + d.InsuredFirstName + ' ' + ISNULL(SUBSTRING(RTRIM(d.InsuredMiddleName), 1, 1), RTRIM(''))) 
						  END
						  , CASE WHEN b.Priority = 1 THEN NULL 
						  ELSE (b.InsuredLastName + ', ' + b.InsuredFirstName + ' ' + ISNULL(SUBSTRING(RTRIM(b.InsuredMiddleName), 1, 1), RTRIM('')))
						  END 
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(d.InsuredRelationCode)
                                ELSE RTRIM(b.InsuredRelationCode)
                            END
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(b.InsuredRelationCode)
                                ELSE NULL
                            END
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(d.InsuredId)
                                ELSE RTRIM(b.InsuredId)
                            END
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(b.InsuredId)
                                ELSE NULL
                            END
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(d.GroupName)
                                ELSE RTRIM(b.GroupName)
                            END
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(d.GroupNumber)
                                ELSE RTRIM(b.GroupNumber)
                            END
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(b.GroupName)
                                ELSE NULL
                            END
                          , CASE
                                WHEN ISNULL(d.PayerName, '') <> '' THEN RTRIM(b.GroupNumber)
                                ELSE NULL
                            END
                          , SUBSTRING(RTRIM(c.PriorAuthorizationNumber), 1, 30)
                          , '0'                                                                     --Diagnosis Version
                          , c.DiagnosisCode1
                          , c.DiagnosisCodePOA1
                          , c.DiagnosisCode2
                          , c.DiagnosisCodePOA2
                          , c.DiagnosisCode3
                          , c.DiagnosisCodePOA3
                          , c.DiagnosisCode4
                          , c.DiagnosisCodePOA4
                          , c.DiagnosisCode5
                          , c.DiagnosisCodePOA5
                          , c.DiagnosisCode6
                          , c.DiagnosisCodePOA6
                          , c.DiagnosisCode7
                          , c.DiagnosisCodePOA7
                          , c.DiagnosisCode8
                          , c.DiagnosisCodePOA8
                          , c.DiagnosisCode9
                          , c.DiagnosisCodePOA9
                          , c.DiagnosisCode10
                          , c.DiagnosisCodePOA10
                          , c.DiagnosisCode11
                          , c.DiagnosisCodePOA11
                          , c.DiagnosisCode12
                          , c.DiagnosisCodePOA12
                          , c.DiagnosisCode13
                          , c.DiagnosisCodePOA13
                          , c.AdmittingDiagnosisCode
                          , c.AttendingProviderId
                          , c.AttendingProviderIdQualifier
                          , c.AttendingProviderLicenseNumber
                          , c.AttendingProviderLastName
                          , c.AttendingProviderFirstName
                          , RTRIM(b.PayerAddressHeading)
                          , RTRIM(b.PayerAddress1)
                          , RTRIM(b.PayerAddress2)
                          , (RTRIM(b.PayerCity) + ' ' + RTRIM(b.PayerState) + ' ' + RTRIM(b.PayerZip))
                          , RTRIM(b.ClientAddress1)
                          , RTRIM(b.ClientAddress2)
                          , RTRIM(ClientCity) + ' ' + RTRIM(ClientState) + ' ' + RTRIM(ClientZip)
                          , RTRIM(ClientHomePhone)
                          , c.ConditionCode1
                          , c.ConditionCode2
                          , c.ConditionCode3
                          , c.ConditionCode4
                          , c.ConditionCode5
                          , c.ConditionCode6
                          , c.ConditionCode7
                          , c.ConditionCode8
                          , c.ConditionCode9
                          , c.ConditionCode10
                          , c.ConditionCode11
                          , c.OccurenceCode1
                          , c.OccurenceCodeDate1
                          , c.OccurenceCode2
                          , c.OccurenceCodeDate2
                          , c.OccurenceCode3
                          , c.OccurenceCodeDate3
                          , c.OccurenceCode4
                          , c.OccurenceCodeDate4
                          , c.OccurenceCode5
                          , c.OccurenceCodeDate5
                          , c.OccurenceCode6
                          , c.OccurenceCodeDate6
                          , c.OccurenceCode7
                          , c.OccurenceCodeDate7
                          , c.OccurenceCode8
                          , c.OccurenceCodeDate8
                          , c.OccurenceSpanCode1
                          , c.OccurenceSpanCodeFrom1
                          , c.OccurenceSpanCodeThrough1
                          , c.OccurenceSpanCode2
                          , c.OccurenceSpanCodeFrom2
                          , c.OccurenceSpanCodeThrough2
                          , c.OccurenceSpanCode3
                          , c.OccurenceSpanCodeFrom3
                          , c.OccurenceSpanCodeThrough3
                          , c.OccurenceSpanCode4
                          , c.OccurenceSpanCodeFrom4
                          , c.OccurenceSpanCodeThrough4
                          , c.ValueCode1
                          , c.ValueCode2
                          , c.ValueCode3
                          , c.ValueCode4
                          , c.ValueCode5
                          , c.ValueCode6
                          , c.ValueCode7
                          , c.ValueCode8
                          , c.ValueCode9
                          , c.ValueCode10
                          , c.ValueCode11
                          , c.ValueCode12
                      FROM  #ClaimPages2 a
                          JOIN #ClaimLines b ON a.ClaimLineId = b.ClaimLineId
                          JOIN #XClaims c ON a.XClaimId = c.XClaimId
                          LEFT JOIN #OtherInsured d ON d.ClaimLineId = a.ClaimLineId

                    --SELECT * FROM #ClaimUB04
                    --SELECT * FROM #ClaimLines
                    --SELECT * FROM #XClaims
                    -- Insert Revenue Codes in #ClaimUB04
                    SELECT  @Bookmark = ' Insert Revenue Codes in #ClaimUB04'
                    UPDATE  a
                      SET   Field42RevenueCode1 = RTRIM(b.RevenueCode1)
                          , Field42RevenueCode2 = RTRIM(b.RevenueCode2)
                          , Field42RevenueCode3 = RTRIM(b.RevenueCode3)
                          , Field42RevenueCode4 = RTRIM(b.RevenueCode4)
                          , Field42RevenueCode5 = RTRIM(b.RevenueCode5)
                          , Field42RevenueCode6 = RTRIM(b.RevenueCode6)
                          , Field42RevenueCode7 = RTRIM(b.RevenueCode7)
                          , Field42RevenueCode8 = RTRIM(b.RevenueCode8)
                          , Field42RevenueCode9 = RTRIM(b.RevenueCode9)
                          , Field42RevenueCode10 = RTRIM(b.RevenueCode10)
                          , Field42RevenueCode11 = RTRIM(b.RevenueCode11)
                          , Field42RevenueCode12 = RTRIM(b.RevenueCode12)
                          , Field42RevenueCode13 = RTRIM(b.RevenueCode13)
                          , Field42RevenueCode14 = RTRIM(b.RevenueCode14)
                          , Field42RevenueCode15 = RTRIM(b.RevenueCode15)
                          , Field42RevenueCode16 = RTRIM(b.RevenueCode16)
                          , Field42RevenueCode17 = RTRIM(b.RevenueCode17)
                          , Field42RevenueCode18 = RTRIM(b.RevenueCode18)
                          , Field42RevenueCode19 = RTRIM(b.RevenueCode19)
                          , Field42RevenueCode20 = RTRIM(b.RevenueCode20)
                          , Field42RevenueCode21 = RTRIM(b.RevenueCode21)
                          , Field42RevenueCode22 = RTRIM(b.RevenueCode22)
                          , Field43RevenueDescription1 = RTRIM(b.RevenueCodeDescription1)
                          , Field43RevenueDescription2 = RTRIM(b.RevenueCodeDescription2)
                          , Field43RevenueDescription3 = RTRIM(b.RevenueCodeDescription3)
                          , Field43RevenueDescription4 = RTRIM(b.RevenueCodeDescription4)
                          , Field43RevenueDescription5 = RTRIM(b.RevenueCodeDescription5)
                          , Field43RevenueDescription6 = RTRIM(b.RevenueCodeDescription6)
                          , Field43RevenueDescription7 = RTRIM(b.RevenueCodeDescription7)
                          , Field43RevenueDescription8 = RTRIM(b.RevenueCodeDescription8)
                          , Field43RevenueDescription9 = RTRIM(b.RevenueCodeDescription9)
                          , Field43RevenueDescription10 = RTRIM(b.RevenueCodeDescription10)
                          , Field43RevenueDescription11 = RTRIM(b.RevenueCodeDescription11)
                          , Field43RevenueDescription12 = RTRIM(b.RevenueCodeDescription12)
                          , Field43RevenueDescription13 = RTRIM(b.RevenueCodeDescription13)
                          , Field43RevenueDescription14 = RTRIM(b.RevenueCodeDescription14)
                          , Field43RevenueDescription15 = RTRIM(b.RevenueCodeDescription15)
                          , Field43RevenueDescription16 = RTRIM(b.RevenueCodeDescription16)
                          , Field43RevenueDescription17 = RTRIM(b.RevenueCodeDescription17)
                          , Field43RevenueDescription18 = RTRIM(b.RevenueCodeDescription18)
                          , Field43RevenueDescription19 = RTRIM(b.RevenueCodeDescription19)
                          , Field43RevenueDescription20 = RTRIM(b.RevenueCodeDescription20)
                          , Field43RevenueDescription21 = RTRIM(b.RevenueCodeDescription21)
                          , Field43RevenueDescription22 = RTRIM(b.RevenueCodeDescription22)
                          , Field44HCPCSCode1 = b.HCPCSCode1
                          , Field44HCPCSCode2 = b.HCPCSCode2
                          , Field44HCPCSCode3 = b.HCPCSCode3
                          , Field44HCPCSCode4 = b.HCPCSCode4
                          , Field44HCPCSCode5 = b.HCPCSCode5
                          , Field44HCPCSCode6 = b.HCPCSCode6
                          , Field44HCPCSCode7 = b.HCPCSCode7
                          , Field44HCPCSCode8 = b.HCPCSCode8
                          , Field44HCPCSCode9 = b.HCPCSCode9
                          , Field44HCPCSCode10 = b.HCPCSCode10
                          , Field44HCPCSCode11 = b.HCPCSCode11
                          , Field44HCPCSCode12 = b.HCPCSCode12
                          , Field44HCPCSCode13 = b.HCPCSCode13
                          , Field44HCPCSCode14 = b.HCPCSCode14
                          , Field44HCPCSCode15 = b.HCPCSCode15
                          , Field44HCPCSCode16 = b.HCPCSCode16
                          , Field44HCPCSCode17 = b.HCPCSCode17
                          , Field44HCPCSCode18 = b.HCPCSCode18
                          , Field44HCPCSCode19 = b.HCPCSCode19
                          , Field44HCPCSCode20 = b.HCPCSCode20
                          , Field44HCPCSCode21 = b.HCPCSCode21
                          , Field44HCPCSCode22 = b.HCPCSCode22
                          , Field45ServiceDate1 = CONVERT(VARCHAR(10), b.DateofService1, 101)
                          , Field45ServiceDate2 = CONVERT(VARCHAR(10), b.DateofService2, 101)
                          , Field45ServiceDate3 = CONVERT(VARCHAR(10), b.DateofService3, 101)
                          , Field45ServiceDate4 = CONVERT(VARCHAR(10), b.DateofService4, 101)
                          , Field45ServiceDate5 = CONVERT(VARCHAR(10), b.DateofService5, 101)
                          , Field45ServiceDate6 = CONVERT(VARCHAR(10), b.DateofService6, 101)
                          , Field45ServiceDate7 = CONVERT(VARCHAR(10), b.DateofService7, 101)
                          , Field45ServiceDate8 = CONVERT(VARCHAR(10), b.DateofService8, 101)
                          , Field45ServiceDate9 = CONVERT(VARCHAR(10), b.DateofService9, 101)
                          , Field45ServiceDate10 = CONVERT(VARCHAR(10), b.DateofService10, 101)
                          , Field45ServiceDate11 = CONVERT(VARCHAR(10), b.DateofService11, 101)
                          , Field45ServiceDate12 = CONVERT(VARCHAR(10), b.DateofService12, 101)
                          , Field45ServiceDate13 = CONVERT(VARCHAR(10), b.DateofService13, 101)
                          , Field45ServiceDate14 = CONVERT(VARCHAR(10), b.DateofService14, 101)
                          , Field45ServiceDate15 = CONVERT(VARCHAR(10), b.DateofService15, 101)
                          , Field45ServiceDate16 = CONVERT(VARCHAR(10), b.DateofService16, 101)
                          , Field45ServiceDate17 = CONVERT(VARCHAR(10), b.DateofService17, 101)
                          , Field45ServiceDate18 = CONVERT(VARCHAR(10), b.DateofService18, 101)
                          , Field45ServiceDate19 = CONVERT(VARCHAR(10), b.DateofService19, 101)
                          , Field45ServiceDate20 = CONVERT(VARCHAR(10), b.DateofService20, 101)
                          , Field45ServiceDate21 = CONVERT(VARCHAR(10), b.DateofService21, 101)
                          , Field45ServiceDate22 = CONVERT(VARCHAR(10), b.DateofService22, 101)
                          , Field46ServiceUnits1 = RTRIM(b.TotalServiceUnits1)
                          , Field46ServiceUnits2 = RTRIM(b.TotalServiceUnits2)
                          , Field46ServiceUnits3 = RTRIM(b.TotalServiceUnits3)
                          , Field46ServiceUnits4 = RTRIM(b.TotalServiceUnits4)
                          , Field46ServiceUnits5 = RTRIM(b.TotalServiceUnits5)
                          , Field46ServiceUnits6 = RTRIM(b.TotalServiceUnits6)
                          , Field46ServiceUnits7 = RTRIM(b.TotalServiceUnits7)
                          , Field46ServiceUnits8 = RTRIM(b.TotalServiceUnits8)
                          , Field46ServiceUnits9 = RTRIM(b.TotalServiceUnits9)
                          , Field46ServiceUnits10 = RTRIM(b.TotalServiceUnits10)
                          , Field46ServiceUnits11 = RTRIM(b.TotalServiceUnits11)
                          , Field46ServiceUnits12 = RTRIM(b.TotalServiceUnits12)
                          , Field46ServiceUnits13 = RTRIM(b.TotalServiceUnits13)
                          , Field46ServiceUnits14 = RTRIM(b.TotalServiceUnits14)
                          , Field46ServiceUnits15 = RTRIM(b.TotalServiceUnits15)
                          , Field46ServiceUnits16 = RTRIM(b.TotalServiceUnits16)
                          , Field46ServiceUnits17 = RTRIM(b.TotalServiceUnits17)
                          , Field46ServiceUnits18 = RTRIM(b.TotalServiceUnits18)
                          , Field46ServiceUnits19 = RTRIM(b.TotalServiceUnits19)
                          , Field46ServiceUnits20 = RTRIM(b.TotalServiceUnits20)
                          , Field46ServiceUnits21 = RTRIM(b.TotalServiceUnits21)
                          , Field46ServiceUnits22 = RTRIM(b.TotalServiceUnits22)
                          , Field47TotalChargesWhole1 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges1)))
                          , Field47TotalChargesWhole2 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges2)))
                          , Field47TotalChargesWhole3 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges3)))
                          , Field47TotalChargesWhole4 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges4)))
                          , Field47TotalChargesWhole5 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges5)))
                          , Field47TotalChargesWhole6 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges6)))
                          , Field47TotalChargesWhole7 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges7)))
                          , Field47TotalChargesWhole8 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges8)))
                          , Field47TotalChargesWhole9 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges9)))
                          , Field47TotalChargesWhole10 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges10)))
                          , Field47TotalChargesWhole11 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges11)))
                          , Field47TotalChargesWhole12 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges12)))
                          , Field47TotalChargesWhole13 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges13)))
                          , Field47TotalChargesWhole14 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges14)))
                          , Field47TotalChargesWhole15 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges15)))
                          , Field47TotalChargesWhole16 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges16)))
                          , Field47TotalChargesWhole17 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges17)))
                          , Field47TotalChargesWhole18 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges18)))
                          , Field47TotalChargesWhole19 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges19)))
                          , Field47TotalChargesWhole20 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges20)))
                          , Field47TotalChargesWhole21 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges21)))
                          , Field47TotalChargesWhole22 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalCharges22)))
                          , Field47TotalChargesDecimal1 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges1 % 1) * 100)))
                          , Field47TotalChargesDecimal2 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges2 % 1) * 100)))
                          , Field47TotalChargesDecimal3 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges3 % 1) * 100)))
                          , Field47TotalChargesDecimal4 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges4 % 1) * 100)))
                          , Field47TotalChargesDecimal5 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges5 % 1) * 100)))
                          , Field47TotalChargesDecimal6 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges6 % 1) * 100)))
                          , Field47TotalChargesDecimal7 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges7 % 1) * 100)))
                          , Field47TotalChargesDecimal8 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges8 % 1) * 100)))
                          , Field47TotalChargesDecimal9 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges9 % 1) * 100)))
                          , Field47TotalChargesDecimal10 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges10 % 1) * 100)))
                          , Field47TotalChargesDecimal11 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges11 % 1) * 100)))
                          , Field47TotalChargesDecimal12 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges12 % 1) * 100)))
                          , Field47TotalChargesDecimal13 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges13 % 1) * 100)))
                          , Field47TotalChargesDecimal14 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges14 % 1) * 100)))
                          , Field47TotalChargesDecimal15 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges15 % 1) * 100)))
                          , Field47TotalChargesDecimal16 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges16 % 1) * 100)))
                          , Field47TotalChargesDecimal17 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges17 % 1) * 100)))
                          , Field47TotalChargesDecimal18 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges18 % 1) * 100)))
                          , Field47TotalChargesDecimal19 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges19 % 1) * 100)))
                          , Field47TotalChargesDecimal20 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges20 % 1) * 100)))
                          , Field47TotalChargesDecimal21 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges21 % 1) * 100)))
                          , Field47TotalChargesDecimal22 = CONVERT(VARCHAR, CONVERT(INT, ((b.TotalCharges22 % 1) * 100)))
                      FROM  #ClaimUB04 a
                          JOIN #ClaimPivot b ON( a.XClaimId = b.XClaimId
                                                 AND a.PageNumber = b.PageNumber)





                    UPDATE  a
                      SET   a.Field47TotalChargesWhole23 = CONVERT(VARCHAR, CONVERT(INT, FLOOR(b.TotalAmount)))
                          , a.Field47TotalChargesDecimal23 = CONVERT(VARCHAR, CONVERT(INT, (b.TotalAmount % 1) * 100))
                      FROM  #ClaimUB04 a
                          JOIN #XClaims b ON a.XClaimId = b.XClaimId



                    UPDATE  a
                      SET   a.Field47TotalChargesDecimal1 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal1)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal1)
                                                                ELSE Field47TotalChargesDecimal1
                                                            END
                          , a.Field47TotalChargesDecimal2 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal2)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal2)
                                                                ELSE Field47TotalChargesDecimal2
                                                            END
                          , a.Field47TotalChargesDecimal3 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal3)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal3)
                                                                ELSE Field47TotalChargesDecimal3
                                                            END
                          , a.Field47TotalChargesDecimal4 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal4)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal4)
                                                                ELSE Field47TotalChargesDecimal4
                                                            END
                          , a.Field47TotalChargesDecimal5 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal5)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal5)
                                                                ELSE Field47TotalChargesDecimal5
                                                            END
                          , a.Field47TotalChargesDecimal6 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal6)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal6)
                                                                ELSE Field47TotalChargesDecimal6
                                                            END
                          , a.Field47TotalChargesDecimal7 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal7)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal7)
                                                                ELSE Field47TotalChargesDecimal7
                                                            END
                          , a.Field47TotalChargesDecimal8 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal8)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal8)
                                                                ELSE Field47TotalChargesDecimal8
                                                            END
                          , a.Field47TotalChargesDecimal9 = CASE
                                                                WHEN RTRIM(LEN(Field47TotalChargesDecimal9)) = 1 THEN '0' + RTRIM(Field47TotalChargesDecimal9)
                                                                ELSE Field47TotalChargesDecimal9
                                                            END
                          , a.Field47TotalChargesDecimal10 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal10)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal10)
                                                                 ELSE Field47TotalChargesDecimal10
                                                             END
                          , a.Field47TotalChargesDecimal11 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal11)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal11)
                                                                 ELSE Field47TotalChargesDecimal11
                                                             END
                          , a.Field47TotalChargesDecimal12 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal12)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal12)
                                                                 ELSE Field47TotalChargesDecimal12
                                                             END
                          , a.Field47TotalChargesDecimal13 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal13)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal13)
                                                                 ELSE Field47TotalChargesDecimal13
                                                             END
                          , a.Field47TotalChargesDecimal14 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal14)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal14)
                                                                 ELSE Field47TotalChargesDecimal14
                                                             END
                          , a.Field47TotalChargesDecimal15 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal15)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal15)
                                                                 ELSE Field47TotalChargesDecimal15
                                                             END
                          , a.Field47TotalChargesDecimal16 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal16)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal16)
                                                                 ELSE Field47TotalChargesDecimal16
                                                             END
                          , a.Field47TotalChargesDecimal17 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal17)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal17)
                                                                 ELSE Field47TotalChargesDecimal17
                                                             END
                          , a.Field47TotalChargesDecimal18 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal18)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal18)
                                                                 ELSE Field47TotalChargesDecimal18
                                                             END
                          , a.Field47TotalChargesDecimal19 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal19)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal19)
                                                                 ELSE Field47TotalChargesDecimal19
                                                             END
                          , a.Field47TotalChargesDecimal20 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal20)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal20)
                                                                 ELSE Field47TotalChargesDecimal20
                                                             END
                          , a.Field47TotalChargesDecimal21 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal21)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal21)
                                                                 ELSE Field47TotalChargesDecimal21
                                                             END
                          , a.Field47TotalChargesDecimal22 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal22)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal22)
                                                                 ELSE Field47TotalChargesDecimal22
                                                             END
                          , a.Field47TotalChargesDecimal23 = CASE
                                                                 WHEN RTRIM(LEN(Field47TotalChargesDecimal23)) = 1 THEN
                                                                     '0' + RTRIM(Field47TotalChargesDecimal23)
                                                                 ELSE Field47TotalChargesDecimal23
                                                             END
                      FROM  #ClaimUB04 a


                    UPDATE  a
                      SET   a.Field43PageOf = CONVERT(VARCHAR, (SELECT  MAX(PageNumber)
                                                                  FROM  #ClaimPages2 b
                                                                  WHERE
                                                                    a.XClaimId = b.XClaimId
                                                                  GROUP BY
                                                                    b.XClaimId))
                      FROM  #ClaimUB04 a



                    UPDATE  a
                      SET   Field47TotalChargesWhole23 = NULL
                          , Field47TotalChargesDecimal23 = NULL
                      FROM  #ClaimUB04 a
                      WHERE
                        a.Field43PageNumber <> CONVERT(VARCHAR, (SELECT MAX(PageNumber)
                                                                   FROM #ClaimPages2 b
                                                                   WHERE
                                                                     a.XClaimId = b.XClaimId
                                                                   GROUP BY
                                                                     b.XClaimId))

                    -- Final Insert Into ClaimUB04s table
                    SELECT  @Bookmark = 'Final Insert Into ClaimUB04s table'
                    INSERT INTO ClaimUB04s(ClaimLineItemGroupId
                                         , PageNumber
                                         , Field1ProviderName
                                         , FieldProviderAddress
                                         , FieldProviderCityStateZip
                                         , FieldProviderTelephoneFax
                                         , Field2PayToName
                                         , Field2PayToAddress
                                         , Field2PayToCityState
                                         , Field3aPatientControlNumber
                                         , Field3bMedicalRecordNumber
                                         , Field4TypeOfBill
                                         , Field5TaxIdType
                                         , Field5TaxId
                                         , Field6StatementFrom
                                         , Field6StatementTo
                                         , Field7Unlabelled
                                         , Field8aPatientId
                                         , Field8bPatientName
                                         , Field9aPatientAddress
                                         , Field9bCity
                                         , Field9cState
                                         , Field9dZip
                                         , Field9eCountryCode
                                         , Field10PatientDOB
                                         , Field11PatientSex
                                         , Field12AdmissionDate
                                         , Field13AdmissionHour
                                         , Field14AdmissionType
                                         , Field15AdmissionSource
                                         , Field16DischargeHour
                                         , Field17DischargeStatus
                                         , Field18ConditionCode
                                         , Field19ConditionCode
                                         , Field20ConditionCode
                                         , Field21ConditionCode
                                         , Field22ConditionCode
                                         , Field23ConditionCode
                                         , Field24ConditionCode
                                         , Field25ConditionCode
                                         , Field26ConditionCode
                                         , Field27ConditionCode
                                         , Field28ConditionCode
                                         , Field29AccidentState
                                         , Field30aUnlabelled
                                         , Field30bUnlabelled
                                         , Field31aOccurenceCode
                                         , Field31aOccurenceDate
                                         , Field31bOccurenceCode
                                         , Field31bOccurenceDate
                                         , Field32aOccurenceCode
                                         , Field32aOccurenceDate
                                         , Field32bOccurenceCode
                                         , Field32bOccurenceDate
                                         , Field33aOccurenceCode
                                         , Field33aOccurenceDate
                                         , Field33bOccurenceCode
                                         , Field33bOccurenceDate
                                         , Field34aOccurenceCode
                                         , Field34aOccurenceDate
                                         , Field34bOccurenceCode
                                         , Field34bOccurenceDate
                                         , Field35aOccuranceCode
                                         , Field35aOccuranceFrom
                                         , Field35aOccuranceTo
                                         , Field35bOccuranceCode
                                         , Field35bOccuranceFrom
                                         , Field35bOccuranceTo
                                         , Field36aOccuranceCode
                                         , Field36aOccuranceFrom
                                         , Field36aOccuranceTo
                                         , Field36bOccuranceCode
                                         , Field36bOccuranceFrom
                                         , Field36bOccuranceTo
                                         , Field37aUnlabelled
                                         , Field37bUnlabelled
                                         , Field38ResponsibleAddress1
                                         , Field38ResponsibleAddress2
                                         , Field38ResponsibleAddress3
                                         , Field38ResponsibleAddress4
                                         , Field38ResponsibleAddress5
                                         , Field39aValueCode
                                         , Field39aValueAmountWhole
                                         , Field39aValueDecimal
                                         , Field39bValueCode
                                         , Field39bValueAmountWhole
                                         , Field39bValueDecimal
                                         , Field39cValueCode
                                         , Field39cValueAmountWhole
                                         , Field39cValueDecimal
                                         , Field39dValueCode
                                         , Field39dValueAmountWhole
                                         , Field39dValueDecimal
                                         , Field40aValueCode
                                         , Field40aValueAmountWhole
                                         , Field40aValueDecimal
                                         , Field40bValueCode
                                         , Field40bValueAmountWhole
                                         , Field40bValueDecimal
                                         , Field40cValueCode
                                         , Field40cValueAmountWhole
                                         , Field40cValueDecimal
                                         , Field40dValueCode
                                         , Field40dValueAmountWhole
                                         , Field40dValueDecimal
                                         , Field41aValueCode
                                         , Field41aValueAmountWhole
                                         , Field41aValueDecimal
                                         , Field41bValueCode
                                         , Field41bValueAmountWhole
                                         , Field41bValueDecimal
                                         , Field41cValueCode
                                         , Field41cValueAmountWhole
                                         , Field41cValueDecimal
                                         , Field41dValueCode
                                         , Field41dValueAmountWhole
                                         , Field41dValueDecimal
                                         , Field42RevenueCode1
                                         , Field43RevenueDescription1
                                         , Field44HCPCSCode1
                                         , Field45ServiceDate1
                                         , Field46ServiceUnits1
                                         , Field47TotalChargesWhole1
                                         , Field47TotalChargesDecimal1
                                         , Field48NonCoveredChargesWhole1
                                         , Field48NonCoveredChargesDecimal1
                                         , Field49Unlabelled1
                                         , Field42RevenueCode2
                                         , Field43RevenueDescription2
                                         , Field44HCPCSCode2
                                         , Field45ServiceDate2
                                         , Field46ServiceUnits2
                                         , Field47TotalChargesWhole2
                                         , Field47TotalChargesDecimal2
                                         , Field48NonCoveredChargesWhole2
                                         , Field48NonCoveredChargesDecimal2
                                         , Field49Unlabelled2
                                         , Field42RevenueCode3
                                         , Field43RevenueDescription3
                                         , Field44HCPCSCode3
                                         , Field45ServiceDate3
                                         , Field46ServiceUnits3
                                         , Field47TotalChargesWhole3
                                         , Field47TotalChargesDecimal3
                                         , Field48NonCoveredChargesWhole3
                                         , Field48NonCoveredChargesDecimal3
                                         , Field49Unlabelled3
                                         , Field42RevenueCode4
                                         , Field43RevenueDescription4
                                         , Field44HCPCSCode4
                                         , Field45ServiceDate4
                                         , Field46ServiceUnits4
                                         , Field47TotalChargesWhole4
                                         , Field47TotalChargesDecimal4
                                         , Field48NonCoveredChargesWhole4
                                         , Field48NonCoveredChargesDecimal4
                                         , Field49Unlabelled4
                                         , Field42RevenueCode5
                                         , Field43RevenueDescription5
                                         , Field44HCPCSCode5
                                         , Field45ServiceDate5
                                         , Field46ServiceUnits5
                                         , Field47TotalChargesWhole5
                                         , Field47TotalChargesDecimal5
                                         , Field48NonCoveredChargesWhole5
                                         , Field48NonCoveredChargesDecimal5
                                         , Field49Unlabelled5
                                         , Field42RevenueCode6
                                         , Field43RevenueDescription6
                                         , Field44HCPCSCode6
                                         , Field45ServiceDate6
                                         , Field46ServiceUnits6
                                         , Field47TotalChargesWhole6
                                         , Field47TotalChargesDecimal6
                                         , Field48NonCoveredChargesWhole6
                                         , Field48NonCoveredChargesDecimal6
                                         , Field49Unlabelled6
                                         , Field42RevenueCode7
                                         , Field43RevenueDescription7
                                         , Field44HCPCSCode7
                                         , Field45ServiceDate7
                                         , Field46ServiceUnits7
                                         , Field47TotalChargesWhole7
                                         , Field47TotalChargesDecimal7
                                         , Field48NonCoveredChargesWhole7
                                         , Field48NonCoveredChargesDecimal7
                                         , Field49Unlabelled7
                                         , Field42RevenueCode8
                                         , Field43RevenueDescription8
                                         , Field44HCPCSCode8
                                         , Field45ServiceDate8
                                         , Field46ServiceUnits8
                                         , Field47TotalChargesWhole8
                                         , Field47TotalChargesDecimal8
                                         , Field48NonCoveredChargesWhole8
                                         , Field48NonCoveredChargesDecimal8
                                         , Field49Unlabelled8
                                         , Field42RevenueCode9
                                         , Field43RevenueDescription9
                                         , Field44HCPCSCode9
                                         , Field45ServiceDate9
                                         , Field46ServiceUnits9
                                         , Field47TotalChargesWhole9
                                         , Field47TotalChargesDecimal9
                                         , Field48NonCoveredChargesWhole9
                                         , Field48NonCoveredChargesDecimal9
                                         , Field49Unlabelled9
                                         , Field42RevenueCode10
                                         , Field43RevenueDescription10
                                         , Field44HCPCSCode10
                                         , Field45ServiceDate10
                                         , Field46ServiceUnits10
                                         , Field47TotalChargesWhole10
                                         , Field47TotalChargesDecimal10
                                         , Field48NonCoveredChargesWhole10
                                         , Field48NonCoveredChargesDecimal10
                                         , Field49Unlabelled10
                                         , Field42RevenueCode11
                                         , Field43RevenueDescription11
                                         , Field44HCPCSCode11
                                         , Field45ServiceDate11
                                         , Field46ServiceUnits11
                                         , Field47TotalChargesWhole11
                                         , Field47TotalChargesDecimal11
                                         , Field48NonCoveredChargesWhole11
                                         , Field48NonCoveredChargesDecimal11
                                         , Field49Unlabelled11
                                         , Field42RevenueCode12
                                         , Field43RevenueDescription12
                                         , Field44HCPCSCode12
                                         , Field45ServiceDate12
                                         , Field46ServiceUnits12
                                         , Field47TotalChargesWhole12
                                         , Field47TotalChargesDecimal12
                                         , Field48NonCoveredChargesWhole12
                                         , Field48NonCoveredChargesDecimal12
                                         , Field49Unlabelled12
                                         , Field42RevenueCode13
                                         , Field43RevenueDescription13
                                         , Field44HCPCSCode13
                                         , Field45ServiceDate13
                                         , Field46ServiceUnits13
                                         , Field47TotalChargesWhole13
                                         , Field47TotalChargesDecimal13
                                         , Field48NonCoveredChargesWhole13
                                         , Field48NonCoveredChargesDecimal13
                                         , Field49Unlabelled13
                                         , Field42RevenueCode14
                                         , Field43RevenueDescription14
                                         , Field44HCPCSCode14
                                         , Field45ServiceDate14
                                         , Field46ServiceUnits14
                                         , Field47TotalChargesWhole14
                                         , Field47TotalChargesDecimal14
                                         , Field48NonCoveredChargesWhole14
                                         , Field48NonCoveredChargesDecimal14
                                         , Field49Unlabelled14
                                         , Field42RevenueCode15
                                         , Field43RevenueDescription15
                                         , Field44HCPCSCode15
                                         , Field45ServiceDate15
                                         , Field46ServiceUnits15
                                         , Field47TotalChargesWhole15
                                         , Field47TotalChargesDecimal15
                                         , Field48NonCoveredChargesWhole15
                                         , Field48NonCoveredChargesDecimal15
                                         , Field49Unlabelled15
                                         , Field42RevenueCode16
                                         , Field43RevenueDescription16
                                         , Field44HCPCSCode16
                                         , Field45ServiceDate16
                                         , Field46ServiceUnits16
                                         , Field47TotalChargesWhole16
                                         , Field47TotalChargesDecimal16
                                         , Field48NonCoveredChargesWhole16
                                         , Field48NonCoveredChargesDecimal16
                                         , Field49Unlabelled16
                                         , Field42RevenueCode17
                                         , Field43RevenueDescription17
                                         , Field44HCPCSCode17
                                         , Field45ServiceDate17
                                         , Field46ServiceUnits17
                                         , Field47TotalChargesWhole17
                                         , Field47TotalChargesDecimal17
                                         , Field48NonCoveredChargesWhole17
                                         , Field48NonCoveredChargesDecimal17
                                         , Field49Unlabelled17
                                         , Field42RevenueCode18
                                         , Field43RevenueDescription18
                                         , Field44HCPCSCode18
                                         , Field45ServiceDate18
                                         , Field46ServiceUnits18
                                         , Field47TotalChargesWhole18
                                         , Field47TotalChargesDecimal18
                                         , Field48NonCoveredChargesWhole18
                                         , Field48NonCoveredChargesDecimal18
                                         , Field49Unlabelled18
                                         , Field42RevenueCode19
                                         , Field43RevenueDescription19
                                         , Field44HCPCSCode19
                                         , Field45ServiceDate19
                                         , Field46ServiceUnits19
                                         , Field47TotalChargesWhole19
                                         , Field47TotalChargesDecimal19
                                         , Field48NonCoveredChargesWhole19
                                         , Field48NonCoveredChargesDecimal19
                                         , Field49Unlabelled19
                                         , Field42RevenueCode20
                                         , Field43RevenueDescription20
                                         , Field44HCPCSCode20
                                         , Field45ServiceDate20
                                         , Field46ServiceUnits20
                                         , Field47TotalChargesWhole20
                                         , Field47TotalChargesDecimal20
                                         , Field48NonCoveredChargesWhole20
                                         , Field48NonCoveredChargesDecimal20
                                         , Field49Unlabelled20
                                         , Field42RevenueCode21
                                         , Field43RevenueDescription21
                                         , Field44HCPCSCode21
                                         , Field45ServiceDate21
                                         , Field46ServiceUnits21
                                         , Field47TotalChargesWhole21
                                         , Field47TotalChargesDecimal21
                                         , Field48NonCoveredChargesWhole21
                                         , Field48NonCoveredChargesDecimal21
                                         , Field49Unlabelled21
                                         , Field42RevenueCode22
                                         , Field43RevenueDescription22
                                         , Field44HCPCSCode22
                                         , Field45ServiceDate22
                                         , Field46ServiceUnits22
                                         , Field47TotalChargesWhole22
                                         , Field47TotalChargesDecimal22
                                         , Field48NonCoveredChargesWhole22
                                         , Field48NonCoveredChargesDecimal22
                                         , Field49Unlabelled22
                                         , Field43PageNumber
                                         , Field43PageOf
                                         , Field44CreationDate
                                         , Field47TotalChargesWhole23
                                         , Field47TotalChargesDecimal23
                                         , Field48NonCoveredChargesWhole23
                                         , Field48NonCoveredChargesDecimal23
                                         , Field50aPayerName
                                         , Field50bPayerName
                                         , Field50cPayerName
                                         , Field51aHealthPlanId
                                         , Field51bHealthPlanId
                                         , Field51cHealthPlanId
                                         , Field52aReleaseOfInformation
                                         , Field52bReleaseOfInformation
                                         , Field52cReleaseOfInformation
                                         , Field53aAssignmentOfBenefits
                                         , Field53bAssignmentOfBenefits
                                         , Field53cAssignmentOfBenefits
                                         , Field54aPriorPaymentsWhole
                                         , Field54aPriorPaymentsDecimal
                                         , Field54bPriorPaymentsWhole
                                         , Field54bPriorPaymentsDecimal
                                         , Field54cPriorPaymentsWhole
                                         , Field54cPriorPaymentsDecimal
                                         , Field55aEstimatedAmountWhole
                                         , Field55aEstimatedAmountDecimal
                                         , Field55bEstimatedAmountWhole
                                         , Field55bEstimatedAmountDecimal
                                         , Field55cEstimatedAmountWhole
                                         , Field55cEstimatedAmountDecimal
                                         , Field56FacilityNPI
                                         , Field57aOtherProviderId
                                         , Field57bOtherProviderId
                                         , Field57cOtherProviderId
                                         , Field58aInsuredName
                                         , Field58bInsuredName
                                         , Field58cInsuredName
                                         , Field59aPatientRelationship
                                         , Field59bPatientRelationship
                                         , Field59cPatientRelationship
                                         , Field60aInsuredId
                                         , Field60bInsuredId
                                         , Field60cInsuredId
                                         , Field61aGroupName
                                         , Field61bGroupName
                                         , Field61cGroupName
                                         , Field62aGroupNumber
                                         , Field62bGroupNumber
                                         , Field62cGroupNumber
                                         , Field63aAuthorizationCode
                                         , Field63bAuthorizationCode
                                         , Field63cAuthorizationCode
                                         , Field64aDocumentControlNumber
                                         , Field64bDocumentControlNumber
                                         , Field64cDocumentControlNumber
                                         , Field65aEmployerName
                                         , Field65bEmployerName
                                         , Field65cEmployerName
                                         , Field66DiagnosisVersion
                                         , Field67PrincipalDiagnosis
                                         , Field67POA
                                         , Field67aOtherDiagnosis
                                         , Field67aPOA
                                         , Field67bOtherDiagnosis
                                         , Field67bPOA
                                         , Field67cOtherDiagnosis
                                         , Field67cPOA
                                         , Field67dOtherDiagnosis
                                         , Field67dPOA
                                         , Field67eOtherDiagnosis
                                         , Field67ePOA
                                         , Field67fOtherDiagnosis
                                         , Field67fPOA
                                         , Field67gOtherDiagnosis
                                         , Field67gPOA
                                         , Field67hOtherDiagnosis
                                         , Field67hPOA
                                         , Field67iOtherDiagnosis
                                         , Field67iPOA
                                         , Field67jOtherDiagnosis
                                         , Field67jPOA
                                         , Field67kOtherDiagnosis
                                         , Field67kPOA
                                         , Field67lOtherDiagnosis
                                         , Field67lPOA
                                         , Field67mOtherDiagnosis
                                         , Field67mPOA
                                         , Field67nOtherDiagnosis
                                         , Field67nPOA
                                         , Field67oOtherDiagnosis
                                         , Field67oPOA
                                         , Field67pOtherDiagnosis
                                         , Field67pPOA
                                         , Field67qOtherDiagnosis
                                         , Field67qPOA
                                         , Field68aUnlabelled
                                         , Field68bUnlabelled
                                         , Field69AdmittingDiagnosis
                                         , Field70aReasonForVisitCode
                                         , Field70bReasonForVisitCode
                                         , Field70cReasonForVisitCode
                                         , Field71PPSCode
                                         , Field72aECICode
                                         , Field72bECICode
                                         , Field72cECICode
                                         , Field73Unlabelled
                                         , Field74PrincipalProcedureCode
                                         , Field74PrincipalProcedureDate
                                         , Field74aOtherProcedureCode
                                         , Field74aOtherProcedureDate
                                         , Field74bOtherProcedureCode
                                         , Field74bOtherProcedureDate
                                         , Field74cOtherProcedureCode
                                         , Field74cOtherProcedureDate
                                         , Field74dOtherProcedureCode
                                         , Field74dOtherProcedureDate
                                         , Field74eOtherProcedureCode
                                         , Field74eOtherProcedureDate
                                         , Field75aUnlabelled
                                         , Field75bUnlabelled
                                         , Field75cUnlabelled
                                         , Field75dUnlabelled
                                         , Field76AttendingNPI
                                         , Field76AttendingQualifier
                                         , Field76AttendingProviderId
                                         , Field76AttendingLastName
                                         , Field76AttendingFirstName
                                         , Field77OperatingNPI
                                         , Field77OperatingQualifier
                                         , Field77OperatingProviderId
                                         , Field77OperatingLastName
                                         , Field77OperatingFirstName
                                         , Field78OtherType
                                         , Field78OtherNPI
                                         , Field78OtherQualifier
                                         , Field78OtherProviderId
                                         , Field78OtherLastName
                                         , Field78OtherFirstName
                                         , Field79OtherType
                                         , Field79OtherNPI
                                         , Field79OtherQualifier
                                         , Field79OtherProviderId
                                         , Field79OtherLastName
                                         , Field79OtherFirstName
                                         , Field80aRemarks
                                         , Field80bRemarks
                                         , Field80cRemarks
                                         , Field80dRemarks
                                         , Field81aQualifier
                                         , Field81aCode
                                         , Field81aValue
                                         , Field81bQualifier
                                         , Field81bCode
                                         , Field81bValue
                                         , Field81cQualifier
                                         , Field81cCode
                                         , Field81cValue
                                         , Field81dQualifier
                                         , Field81dCode
                                         , Field81dValue
                                         , CreatedBy
                                         , CreatedDate
                                         , ModifiedBy
                                         , ModifiedDate)
                      SELECT    a.ClaimLineItemGroupId
                              , PageNumber
                              , Field1ProviderName
                              , FieldProviderAddress
                              , FieldProviderCityStateZip
                              , FieldProviderTelephoneFax
                              , Field2PayToName
                              , Field2PayToAddress
                              , Field2PayToCityState
                              , Field3aPatientControlNumber
                              , Field3bMedicalRecordNumber
                              , Field4TypeOfBill
                              , Field5TaxIdType
                              , Field5TaxId
                              , Field6StatementFrom
                              , Field6StatementTo
                              , Field7Unlabelled
                              , Field8aPatientId
                              , Field8bPatientName
                              , Field9aPatientAddress
                              , Field9bCity
                              , Field9cState
                              , Field9dZip
                              , Field9eCountryCode
                              , Field10PatientDOB
                              , Field11PatientSex
                              , Field12AdmissionDate
                              , Field13AdmissionHour
                              , Field14AdmissionType
                              , Field15AdmissionSource
                              , Field16DischargeHour
                              , Field17DischargeStatus
                              , Field18ConditionCode
                              , Field19ConditionCode
                              , Field20ConditionCode
                              , Field21ConditionCode
                              , Field22ConditionCode
                              , Field23ConditionCode
                              , Field24ConditionCode
                              , Field25ConditionCode
                              , Field26ConditionCode
                              , Field27ConditionCode
                              , Field28ConditionCode
                              , Field29AccidentState
                              , Field30aUnlabelled
                              , Field30bUnlabelled
                              , Field31aOccurenceCode
                              , Field31aOccurenceDate
                              , Field31bOccurenceCode
                              , Field31bOccurenceDate
                              , Field32aOccurenceCode
                              , Field32aOccurenceDate
                              , Field32bOccurenceCode
                              , Field32bOccurenceDate
                              , Field33aOccurenceCode
                              , Field33aOccurenceDate
                              , Field33bOccurenceCode
                              , Field33bOccurenceDate
                              , Field34aOccurenceCode
                              , Field34aOccurenceDate
                              , Field34bOccurenceCode
                              , Field34bOccurenceDate
                              , Field35aOccuranceCode
                              , Field35aOccuranceFrom
                              , Field35aOccuranceTo
                              , Field35bOccuranceCode
                              , Field35bOccuranceFrom
                              , Field35bOccuranceTo
                              , Field36aOccuranceCode
                              , Field36aOccuranceFrom
                              , Field36aOccuranceTo
                              , Field36bOccuranceCode
                              , Field36bOccuranceFrom
                              , Field36bOccuranceTo
                              , Field37aUnlabelled
                              , Field37bUnlabelled
                              , Field38ResponsibleAddress1
                              , Field38ResponsibleAddress2
                              , Field38ResponsibleAddress3
                              , Field38ResponsibleAddress4
                              , Field38ResponsibleAddress5
                              , Field39aValueCode
                              , Field39aValueAmountWhole
                              , Field39aValueDecimal
                              , Field39bValueCode
                              , Field39bValueAmountWhole
                              , Field39bValueDecimal
                              , Field39cValueCode
                              , Field39cValueAmountWhole
                              , Field39cValueDecimal
                              , Field39dValueCode
                              , Field39dValueAmountWhole
                              , Field39dValueDecimal
                              , Field40aValueCode
                              , Field40aValueAmountWhole
                              , Field40aValueDecimal
                              , Field40bValueCode
                              , Field40bValueAmountWhole
                              , Field40bValueDecimal
                              , Field40cValueCode
                              , Field40cValueAmountWhole
                              , Field40cValueDecimal
                              , Field40dValueCode
                              , Field40dValueAmountWhole
                              , Field40dValueDecimal
                              , Field41aValueCode
                              , Field41aValueAmountWhole
                              , Field41aValueDecimal
                              , Field41bValueCode
                              , Field41bValueAmountWhole
                              , Field41bValueDecimal
                              , Field41cValueCode
                              , Field41cValueAmountWhole
                              , Field41cValueDecimal
                              , Field41dValueCode
                              , Field41dValueAmountWhole
                              , Field41dValueDecimal
                              , Field42RevenueCode1
                              , Field43RevenueDescription1
                              , Field44HCPCSCode1
                              , Field45ServiceDate1
                              , Field46ServiceUnits1
                              , Field47TotalChargesWhole1
                              , Field47TotalChargesDecimal1
                              , Field48NonCoveredChargesWhole1
                              , Field48NonCoveredChargesDecimal1
                              , Field49Unlabelled1
                              , Field42RevenueCode2
                              , Field43RevenueDescription2
                              , Field44HCPCSCode2
                              , Field45ServiceDate2
                              , Field46ServiceUnits2
                              , Field47TotalChargesWhole2
                              , Field47TotalChargesDecimal2
                              , Field48NonCoveredChargesWhole2
                              , Field48NonCoveredChargesDecimal2
                              , Field49Unlabelled2
                              , Field42RevenueCode3
                              , Field43RevenueDescription3
                              , Field44HCPCSCode3
                              , Field45ServiceDate3
                              , Field46ServiceUnits3
                              , Field47TotalChargesWhole3
                              , Field47TotalChargesDecimal3
                              , Field48NonCoveredChargesWhole3
                              , Field48NonCoveredChargesDecimal3
                              , Field49Unlabelled3
                              , Field42RevenueCode4
                              , Field43RevenueDescription4
                              , Field44HCPCSCode4
                              , Field45ServiceDate4
                              , Field46ServiceUnits4
                              , Field47TotalChargesWhole4
                              , Field47TotalChargesDecimal4
                              , Field48NonCoveredChargesWhole4
                              , Field48NonCoveredChargesDecimal4
                              , Field49Unlabelled4
                              , Field42RevenueCode5
                              , Field43RevenueDescription5
                              , Field44HCPCSCode5
                              , Field45ServiceDate5
                              , Field46ServiceUnits5
                              , Field47TotalChargesWhole5
                              , Field47TotalChargesDecimal5
                              , Field48NonCoveredChargesWhole5
                              , Field48NonCoveredChargesDecimal5
                              , Field49Unlabelled5
                              , Field42RevenueCode6
                              , Field43RevenueDescription6
                              , Field44HCPCSCode6
                              , Field45ServiceDate6
                              , Field46ServiceUnits6
                              , Field47TotalChargesWhole6
                              , Field47TotalChargesDecimal6
                              , Field48NonCoveredChargesWhole6
                              , Field48NonCoveredChargesDecimal6
                              , Field49Unlabelled6
                              , Field42RevenueCode7
                              , Field43RevenueDescription7
                              , Field44HCPCSCode7
                              , Field45ServiceDate7
                              , Field46ServiceUnits7
                              , Field47TotalChargesWhole7
                              , Field47TotalChargesDecimal7
                              , Field48NonCoveredChargesWhole7
                              , Field48NonCoveredChargesDecimal7
                              , Field49Unlabelled7
                              , Field42RevenueCode8
                              , Field43RevenueDescription8
                              , Field44HCPCSCode8
                              , Field45ServiceDate8
                              , Field46ServiceUnits8
                              , Field47TotalChargesWhole8
                              , Field47TotalChargesDecimal8
                              , Field48NonCoveredChargesWhole8
                              , Field48NonCoveredChargesDecimal8
                              , Field49Unlabelled8
                              , Field42RevenueCode9
                              , Field43RevenueDescription9
                              , Field44HCPCSCode9
                              , Field45ServiceDate9
                              , Field46ServiceUnits9
                              , Field47TotalChargesWhole9
                              , Field47TotalChargesDecimal9
                              , Field48NonCoveredChargesWhole9
                              , Field48NonCoveredChargesDecimal9
                              , Field49Unlabelled9
                              , Field42RevenueCode10
                              , Field43RevenueDescription10
                              , Field44HCPCSCode10
                              , Field45ServiceDate10
                              , Field46ServiceUnits10
                              , Field47TotalChargesWhole10
                              , Field47TotalChargesDecimal10
                              , Field48NonCoveredChargesWhole10
                              , Field48NonCoveredChargesDecimal10
                              , Field49Unlabelled10
                              , Field42RevenueCode11
                              , Field43RevenueDescription11
                              , Field44HCPCSCode11
                              , Field45ServiceDate11
                              , Field46ServiceUnits11
                              , Field47TotalChargesWhole11
                              , Field47TotalChargesDecimal11
                              , Field48NonCoveredChargesWhole11
                              , Field48NonCoveredChargesDecimal11
                              , Field49Unlabelled11
                              , Field42RevenueCode12
                              , Field43RevenueDescription12
                              , Field44HCPCSCode12
                              , Field45ServiceDate12
                              , Field46ServiceUnits12
                              , Field47TotalChargesWhole12
                              , Field47TotalChargesDecimal12
                              , Field48NonCoveredChargesWhole12
                              , Field48NonCoveredChargesDecimal12
                              , Field49Unlabelled12
                              , Field42RevenueCode13
                              , Field43RevenueDescription13
                              , Field44HCPCSCode13
                              , Field45ServiceDate13
                              , Field46ServiceUnits13
                              , Field47TotalChargesWhole13
                              , Field47TotalChargesDecimal13
                              , Field48NonCoveredChargesWhole13
                              , Field48NonCoveredChargesDecimal13
                              , Field49Unlabelled13
                              , Field42RevenueCode14
                              , Field43RevenueDescription14
                              , Field44HCPCSCode14
                              , Field45ServiceDate14
                              , Field46ServiceUnits14
                              , Field47TotalChargesWhole14
                              , Field47TotalChargesDecimal14
                              , Field48NonCoveredChargesWhole14
                              , Field48NonCoveredChargesDecimal14
                              , Field49Unlabelled14
                              , Field42RevenueCode15
                              , Field43RevenueDescription15
                              , Field44HCPCSCode15
                              , Field45ServiceDate15
                              , Field46ServiceUnits15
                              , Field47TotalChargesWhole15
                              , Field47TotalChargesDecimal15
                              , Field48NonCoveredChargesWhole15
                              , Field48NonCoveredChargesDecimal15
                              , Field49Unlabelled15
                              , Field42RevenueCode16
                              , Field43RevenueDescription16
                              , Field44HCPCSCode16
                              , Field45ServiceDate16
                              , Field46ServiceUnits16
                              , Field47TotalChargesWhole16
                              , Field47TotalChargesDecimal16
                              , Field48NonCoveredChargesWhole16
                              , Field48NonCoveredChargesDecimal16
                              , Field49Unlabelled16
                              , Field42RevenueCode17
                              , Field43RevenueDescription17
                              , Field44HCPCSCode17
                              , Field45ServiceDate17
                              , Field46ServiceUnits17
                              , Field47TotalChargesWhole17
                              , Field47TotalChargesDecimal17
                              , Field48NonCoveredChargesWhole17
                              , Field48NonCoveredChargesDecimal17
                              , Field49Unlabelled17
                              , Field42RevenueCode18
                              , Field43RevenueDescription18
                              , Field44HCPCSCode18
                              , Field45ServiceDate18
                              , Field46ServiceUnits18
                              , Field47TotalChargesWhole18
                              , Field47TotalChargesDecimal18
                              , Field48NonCoveredChargesWhole18
                              , Field48NonCoveredChargesDecimal18
                              , Field49Unlabelled18
                              , Field42RevenueCode19
                              , Field43RevenueDescription19
                              , Field44HCPCSCode19
                              , Field45ServiceDate19
                              , Field46ServiceUnits19
                              , Field47TotalChargesWhole19
                              , Field47TotalChargesDecimal19
                              , Field48NonCoveredChargesWhole19
                              , Field48NonCoveredChargesDecimal19
                              , Field49Unlabelled19
                              , Field42RevenueCode20
                              , Field43RevenueDescription20
                              , Field44HCPCSCode20
                              , Field45ServiceDate20
                              , Field46ServiceUnits20
                              , Field47TotalChargesWhole20
                              , Field47TotalChargesDecimal20
                              , Field48NonCoveredChargesWhole20
                              , Field48NonCoveredChargesDecimal20
                              , Field49Unlabelled20
                              , Field42RevenueCode21
                              , Field43RevenueDescription21
                              , Field44HCPCSCode21
                              , Field45ServiceDate21
                              , Field46ServiceUnits21
                              , Field47TotalChargesWhole21
                              , Field47TotalChargesDecimal21
                              , Field48NonCoveredChargesWhole21
                              , Field48NonCoveredChargesDecimal21
                              , Field49Unlabelled21
                              , Field42RevenueCode22
                              , Field43RevenueDescription22
                              , Field44HCPCSCode22
                              , Field45ServiceDate22
                              , Field46ServiceUnits22
                              , Field47TotalChargesWhole22
                              , Field47TotalChargesDecimal22
                              , Field48NonCoveredChargesWhole22
                              , Field48NonCoveredChargesDecimal22
                              , Field49Unlabelled22
                              , Field43PageNumber
                              , Field43PageOf
                              , Field44CreationDate
                              , Field47TotalChargesWhole23
                              , Field47TotalChargesDecimal23
                              , Field48NonCoveredChargesWhole23
                              , Field48NonCoveredChargesDecimal23
                              , Field50aPayerName
                              , Field50bPayerName
                              , Field50cPayerName
                              , Field51aHealthPlanId
                              , Field51bHealthPlanId
                              , Field51cHealthPlanId
                              , Field52aReleaseOfInformation
                              , Field52bReleaseOfInformation
                              , Field52cReleaseOfInformation
                              , Field53aAssignmentOfBenefits
                              , Field53bAssignmentOfBenefits
                              , Field53cAssignmentOfBenefits
                              , Field54aPriorPaymentsWhole
                              , Field54aPriorPaymentsDecimal
                              , Field54bPriorPaymentsWhole
                              , Field54bPriorPaymentsDecimal
                              , Field54cPriorPaymentsWhole
                              , Field54cPriorPaymentsDecimal
                              , Field55aEstimatedAmountWhole
                              , Field55aEstimatedAmountDecimal
                              , Field55bEstimatedAmountWhole
                              , Field55bEstimatedAmountDecimal
                              , Field55cEstimatedAmountWhole
                              , Field55cEstimatedAmountDecimal
                              , Field56FacilityNPI
                              , Field57aOtherProviderId
                              , Field57bOtherProviderId
                              , Field57cOtherProviderId
                              , Field58aInsuredName
                              , Field58bInsuredName
                              , Field58cInsuredName
                              , Field59aPatientRelationship
                              , Field59bPatientRelationship
                              , Field59cPatientRelationship
                              , Field60aInsuredId
                              , Field60bInsuredId
                              , Field60cInsuredId
                              , Field61aGroupName
                              , Field61bGroupName
                              , Field61cGroupName
                              , Field62aGroupNumber
                              , Field62bGroupNumber
                              , Field62cGroupNumber
                              , Field63aAuthorizationCode
                              , Field63bAuthorizationCode
                              , Field63cAuthorizationCode
                              , Field64aDocumentControlNumber
                              , Field64bDocumentControlNumber
                              , Field64cDocumentControlNumber
                              , Field65aEmployerName
                              , Field65bEmployerName
                              , Field65cEmployerName
                              , Field66DiagnosisVersion
                              , Field67PrincipalDiagnosis
                              , Field67POA
                              , Field67aOtherDiagnosis
                              , Field67aPOA
                              , Field67bOtherDiagnosis
                              , Field67bPOA
                              , Field67cOtherDiagnosis
                              , Field67cPOA
                              , Field67dOtherDiagnosis
                              , Field67dPOA
                              , Field67eOtherDiagnosis
                              , Field67ePOA
                              , Field67fOtherDiagnosis
                              , Field67fPOA
                              , Field67gOtherDiagnosis
                              , Field67gPOA
                              , Field67hOtherDiagnosis
                              , Field67hPOA
                              , Field67iOtherDiagnosis
                              , Field67iPOA
                              , Field67jOtherDiagnosis
                              , Field67jPOA
                              , Field67kOtherDiagnosis
                              , Field67kPOA
                              , Field67lOtherDiagnosis
                              , Field67lPOA
                              , Field67mOtherDiagnosis
                              , Field67mPOA
                              , Field67nOtherDiagnosis
                              , Field67nPOA
                              , Field67oOtherDiagnosis
                              , Field67oPOA
                              , Field67pOtherDiagnosis
                              , Field67pPOA
                              , Field67qOtherDiagnosis
                              , Field67qPOA
                              , Field68aUnlabelled
                              , Field68bUnlabelled
                              , Field69AdmittingDiagnosis
                              , Field70aReasonForVisitCode
                              , Field70bReasonForVisitCode
                              , Field70cReasonForVisitCode
                              , Field71PPSCode
                              , Field72aECICode
                              , Field72bECICode
                              , Field72cECICode
                              , Field73Unlabelled
                              , Field74PrincipalProcedureCode
                              , Field74PrincipalProcedureDate
                              , Field74aOtherProcedureCode
                              , Field74aOtherProcedureDate
                              , Field74bOtherProcedureCode
                              , Field74bOtherProcedureDate
                              , Field74cOtherProcedureCode
                              , Field74cOtherProcedureDate
                              , Field74dOtherProcedureCode
                              , Field74dOtherProcedureDate
                              , Field74eOtherProcedureCode
                              , Field74eOtherProcedureDate
                              , Field75aUnlabelled
                              , Field75bUnlabelled
                              , Field75cUnlabelled
                              , Field75dUnlabelled
                              , Field76AttendingNPI
                              , Field76AttendingQualifier
                              , Field76AttendingProviderId
                              , Field76AttendingLastName
                              , Field76AttendingFirstName
                              , Field77OperatingNPI
                              , Field77OperatingQualifier
                              , Field77OperatingProviderId
                              , Field77OperatingLastName
                              , Field77OperatingFirstName
                              , Field78OtherType
                              , Field78OtherNPI
                              , Field78OtherQualifier
                              , Field78OtherProviderId
                              , Field78OtherLastName
                              , Field78OtherFirstName
                              , Field79OtherType
                              , Field79OtherNPI
                              , Field79OtherQualifier
                              , Field79OtherProviderId
                              , Field79OtherLastName
                              , Field79OtherFirstName
                              , Field80aRemarks
                              , Field80bRemarks
                              , Field80cRemarks
                              , Field80dRemarks
                              , Field81aQualifier
                              , Field81aCode
                              , Field81aValue
                              , Field81bQualifier
                              , Field81bCode
                              , Field81bValue
                              , Field81cQualifier
                              , Field81cCode
                              , Field81cValue
                              , Field81dQualifier
                              , Field81dCode
                              , Field81dValue
                              , @ParmCurrentUser
                              , @CurrentDate
                              , @ParmCurrentUser
                              , @CurrentDate
                      FROM  #ClaimUB04 a
                          JOIN ClaimLineItemGroups b ON a.ClaimLineItemGroupId = b.ClaimLineItemGroupId
                                                        AND b.ClaimBatchId = @ParmClaimBatchId


                    -- Update Payer claim Number
                    UPDATE  a
                      SET   Field64aDocumentControlNumber = d.PayerClaimControlNumber
                      FROM  dbo.ClaimUB04s a
                          JOIN dbo.ClaimLineItemGroups b ON b.ClaimLineItemGroupId = a.ClaimLineItemGroupId
                          JOIN dbo.ClaimLineItems c ON c.ClaimLineItemGroupId = b.ClaimLineItemGroupId
                          JOIN #ClaimLines d ON d.LineItemControlNumber = c.ClaimLineItemId
                      WHERE
                        b.ClaimBatchId = @ClaimBatchId
                        AND d.SubmissionReasonCode = '7'


                    IF EXISTS (SELECT   *
                                 FROM   sys.procedures
                                 WHERE
                                    name = 'scsp_PMClaimsUB04')
                        BEGIN
                            SELECT  @Bookmark = ' EXEC scsp_PMClaimsUB04'
                            EXEC scsp_PMClaimsUB04 @ParmCurrentUser, @ParmClaimBatchId, @FormatType

                        END


                    UPDATE  a
                      SET   Status = 4523
                          , ProcessedDate = CONVERT(VARCHAR, GETDATE(), 101)
                          , BatchProcessProgress = 100
                          , ModifiedBy = @ParmCurrentUser
                          , ModifiedDate = @CurrentDate
                      FROM  ClaimBatches a
                      WHERE
                        a.ClaimBatchId = @ParmClaimBatchId

                END

            ProcessedStatus:
            SELECT  dbo.Ssf_GetMesageByMessageCode(450, 'PROCESSEDSUCCESSFULLY_SSP', 'Processed Successfully') AS ErrorMessage
        END TRY

        BEGIN CATCH  --SQL Prompt Formatting Off
        --IF @@Trancount > @SaveTranCount
        --ROLLBACK TRAN
                 
        DECLARE @ErrorBlockLineLen INTEGER = 0
        DECLARE @ErrorBlockGotTheFormat BIT = 0
        DECLARE @ErrorFormatIndent Integer = 3
        DECLARE @ErrorBlockBeenThrough INTEGER = NULL -- must be set to null
        DECLARE @ThisProcedureName VARCHAR(255) = ISNULL(OBJECT_NAME(@@PROCID), 'Testing')
        DECLARE @ErrorProc VARCHAR(4000) = CONVERT(VARCHAR(4000), ISNULL(ERROR_PROCEDURE(), @ThisProcedureName))
                  
        WHILE @ErrorBlockGotTheFormat = 0
        BEGIN
            IF @ErrorBlockBeenThrough IS NOT NULL
                SELECT @ErrorBlockGotTheFormat = 1
            SET @errormessage = Space(isnull(@ErrorFormatIndent,0)) + @ThisProcedureName + ' Reports Error Thrown by: ' + @ErrorProc + Char(13) + char(10)
            SET @errormessage += Char(13) + char(10) + Space(isnull(@ErrorFormatIndent,0)) +'-------->' + ISNULL(CONVERT(VARCHAR(4000), ERROR_MESSAGE()), 'Unknown') + '<--------' + Char(13) + char(10) --
                + Space(isnull(@ErrorFormatIndent,0)) + REPLICATE('=', @ErrorBlockLineLen) + Char(13) + char(10) --
                + Space(isnull(@ErrorFormatIndent,0)) + UPPER(@ThisProcedureName + ' Variable dump:') + Char(13) + char(10) --
                + Space(isnull(@ErrorFormatIndent,0)) + REPLICATE('=', @ErrorBlockLineLen) + Char(13) + char(10) --
                + Space(isnull(@ErrorFormatIndent,0)) + '@CurrentUser:...................<' + ISNULL(CAST(@CurrentUser                    AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ClaimBatchId:..................<' + ISNULL(CAST(@ClaimBatchId                   AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@AuthGrouping:..................<' + ISNULL(CAST(@AuthGrouping                   AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@BatchFileNumber:...............<' + ISNULL(CAST(@BatchFileNumber                AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@Bookmark:......................<' + ISNULL(CAST(@Bookmark                       AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ClaimFormatId:.................<' + ISNULL(CAST(@ClaimFormatId                  AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ClaimLineId:...................<' + ISNULL(CAST(@ClaimLineId                    AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ClaimsPerClientLimit:..........<' + ISNULL(CAST(@ClaimsPerClientLimit           AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@CurrentClientId:...............<' + ISNULL(CAST(@CurrentClientId                AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@Electronic:....................<' + ISNULL(CAST(@Electronic                     AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ExecuteClaimGrouperSCSP:.......<' + ISNULL(CAST(@ExecuteClaimGrouperSCSP        AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ExecuteCombineChargesSCSP:.....<' + ISNULL(CAST(@ExecuteCombineChargesSCSP      AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ExecuteOtherInsuredSCSP:.......<' + ISNULL(CAST(@ExecuteOtherInsuredSCSP        AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@FormatType:....................<' + ISNULL(CAST(@FormatType                     AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@LastClientId:..................<' + ISNULL(CAST(@LastClientId                   AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@ServiceLoopId:.................<' + ISNULL(CAST(@ServiceLoopId                  AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
                + Space(isnull(@ErrorFormatIndent,0)) + '@SubscriberLoopId:..............<' + ISNULL(CAST(@SubscriberLoopId               AS VARCHAR(125)), 'Null') + '>' + Char(13) + char(10)  --
            SELECT @ErrorBlockLineLen = MAX(LEN(RTRIM(item)))  
                FROM dbo.fnSplit(@errormessage, Char(13) + char(10))
            SELECT @ErrorBlockBeenThrough= 1
        END
        RAISERROR('%s',16,1,@errormessage)   --SQL Prompt Formatting On
        END CATCH

    END

    SET ANSI_WARNINGS ON
GO


RETURN
EXEC ssp_PMClaims837Professional @CurrentUser = '', -- varchar(30)
    @ClaimBatchId = 0 -- int
